
[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 13:[0m
[0mLOG_FILE="${LOG_BASE}/mydlink.log"[0m
[33m^------^ SC2034 (warning): LOG_FILE appears unused. Verify use (or export if used externally).[0m


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 36:[0m
[0mCA_PID_FILE="ca-update.pid"[0m
[33m^---------^ SC2034 (warning): CA_PID_FILE appears unused. Verify use (or export if used externally).[0m


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 43:[0m
[0mCA_FILE_NAME="ca-bundle.crt"[0m
[33m^----------^ SC2034 (warning): CA_FILE_NAME appears unused. Verify use (or export if used externally).[0m


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 51:[0m
[0m  echo "[`date +"%Y-%m-%d %H:%M:%S"`] $1" > /dev/null 2>&1[0m
[32m         ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  echo "[$(date +"%Y-%m-%d %H:%M:%S")] $1" > /dev/null 2>&1


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 56:[0m
[0m  alphapd& > /dev/null 2>&1[0m
[33m           ^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).[0m


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 68:[0m
[0m  if [ $DEV_CMD == "tdb" ]; then[0m
[33m                ^-- SC3014 (warning): In POSIX sh, == in place of = is undefined.[0m


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 86:[0m
[0m    code=`${HTTP_CMD} ${HTTP_BASE}:${1}${path}`[0m
[32m         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                                   ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
    code=$(${HTTP_CMD} ${HTTP_BASE}:"${1}"${path})


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 114:[0m
[0m    while [ $count -lt ${MAX_COUNT} ][0m
[32m            ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
    while [ "$count" -lt ${MAX_COUNT} ]


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 116:[0m
[0m      code=`${HTTP_CMD} ${url}`[0m
[32m           ^------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                        ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
      code=$(${HTTP_CMD} "${url}")


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 119:[0m
[0m        count=`expr $count + 1`[0m
[32m              ^---------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m               ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].[0m
[32m                    ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
        count=$(expr "$count" + 1)


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 127:[0m
[0m    if [ $count -ge ${MAX_COUNT} ]; then[0m
[32m         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
    if [ "$count" -ge ${MAX_COUNT} ]; then


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 151:[0m
[0m    pid=`cat ${PID_BASE}/${1}.pid`[0m
[32m        ^------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                         ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
    pid=$(cat ${PID_BASE}/"${1}".pid)


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 158:[0m
[0m  restart_cnt=`expr $restart_cnt + 1`[0m
[32m              ^---------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m               ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].[0m
[32m                    ^----------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  restart_cnt=$(expr "$restart_cnt" + 1)


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 166:[0m
[0m  killall -q $1 2>/dev/null[0m
[32m             ^-- SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  killall -q "$1" 2>/dev/null


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 171:[0m
[0m  $MYDLINK_BASE/$1 $2 > /dev/null 2>&1 &[0m
[32m                ^-- SC2086 (info): Double quote to prevent globbing and word splitting.[0m
[32m                   ^-- SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  $MYDLINK_BASE/"$1" "$2" > /dev/null 2>&1 &


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 185:[0m
[0m  for it in `ls -l "$1"`[0m
[33m            ^----------^ SC2045 (warning): Iterating over ls output is fragile. Use globs.[0m
[32m            ^----------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  for it in $(ls -l "$1")


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 187:[0m
[0m    count=`expr $count % 9 + 1`[0m
[32m          ^-------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m           ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].[0m
[32m                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
    count=$(expr "$count" % 9 + 1)


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 188:[0m
[0m    if [ `expr $count % 5` -eq 0 ]; then[0m
[33m         ^---------------^ SC2046 (warning): Quote this to prevent word splitting.[0m
[32m         ^---------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m          ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].[0m
[32m               ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
    if [ $(expr "$count" % 5) -eq 0 ]; then


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 189:[0m
[0m      size=`expr $size + $it`[0m
[32m           ^----------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m            ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].[0m
[32m                 ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m
[32m                         ^-^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
      size=$(expr "$size" + "$it")


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 193:[0m
[0m  if [ $size -ge $LOG_MAX_SZ ]; then[0m
[32m       ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  if [ "$size" -ge $LOG_MAX_SZ ]; then


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 194:[0m
[0m    for file in `ls $1`[0m
[31m                ^-----^ SC2045 (error): Iterating over ls output is fragile. Use globs.[0m
[32m                ^-----^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                    ^-- SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
    for file in $(ls "$1")


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 196:[0m
[0m      echo "[`date +"%Y-%m-%d %H:%M:%S"`] reset log" > "$1/$file"[0m
[32m             ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
      echo "[$(date +"%Y-%m-%d %H:%M:%S")] reset log" > "$1/$file"


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 212:[0m
[0m  t=`date +"%s"`[0m
[32m    ^----------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  t=$(date +"%s")


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 213:[0m
[0m  c=`expr $t / 86400`[0m
[32m    ^---------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m     ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].[0m
[32m          ^-- SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  c=$(expr "$t" / 86400)


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 214:[0m
[0m  echo -n $c > $CA_CHECK_FLAG[0m
[33m       ^-- SC3037 (warning): In POSIX sh, echo flags are undefined.[0m
[32m          ^-- SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  echo -n "$c" > $CA_CHECK_FLAG


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 234:[0m
[0m  t=`date +"%s"`[0m
[32m    ^----------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  t=$(date +"%s")


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 235:[0m
[0m  curr=`expr $t / 86400`[0m
[32m       ^---------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m        ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].[0m
[32m             ^-- SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  curr=$(expr "$t" / 86400)


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 236:[0m
[0m  last=`cat $CA_CHECK_FLAG`[0m
[32m       ^------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  last=$(cat $CA_CHECK_FLAG)


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 237:[0m
[0m  next=`expr $last + $CA_CHECK_PERIOD`[0m
[32m       ^-----------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m        ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].[0m
[32m             ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  next=$(expr "$last" + $CA_CHECK_PERIOD)


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 238:[0m
[0m  if [ $curr -lt $next ]; then[0m
[32m       ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m
[32m                 ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  if [ "$curr" -lt "$next" ]; then


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 250:[0m
[0m  if [ ! -f $1/ca-refresh ]; then[0m
[32m            ^-- SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  if [ ! -f "$1"/ca-refresh ]; then


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 257:[0m
[0m  $1/ca-refresh "${DST_SRV}" "${MD_CA_FILE}" "${TMP_CA_FILE}" "$1/${PUB_KEY}"[0m
[32m  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  "$1"/ca-refresh "${DST_SRV}" "${MD_CA_FILE}" "${TMP_CA_FILE}" "$1/${PUB_KEY}"


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 268:[0m
[0m    while [ $retry -lt 2 ][0m
[32m            ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
    while [ "$retry" -lt 2 ]


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 270:[0m
[0m      retry=`expr $retry + 1`[0m
[32m            ^---------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m             ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].[0m
[32m                  ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
      retry=$(expr "$retry" + 1)


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 272:[0m
[0m    if [ $? -eq 0 ]; then[0m
[32m         ^-- SC2181 (style): Check exit code directly with e.g. 'if mycmd;', not indirectly with $?.[0m


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 306:[0m
[0mHAS_MDB=`mdb get dev_model | grep "L" -c` 2>/dev/null[0m
[32m        ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
HAS_MDB=$(mdb get dev_model | grep "L" -c) 2>/dev/null


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 308:[0m
[0m  MODEL_NAME=`mdb get dev_model`[0m
[32m             ^-----------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  MODEL_NAME=$(mdb get dev_model)


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 315:[0m
[0m  wlan=`pibinfo Wireless` 2>/dev/null[0m
[32m       ^----------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  wlan=$(pibinfo Wireless) 2>/dev/null


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 317:[0m
[0m    MODEL_NAME=`tdb get System ModelW_ss`[0m
[32m               ^------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    MODEL_NAME=$(tdb get System ModelW_ss)


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 319:[0m
[0m    MODEL_NAME=`tdb get System Model_ss`[0m
[32m               ^-----------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    MODEL_NAME=$(tdb get System Model_ss)


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 326:[0m
[0mHAS_BR0=`ifconfig | grep "br0" -c`[0m
[32m        ^------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
HAS_BR0=$(ifconfig | grep "br0" -c)


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 341:[0m
[0m    wd_pid=`cat ${WATCHDOG_PID}`[0m
[32m           ^-------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    wd_pid=$(cat ${WATCHDOG_PID})


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 358:[0m
[0mwhile [ 1 ][0m
[32m        ^-- SC2161 (style): Instead of '[ 1 ]', use 'true'.[0m


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 360:[0m
[0m  curpid=`cat ${WATCHDOG_PID}`[0m
[32m         ^-------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  curpid=$(cat ${WATCHDOG_PID})


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 369:[0m
[0m    if [ $? -eq 0 ]; then[0m
[32m         ^-- SC2181 (style): Check exit code directly with e.g. 'if mycmd;', not indirectly with $?.[0m


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 380:[0m
[0m	PRIVACY_MODE=`$DEV_CMD $GET_PRIV_CMD`[0m
[32m                     ^----------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                               ^-----------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
	PRIVACY_MODE=$($DEV_CMD "$GET_PRIV_CMD")


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 382:[0m
[0m	if [ $? -ne 0 ] || [ "1" -ne "$PRIVACY_MODE" ]; then[0m
[32m             ^-- SC2181 (style): Check exit code directly with e.g. 'if ! mycmd;', not indirectly with $?.[0m


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 390:[0m
[0m	runs=`expr $runs + $UNIT_CHECK_T`[0m
[32m             ^--------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m              ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].[0m
[32m                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
	runs=$(expr "$runs" + $UNIT_CHECK_T)


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 391:[0m
[0m	if [ $runs -ge $HTTP_CHECK_T ]; then[0m
[32m             ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
	if [ "$runs" -ge $HTTP_CHECK_T ]; then


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 392:[0m
[0m	  http_port=`$DEV_CMD $PORT_CMD`[0m
[32m                    ^------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                              ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
	  http_port=$($DEV_CMD "$PORT_CMD")


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 393:[0m
[0m	  https_port=`$DEV_CMD $SPORT_CMD`[0m
[32m                     ^-------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                               ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
	  https_port=$($DEV_CMD "$SPORT_CMD")


[1mIn /logs/firmware/unblob_extracted/firmware_extract/1446946-7513122.squashfs_v4_le_extract/mydlink/mydlink-watch-dog.sh line 396:[0m
[0m		STREAM_CGI=`detect_stream_cgi $http_port`[0m
[32m                           ^----------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                                              ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
		STREAM_CGI=$(detect_stream_cgi "$http_port")

For more information:
  https://www.shellcheck.net/wiki/SC2045 -- Iterating over ls output is fragi...
  https://www.shellcheck.net/wiki/SC2034 -- CA_FILE_NAME appears unused. Veri...
  https://www.shellcheck.net/wiki/SC2045 -- Iterating over ls output is fragi...
