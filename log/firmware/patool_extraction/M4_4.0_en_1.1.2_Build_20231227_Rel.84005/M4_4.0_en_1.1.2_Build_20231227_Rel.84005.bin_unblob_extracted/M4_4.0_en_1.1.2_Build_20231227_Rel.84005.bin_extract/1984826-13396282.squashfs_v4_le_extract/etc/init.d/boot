#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2011 OpenWrt.org

START=10
STOP=98

. /usr/lib/eth-encap/eth_encap.sh
uci_apply_defaults() {
	. /lib/functions/system.sh

	cd /etc/uci-defaults || return 0
	files="$(ls)"
	[ -z "$files" ] && return 0
	mkdir -p /tmp/.uci
	for file in $files; do
		( . "./$(basename $file)" ) && rm -f "$file"
	done
	uci commit
}

boot() {
	[ -f /proc/mounts ] || /sbin/mount_root
	[ -f /proc/jffs2_bbc ] && echo "S" > /proc/jffs2_bbc
	[ -f /proc/net/vlan/config ] && vconfig set_name_type DEV_PLUS_VID_NO_PAD

	mkdir -p /var/run
	mkdir -p /var/log
	mkdir -p /var/lock
	mkdir -p /var/state
	mkdir -p /tmp/.uci
	chmod 0700 /tmp/.uci
	mkdir -p /tmp/.jail
	touch /var/log/wtmp
	touch /var/log/lastlog
	touch /tmp/resolv.conf.auto
	ln -sf /tmp/resolv.conf.auto /tmp/resolv.conf
	grep -q debugfs /proc/filesystems && /bin/mount -o noatime -t debugfs debugfs /sys/kernel/debug
	/bin/mount -t ramfs ramfs /etc/config
	/bin/mount -t ramfs ramfs /etc/profile.d
	[ "$FAILSAFE" = "true" ] && touch /tmp/.failsafe

	/sbin/kmodloader
	
	#add by wanghao
	brctl addbr br-wan
	ifconfig br-wan up
	#add end

	# allow wifi modules time to settle
	# sleep 3

	# /sbin/wifi detect > /tmp/wireless.tmp
	# [ -s /tmp/wireless.tmp ] && {
	# 	cat /tmp/wireless.tmp >> /etc/config/wireless
	# }
	# rm -f /tmp/wireless.tmp

	# /bin/board_detect
	# uci_apply_defaults
	
	# temporary hack until configd exists
	# /sbin/reload_config

	# create /dev/root if it doesn't exist
	[ -e /dev/root -o -h /dev/root ] || {
		rootdev=$(awk 'BEGIN { RS=" "; FS="="; } $1 == "root" { print $2 }' < /proc/cmdline)
		[ -n "$rootdev" ] && ln -s "$rootdev" /dev/root
	}

	loaddev
	loaduci
	mergeextraconfig
	
	if [ -f "/sbin/is_cal" ]; then
		if [ "$(/sbin/is_cal)" = "false" ]; then
			touch /tmp/g_wifi_not_cal
		fi
	fi	

	if [ ! -f "/proc/phy_switch/booted" ]; then
		echo "phylink down boot 1" > /dev/console
		local switch_rtl8367s

		switch_rtl8367s=$(lsmod|grep -o "rtl8367s_gsw")
		if [ -n "$switch_rtl8367s" ]; then
			down_all_rtl_ports
		else
			down_all_qca_ports
		fi
	fi

	/sbin/network_firm
	/sbin/reload_country.sh
}
