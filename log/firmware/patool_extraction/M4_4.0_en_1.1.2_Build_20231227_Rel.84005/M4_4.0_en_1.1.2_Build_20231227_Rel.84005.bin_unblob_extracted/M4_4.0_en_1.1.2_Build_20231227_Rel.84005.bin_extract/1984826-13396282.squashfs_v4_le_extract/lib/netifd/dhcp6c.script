#!/bin/sh
. /lib/functions.sh
. /lib/netifd/netifd-proto.sh


IFNAME=$ifname
INTERFACE=$interface
STATE=$new_dhcpc_state
V6PLUS_IFNAME="v6plus-wan"


[ -z "$INTERFACE" ] && echo "no interface" > /dev/console && exit 1
[ -z "$IFNAME" ] && echo "no ifname" > /dev/console && exit 1

deconfig_interface() {
	proto_init_update "$IFNAME" 0
	proto_send_update "$INTERFACE"
}

setup_interface () {

	prefix="::"
	proto_init_update "$IFNAME" 1

	config_load /etc/config/network
	config_get ip_config wanv6 ip_config
    config_get wan_proto wan proto

	mbit=`cat /proc/sys/net/ipv6/conf/$IFNAME/ndisc_mbit`
	[ $mbit -eq 0 -o "$ip_config" == "slaac" ] && [ "$ip_config" == "slaac" -o "$ip_config" == "auto" ] && {
		### Note - V6plus has two v6addr, need get correct address!
		if [ "$wan_proto" == "v6plus" ]; then
			while read line
			do
				[ $V6PLUS_IFNAME != ${line##* } ] && continue
				[ "fe80" = ${line:0:4} ] && continue

				element=${line:0:32}

				v6plusaddr=${element:0:4}:${element:4:4}:${element:8:4}:${element:12:4}
				v6plusaddr=$v6plusaddr:${element:16:4}:${element:20:4}:${element:24:4}:${element:28:4}

				v6plus_ip6addr=$v6plusaddr
			done </proc/net/if_inet6
		fi

		while read line
		do
			[ $IFNAME != ${line##* } ] && continue
			[ "fe80" = ${line:0:4} ] && continue

			element=${line:0:32}
			ip6addr=${element:0:4}:${element:4:4}:${element:8:4}:${element:12:4}
			ip6addr=$ip6addr:${element:16:4}:${element:20:4}:${element:24:4}:${element:28:4}

			[ -n "$ip6addr" ] && [ "$ip6addr" == "$v6plus_ip6addr" ] && {
				echo "cycle v6plus-wan address $ip6addr, so we add it here" > /dev/console
				proto_add_ipv6_address "$ip6addr" "64"
			} || {
				new_ip6addr=$ip6addr
			}

		done </proc/net/if_inet6

		[ -n "$new_ip6addr" ] &&  [ ! -f "/tmp/slaac_addr" ] && {
			echo $new_ip6addr > /tmp/slaac_addr
		}

		[ -z "$new_ip6addr" ] && {
			proto_notify_error "$INTERFACE" "NO ADDRESS"
			sleep 3
			proto_setup_failed "$INTERFACE"
			return
		}
	}

    if [ "$wan_proto" == "v6plus" -a $mbit -eq 1 -a -n "$new_ip6prefix" -a -z "$new_ip6addr" ]; then
        new_ip6addr=${new_ip6prefix%?}
        new_ip6addr=${new_ip6addr%?}
        count1=`echo $new_ip6addr |tr -cd : |wc -c`
        let "count=3 - count1"

        while [ $count -ne 0 ]; do
            new_ip6addr=${new_ip6addr}:0
            let "count=count - 1"
        done

        while read line
        do
            [ $IFNAME != ${line##* } ] && continue
            [ "fe80" = ${line:0:4} ] && {
                element=${line:0:32}
                new_ip6addr=${new_ip6addr}:${element:16:4}:${element:20:4}:${element:24:4}:${element:28:4}
                echo new_ip6addr[consisit of pd] is : $new_ip6addr > /dev/console
            }
        done </proc/net/if_inet6
    fi

	if [ -n "$new_ip6addr" ]; then
		proto_add_ipv6_address "$new_ip6addr" "64"
	elif [ -z "$new_ip6prefix" ] && [ $ip_config != "non_address" ]; then
		deconfig_interface
		return
	fi

	if [ -n "$new_ip6addr" ]; then
		local ndp_prefix=$(lua /lib/netifd/lanv6_genrate_ndp_prefix.lua $new_ip6addr)
		echo "$ndp_prefix" > /tmp/dhcp6c/ndp_prefix
	fi

	[ -n "$new_domain_name_servers" ] && {
		DNS2=${new_domain_name_servers##*[, ]}
		DNS1=${new_domain_name_servers%%[, ]*}
		[ -n "$DNS1" ] && proto_add_dns_server "$DNS1"
		[ -n "$DNS1" -a -n "$DNS2" -a "$DNS1" != "$DNS2" ] && proto_add_dns_server "$DNS2"
	}

	if [ -n "$new_ip6prefix" ]; then
		prefix="$new_ip6prefix"

		uci set protocol.dhcp6s.prefix="$new_ip6prefix"
		uci set protocol.slaac.prefix="$new_ip6prefix"
		uci set protocol.rdnss.prefix="$new_ip6prefix"
		uci commit protocol
	fi

	echo "$prefix" > /tmp/dhcp6c/prefix.info

	[ "$(isMobile 2>/dev/null)" = "yes" ] && {
		local dft_gw=`cat /proc/sys/net/ipv6/conf/$IFNAME/default_gateway`
		[ ${#dft_gw} -ne 0 ] && proto_add_ipv6_route "::" "0" "$dft_gw"
	}

	[ -n "$new_aftr_name" ] && {
		#echo "aftr_name:$new_aftr_name" > /dev/console
		local aftr_name="$new_aftr_name"
		local old_aftr
		config_get old_aftr wan AFTR_name
		#echo "old_aftr:$old_aftr" > /dev/console
        #TODO: DHCP6C OPT will send AFTR name with IP address type, need to deal with this situation.
		uci_set network wan AFTR_name "$aftr_name"
		uci_commit network
		#echo "$new_aftr_name" > /tmp/dhcp6c/aftr_name
	}

	proto_send_update "$INTERFACE"

	if [ -n "$new_ip6prefix" ]; then
		# proto_send_update() will not cause netifd to respond to prefix change, have to call this manually
		/etc/init.d/network reload
	fi

	local lanv6_connectable=1
	[ "$(isMobile 2>/dev/null)" = "yes" ] && {
		lanv6_connectable=$(uci get mobile_backup.ewan.lanv6_connectable)
		[ -z "$lanv6_connectable" ] && lanv6_connectable=1
	}
	[ "$lanv6_connectable" = "1" ] && {
		sleep 3
		local gw_route=`ip -6 route|grep default`
		[ -z ${gw_route} ] && {
			local gateway=`cat /proc/sys/net/ipv6/conf/$IFNAME/default_gateway`
			[ ${#gateway} -ne 0 ] && ip -6 route add "::/0" via "$gateway" dev "$IFNAME"
		}
	}
}

# code=0 is equal to [ -n "$new_ip6addr" -o -n "$new_ip6prefix" ]

case "$STATE" in
	"3"|"2")
		# if [ -n "$code" -a "$code" == "0" ]; then
			setup_interface
		# else
		# 	deconfig_interface
		# fi
	;;

	"6")
		deconfig_interface
	;;
esac

exit 0
