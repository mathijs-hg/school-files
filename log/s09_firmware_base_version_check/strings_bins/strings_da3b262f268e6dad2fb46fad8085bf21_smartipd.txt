/lib/ld-uClibc.so.0
pPpB
_fini
__uClibc_main
__deregister_frame_info
__register_frame_info
_Jv_RegisterClasses
memset
vsprintf
openlog
closelog
getpid
system
usleep
strcmp
g_smartip
uciRawGetValue
snprintf
g_def_lan_cfg
smartip_exec_cmd
smartip_notify_lan_update
smartip_write_runtime_ip
smartip_call_hotplug_ip
kill
smartip_close_dhcp_hook_socket
exit
smartip_check_interface_has_ip
smartip_generate_dhcps_config_file
smartip_write_dhcps_status
smartip_do_wifi_backhual_disconnect
smartip_do_wifi_disconnect
smartip_do_wifi_client_disconnect
smartip_do_ethernet_disconnect
g_last_lan_ip
listen_event
strncmp
smartip_device_is_bound
smartip_get_cfg_work_mode
smartip_check_ap_mode
smartip_get_host_name
smartip_get_cap_mac
smartip_get_laninfo_config
inet_addr
smartip_get_dhcps_config
smartip_get_link_status
smartip_write_detect_result
smartip_get_config
smartip_get_wan_dns_info
smartip_check_wan_dns_changed
smartip_notify_wan_dns_update
popen
fgets
pclose
fread
atoi
smartip_write_dns_file
memcpy
pthread_mutex_lock
pthread_mutex_unlock
optarg
strlen
strncpy
getopt
fork
setsid
dup2
signal
fopen
fprintf
fclose
smartip_get_profile_eths
smartip_create_ibus_thread
smartip_re_check_recv_dhcpc_interface_correct
smartip_record_connect_interface
smartip_recover_link_interface_status
memcmp
smartip_write_resolv_conf
smartip_check_lan_wan_is_samesubnet
smartip_ip_2_str
smartip_check_online
smartip_check_and_recover_eth_link_status
smartip_ap_mode_check_dns_changed
smartip_get_work_role
smartip_init_dhcp_hook_socket
access
smartip_re_check_same_subnet_with_ap
pthread_self
pthread_detach
smartip_ubus_thread
pthread_create
smartip_printf
smartip_syslog
smartip_ubus_send_smartip_event
blobmsg_format_json_with_cb
json_tokener_parse
json_object_object_get
json_object_get_int
smartip_ibus_set_msg
json_object_put
json_object_get_string
bridge_name
smartip_str_2_ip
g_wan_dns
blob_buf_init
blobmsg_add_field
__bswapsi2
ubus_connect
ubus_register_event_handler
uloop_init
uloop_fd_add
uloop_run
ubus_free
uloop_done
ubus_lookup_id
ubus_invoke
strtok
malloc
g_wifi_ifnames
sscanf
strchr
uci_alloc_context
uci_load
uci_lookup_next
uci_unload
uci_free_context
uci_set_savedir
uci_lookup_ptr
uci_perror
strcpy
smartip_get_network_config
__errno_location
strerror
ioctl
uci_set_confdir
json_object_from_file
json_object_get_type
json_object_get_boolean
smartip_eths
smartip_ethIfCnt
fputs
json_object_new_object
json_object_new_string
json_object_object_add
json_object_to_file
json_object_new_int
json_object_to_json_string
uci_get_profile_eth_port
json_object_get_object
strstr
setenv
execvp
waitpid
sendto
bind
g_last_effect_wan_dns
strdup
uci_get_eth_port_num
uci_get_profile_eths
ETH_BIT_FALG_MAX
libdl.so.0
_DYNAMIC_LINKING
__RLD_MAP
_GLOBAL_OFFSET_TABLE_
libblobmsg_json.so
libubox.so
libubus.so
libuci.so
libpthread.so.0
libm.so.0
libjson-c.so.2
libeth_encap.so
libc.so.0
_ftext
_fdata
_edata
__bss_start
_fbss
_end
`s"&P
Bt&<1
Bf&m
`s$& 
`s$& 
<`s$&
$!0@
<`sd$
<`sf$ps
<`s0&
BF&e
<4pb
`s&& 
`s&& 
s5'`
.4tc
$!0@
CF$R
`s$& 
`s%& 
<(tC
<pBc$
`s$&\
`s$&A
`s$&`
'd$\-
'd$\-
'd$\-
$! @
<!0`
$! @
<!0`
<!0`
$!8@
`s$&
<(EF$
<(EF$
<(EF$
<(EF$
<8:e$,
(EF$A
<8:e$
$@:E$!
B$$t
`s$&\
<XtC
`s$& 
<XtC
EB$! @
c$*0e
c$* e
B$Ps
Ff$E
Ff$U
Ff$[
<\t@
B$`t
<0tB
`s$& 
@tw%
&4tb
<@tw%B
s)%!@
LAJ%
@te%
$,tV
td&A
ps&#
<4s"
<4pB
<0pB
$!0@
'! @
<`sB$A
<D(B$
$(tC
$4Cf&@
<PVR&
$4Cf&
<!0 
<`sD&[
$psf&@
`sE&@
<psf&
$TQE&!
$TQE&!
$TQE&!
$$Ff&
$$Ff&@
PVR&A
$$Ff&
$Ff&
<8pD
B$0p
<4pC
c$0p
B$0p
<4pC
c$4pC
PV1&A
CF&!
CF&3
'(tC
<,t@
<4t"&,
$4t 
<Lt@
LtB$!(
`sd&
`sd&
`sd&
<! @
<!0@
4t5&$
4t2&%
4t$&
`se&
DF&9	
<\-%&@
$!( 
@t%&
<@t1&
$!(`
DF&r	
.e&!0@
ps'&
$ps&&
$!8@
$!0 
$!0 
$!0 
<4tF
$hD&&
'psG&	
$hD&&
psF&	
$hD&&
'$&,
<XsC
Bs&A
0%& 
<\sp
$XsC
$\s`
<! @
<! @
Jf&h
Jf&`
'!(@
Jf&|
$!0 
B$! 
'! @
$!0`
t1&!  
 K&&
< K&&
$ K&&
u$&	
PK%&!
PK1&
<!0 
'! @
<!  
$!0`
'!0@
'!0@
'!0@
<H-d&\-E&=
<H-d&
\-E&t-
<! @
LME&	
LMG&
LM1&A
M1&A
<! `
<! `
<! @
&\-e&x
\-e&
<! @
Oe&d
r6m+
r6m+
r&m+
'! `
'!0@
0PE$D
<!  
<!  
<!  
s&#8r
<!  
<!  
'!  
$\hF&
$\hF&
<!0 
<! @
<! @
<!  
V&,0
TD&H
TP&A
<! @
<!  
&!0 
VD&!
VP&A
<!  
tGE&
0Wd&!
0Wp&A
tGE&
tGE&
hWd&!
hWp&A
tGE&
Wd&!
Wp&A
tGE&	
*$&	
*0&A
'|\%& 
'|\%&
<!0@
<!0@
<!0@
'!  
YE&! 
<!8@
eF&;
<!0 
<@pB
$!8@
TfR&!
<8u@
B$<u
Z$& 
Z1&A
_&& 
_&& 
_&& 
_&&D
HXE$ 
fF& 
<!0 
 uD$!(
ds& 
T]R&A
$!0@
TfR&
$!(`
$!(`
&p^s&A
$!( 
^B$$
<HXB$A
$!0 
<! @
TfR&!
]s&t-
$!(`
$dh&&
$dh&&
dh&&
dh&&
h&&{
h&&k
'! @
h&&P
h&&U
$!(`
j$! $
)%!H#
$LAc$
0O1&`D
'! @
'!  
$!0@
<0iF$
$!0@
<! @
&0iR& c1&
<T]$&
T]1&A
T]%&
T]1&\
<pi&&
<pi&&
$!0 
$!8 
<!0 
Usage: smartip [-hcd] -t NETWORKTYPE [-k PROC] [-l dbglvl]
	 -d:              Start dhcp server and exit
	 -c:              Start dhcp client and exit
	 -k PROC:         Stop the process (like "dhcpc") or "dhcpd" and exit
	 -t NETWORKTYPE:  Type of the network whtich smartip work in (like "lan" or "guest", default is "lan") and run in the background
	 -l dbglvl:       Set debug levle: 0-None;1-Error;2-Info;3-Debug;4-Cmd (default is Error)
	 -h:              Print Help (this message) and exit
	 SIGTERM:         kill dhcpc and rm pid&ip file, then exit
	 SIGUSR1:         Improve the debug level
	 SIGUSR2:         Lower the debug level
smartip
[%s] %s
echo "[%5d(%s)] %s" > /dev/console 
/tmp/%s_%s.pid
[%s %d] open pid file %s fail
[%s %d] Error: read pid file %s fail
udhcpd
smartip_sync
ap_dhcp
enable
/usr/sbin/%s -f /tmp/%s_%s.conf -S &
udhcpc
normal
/sbin/%s -i %s -p /tmp/%s_%s.pid -s %s -h %s -t 6 -m %s -S -M -I &
dynamic
/sbin/%s -i %s -p /tmp/%s_%s.pid -s %s -h %s -m %s -S -M -I &
static
[%s %d] start %s
[%s %d] cmd %s
%d.%d.%d.%d
ifconfig %s %s netmask %s
[%s %d] config IP:  %s
route del default dev %s
[%s %d] %s
route add default gw %s
/etc/init.d/guest_eth reload gw %s
/etc/init.d/miniupnpd restart &
[%s %d] restart miniupnpd
UPDATE
FAPIPUPDATE
/etc/init.d/domain_login restart &
[%s %d] restart domain_login
rm -f %s
[%s %d] no need to kill %s's pid is %d, it is not running
[%s %d] pid is %d
[%s %d] kill process %s
[%s %d] still reading %s...
[%s %d] kill process %s, force to remove pid file: %s
[%s %d] handler SIGTERM
/tmp/dns
[%s %d] dbg level:%d
[%s %d] smartip_handle_dhcpd_action: %d disconnect_type:%d
[%s %d] smartip_handle_dhcpd_action DHCPD_OFF:
[%s %d] smartip_handle_dhcpd_action DHCPD_ON:
[%s %d] smartip_handle_dhcpd_action DHCPD_RESTART:
[%s %d] smartip_handle_dhcpd_action DHCPD_FORCE_ON:
[%s %d] smartip_handle_dhcpd_action DHCPD_ONLY_OFF:
[%s %d] smartip_handle_dhcpd_action DHCPD_ONLY_ON:
[%s %d] Unknown dhcps action
[%s %d] sameSubnet no need to disconnect client
[%s %d] not sameSubnet: need to disconnect client
guest
[%s %d] read config file fail
[%s %d] DHCP Server changed
dhcp_server_sync
settings
primaryDns
secondaryDns
[%s %d] Restart dhcpd
[%s %d] User config dns is 0, so use wanDns!
[%s %d] new dnsServer is 0x%x disconnect client
[%s %d] new dnsServer is 0x%x 0x%x
ps | grep '%s' | grep -v grep | awk '{print $1}'
popen
[%s %d] Fail to popen.
[%s %d] kill process(%s), pid(%d).
udhcpd -f /tmp/udhcpd_%s.conf
/tmp/udhcpd_%s.pid
udhcpc -i %s
/tmp/udhcpc_%s.pid
ps | grep '%s' | grep -v grep | wc -l
[%s %d] Count of proc '%s' is %s.
[%s %d] process(%s) exit, but pid file %s exist. to remove pid file
[%s %d] unexpected: count of (%s) is %d.
[%s %d] pid file(%s) disappear, but process(%s) exist. to kill process
/etc/init.d/domain_login stop
[%s %d] stop domain_login
ip addr del %s dev %s
[%s %d] !!ip addr del!! %s
[%s %d] fallback lan ip
[%s %d] smartipd restart %s
[%s %d] The previous event(%d) has yet to be completed...
[%s %d] the event in the listen_event[%d]is:%d;event_idx_head is:%d;event_idx_tail
[%s %d] opt:%c
br-%s
[%s %d] Error: wrong netwrok type (%s) 
[%s %d] interface:%s
[%s %d] Incorrect number of debug levle
hcdSt:k:l:L:
/tmp/smartipd_%s.pid
/tmp/runtime_ip_%s
/dev/null
[%s %d] fopen %s fail
[%s %d] Error create pid file fail
[%s %d] write dns file fail
[%s %d] init status fail
[%s %d] get profile eths failed
[%s %d] create ibuse thread failed
smartip uci get failed
[%s %d] smartipd handle dhcpc event from %s.
[%s %d] udhcpc found dhcp Server 
[%s %d] recive dhcp reply from error interface: 0x%x
[%s %d] AP system Ap Mode, find no connected interface, restart dhcpc!
[%s %d] df_lan_ip: 0x%x,cur_lan_ip: 0x%x,dhcp_lan_ip: 0x%x, subnet:%d
[%s %d] detect sucess to update lanIp and write dns file
[%s %d] lan ip change to another subnet, disconnect all sta
[%s %d] udhcpc detects fail
[%s %d] dhcp server detect fail: no need to fallback ip, del gw and update dns file 
[%s %d] Unknown dhcp detect result(%d)
[%s %d] smartipd handle wifi event:%d
[%s %d] RE -> AP
[%s %d] the lan ip is same subnet with wan, fallback lan ip!
[%s %d] Change to FAP, Update Lan IP
[%s %d] HAP -> FAP
[%s %d] AP -> RE
[%s %d] CAPCHANGE FAP -> HAP
[%s %d] CAPCHANGE FAP->FAP | HAP->FAP | HAP->HAP
[%s %d] CAPIPCHANGE
[%s %d] RE_BEGIN TO CONNECT
[%s %d] RE_END TO CONNECT
[%s %d] RE_END TO CONNECT no lanip to restart udhcpc
[%s %d] Lan IP changed.
lanip
[%s %d] sync lan default ip:%s, mask:%s
[%s %d] Update lanip and restart dhcp server.
/etc/init.d/tm_shn_pc reload
[%s %d] /etc/init.d/tm_shn_pc reload
[%s %d] old_fap_lan_ip:%s new_fap_lan_ip:%s
[%s %d] old_mask:%d.%d.%d.%d
[%s %d] new_mask:%d.%d.%d.%d
[%s %d] mask change, restart udhcpc:%d
[%s %d] Unknown wifi event
[%s %d] AP MODE: Detect DHCP server fail, DIAL DOWN!
[%s %d] AP mode hanlde wifi disconnect
[%s %d] wifi disconnect:DYNAMIC_IP DHCPS_AUTO update_lanip to del default dev 
[%s %d] AP MODE: Detect DHCP server alive, DIAL UP!
[%s %d] Unknown apmode event(%d)
[%s %d] smartipd handle link state event.
[%s %d] Error: Invalid wifi 2g link state:%d
[%s %d] Error: Invalid wifi 5g link state:%d
[%s %d] Error: Invalid eth link state:%d
[%s %d] Error: Invalid plc link state:%d
[%s %d] new_conn_status:%d, conn_status:%d
[%s %d] error role: %d
[%s %d] Error system mode:%d
[%s %d]  AP mode dhcp detect_fail to make dhcpd on.
[%s %d]  AP mode dhcp detect success to make dhcpd off.
[%s %d]  AP mode AP online status changed(ONLINE --> OFFLINE).
[%s %d] Ap System Ap Mode, Dns Changed will disconnect client.
[%s %d] Ap System Ap Mode, Gw Changed will disconnect client
[%s %d] Ap System Ap Mode, connect interface changed, link_status:%x, record inf:%x.
[%s %d] Ap System Ap Mode, connect interface unchanged, link_status:%x, record inf:%x.
[%s %d] Ap System Ap Mode, connecter interface changed, prelink_status:0x%x, curlink_satus:0x%x.
[%s %d]  keep udhcpc on.
[%s %d] RE Device, close dhcp server.
[%s %d]  Apmode RE link_status CONNECTED, start udhcpc
[%s %d] Ap System RE Mode, connect interface changed, link_status:%x, record inf:%x.
[%s %d] Ap System RE Mode, connect interface unchanged, link_status:%x, record inf:%x.
[%s %d]  Apmode RE link_status changed(0x%x --> 0x%x).
[%s %d]  Apmode RE link_status DISCONNECTED, stop udhcp
[%s %d]  Apmode RE online status changed(ONLINE --> OFFLINE).
[%s %d] Too long time waiting chaning to be AP. Force change it.
[%s %d] Route Mode,For binded RE device, close dhcp server
/tmp/online-test_disable
[%s %d] online-test is disabled
[%s %d] Router mode RE online status changed(online --> offline) for 30s.
[%s %d] RE Device(connected) start dhcp detect.
[%s %d] RE Device(disconnected) stop dhcp detect.
[%s %d] Factory mode, start dhcp server.
[%s %d] RE Devcie is sambe subnet with FAP.
[%s %d] RE Devcie can't get FAP's IP, detect begin.
[%s %d] AP Devcie stop dhcp detect.
[%s %d] smartip_ubus_get_wan_dns_info .... lanip:%x
[%s %d] Error: useWanDns:%d
[%s %d] wan dnsServer is 0x%x
[%s %d] old dnsServer is 0x%x
[%s %d] last wan dnsServer is 0x%x
[%s %d] HAP-->FAP or RE-->FAP fallback lanip and disconnect STA
[%s %d] FAP/RE --> HAP restart dhcpd to change lease time 
[%s %d] AP Device start dhcp server 
[%s %d] exit smartip
smartip_kill_unexpected_process
smartip_ibus_set_msg
main
smartip_create_pidfile
smartip_signal_handler
smartip_start_process
smartip_get_pid
smartip_init_status
smartip_cfg_staticIp
smartip_handle_dhcpd_action
smartip_update_lanip
smartip_ibus_handle_dhcp_event
smartip_restart_process
smartip_handle_detect_success
smartip_handle_detect_fail
smartip_ibus_handle_wifi_event
smartip_fallback_lanip
smartip_delete_lanip
smartip_handle_lanip_changed
smartip_ibus_handle_dhcp_server_changed
smartip_handle_mask_changed
smartip_ibus_handle_apmode_event
smartip_handle_wifi_disconnect
handle_link_state_event
handle_link_state_change
handle_link_state_change_by_role
smartip_check_process_pid_file
smartip_get_proc_num
smartip_check_status_AP_mode
smartip_check_status_Router_mode
smartip_kill_process
smartip_remove_file
[%s %d] create ibus thread successfully
[%s %d] create ibus thread failed
smartip_create_ibus_thread
[%s %d] blob to json failed.
LINK_WIFI_2G
LINK_WIFI_5G
[%s %d] Invalid action.
LINK_WIFI_5G_2
LINK_ETH
LINK_PLC
action
[%s %d] smartipd received action: %d
status
iface
[%s %d] iface(%s) not equal bridge(%s) give up to store
dns%d
[%s %d] msg is NULL
dns-server
[%s %d] dnsServer is %s %s
[%s %d] dnsServer is 0x%x 0x%x
[%s %d] format json failed.
ubus send %s '%s'
[%s %d] Failed to connect to ubus
[%s %d] smartip_ctx fd:%d, localid:%u
[%s %d] register smartip event failed.
link_state
[%s %d] register link state event failed.
[%s %d] connect to ubus...
/var/run/ubus.sock
[%s %d] Failed to connect to ubus...
[%s %d] wan_dns_ctx fd:%d, localid:%u
[%s %d] look up internet object!
network.interface.internet
[%s %d] Network internet object not found, look up wan object!
network.interface.wan
[%s %d] Failed to look up network wan object...
smartip_ubus_send_smartip_event
smartip_ubus_thread
smartip_receive_event
smartip_ubus_register_smartip_event
register_link_state_event
link_state_event_cb
smartip_ubus_get_wan_dns_info
client_init
receive_call_result_wan_data
getfirm MODEL
[%s %d] Failed to get product model
%s%s
deco-
[%s %d] host name:%s
/tmp/smartipd_%s.conf
[%s %d] Error: malloc fail
[%s %d] Error: read config file fail
%31[0-9a-zA-Z-_]=%31s
[%s %d] key:%s value:%s
lantype
sta_ifnames
lan_ifnames
guest_ifnames
backhaul_ifnames
config_ifnames
default_ifnames
/tmp/udhcpd_%s.info
[%s %d] Error: open %s fail
[%s %d] Error: read %s fail
[%s %d] Error: read dhcps status wrong
[%s %d] Fail to alloc context for uci.
sysmode
[%s %d] Fail to load uci package.
[%s %d] Can't find specified section by name(%s).
mode
[%s %d] Can't find option by name(%s).
[%s %d] uci_alloc_context failed...
/var/state
repacd.repacd.DeviceType
lookup ptr
[%s %d] work_mode: AP
[%s %d] work_mode: RE
/tmp/udhcpd_%s.conf
/tmp/udhcpd_br-%s.leases
/tmp/udhcpd_br-%s.pid
deco_
decoMesh
[%s %d] open config file %s failed
startIpAddress
endIpAddress
settings1
network
wan_type
[%s %d] can't get wan type!
[%s %d] user set LAN DNS = LAN IP, we do NOT change the lease time
dslite
v6_plus
[%s %d] wan type is %s, we do NOT change the lease time
start  %s
end    %s
opt    lease   %d
opt    dns %s
[%s %d] found one valid DNS in %d DNS
[%s %d] there are too many(%d) DNS found, we discard LAN IP:%s
[%s %d] add DNS %s
opt    router  %s
opt    subnet  %s
[%s %d] ip pool end addres > start address !!!
interface  %s
max_leases %d
auto_time  60
lease_file %s
pidfile    %s
deco_host_name    %s
filtered_host_name  %s
filtered_host_name2  %s
self_ip  %s
[%s %d] smartip_add_reservation_list (lan)!!
smartip_add_reservation_list add_reservation lan
smartip_malloc
smartip_get_laninfo_config
smartip_get_cfg
smartip_get_dhcps_config
smartip_check_ap_mode
smartip_get_work_mode
smartip_get_deco_model
smartip_generate_dhcps_config_file
smartip_add_reservation_list
[%s %d] Open socket error:%s!
[%s %d] IOCTL error:%s
[%s %d] Maybe ethernet inferface %s is not valid!
[%s %d] ifr_flags:0x%x, IFF_RUNNING:0x%x IFF_IP:0x%x
[%s %d] %s is up
[%s %d] %s is down
[%s %d] socket error
[%s %d] ioctl get error
[%s %d] %s 's ip:0x%x
Fail to alloc context for uci.
/etc/config
Fail to load uci package.
Can't find specified section by name(%s).
Can't find option by name(%s).
Entry not found
/etc/profile.d
interfaces
interface
name
switch_port
/tmp/is_online
[%s %d] open %s error...
/tmp/work_mode
[%s %d] read '/tmp/work_mode' failed
work_mode
[%s %d] no work_mode in work_mode
cap_mac
[%s %d] cap_mac: %s -> %s
00:00:00:00:00:00
[%s %d] warning: new cap_mac is %s
%s restart
/etc/init.d/dhcp_hook_d
[%s %d] no cap_mac in work_mode
[%s %d] cap_mac was changed: %s
/sys/class/net/%s/carrier
[%s %d] Error: open %s fail
[%s %d] Error: read br-lan status wrong
[%s %d] ap sysmode, ap mode, link_status:%x
/tmp/wifi_runtime_info.2g
[%s %d] parse file '%s' failed.
/tmp/wifi_runtime_info.5g
/tmp/wifi_runtime_info.5g2
/tmp/plc_runtime_info
/tmp/eth_runtime_info
/tmp/resolv.conf.auto
[%s %d] resolv.conf.auto fopen fail
# Interface lan
nameserver %s
/tmp/runtime_ip_info_%s
[%s %d] json object create failed.
lan_type
lan_ip
lan_mask
lan_gw
[%s %d] write file '%s' failed.
echo %s > %s
/tmp/dhcps_status_%s
[%s %d] json create failed.
dhcps_status
/tmp/detect_result_%s
[%s %d] json create failed
success
detect_result
fail
none
[%s %d] write to '%s' failed.
ipv4_addr
ipv4_mask
ubus call client_mgmt update_%s '%s' &
[%s %d] Notify the lan ip changed.
ubus call awn update_dns '%s'
[%s %d] disconnect wifi(%s) wifi client!!
wifi disconnclient %s
[%s %d] disconnect wifi(%s) sta!!
wifi disconnsta %s
/sys/class/net/br-lan/brif/%s
switch phy_power %d off
switch phy_power %d on
[%s %d] ##### disconnect eth port %d
/tmp/sync-server/mesh_dev_list
[%s %d] Failed to read json file %s
[%s %d] Invalid mesh device data format.
[%s %d] dev_mac:%s dev_role:%s dev_ip:%s  cap_mac:%s.
[%s %d] Current mesh device: AP's ip is (%s)
role
[%s %d] get AP's IP from mesh dev list failed for %d times.
[%s %d] ====== get AP's ip = (%s)
[%s %d] RE is not in the same subnet with AP.
[%s %d] Error: interface is NULL!
ifconfig %s 0.0.0.0
[%s %d] clear ip of %s, popen error:%s
[%s %d] clear ip of %s, pclose error:%s
/tmp/smartip_recv_dhcp_if
{"recv_dhcp_if":"%s"}
[%s %d] Error, the role:%d shold not enter here.
brctl showstp %s
br-wan
[%s %d] failed to brctl show %s-%s
ifconfig %s down
[%s %d] down %s
ifconfig %s up
[%s %d] up %s
eth2
/tmp/group-info
[%s %d] group-info file is not exist
nvrammanager -p %s -r /dev/console
group-info
[%s %d] failed to get group-info partition:%s
[%s %d] #group-info result:%s
[%s %d] fork failed.
TYPE
EVENT
NEWADDR
NEWMASK
/sbin/hotplug-call
[%s %d] Send Message -- TYPE:%s, EVENT:%s
[%s %d] wait pid
[%s %d] get_ip error!
[%s %d] %s has no ip!
[%s %d] Error: interfaces is NULL!
[%s %d] dev list:%s
echo '%s' > %s
/proc/dhcp_hook/dhcp_hook_dev_name
[%s %d] popen error:%s
[%s %d] pclose error:%s
[%s %d] skfd error!
[%s %d] start drop dhcp package failed!
[%s %d] start select dhcp package!
[%s %d] stop drop dhcp package failed!
[%s %d] stop select dhcp package!
[%s %d] clsoe dhcp hook socket success
[%s %d] can not create a netlink socket
[%s %d] bind() error:%s
[%s %d] create dhcp hook success
[%s %d] fd:%d
:%s:%s:%s.%d:%s.%d:%s.%d
[%s %d] ip_str is null!
[%s %d] ip_str len is error:%d
[%s %d] don't have dns address
[%s %d] ip_str format err, %s has char:%c
[%s %d] wan dnsServer is 0x%x 0x%x
[%s %d] old dnsServer is 0x%x 0x%x, lan_ip:%x
[%s %d] dnsServer is 0x%x effect:0x%x
[%s %d] dnsServer ret:%d
Interface
internet
[%s %d] Find another Interface Table: %s!
%31s %31s
[%s %d] foud none dns: %s
[%s %d] key:%s, value:%s
nameserver
[%s %d] tmp dnsServer is 0x%x 
[%s %d] %s 's netmask:0x%x
[%s %d] get_netmask error!
[%s %d] %s has no netmask!
[%s %d] %s and %s is same subnet!
br-lan
%s.%s.%s
config not found!
[%s %d] old_dns[%d]: %x
[%s %d] new_dns[%d]: %x
[%s %d] use the new dns init the old dns.
[%s %d] %s-%d get profile eth port num failed
[%s %d] %s-%d get profile eths failed
smartip_exec_cmd
smartip_check_online
smartip_get_work_role
smartip_get_cap_mac
smartip_get_link_status
smartip_get_lan_status
smartip_write_resolv_conf
smartip_write_dns_file
smartip_write_runtime_ip
smartip_write_dhcps_status
smartip_write_detect_result
smartip_notify_lan_update
smartip_notify_wan_dns_update
smartip_do_wifi_client_disconnect
smartip_do_wifi_disconnect
smartip_do_ethernet_disconnect
smartip_check_intf_wanDev
smartip_re_check_same_subnet_with_ap
smartip_re_get_ap_ip
smartip_clear_interface_ip
smartip_record_connect_interface
check_interface_is_up
smartip_re_check_recv_dhcpc_interface_correct
check_interface_is_brwan
smartip_recover_link_interface_status
smartip_check_and_recover_eth_link_status
smartip_device_is_bound
smartip_call_hotplug_ip
smartip_get_cfg_work_mode
smartip_check_interface_has_ip
get_ip
smartip_write_dhcp_hook_proc
smartip_start_drop_dhcp_pkg
smartip_stop_drop_dhcp_pkg
smartip_close_dhcp_hook_socket
smartip_init_dhcp_hook_socket
smartip_str_2_ip
smartip_check_wan_dns_changed
smartip_get_wan_dns_info
smartip_check_lan_wan_is_samesubnet
get_netmask
smartip_ap_mode_check_dns_changed
smartip_get_profile_eths
smartip_get_profile_eths
