_GLOBAL_OFFSET_TABLE_
_init
_gp_disp
_fini
__cxa_finalize
__deregister_frame_info
__register_frame_info
_Jv_RegisterClasses
lua_checkstack
luaD_growstack
lua_xmove
lua_setlevel
lua_atpanic
lua_newthread
lua_gettop
lua_settop
lua_remove
lua_insert
lua_replace
lua_pushvalue
lua_type
lua_typename
lua_iscfunction
lua_isnumber
lua_isinteger
lua_isstring
lua_isuserdata
lua_rawequal
lua_equal
lua_lessthan
__floatsidf
lua_tonumber
lua_tointeger
lua_toboolean
lua_tolstring
lua_objlen
lua_tocfunction
lua_touserdata
lua_tothread
lua_topointer
lua_pushnil
lua_pushnumber
lua_pushinteger
lua_pushlstring
luaS_newlstr
lua_pushstring
strlen
lua_pushvfstring
lua_pushfstring
lua_pushcclosure
lua_pushboolean
lua_pushlightuserdata
lua_pushthread
lua_gettable
lua_getfield
lua_rawget
lua_rawgeti
lua_createtable
lua_getmetatable
lua_getfenv
lua_settable
lua_setfield
lua_rawset
lua_rawseti
lua_setmetatable
lua_setfenv
lua_call
lua_pcall
lua_cpcall
lua_load
lua_dump
luaU_dump
lua_status
lua_gc
lua_error
lua_next
lua_concat
lua_getallocf
lua_setallocf
lua_newuserdata
lua_getupvalue
lua_setupvalue
lua_pushvalue_as_number
lua_ident
__adddf3
__subdf3
__muldf3
__eqdf2
__divdf3
try_addint
try_subint
try_mulint
try_divint
try_modint
try_powint
try_unmint
floor
memcpy
lua_sethook
lua_gethook
lua_gethookmask
lua_gethookcount
lua_getstack
lua_getlocal
lua_setlocal
lua_getinfo
strchr
_setjmp
luaM_realloc_
luaM_toobig
_longjmp
exit
lua_resume
lua_yield
luaF_newproto
__ctype_b
localeconv
sprintf
strncpy
strcpy
strcat
strcspn
strncat
lua_newstate
lua_close
memcmp
strcoll
__ltdf2
__ledf2
__gtdf2
__fixdfsi
__floatunsidf
strtoul
__ctype_toupper
__errno_location
strtod
stderr
fprintf
free
realloc
strerror
feof
fread
luaL_where
luaL_error
luaL_argerror
strcmp
luaL_typerror
luaL_newmetatable
luaL_checkudata
luaL_checkstack
luaL_checktype
luaL_checkany
luaL_checklstring
luaL_optlstring
luaL_checkoption
luaL_checknumber
luaL_optnumber
luaL_checkinteger
luaL_optinteger
luaL_getmetafield
luaL_callmeta
luaL_findtable
luaL_openlib
luaL_register
luaL_prepbuffer
luaL_addlstring
luaL_addstring
luaL_pushresult
luaL_addvalue
luaL_buffinit
luaL_gsub
strstr
luaL_ref
luaL_unref
luaL_loadfile
stdin
fopen
__fgetc_unlocked
fgetc
freopen
ungetc
ferror
fclose
luaL_loadbuffer
luaL_loadstring
luaL_newstate
stdout
fputc
fputs
luaopen_base
fgets
luaopen_debug
fwrite
fflush
popen
setvbuf
pclose
tmpfile
clearerr
fscanf
fseek
ftell
luaopen_io
atanh
asinh
acosh
sqrt
srand
modf
log10
ldexp
frexp
fmod
ceil
atan
atan2
asin
acos
luaopen_math
setlocale
rename
getenv
system
difftime
gmtime
localtime
strftime
clock
mkstemp
mktime
luaopen_os
luaopen_table
__ctype_tolower
strpbrk
memchr
luaopen_string
strrchr
dlopen
dlerror
dlsym
dlclose
luaopen_package
luaL_openlibs
__lshrdi3
__ashldi3
__thenan_df
__unpack_d
__pack_d
__fpcmp_parts_d
__clzsi2
__clz_tab
libc.so.0
_ftext
_fdata
_edata
__bss_start
_fbss
_end
liblua.so.5.1.5
69'R
079'!
 99'
E$# b
c$+0d
 99'
c$+ C
 99'
 99'k
 99'T
 99'*
 99'
$! @
 99'
'! @
 99'
 9R&$
 9R&$
 9R&$
 99'
 99'
 99'
 9y&!
 9y&
 99'n
 99'5
 99'
 99'
 99'!
079'
$!(E
 99'
$!(@
 99'!
 99'
 99'd
 99'!
 99'
 99'
 99'!
 99'w
 99'
 99'
 99'
 99'<
B$!(E
 99'\
079'g
 99' 
l79'O
 99' 
'l79')
 99']
$!  
$! @
$!  
`Y&o
a9'i
c,$(
?B0%
$0d9'
&&s%
&&[%
B$* e
0d9'
Xf9'
Xf9'
Xf9'
?c$$
0*8G
B$*@
$!0@
,!  
(p9'J
Ph9'M
4c9'
Dr9'
(p9'!
Las&!
$!0@
$!0@
0ds&! 
Ph9'p
$\t9'a
\t9'A
Xf9']
PhR&!
B$!(E
Dr9'
`9'r
`9'1
4c9'
(p9'
Ph9'
8y9'
Phs&!
Phs&!
$!8@
B$!(E
Ph9'
$!0 
8y9'
PhY&
\t9'k
PhY&4
$!0 
e9'<
d0! 
2! @
B$*0D
B$!8G
B$*(
c$+0d
$!0@
$!0@
B$+(
!NB(
Rc$*
!NB(
g$!0
B$+ "
B$+ U
Y&! `
8$ d
B$*@G
D8$ 
c0!(@
c0%0f
1&! 
B$!0
$!0@
R&! 
c$! 
B$! D
$!  
$!0@
$*(C
c$*(D
B$*(
$VUB$+
D=9'
l.9'
D=9'E	
D=9'
<9'z
X>9'
$!(@
$!(@
&!(@
$!8 
l.9'
&! `
$9'K
$!  
79'0
?c$$
#&! 
#&!(@
B$*(d
L)9'
l19'
$9'J
79'	
L)y&
L)9'
'L.9'
L.9'
.9'	
L.9'w
L.9'R
0Y&	
L.9&!
L.9&?
l19'
$!0@
L.9'~
5y&	
79'D
49'p
'L.9'O
l.9'
D=9'
D=9'r
C9'N
$!(b
(B9'
CR&(
(B9'J
c$* P
&! @
'&!(
`M9'
<! @
c$*(q
`M9'
pN9'
s&* c
dP9'
pN9'
LZ9'
dP9'
$!  
T$+ b
B$!PG
M9'r
s&!0
pN9'e
LZ9'	
W9''
LZ9'
16! @
c9'm
$hd9'
$hd9'{
c9'?
$hd9'^
c9'2
Hft&!
Hfy&3
c$* t
cY$-
Hfy&
Hfy&
$Hfy&
<VUB$+
B$* r
Hfw&! 
Hfy&E
c9'b
hg9'
0p9'
0p9'.
8q9'!
0p9'F
0p9'
8q9'
r9'+
r>'!0
E0@(
E0@(
B$!  
$!0 
'B,(
'!  
'B,(
f0@0
F$!(
$!0@
E,!0
E,!0
B$+(
E,!0
$!0@
E,!0
$!0 
$!0@
$!0@
$9'N
E,t=9'
E,t=9'
pA1&!
'!8@
F1&!
Q9'x
'!( 
xJY$p
xJY$c
$* b
<`y&
&+(F
$+ b
&! @
'!  
<`9't
0!(`
(r9'
x9')
'!  
'!(`
hqY&
hqY&U
'!(`
y9'7
y9'/
hqY$a
&&(P
hq9'
f&! 
$!( 
f&!8@
$!0 
D$+@
$+ d
$! g
F$+8
$+Hh
$+@g
D$+(
B$@0
	$! 
)%% 
E$+ 
<+0d
$% C
59'	
no calling environment
no value
$Lua: Lua 5.1.5 Copyright (C) 1994-2012 Lua.org, PUC-Rio (double int32) $
$Authors: R. Ierusalimschy, L. H. de Figueiredo & W. Celes $
$URL: www.lua.org $
control structure too long
code size overflow
constant table overflow
function or expression too complex
(*temporary)
local
global
field
upvalue
method
main
tail
=(tail call)
=[C]
%s:%d: %s
attempt to compare two %s values
attempt to compare %s with %s
attempt to %s %s '%s' (a %s value)
attempt to %s a %s value
perform arithmetic on
concatenate
not enough memory
error in error handling
stack overflow
call
C stack overflow
cannot resume non-suspended coroutine
attempt to yield across metamethod/C-call boundary
char(%d)
%s near '%s'
lexical element too long
malformed number
chunk has too many lines
unfinished long string
unfinished long comment
nesting of [[...]] is deprecated
invalid long string delimiter
unfinished string
escape sequence too large
break
else
elseif
false
function
repeat
return
then
true
until
while
<number>
<name>
<string>
<eof>
<integer>
memory allocation error: block too big
(null)
[string "
`qT`Pql1
<Tl||||||```h"
MOVE
LOADK
LOADBOOL
LOADNIL
GETUPVAL
GETGLOBAL
GETTABLE
SETGLOBAL
SETUPVAL
SETTABLE
NEWTABLE
SELF
CONCAT
TEST
TESTSET
TAILCALL
RETURN
FORLOOP
FORPREP
TFORLOOP
SETLIST
CLOSE
CLOSURE
VARARG
no loop to break
main function has more than %d %s
function at line %d has more than %d %s
local variables
too many local variables
upvalues
'%s' expected
'%s' expected (to close '%s' at line %d)
chunk has too many syntax levels
(for index)
(for limit)
(for step)
(for generator)
(for state)
(for control)
'=' or 'in' expected
self
<name> or '...' expected
cannot use '...' outside a vararg function
items in a constructor
ambiguous syntax (function call x new statement)
function arguments expected
unexpected symbol
syntax error
variables in assignment
table overflow
invalid key to 'next'
table index is nil
table index is NaN
boolean
userdata
number
thread
proto
upval
__index
__newindex
__gc
__mode
__eq
__add
__sub
__mul
__div
__mod
__pow
__unm
__len
__lt
__le
__concat
__call
%s: %s in precompiled chunk
unexpected end
bad size
bad integer
code too deep
bad constant
bad code
binary string
bad header
loop in gettable
loop in settable
string length overflow
get length of
'for' initial value must be a number
'for' limit must be a number
'for' step must be a number
%.14g
PANIC: unprotected error in call to Lua API (%s)
cannot %s %s: %s
%s:%d: 
bad argument #%d (%s)
calling '%s' on bad self (%s)
bad argument #%d to '%s' (%s)
%s expected, got %s
stack overflow (%s)
value expected
invalid option '%s'
_LOADED
name conflict for module '%s'
=stdin
open
reopen
read
Lua function expected
too many results to unpack
base out of range
nil or table expected
__metatable
cannot change a protected metatable
level must be non-negative
invalid level
no function environment for tail call at level %d
'setfenv' cannot change environment of given object
index out of range
tostring
'tostring' must return a string to 'print'
collect
too many arguments to resume
cannot resume %s coroutine
too many results to resume
coroutine expected
__tostring
%s: %p
assertion failed!
=(load)
too many nested functions
reader function must return a string
boolean or proxy expected
Lua 5.1
_VERSION
double int32
_LNUM
ipairs
pairs
newproxy
create
running
status
wrap
yield
suspended
normal
dead
assert
collectgarbage
dofile
error
gcinfo
getfenv
getmetatable
loadfile
load
loadstring
next
pcall
print
rawequal
rawget
rawset
select
setfenv
setmetatable
tonumber
type
xpcall
stop
restart
count
step
setpause
setstepmul
P?lua_debug> 
cont
=(debug command)
stack traceback:
	...
 in function '%s'
 in main chunk
 in function <%s:%d>
level out of range
flnSu
function or level expected
invalid option
source
short_src
lastlinedefined
currentline
nups
namewhat
activelines
func
external hook
debug
gethook
getinfo
getlocal
getregistry
getupvalue
sethook
setlocal
setupvalue
traceback
line
tail return
%s: %s
cannot close standard file
FILE*
attempt to use a closed file
__close
standard %s file is closed
closed file
too many arguments
invalid format
file (closed)
file (%p)
file is already closed
stdin
stdout
stderr
popen
close
flush
lines
seek
setvbuf
write
input
output
tmpfile
full
interval is empty
wrong number of arguments
math
huge
hugeint
fmod
acos
asin
atan2
atan
ceil
cosh
floor
frexp
ldexp
log10
modf
random
randomseed
sinh
sqrt
tanh
acosh
asinh
atanh
hour
month
year
wday
yday
isdst
/tmp/lua_XXXXXX
unable to generate a unique filename
field '%s' missing in date table
clock
date
difftime
execute
exit
getenv
remove
rename
setlocale
tmpname
collate
ctype
monetary
numeric
.A'setn' is obsolete
wrong number of arguments to 'insert'
invalid value (%s) at index %d in table for 'concat'
invalid order function for sorting
concat
foreach
foreachi
getn
maxn
insert
setn
sort
'string.gfind' was renamed to 'string.gmatch'
string slice too long
invalid value
-+ #0
invalid format (repeated flags)
invalid format (width or precision too long)
\000
invalid option '%%%c' to 'format'
unable to dump given function
malformed pattern (ends with '%%')
malformed pattern (missing ']')
invalid capture index
unfinished capture
too many captures
invalid pattern capture
unbalanced pattern
missing '[' after '%%f' in pattern
^$*+?.([%-
string/function/table expected
invalid replacement value (a %s)
gmatch
gfind
byte
char
dump
find
gsub
lower
match
reverse
upper
error loading module '%s' from file '%s':
loop or previous error loading module '%s'
loaders
'package.loaders' must be a table
module '%s' not found:%s
_NAME
_PACKAGE
'module' not called from a Lua function
preload
'package.preload' must be a table
	no field package.preload['%s']
luaopen_%s
'package.%s' must be a string
	no file '%s'
%s%s
LOADLIB: 
_LOADLIB
cpath
	no module '%s' in file '%s'
path
init
package
LUA_PATH
./?.lua;/usr/share/lua/?.lua;/usr/share/lua/?/init.lua;/usr/lib/lua/?.lua;/usr/lib/lua/?/init.lua
LUA_CPATH
./?.so;/usr/lib/lua/?.so;/usr/lib/lua/loadall.so
config
loaded
loadlib
seeall
module
require
