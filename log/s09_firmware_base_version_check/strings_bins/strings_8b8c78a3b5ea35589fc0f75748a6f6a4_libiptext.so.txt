_GLOBAL_OFFSET_TABLE_
_gp_disp
_fini
__cxa_finalize
__deregister_frame_info
__register_frame_info
_Jv_RegisterClasses
init_extensions
libxt_CLASSIFY_init
libxt_CONNMARK_init
libxt_CT_init
libxt_DSCP_init
libxt_MARK_init
libxt_TCPMSS_init
libxt_TOS_init
libxt_comment_init
libxt_connbytes_init
libxt_connmark_init
libxt_conntrack_init
libxt_dscp_init
libxt_helper_init
libxt_iprange_init
libxt_limit_init
libxt_mac_init
libxt_mark_init
libxt_multiport_init
libxt_owner_init
libxt_pkttype_init
libxt_quota_init
libxt_recent_init
libxt_standard_init
libxt_string_init
libxt_tcp_init
libxt_tcpmss_init
libxt_time_init
libxt_tos_init
libxt_udp_init
xtables_option_parse
sscanf
xt_params
xtables_register_target
xtables_register_targets
strlen
strcpy
strcmp
strsep
strncasecmp
putchar
xtables_save_string
xtables_register_match
fputs
xtables_register_matches
xtables_ipaddr_to_numeric
xtables_ipaddr_to_anyname
xtables_ipmask_to_numeric
xtables_ip6addr_to_numeric
xtables_ip6addr_to_anyname
xtables_ip6mask_to_numeric
strchr
memcpy
strcasecmp
xtables_param_act
memset
xtables_numeric_to_ip6addr
xtables_numeric_to_ipaddr
strdup
memcmp
stderr
fprintf
free
atoi
xtables_parse_port
getservbyport
xtables_strtoui
getpwnam
getgrnam
getpwuid
getgrgid
strncpy
strnlen
__ctype_b
__stdout
__fputc_unlocked
fputc
strtok
optarg
optind
strtoul
gmtime
setenv
tzset
mktime
perror
snprintf
strncmp
libxtables.so.10
libc.so.0
_ftext
_fdata
_edata
__bss_start
_fbss
_end
%9'T
`3R&#
$H19'
$H19'|
$!(@
$t39'
$t39'
$t39'/
$t39'"
T;c$
"&+ Q
0H9'o
TI9'
0H9'A
TI9'{
L9'u
TO9'
TO9'
$!0@
$!0`
$!0`
hU9'
XQ9'
XQ9'
XQ9'v
XQ9'W
$!( 
1&\@
l9'l
l9'a
4n9'
4n9'}
$4n9'6
$4n9'
q9'e
q9'G
&,{9'
,{9'e
$XBc$
LBc$!
1&! `
&!(`
43!(
'!0`
$!0 
'!0@
$!0 
$!0 
!c$!
$!(@
$&!(
$!0@
B$+0E
)B$! D
QB$,
P$! 
*s&!
*D&! `
QB$%
QB$%
$#8G
0c$!
$9'L
' --set-class %.4x:%.4x
 CLASSIFY set
 %x:%x
CLASSIFY target options:
--set-class MAJOR:MINOR    Set skb->priority value (always hexadecimal!)
%x:%x
Bad class value "%s"
libxtables.so.10
CLASSIFY
set-class
 CONNMARK and 0x%x
 CONNMARK or 0x%x
 CONNMARK xor 0x%x
 CONNMARK set 0x%x
 CONNMARK xset 0x%x/0x%x
 CONNMARK save
 CONNMARK save mask 0x%x
 CONNMARK save nfmask 0x%x ctmask ~0x%x
 CONNMARK restore
 CONNMARK restore mask 0x%x
 CONNMARK restore ctmask 0x%x nfmask ~0x%x
 ERROR: UNKNOWN CONNMARK MODE
CONNMARK target options:
  --set-xmark value[/ctmask]    Zero mask bits and XOR ctmark with value
  --save-mark [--ctmask mask] [--nfmask mask]
                                Copy ctmark to nfmark using masks
  --restore-mark [--ctmask mask] [--nfmask mask]
                                Copy nfmark to ctmark using masks
  --set-mark value[/mask]       Set conntrack mark value
  --save-mark [--mask mask]     Save the packet nfmark in the connection
  --restore-mark [--mask mask]  Restore saved nfmark value
  --and-mark value              Binary AND the ctmark with bits
  --or-mark value               Binary OR  the ctmark with bits
  --xor-mark value              Binary XOR the ctmark with bits
CONNMARK target options:
  --set-mark value[/mask]       Set conntrack mark value
  --save-mark [--mask mask]     Save the packet nfmark in the connection
  --restore-mark [--mask mask]  Restore saved nfmark value
CONNMARK target: No operation specified
 --set-xmark 0x%x/0x%x
 --save-mark --nfmask 0x%x --ctmask 0x%x
 --restore-mark --nfmask 0x%x --ctmask 0x%x
%s0x%lx
 --set-mark 
0x%lx
 --save-mark 
--mask 
 --restore-mark 
 CONNMARK set 
 CONNMARK save 
mask 
 CONNMARK restore 
CONNMARK
set-mark
save-mark
restore-mark
set-xmark
and-mark
or-mark
xor-mark
ctmask
nfmask
NOTRACK
Unknown event type "%s"
 %s 
%s%s
CT target options:
 --notrack			Don't track connection
 --helper name			Use conntrack helper 'name' for connection
 --timeout name 		Use timeout policy 'name' for connection
 --ctevents event[,event...]	Generate specified conntrack events for connection
 --expevents event[,event...]	Generate specified expectation events for connection
 --zone ID			Assign/Lookup connection in zone ID
 --notrack
 --helper %s
 --timeout %s
--ctevents
--expevents
 --zone %u
 NOTRACK
 notrack
 helper %s
 timeout %s
ctevents
expevents
zone %u 
related
destroy
reply
assured
protoinfo
helper
natseqinfo
secmark
notrack
timeout
zone
Invalid DSCP value `%s'
 --set-dscp 0x%02x
 DSCP set
DSCP target options
  --set-dscp value		Set DSCP field in packet header to value
  		                This value can be in decimal (ex: 32)
               		or in hex (ex: 0x20)
  --set-dscp-class class	Set the DSCP field in packet header to the
				value represented by the DiffServ class value.
				This class may be EF,BE or any of the CSxx
				or AFxx classes.
				These two options are mutually exclusive !
DSCP target: Parameter --set-dscp is required
DSCP
AF11
AF12
AF13
AF21
AF22
AF23
AF31
AF32
AF33
AF41
AF42
AF43
set-dscp
set-dscp-class
 0x%lx
 --set-mark
 --and-mark
 --or-mark
 MARK set
 MARK and
 MARK or
MARK target options:
  --set-xmark value[/mask]  Clear bits in mask and XOR value into nfmark
  --set-mark value[/mask]   Clear bits in mask and OR value into nfmark
  --and-mark bits           Binary AND the nfmark with bits
  --or-mark bits            Binary OR the nfmark with bits
  --xor-mask bits           Binary XOR the nfmark with bits
MARK target options:
  --set-mark value                   Set nfmark value
  --and-mark value                   Binary AND the nfmark with value
  --or-mark  value                   Binary OR  the nfmark with value
MARK target: Parameter --set/and/or-mark is required
MARK: One of the --set-xmark, --{and,or,xor,set}-mark options is required
MARK target: kernel too old for --%s
 MARK and 0x%x
 MARK or 0x%x
 MARK xor 0x%x
 MARK set 0x%x
 MARK xset 0x%x/0x%x
TCPMSS target mutually-exclusive options:
  --set-mss value               explicitly set MSS option to specified value
  --clamp-mss-to-pmtu           automatically clamp MSS value to (path_MTU - %d)
TCPMSS target: At least one parameter is required
 --clamp-mss-to-pmtu
 --set-mss %u
 TCPMSS clamp to PMTU
 TCPMSS set %u
TCPMSS
set-mss
clamp-mss-to-pmtu
 --set-tos 0x%02x/0x%02x
 --set-tos 0x%02x
 TOS set 
TOS target v%s options:
  --set-tos value[/mask]  Set Type of Service/Priority field to value
                          (Zero out bits in mask and XOR value into TOS)
  --set-tos symbol        Set TOS field (IPv4 only) by symbol
                          (this zeroes the 4-bit Precedence part!)
                          Accepted symbolic names for value are:
                            (0x%02x) %2u %s
  --and-tos bits          Binary AND the TOS value with bits
  --or-tos  bits          Binary OR the TOS value with bits
  --xor-tos bits          Binary XOR the TOS value with bits
TOS target options:
  --set-tos value     Set Type of Service/Priority field to value
  --set-tos symbol    Set TOS field (IPv4 only) by symbol
                      Accepted symbolic names for value are:
TOS: An action is required
tos match: Your kernel is too old to support anything besides /0xFF as a mask.
 TOS set 0x%02x/0x%02x
 %s%s
 TOS set
 TOS and 0x%02x
 TOS or 0x%02x
 TOS xor 0x%02x
Minimize-Delay
Maximize-Throughput
Maximize-Reliability
Minimize-Cost
Normal-Service
set-tos
and-tos
or-tos
xor-tos
 /* %s */
 --comment
comment match options:
--comment COMMENT             Attach a comment to a rule
comment
%llu should be less than %llu
original
both
Unknown --connbytes-dir `%s'
packets
avgpkt
Unknown --connbytes-mode `%s'
 %sconnbytes %llu
:%llu
connbytes match options:
 [!] --connbytes from:[to]
     --connbytes-dir [original, reply, both]
     --connbytes-mode [packets, bytes, avgpkt]
 packets
 avgpkt
 unknown
 original
 reply
 both
 --connbytes-mode
 --connbytes-dir
 connbytes mode
 connbytes direction
connbytes
connbytes-dir
connbytes-mode
connmark match options:
[!] --mark value[/mask]    Match ctmark value with optional mask
 --mark
 connmark match 
 CONNMARK match 
connmark
state
conntrack
%sINVALID
%sNEW
%sRELATED
%sESTABLISHED
%sUNTRACKED
 --state 
 state 
state match options:
 [!] --state [INVALID|ESTABLISHED|NEW|RELATED|UNTRACKED][,...]
				State(s) to match
conntrack match options:
[!] --ctstate {INVALID|ESTABLISHED|NEW|RELATED|UNTRACKED|SNAT|DNAT}[,...]
                               State(s) to match
[!] --ctproto proto            Protocol to match; by number or name, e.g. "tcp"
[!] --ctorigsrc address[/mask]
[!] --ctorigdst address[/mask]
[!] --ctreplsrc address[/mask]
[!] --ctrepldst address[/mask]
                               Original/Reply source/destination address
[!] --ctorigsrcport port
[!] --ctorigdstport port
[!] --ctreplsrcport port
[!] --ctrepldstport port
                               TCP/UDP/SCTP orig./reply source/destination port
[!] --ctstatus {NONE|EXPECTED|SEEN_REPLY|ASSURED|CONFIRMED}[,...]
                               Status(es) to match
[!] --ctexpire time[:time]     Match remaining lifetime in seconds against
                               value or range of values (inclusive)
    --ctdir {ORIGINAL|REPLY}   Flow direction of packet
 anywhere
conntrack: At least one option is required
INVALID
ESTABLISHED
RELATED
UNTRACKED
"--state" requires a list of states with no spaces, e.g. ESTABLISHED,RELATED
Bad state "%s"
SNAT
DNAT
NONE
EXPECTED
SEEN_REPLY
ASSURED
CONFIRMED
 %s%s %u
 %s%s %u:%u
Bad ctstate "%s"
conntrack: rule would never match protocol
Bad ctstatus "%s"
ORIGINAL
REPLY
--ctdir
ctstate
%sSNAT
%sDNAT
 %sctproto %u
 %sctorigsrc
 %sctorigdst
 %sctreplsrc
 %sctrepldst
ctorigsrcport
ctorigdstport
ctreplsrcport
ctrepldstport
 %sctstatus
%sEXPECTED
%sSEEN_REPLY
%sASSURED
%sCONFIRMED
%sNONE
 %sctexpire 
%u:%u
 %sctdir REPLY
 %sctdir ORIGINAL
ctproto
ctorigsrc
ctorigdst
ctreplsrc
ctrepldst
ctstatus
ctexpire
ctdir
%s --dscp 0x%02x
 DSCP match %s0x%02x
dscp match options
[!] --dscp value		Match DSCP codepoint with numerical value
  		                This value can be in decimal (ex: 32)
               		or in hex (ex: 0x20)
[!] --dscp-class name		Match the DiffServ class. This value may
				be any of the BE,EF, AFxx or CSx classes
				These two options are mutually exclusive !
DSCP match: Parameter --dscp is required
 helper match %s"%s"
%s --helper
helper match options:
[!] --helper string        Match helper identified by string
iprange
strdup
xt_iprange: range %s-%s is reversed and will never match
--src-range
--dst-range
 %u.%u.%u.%u-%u.%u.%u.%u
iprange match options:
[!] --src-range ip[-ip]    Match source IP in the specified range
[!] --dst-range ip[-ip]    Match destination IP in the specified range
iprange match: You must specify `--src-range' or `--dst-range'
 --src-range
 --dst-range
 source IP range
 destination IP range
 --src-range %s
 --dst-range %s
src-range
dst-range
second
minute
hour
Rate too fast "%s"
3/hour
limit match options:
--limit avg			max average match rate: default 3/hour
                                [Packets per second unless followed by 
                                /sec /minute /hour /day postfixes]
--limit-burst number		number to match in a burst, default %u
bad rate "%s"'
limit does not support invert
 %u/%s
 limit: avg
 burst %u
 --limit
 --limit-burst %u
limit
limit-burst
 %02X
:%02X
 --mac-source
 MAC
mac match options:
[!] --mac-source XX:XX:XX:XX:XX:XX
				Match source MAC address
mac-source
mark match options:
[!] --mark value[/mask]    Match nfmark value with optional mask
 mark match
 MARK match
udplite
sctp
dccp
strdup failed
too many ports specified
invalid portrange specified
multiport match options:
[!] --source-ports port[,port:port,port...]
 --sports ...
				match source port(s)
[!] --destination-ports port[,port:port,port...]
 --dports ...
				match destination port(s)
[!] --ports port[,port:port,port]
				match both source and destination port(s)
multiport only works with TCP, UDP, UDPLITE, SCTP and DCCP
multiport needs `-p tcp', `-p udp', `-p udplite', `-p sctp' or `-p dccp'
multiport expection an option
 --sports 
 --dports 
 --ports 
 multiport 
sports 
dports 
ERROR 
multiport
source-ports
sports
destination-ports
dports
--uid-owner
--gid-owner
owner match options:
[!] --uid-owner userid[-userid]      Match local UID
[!] --gid-owner groupid[-groupid]    Match local GID
[!] --socket-exists                  Match if socket exists
owner match options:
[!] --uid-owner userid       Match local UID
[!] --gid-owner groupid      Match local GID
[!] --pid-owner processid    Match local PID
[!] --sid-owner sessionid    Match local SID
NOTE: PID and SID matching are broken on SMP
owner match options:
[!] --uid-owner userid       Match local UID
[!] --gid-owner groupid      Match local GID
[!] --pid-owner processid    Match local PID
[!] --sid-owner sessionid    Match local SID
[!] --cmd-owner name         Match local command name
NOTE: PID, SID and command matching are broken on SMP
owner: At least one of --uid-owner, --gid-owner or --socket-exists is required
 %u-%u
--socket-exists
owner socket exists
owner UID match
owner GID match
--pid-owner
--sid-owner
owner PID match
owner SID match
 %.*s
--cmd-owner
owner CMD match
uid-owner
gid-owner
pid-owner
sid-owner
cmd-owner
socket-exists
Bad packet type '%s'
%s --pkt-type 
 PKTTYPE %s= 
pkttype match options:
[!] --pkt-type packettype    match packet type
Valid packet types:
	%-14s		%s
pkttype
unicast
to us
broadcast
to all
multicast
to group
bcast
mcast
host
pkt-type
 --quota %llu
 quota: %llu bytes
quota match options:
[!] --quota quota		quota (bytes)
quota
DEFAULT
recent match options:
[!] --set                       Add source address to list, always matches.
[!] --rcheck                    Match if source address in list.
[!] --update                    Match if source address in list, also update last-seen time.
[!] --remove                    Match if source address in list, also removes that address from list.
    --seconds seconds           For check and update commands above.
                                Specifies that the match will only occur if source address last seen within
                                the last 'seconds' seconds.
    --reap                      Purge entries older then 'seconds'.
                                Can only be used in conjunction with the seconds option.
    --hitcount hits             For check and update commands above.
                                Specifies that the match will only occur if source address seen hits times.
                                May be used in conjunction with the seconds option.
    --rttl                      For check and update commands above.
                                Specifies that the match will only occur if the source address and the TTL
                                match between this packet and the one which was set.
                                Useful if you have problems with people spoofing their source address in order
                                to DoS you via this module.
    --name name                 Name of the recent list to be used.  DEFAULT used if none given.
    --rsource                   Match/Save the source address of each packet in the recent list table (default).
    --rdest                     Match/Save the destination address of each packet in the recent list table.
    --mask netmask              Netmask that will be applied to this recent list.
xt_recent by: Stephen Frost <sfrost@snowman.net>.
recent: you must specify one of `--set', `--rcheck' `--update' or `--remove'
 --set
 --rcheck
 --update
 --remove
 --seconds %d
 --reap
 --hitcount %d
 --rttl
 --name %s
 --mask %s
 --rsource
 --rdest
 recent:
 SET
 CHECK
 UPDATE
 REMOVE
 seconds: %d
 reap
 hit_count: %d
 TTL-Match
 name: %s
 side: source
 side: dest
 mask: %s
recent
rcheck
update
remove
seconds
reap
hitcount
rttl
name
rsource
rdest
standard match options:
(If target is DROP, ACCEPT, RETURN or nothing)
standard
STRING too long "%s"
STRING must contain at least one char
Cannot include literals in hex data
Bad literal placement at end of string
Odd number of hex digits
Invalid hex block
Invalid hex char '%c'
Invalid hex char `%c'
Kernel doesn't support --icase
string match options:
--from                       Offset to start searching from
--to                         Offset to stop searching
--algo                       Algorithm
--icase                      Ignore case (default: 0)
[!] --string string          Match a string in a packet
[!] --hex-string string      Match a hex string in a packet
STRING match: You must specify `--string' or `--hex-string'
%s --hex-string
%s --string
 --algo %s
 --from %u
 --to %u
 --icase
 STRING match %s
 ALGO name %s
 FROM %u
 TO %u
 ICASE
from
algo
hex-string
icase
invalid portrange (min > max)
Unknown TCP flag `%s'
Only one `--source-port' allowed
Only one `--destination-port' allowed
Only one of `--syn' or `--tcp-flags'  allowed
SYN,RST,ACK,FIN
--tcp-flags requires two args.
Only one `--tcp-option' allowed
Bad TCP option "%s"
tcp match options:
[!] --tcp-flags mask comp	match when TCP flags & mask == comp
				(Flags: SYN ACK FIN RST URG PSH ALL NONE)
[!] --syn			match when only SYN flag set
				(equivalent to --tcp-flags SYN,RST,ACK,FIN SYN)
[!] --source-port port[:port]
 --sport ...
				match source port(s)
[!] --destination-port port[:port]
 --dport ...
				match destination port(s)
[!] --tcp-option number        match if TCP option set
 --sport %u:%u
 --sport %u
 --dport %u:%u
 --dport %u
 --tcp-option %u
 --tcp-flags 
s:%s
 tcp
 option=%s%u
 flags:%s
0x%02X/0x%02X
 Unknown invflags: 0x%X
source-port
sport
destination-port
dport
tcp-flags
tcp-option
tcpmss match options:
[!] --mss value[:value]	Match TCP MSS range.
				(only valid for TCP SYN or SYN/ACK packets)
%s --mss 
 tcpmss match %s
tcpmss
invalid time "%s" specified, should be hh:mm[:ss] format and within the boundaries
 %s %04u-%02u-%02uT%02u:%02u:%02u
 %04u-%02u-%02u %02u:%02u:%02u
 --timestart %02u:%02u:%02u
 --timestop %02u:%02u:%02u
 --monthdays
 --weekdays
--datestart
--datestop
 --kerneltz
 --contiguous
 TIME
 from %02u:%02u:%02u
 to %02u:%02u:%02u
 starting from
 until date
 UTC
 contiguous
time match options:
    --datestart time     Start and stop time, to be given in ISO 8601
    --datestop time      (YYYY[-MM[-DD[Thh[:mm[:ss]]]]])
    --timestart time     Start and stop daytime (hh:mm[:ss])
    --timestop time      (between 00:00:00 and 23:59:59)
[!] --monthdays value    List of days on which to match, separated by comma
                         (Possible days: 1 to 31; defaults to all)
[!] --weekdays value     List of weekdays on which to match, sep. by comma
                         (Possible days: Mon,Tue,Wed,Thu,Fri,Sat,Sun or 1 to 7
                         Defaults to all weekdays.)
    --kerneltz           Work with the kernel timezone instead of UTC
time: --contiguous only makes sense when stoptime is smaller than starttime
mktime
mktime returned an error
Invalid date "%s" specified. Should be YYYY[-MM[-DD[Thh[:mm[:ss]]]]]
%.*s
WARNING: --localtz is being replaced by --kerneltz, since "local" is ambiguous. Note the kernel timezone has caveats - see manpage for details.
%s is not a valid day for --monthdays
No, the week does NOT begin with Sunday.
%s is not a valid day specifier
time
datestart
datestop
timestart
timestop
contiguous
weekdays
localtz
kerneltz
 --tos 0x%02x/0x%02x
 --tos 0x%02x
tos match options:
[!] --tos value[/mask]    Match Type of Service/Priority field value
[!] --tos symbol          Match TOS field (IPv4 only) by symbol
                          Accepted symbolic names for value are:
                          (0x%02x) %2u %s
tos: Your kernel is too old to support anything besides /0xFF as a mask.
 tos match 
 tos match
0x%02x/0x%02x
udp match options:
[!] --source-port port[:port]
 --sport ...
				match source port(s)
[!] --destination-port port[:port]
 --dport ...
				match destination port(s)
 udp
