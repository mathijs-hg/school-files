<! @
$!( 
``A ``A
``A ``A
``A ``A
<!(`
&!(`
<!  
<!( 
<!  
<! `
f$!8`
c0!8
<! `
2!8E
J1% 
h0!H
c4!P
h0!H
c4!X
h0!H
<!  
<! @
<! @
<! `
<!(`
!Nb8
B0"NB8
'% P
$! `
'!8G
<!  
1B$	
-B$	
1B$	
<! @
1B$	
$! `
``A ``A
B$! 
1B$	
$!  
``A ``A
'% Q
'!0`
<lE9'
<lE9'
$!0@
@B,!
<|!D
@C,H
$D)b|D
!b|D
1b|D
&! @
d$!0
d$!0
<!(@
B$! 
$PIs&
B$! 
D$!(
b&! 
D$!(
``A ``A
``A ``A
<! `
IB$	
``A ``A
KB$	
<! @
KB$	
IB$	
IB$	
IB$	
$! @
``A ``A
<! @
<! @
<HMB$	
KB$	
B0!@
B0%@
")%@
c0!(
B$! 
$0r1&
D$!( 
$0rs&
d$!(`
HrB$	
``A ``A
``A ``A
tsB$	
tsB$	
``A ``A
``A ``A
HrB$	
``A ``A
``A ``A
B4U 
``A ``A
``A ``A
``A ``A
tsB$	
B$! 
D$!(
B&! 
``A ``A
<!( 
``A ``A
<! `
<! `
<! `
$!(e
&! d
$!8 
<! `
<! `
B4=#
B4=#
<! `
d&!(
B4=#
$!8@
<!(`
e:!  
e:!  
<! @
<! @
<! @
<! @
<! @
<! @
<!0`
B$! @
<! @
<! @
&! @
d&!(
<!  
<!  
c$+0d
c$+(d
 dp!
$!8G
	$D,
c$+0
|+ l
Hmp! "
(1!(
|+ l
Hmp! "
(1!(
hB|%
<! @
B$>.
<!  
hB|%
	$#p
``A ``A
$! @
<!(`
'!( 
<!(`
``A ``A
$! @
e$! `
d$+(D
$&!(
<!  
	<! 
R&+ "
$!(`
1&+ #
$! `
1&+ #
d$+(D
<[&s&#
T$!  
$!(`
1&+ #
<!  
<!  
4C|^
``A ``A
$!8 
B$!(
B$]<
<! $
B4!0
 #r!
(dp!
 #r!
<!(E
``A ``A
<!(@
'!(@
r! @
&!(E
'!(@
<! @
<! @
<! @
<! @
<! @
<! `
<!(@
<!0`
(dpB
(dpB
D&!(@
	B$	
c$! 
&!  
<!  
d&!(
&!(E
``A ``A
<!( 
<!  
'!0@
c$! 
)1`G
T&#(E
<! @
&!8@
$#0v
<!(`
<!(`
0! @
<!(`
B$! 
<!0`
&!(`
<!8`
%!  
	B$	
	$&!(
<!  
<!  
<!  
 bp 
<!  
	B$	
<!  
<!  
<!  
	B$	
c$!(
<!  
<! `
R&!  
	B$	
``A ``A
	D&!(
<!8 
	D&!(
$!  
<!  
<!( 
D&!0
<!8 
<!  
``A ``A
JB$	
<!(@
Jb$	
``A ``A
<!(@
Kb$	
KB$	
``A ``A
<! `
<! d
'!(`
<! @
_B$	
1&!(
_B$	
b&!0
R&! `
'!(`
'!(@
<#(E
B$! 
0! @
<!8`
c&!( 
j&! `
<! `
<! @
f&!8@
<! `
<!(`
hyfi_bridge_dev_event
hyfi_bridge_init_port
hyfi_bridge_get_dst
hyfi_suppress_loopback_pkts
hyfi_hatbl_create_tracked_entry
hyfi_hatbl_create_aggr_entry
hyfi_netlink_event_send
hyfi_netlink_init
hyfi_netlink_receive
hyfi_notify_init
hyfi_psw_send_pkt
mc_netlink_receive
mc_acltbl_flush
mc_acltbl_update
mc_set_psw_encap
mc_set_psw_flood
mc_pre_routing_hook
mc_fdb_change
mc_nbp_change
mc_ipv4_report
mc_mdb_create
mc_ipv4_query
mc_ipv4_leave_group
mc_fdb_group_get
mc_ipv6_report
mc_ipv6_query
mc_ipv6_leave_group
mc_open
mc_stop
mc_attach
mc_send_query
mc_forward_init
mc_do_flood
mc_do_encap
description=QCA Hy-Fi Bridging
author=Hai Shalom and Miaoqing Pan
license=GPL v2
parm=hyfi_linux_bridge:Default Hy-Fi managed bridge
depends=
vermagic=3.10.108 SMP mod_unload MIPS32_R2 32BIT 
3%s:%d:hyfi: Failed to allocate memory for port
3%s:%d:hyfi-bridging: Device %s is NOT a bridge!
3%s:%d:hyfi-bridging: Failed to initialize device %s
3%s:%d:hyfi: Cannot create an entry for aggregated flow
bogus packet, option fields too long.
Bcast
Mcast
3%s:%d:suppress %s pkts, count: %d
null
deco-
although fdb changed in a short time, accept l2uf pkt from %s
client %x:%x:%x:%x:%x:%x move from %s to %s
jiffies is %lu, this timer is %lu, dst->updated is %lu, hyfi_fdb_hold_time is %lu
no IP processing for device: %s
%02X:%02X:%02X:%02X:%02X:%02X
%02X:%02X:%02X:%02X:%02X:%02X
hyfi_filter
gw_mac
fap_mac
full_isolate
3%s:%d:hyfi: Failed to allocate memory for entry
hyfi_hatbl_cache
hyfi_hd_table
3%s:%d:Device not found: %s
3%s:%d:hyfi: cannot support anymore hyfi bridges
3%s:%d:hyfi: failed to attach bridge %s
3%s:%d:hyfi: Not attached to bridge %s
3%s:%d:Not a Hy-Fi device, or device not found: %s
in HYFI_DEL_FDB
not found portname:%s
3%s:%d:hyfi: nlh == NULL event_type=%d
3%s:%d:hyfi: Failed to create netlink socket
3%s:%d:hyfi: Failed to register to netdevice notifier
3%s:%d:%s[%d] alloc skb fail
QCA Hy-Fi multicast installation successfully
QCA Hy-Fi multicast installation failed
QCA Hy-Fi multicast uninstalled
Enable
Disable
FLOOD
DROP
Update
Clear
Not a Hy-Fi device, or device not found: %s
%s: mc module is not registered!
6%s: Set event process id %d
6%s: Enable bridge snooping!
6%s: Disable bridge snooping!
6%s: %s MC debug
6%s: Set the forward policy %s
6%s: Set membership interval to %ds
6%s: %s retag, DSCP=%02x
3%s: Invalid router port type %d!
6%s: Set router port type=%d, ifindex=%d
6%s: Del IGMP acl rule, count=%d
6%s: Update acl rule
6%s: Add IGMP acl rule failed, table is full
6%s: Add IGMP acl rule, count=%d
6%s: Del MLD acl rule, count=%d
6%s: Add MLD acl rule failed, table is full
6%s: Add MLD acl rule, count=%d
6%s: Flush IGMP acl rule table.
6%s: Flush MLD acl rule table.
6%s: %s MC convert all.
%s: %s timeout from %s.
group specific queries
all system queries
group membership interval
%s: Set timeout failed, invalid value %d.
6%s: %s IGMPv3/MLDv2 Leave Filter.
6%s: %s 'ignore T-bit'.
6%s: Set local query interval to %u
%s: %s encap table
%s: Update flood table
MC out-of-memory
Group %d.%d.%d.%d  changed
Group %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x  changed
6%s: %s multicast router.
mc: Unknown message type 0x%x
nlmsg_new failed, event_type=%d
nlmsg_put failed, event_type=%d
event type %d is not supported
mc: Failed to create netlink socket
Decap the group %d.%d.%d.%d back to %02x:%02x:%02x:%02x:%02x:%02x
Decap the group %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x back to %02x:%02x:%02x:%02x:%02x:%02x
Reset Querier Interval ageing timer, expires = %u
Reset Group Membership Interval ageing timer, expires = %u
%s: Send query to port %s to client %02x:%02x:%02x:%02x:%02x:%02x 
%s: Snooping table is full!!
%s: Rcv group %d.%d.%d.%d report from %02x:%02x:%02x:%02x:%02x:%02x
%s: Non snooping of %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x for permanent multicast addresse
%s: Rcv group %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x report from %02x:%02x:%02x:%02x:%02x:%02x
%s - Start expire timer for GROUP %d.%d.%d.%d, expire time=%us
Specify Group Query
%s - Start expire timer for GROUP %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x, expire time=%us
General Query
%s: MDB not found
%s: Port group not found
%s: Fdb group not found
%s: %02x:%02x:%02x:%02x:%02x:%02x leave group %d.%d.%d.%d
%s: %02x:%02x:%02x:%02x:%02x:%02x leave group %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x
%s: Del fdb: %02x:%02x:%02x:%02x:%02x:%02x
%s: Del port %s
%s: Rcv group %d.%d.%d.%d query from port %s
7ICMPv6 checksum failed [%pI6 > %pI6]
%s: Rcv group %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x query from port %s
3%s: mc module is not registered!
7%s: mc open failed, feature is disabled
7%s: mc function is already enabled!
7%s: mc forward init failed 
7%s: mc stop failed, feature is disabled
7%s: mc function is already disabled!
3%s: bridge %s is already attached
3%s: no memory!
Flood the Group %d.%d.%d.%d to following interfaces:
Flood the Group %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x to following interfaces:
  -- %s
In flood of group %d.%d.%d.%d The dst port %s is the same with src port %s
In flood of group %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x The dst port %s is the same with src port %s
Encap the Group %d.%d.%d.%d to following QCA devices:
Encap the Group %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x to following QCA devices:
  -- %02x:%02x:%02x:%02x:%02x:%02x
In encap of group %d.%d.%d.%d ,the encap dev mac %02x:%02x:%02x:%02x:%02x:%02x is the same with source
In encap of group %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x ,the encap dev mac %02x:%02x:%02x:%02x:%02x:%02x is the same with source
%s: br_multicast_hook is being used by another module. HyFi-multicast-bridge module will not work.
The bridge %s is not attached
IGMP/MLD snooping is not enabled
Group %d.%d.%d.%d Source %d.%d.%d.%d  ignored for port %d
Group %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x Source %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x  ignored for port %d
Multicast interfaces overflow %d/%d
MC callback function is using by another module
hyfi_ecm_bridge_attached
hyfi_ecm_is_port_on_hyfi_bridge
hyfi_ecm_port_matches
hyfi_ecm_should_keep
hyfi_ecm_decelerate
hyfi_ecm_update_stats
hyfi_bridge_get_class_by_dev
hyfi_bridge_ipv6_mc_update_callback_deregister
hyfi_bridge_ipv6_mc_update_callback_register
hyfi_bridge_ipv6_mc_get_if
hyfi_bridge_ipv4_mc_update_callback_deregister
hyfi_bridge_ipv4_mc_update_callback_register
hyfi_bridge_ipv4_mc_get_if
hyfi_bridging
.symtab
.strtab
.shstrtab
.rel.text
.rel.init.text
.rel.exit.text
.rel.text.unlikely
.rel__ksymtab
.rel.rodata
.modinfo
.rodata.str1.4
__ksymtab_strings
.rel.data
.rel.data..read_mostly
.rel.gnu.linkonce.this_module
.bss
$LC0
$LC3
$LC2
$LC4
$LC1
$LC5
$LC8
$LC6
$LC9
$LC7
$LC10
$LC11
$LC12
$LC14
$LC15
$LC16
$LC17
$LC18
$LC19
$LC41
$LC40
$LC32
$LC36
$LC39
$LC37
$LC38
$LC34
$LC26
$LC31
$LC27
$LC30
$LC28
$LC29
$LC24
$LC25
$LC13
$LC33
$LC21
$LC35
$LC22
$LC23
$LC20
$LC43
$LC44
$LC42
$LC45
_122
_127
_109
_116
_110
_128
_108
_106
_107
_115
_123
_105
_125
_100
_111
_117
_120
_112
_101
_113
_124
_102
_104
_130
_131
_103
_126
_118
_132
_129
_119
_121
_114
br_port_dev_get_hook
__skb_checksum_complete
__nlmsg_put
skb_copy_bits
skb_put
dev_queue_xmit
csum_partial
memmove
__this_module
jiffies_to_clock_t
simple_strtol
_raw_write_lock_bh
__printk_ratelimit
nf_register_hooks
___pskb_trim
call_rcu_sched
memcpy
kfree
__netlink_kernel_create
proc_create_data
_raw_write_unlock_bh
net_ratelimit
kmem_cache_create
__per_cpu_offset
_raw_spin_lock
pskb_expand_head
br_multicast_handle_hook
br_get_dst_hook
kfree_skb
msecs_to_jiffies
_raw_spin_unlock_bh
br_forward
ipv6_skip_exthdr
__alloc_skb
br_ports_compatible_hook
kmem_cache_alloc
__br_fdb_get
nf_unregister_hooks
br_notify_hook
try_to_del_timer_sync
br_fdb_delete_by_port
init_net
skb_pull
cpu_data
netlink_unicast
mod_timer
synchronize_sched
dev_get_by_index
dev_get_by_index_rcu
skb_push
kmem_cache_free
br_deliver
strlcpy
netif_receive_skb
memcmp
_raw_spin_trylock
sscanf
printk
jiffies_to_msecs
proc_mkdir
memset
del_timer_sync
__copy_user
__pskb_pull_tail
__netdev_alloc_skb
nf_hook_slow
unregister_netdevice_notifier
jiffies
sprintf
init_timer_key
nf_hooks
dev_base_lock
remove_proc_entry
register_netdevice_notifier
ip_send_check
skb_copy
dev_get_by_name
skb_clone
_raw_spin_lock_bh
dst_release
_raw_read_lock
sock_release
get_random_bytes
strlen
round_jiffies
kmalloc_caches
kmem_cache_destroy
