/lib/ld-uClibc.so.0
_fini
__uClibc_main
__deregister_frame_info
__register_frame_info
_Jv_RegisterClasses
accept
__errno_location
ubusd_proto_new_client
uloop_fd_add
close
sendmsg
write
calloc
memcpy
recvmsg
__bswapsi2
read
ubusd_proto_receive_message
ubusd_proto_free_client
uloop_fd_delete
signal
uloop_init
optarg
stderr
fprintf
getopt_long
unlink
umask
usock
perror
uloop_run
uloop_done
avl_init
avl_strcmp
open
exit
avl_insert
avl_delete
obj_types
ubus_alloc_id
objects
ubus_notify_subscription
ubus_notify_unsubscribe
ubusd_event_cleanup_object
ubusd_send_obj_event
path
avl_find
blobmsg_check_attr
strdup
ubus_init_id_tree
ubus_init_string_tree
ubusd_event_init
ubus_msg_new
ubus_msg_send
ubus_msg_free
ubus_unsubscribe
ubus_subscribe
avl_find_lessequal
avl_find_greaterequal
blob_put
blob_buf_init
strlen
blob_nest_start
blobmsg_add_field
blob_nest_end
strncmp
ubusd_create_object
ubusd_free_object
blob_parse
blobmsg_parse
strcpy
ubusd_create_object_internal
libubox.so
_DYNAMIC_LINKING
__RLD_MAP
_GLOBAL_OFFSET_TABLE_
libc.so.0
_ftext
_fdata
_edata
__bss_start
_fbss
<(HR&,Hs&#
<DJ"
'`JC$ 
$#0f
`JB$
$!(f
$!  
B$>	
T$#	
4$(E
B$# d
&! @
$! @
$!  
$!0@
4Hc$!
$! @
B0% 
J$&!(
J$&	
B0%(
C$! C
&!  
<! @
>c$d
/var/run/ubus.sock
Usage: %s [<options>]
Options: 
  -s <socket>:		Set the unix domain socket to listen on
usock
/dev/urandom
open
path
register
send
ubus.
ubus.object.add
ubus.object.remove
pattern
object
data
