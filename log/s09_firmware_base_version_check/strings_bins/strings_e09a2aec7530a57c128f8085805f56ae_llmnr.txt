/lib/ld-uClibc.so.0
_init
_fini
__uClibc_main
__cxa_finalize
__DTOR_END__
__deregister_frame_info
__register_frame_info
_Jv_RegisterClasses
perror
tolower
socket
if_nameindex
stderr
fprintf
ioctl
if_name
strcmp
__errno_location
inet_ntoa
sprintf
if_freenameindex
strncpy
malloc
poll
exit
recvfrom
putchar
stdout
__fputc_unlocked
fputc
getnameinfo
inet_aton
fopen
sscanf
memcpy
fscanf
fclose
inet_pton
strlen
host_name
host_mac_name
fputs
sendto
strrchr
opterr
getopt
memset
getaddrinfo
gai_strerror
freeaddrinfo
setsockopt
bind
inet_addr
libc.so.0
_DYNAMIC_LINKING
__RLD_MAP
_GLOBAL_OFFSET_TABLE_
libgcc_s.so.1
_ftext
_fdata
_edata
__bss_start
_fbss
_end
GLIBC_2.0
$'9&
 &R3
@(!<
f9h$
f9h<
f9h$
` !<
C50'
F0%<
F0%<
F0%<
F0%<
F0%<
#540
f0%$
(!$d
"54'
C9h$
r54&1
@0!<
F9h$
 string_tolower
socket
LLMNR: get_local_v4addr: pIndex->if_name = %s
LLMNR: ioctl
LLMNR: get_local_v4addr: %s v4 addr = %s
%s (line %d): ERROR - %s.
%s (line %d): System call ERROR - %s.
%s: New network activity ...
%s (line %d): ERROR - Invalid poll idx=%d, event (0x%02X).
%s: UDP datagram received (%d bytes).
%02x 
Remote client's sockaddr info:
   sa_family = %d (AF_INET = %d, AF_INET6 = %d)
   addr len  = %d (sockaddr_in = %d, sockaddr_in6 = %d)
   sin_addr  = sin_family: %d
               sin_addr:   %s
               sin_port:   %s
   sin6_addr = sin6_family:   %d
               sin6_addr:     %s
               sin6_port:     %s
               sin6_flowinfo: %d
               sin6_scope_id: %d
%s (line %d): ERROR - Unknown address family (%d).
/proc/net/if_inet6
can't open %s: %s
%02x
v6 addr = %s
%32s %x %02x %02x %02x %15s
llmnr id        = 0x%04x
llmnr flags     = 0x%04x
llmnr qdcount   = %d
llmnr ancount   = %d
llmnr nscount   = %d
llmnr arcount   = %d
qd_name  = %s
qd_type  = 0x%02x
qd_class = 0x%02x
host_name = %s
host_mac_name = %s
qd_name + 1 = %s
matched normal hostname, counter = %d
matched special hostname
not a matched hostname
v4 request
address, %d %d %d %d 
v6 request
send response, len = %d
Usage: %s [-v] [interface] [hostname] [MAC Address]
argc = %d
if = %s, name = %s, mac = %s
mac_addr = %s
%02x:%02x:%02x:%02x:%02x:%02x
%s%02x%02x
224.0.0.252
5355
Setting up a passive socket based on the following address info:
   ai_flags     = 0x%02X
   ai_family    = %d (PF_INET = %d, PF_INET6 = %d)
   ai_socktype  = %d (SOCK_STREAM = %d, SOCK_DGRAM = %d)
   ai_protocol  = %d (IPPROTO_TCP = %d, IPPROTO_UDP = %d)
   ai_addrlen   = %d (sockaddr_in = %d, sockaddr_in6 = %d)
   ai_addr      = sin_family:   %d (AF_INET = %d, AF_INET6 = %d)
                  sin_addr:     %s
                  sin_port:     %s
   ai_addr      = sin6_family:   %d (AF_INET = %d, AF_INET6 = %d)
                  sin6_addr:     %s
                  sin6_port:     %s
                  sin6_flowinfo: %d
                  sin6_scope_id: %d
%s (line %d): ERROR - Unknown protocol family (%d).
LLMNR: bind ok .   *descSizer=%d 
LLMNR: openSckt: %s v4_addr=%s
setsockopt(udp, IP_ADD_MEMBERSHIP)
%s (line %d): WARNING - Some address records were not processed due to insufficient array space.
%s: No sockets opened... terminating.
GCC: (GNU) 3.3.2
GCC: (GNU) 4.4.5-1.5.5p4
.shstrtab
.interp
.reginfo
.dynamic
.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.init
.text
.MIPS.stubs
.fini
.rodata
.eh_frame
.ctors
.dtors
.jcr
.data
.rld_map
.got
.sdata
.sbss
.bss
.pdr
.comment
.gnu.attributes
.mdebug.abi32
