/lib/ld-uClibc.so.0
_init
_fini
__uClibc_main
__cxa_finalize
__DTOR_END__
__deregister_frame_info
__register_frame_info
_Jv_RegisterClasses
stderr
fprintf
exit
lseek64
read
__udivdi3
__divdi3
puts
strcmp
malloc
memset
memcmp
localtime
fwrite
free
signal
alarm
stdout
fflush
putchar
gettimeofday
getopt
optind
optarg
strtol
sprintf
__ctype_toupper
stdin
fclose
strtoul
fgetc
__fgetc_unlocked
fopen64
strrchr
setmntent
getmntent
strtoull
endmntent
fstat64
ioctl
perror
fscanf
feof
__errno_location
strerror
libc.so.0
_DYNAMIC_LINKING
__RLD_MAP
_GLOBAL_OFFSET_TABLE_
libgcc_s.so.1
_ftext
_fdata
_edata
__bss_start
_fbss
_end
GLIBC_2.0
$'9OP
 &Rg|
D !0
d !<
d !<
@*"@
8@$F
 8!<
h@#<
	HB-1
,$Cip
<$cg
i|)J
 (!$
T<$C
X&Rg
@$Bc
@$Bc
@$Bc
(!$f
	&$ip
	&%ip
rr4cAa
(!(B
	$BU
i|(C@
fi|(
&sig$
 (!$
 (!$
$dip
$cip
 !$D
B$cU
a4$B
@ !$
&i|(
4,C	a
,b	a
%,C@
>i|<
P(C	a
 %s: Bad FAT size (not 12, 16, or 32)
Usage: mkdosfs [-a][-A][-c][-C][-v][-I][-l bad-block-file][-b backup-boot-sector]
       [-m boot-msg-file][-n volume-name][-i volume-id]
       [-s sectors-per-cluster][-S logical-sector-size][-f number-of-FATs]
       [-h hidden-sectors][-F fat-size][-r root-dir-entries][-R reserved-sectors]
       /dev/name [blocks]
mkdosf
Warning: message too long; truncated
Boot jump code is %02x %02x
%s: On FAT32 at least 2 reserved sectors are needed.
Using %d reserved sectors
%s: #hidden doesn't fit in 16bit field of Atari format
Disabling alignment due to tiny filesystem
Trying with %d sectors/cluster:
FAT12: #clu=%u, fatlen=%u, maxclu=%u, limit=%u
FAT12: too much clusters
FAT16: #clu=%u, fatlen=%u, maxclu=%u, limit=%u
FAT16: too much clusters
FAT16: would be misdetected as FAT12
FAT32: not enough clusters (%d)
FAT32: #clu=%u, fatlen=%u, maxclu=%u, limit=%u
FAT32: too much clusters
Choosing %d bits for FAT
FAT12   
WARNING: Not enough clusters for a 16 bit FAT! The filesystem will be
misinterpreted as having a 12 bit FAT without mount option "fat=16".
This filesystem has an unfortunate size. A 12 bit FAT cannot provide
enough clusters, but a 16 bit FAT takes up a little bit more space so that
the total number of clusters becomes less than the threshold value for
distinction between 12 and 16 bit FATs.
%s: Make the file system a bit smaller manually.
FAT16   
WARNING: Not enough clusters for a 32 bit FAT!
FAT32   
%s: FAT not 12, 16 or 32 bits
Sector size must be %d to have less than %d log. sectors
ss=%d: #clu=%d, fat_len=%d, maxclu=%d
Too many clusters
FAT too big
%s: With this sector size, the maximum number of FAT entries would be exceeded.
%s: Would need a sector size > 16k, which GEMDOS can't work with
%s: Backup boot sector must be after sector 1
%s: Backup boot sector must be a reserved sector
Using sector %d as backup boot sector (0 = none)
%s: GEMDOS can't handle more than 65531 sectors
Warning: More than 32765 sector need TOS 1.04 or higher.
%s: Too many clusters for file system - try more sectors per cluster
%s: Attempting to create a too large file system
%s: Too few blocks for viable file system
%s has %d head%s and %d sector%s per track,
logical sector size is %d,
using 0x%02x media descriptor, with %d sectors;
file system has %d %d-bit FAT%s and %d sector%s per cluster.
FAT size is %d sector%s, and provides %d cluster%s.
There %s %u reserved sector%s.
Root directory contains %u slots and uses %u sectors.
Volume ID is %08lx, 
NO NAME    
volume label %s.
no volume label.
%s: unable to allocate space for FAT image in memory
%s: unable to allocate space for root directory in memory
%s: Out of memory
mkdosfs
%lld... 
%s: Invalid cluster number in mark_FAT_sector: probably bug!
Searching for bad blocks 
%s: seek failed during testing for blocks
Unexpected values in do_check: probably bugs
%s: bad blocks before data-area: cannot make fs
%d bad block%s
%s 3.0.16 (01 Mar 2013)
Bad location for backup boot sector : %s
Bad number of FATs : %s
Bad FAT type : %s
Bad number of hidden sectors : %s
Volume ID must be a hexadecimal number
%-11.11s
Bad number of root directory entries : %s
Bad number of reserved sectors : %s
Bad number of sectors per cluster : %s
Bad logical sector size : %s
Unknown option: %c
aAb:cCf:F:Ii:l:m:n:r:R:s:S:h:v
No device specified.
Warning: block count mismatch: 
found %llu but assuming %llu.
%s: Need intended size with -C.
No device specified!
Bad block count : %s
%s: -c and -l are incompatible
/etc/mtab
%s: %s contains a mounted file system.
%s: unable to open %s: %s
%s: unable to create %s
%s: seek failed
%s: write failed
%s: unable to stat %s
%s: Device partition expected, not making filesystem on entire device '%s' (use -I to override)
Warning: sector size was set to %d (minimal for this device)
Warning: sector size is set to %d > 4096, such filesystem will not propably mount
%s: unable to get diskette geometry for '%s'
%s: unable to get loop device size
Loop device does not match a floppy size, using default hd params
unable to get drive geometry, using default 255/63
Auto-selecting FAT32 for large filesystem
%s: Can't open file of bad blocks
%s: seek to start of device failed whilst writing tables
%s: failed whilst writing reserved sector
%s: seek to boot sector failed whilst writing tables
%s: failed whilst writing boot sector
%s: seek to info sector failed whilst writing tables
%s: failed whilst writing info sector
%s: seek to backup boot sector failed whilst writing tables
%s: failed whilst writing backup boot sector
%s: seek to first FAT failed whilst writing tables
%s: failed whilst writing FAT
%s: failed whilst writing root directory
This is not a bootable disk.  Please insert a bootable floppy and
press any key to try again ... 
NO NAME    
GCC: (GNU) 3.3.2
GCC: (GNU) 4.4.5-1.5.5p4
.shstrtab
.interp
.reginfo
.dynamic
.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.init
.text
.MIPS.stubs
.fini
.rodata
.eh_frame
.ctors
.dtors
.jcr
.data
.rld_map
.got
.sdata
.bss
.pdr
.comment
.gnu.attributes
.mdebug.abi32
