_gp_disp
__cxa_finalize
__deregister_frame_info
__register_frame_info
_Jv_RegisterClasses
__assert
strlen
strcmp
stderr
vfprintf
__fputc_unlocked
fputc
realloc
getpid
malloc
memcpy
free
mnt_new_cache
calloc
mnt_free_cache
blkid_put_cache
mnt_ref_cache
mnt_unref_cache
mnt_cache_read_tags
blkid_new_probe_from_filename
blkid_probe_enable_superblocks
blkid_probe_set_superblocks_flags
blkid_probe_enable_partitions
blkid_probe_set_partitions_flags
blkid_do_safeprobe
blkid_probe_lookup_value
strdup
blkid_free_probe
mnt_cache_device_has_tag
mnt_cache_find_tag_value
mnt_get_fstype
mnt_resolve_path
mnt_pretty_path
strncmp
mnt_resolve_tag
blkid_evaluate_tag
mnt_resolve_spec
blkid_parse_tag_string
mnt_context_reset_status
mnt_new_context
getuid
geteuid
mnt_has_regular_mtab
mnt_context_is_restricted
mnt_context_set_optsmode
mnt_context_get_optsmode
mnt_context_disable_canonicalize
mnt_context_is_nocanonicalize
mnt_context_enable_lazy
mnt_context_is_lazy
mnt_context_enable_fork
mnt_context_is_fork
mnt_context_is_parent
mnt_context_is_child
mnt_context_enable_rdonly_umount
mnt_context_is_rdonly_umount
mnt_context_disable_helpers
mnt_context_is_nohelpers
mnt_context_enable_sloppy
mnt_context_is_sloppy
mnt_context_enable_fake
mnt_context_is_fake
mnt_context_disable_mtab
mnt_context_is_nomtab
mnt_context_disable_swapmatch
mnt_context_is_swapmatch
mnt_fs_get_source
mnt_fs_get_target
mnt_table_find_pair
mnt_table_find_source
mnt_table_find_target
mnt_fs_get_tag
mnt_fs_print_debug
mnt_fs_set_source
mnt_fs_set_target
mnt_fs_get_fstype
mnt_fs_set_fstype
mnt_fs_get_options
mnt_fs_set_options
mnt_fs_append_options
mnt_fs_prepend_options
mnt_context_enable_force
mnt_context_is_force
mnt_context_enable_verbose
mnt_context_is_verbose
mnt_context_enable_loopdel
mnt_context_is_loopdel
mnt_context_set_fs
mnt_ref_fs
mnt_unref_fs
mnt_context_get_fs
mnt_new_fs
mnt_context_get_fs_userdata
mnt_fs_get_userdata
mnt_context_get_fstab_userdata
mnt_table_get_userdata
mnt_context_get_mtab_userdata
mnt_context_set_source
mnt_context_get_source
mnt_context_set_target
mnt_context_get_target
mnt_context_set_fstype
mnt_context_get_fstype
mnt_context_set_options
mnt_context_append_options
mnt_context_get_options
mnt_context_set_fstype_pattern
mnt_context_set_options_pattern
mnt_context_set_fstab
mnt_ref_table
mnt_unref_table
mnt_context_set_tables_errcb
mnt_table_set_parser_errcb
mnt_context_set_cache
mnt_table_set_cache
mnt_context_get_cache
mnt_context_get_table
mnt_new_table
mnt_table_parse_file
mnt_context_get_mtab
mnt_table_parse_mtab
mnt_table_get_nents
mnt_context_get_fstab
mnt_table_parse_fstab
mnt_context_set_passwd_cb
mnt_context_get_lock
mnt_new_lock
mnt_lock_block_signals
mnt_context_set_mflags
mnt_get_builtin_optmap
mnt_optstr_apply_flags
mnt_context_get_mflags
mnt_optstr_get_flags
mnt_context_set_user_mflags
mnt_context_get_user_mflags
mnt_fs_get_user_options
mnt_context_set_mountdata
mnt_optstr_get_option
__errno_location
strtol
strchr
strstr
mnt_fs_is_swaparea
strtok_r
strrchr
mnt_update_is_ready
mnt_update_get_mflags
mnt_update_force_rdonly
mnt_update_table
mnt_context_tab_applied
mnt_context_apply_fstab
mnt_new_update
mnt_update_set_fs
mnt_fs_get_srcpath
access
mnt_fs_is_netfs
mnt_fs_is_pseudofs
mnt_context_get_status
mnt_reset_context
mnt_free_context
mnt_free_lock
mnt_free_update
mnt_context_helper_executed
mnt_context_get_helper_status
mnt_context_syscall_called
mnt_context_get_syscall_errno
mnt_context_set_syscall_status
mnt_context_strerror
mnt_context_init_helper
mnt_context_helper_setopt
mnt_context_is_fs_mounted
mnt_table_is_fs_mounted
fflush
mnt_context_wait_for_children
waitpid
blkid_known_fstype
mnt_optstr_append_option
strndup
mnt_reset_iter
mnt_fs_match_target
mnt_table_next_fs
mnt_optstr_remove_option
mnt_fs_strdup_options
mnt_optstr_set_option
mnt_optstr_next_option
getgid
setgid
setuid
memcmp
execv
wait
mnt_update_get_fs
mnt_context_prepare_mount
mnt_fs_get_vfs_options
mnt_context_do_mount
mnt_fs_get_fs_options
mnt_context_finalize_mount
mnt_context_mount
mnt_context_next_mount
mnt_fs_match_fstype
mnt_fs_match_options
mnt_fs_streq_target
mnt_fs_streq_srcpath
mnt_context_find_umount_fs
mnt_context_prepare_umount
mnt_copy_fs
mnt_fs_get_bindsrc
mnt_context_do_umount
umount2
mnt_context_finalize_umount
mnt_context_umount
mnt_context_next_umount
mnt_free_fs
mnt_reset_fs
memset
mnt_fs_set_userdata
mnt_fs_get_propagation
mnt_fs_is_kernel
mnt_fstype_is_pseudofs
mnt_fstype_is_netfs
mnt_optstr_get_options
mnt_fs_get_optional_fields
mnt_split_optstr
mnt_optstr_prepend_option
mnt_fs_get_attributes
mnt_fs_set_attributes
mnt_fs_append_attributes
mnt_fs_prepend_attributes
mnt_fs_get_freq
mnt_fs_set_freq
mnt_fs_get_passno
mnt_fs_set_passno
mnt_fs_get_root
mnt_fs_set_root
mnt_fs_get_swaptype
mnt_fs_get_size
mnt_fs_get_usedsize
mnt_fs_get_priority
mnt_fs_set_bindsrc
mnt_fs_get_id
mnt_fs_get_parent_id
mnt_fs_get_devno
mnt_fs_get_tid
mnt_fs_get_option
mnt_fs_get_attribute
mnt_fs_get_comment
mnt_fs_set_comment
mnt_fs_append_comment
mnt_fs_match_source
mnt_match_fstype
mnt_match_options
mnt_free_mntent
mnt_fs_to_mntent
mnt_init_debug
getenv
strtoul
mnt_get_library_version
mnt_get_library_features
mnt_new_iter
mnt_free_iter
mnt_iter_get_direction
unlink
mnt_unlock_file
sigprocmask
mnt_lock_file
sigemptyset
sigfillset
flock
sigdelset
gettimeofday
fcntl64
sigaction
alarm
nanosleep
memmove
mnt_optstr_deduplicate_option
__ctype_b
mnt_table_is_empty
mnt_table_set_userdata
mnt_table_enable_comments
mnt_table_with_comments
mnt_table_get_intro_comment
mnt_table_set_intro_comment
mnt_table_append_intro_comment
mnt_table_get_trailing_comment
mnt_table_set_trailing_comment
mnt_table_append_trailing_comment
mnt_table_get_cache
mnt_table_add_fs
mnt_table_remove_fs
mnt_reset_table
mnt_free_table
mnt_table_get_root_fs
mnt_table_first_fs
mnt_table_last_fs
mnt_table_find_next_fs
mnt_table_set_iter
mnt_table_next_child_fs
mnt_table_find_mountpoint
mnt_table_find_srcpath
mnt_table_find_tag
mnt_table_find_devno
mnt_get_mountpoint
mnt_new_tabdiff
mnt_free_tabdiff
mnt_tabdiff_next_change
mnt_diff_tables
fgets
feof
sscanf
mnt_table_parse_stream
fopen64
fclose
mnt_table_parse_dir
scandir64
versionsort64
dirfd
closedir
mnt_new_table_from_file
mnt_new_table_from_dir
mnt_table_parse_swaps
mnt_get_swaps_path
mnt_get_fstab_path
fputs
fdopen
fchmod
fchown
rename
mnt_update_get_filename
mnt_table_write_file
mnt_table_replace_file
strncpy
putchar
sysconf
mnt_tag_is_valid
chdir
getcwd
utimensat
mnt_mangle
mnt_unmangle
bsearch
getpwuid_r
getpwnam_r
getgrnam_r
getgroups
mnt_get_mtab_path
lstat64
mkdir
umask
mkstemp64
mnt_parse_version_string
fstatat64
openat64
readlinkat
lseek64
read
fstat64
ioctl
realpath
getegid
setegid
seteuid
isatty
strcasecmp
errx
prctl
vasprintf
getdtablesize
setmntent
getmntent
hasmntopt
endmntent
__ctype_tolower
wcwidth
mbstowcs
wcstombs
_stdlib_mb_cur_max
iswprint
abort
mempcpy
stdout
raise
select
setenv
pipe
dup2
execvp
signal
vsnprintf
ferror
write
usleep
readdir64
srandom
getppid
syscall
jrand48
strcpy
strtoumax
strtoimax
strtod
localeconv
readlink
fdopendir
rewinddir
faccessat
vfscanf
strsep
strncasecmp
mbrtowc
nl_langinfo
strspn
strtoll
localtime_r
strptime
mktime
ttyname
getpass
basename
execl
uname
qsort
libblkid.so.1
libuuid.so.1
__cxa_atexit
libc.so.0
__environ
libmount.so.1
/home/mfy/deco/iplatform/board/model_mtk_mt762x/openwrt/build_dir/target-mipsel-openwrt-linux-uclibc-m4r/util-linux-2.24.1/.libs
MOUNT_2.19
MOUNT_2.20
MOUNT_2.21
MOUNT_2.22
MOUNT_2.23
MOUNT_2.24
MOUNT_2.25
BLKID_2.15
BLKID_1.0
BLKID_2.17
S9'S
V9'[
W9'/
$!0@
V9'm
V9'?
U9'a
T9'!(
V9'Y
c9's
T9'Y
0l9'i
0l9'M
0l9'
m9'x
m9'k
0l9'y
m9'Q
m9'D
m9'7
0l9'
0l9'7
0l9'\
0l9'b
$!  
0l9'-
0l9'
0l9'
0l9'
0l9'
0l9'k
0l9'
4t9'
0l9'
4t9'
0l9'
0l9'
0l9'
0l9'3
'!0@
0l9'3
0l9'
0l9'
0l9'[
 0B0
0l9'
0l9'S
0l9'
0l9' 
m9'[
0l9'
0l9'Q
0l9'
0l9'
0l9'
0R2u
@B0j
B$!(E
<$ d
B$!(E
$!0`
F$! @
$!0@
D$!8`
5S&!
&!( 
&!( 
B0!  
4s&!
n9'M
E$! 
n9'l
n9'$
p9't
p9'd
n9'B
n9'E
<!  
<! `
<@KB$4
<! @
n9'|
B,!(
$!0@
'! `
'! `
'! `
'!(@
'!(`
'!(`
B,! 
&!  
$!0@
$&.$
$!0`
$! @
'! @
$!0@
 9'+
 9'3
)9'e
)9'-
 9'@
 9'"
 9'6
 9'J
!9'I
h*9'	
 9'A
E&! 
J9'e
J9'%
$!(@
KB$(
ZR&!(
TK9'V
TK9'!
TK9'!
J9'O
c$*(b
J9'A
J9'z
J9'P
J9'M
&+ P
D&+(
<!  
<!  
$!8`
$&!(`
I$+H&
J1!Pj
)1!HI
H$+@
c$#0P
<vTB$
	<!x
)5!HI
<!H/
4!8g
Fk%!X
<!Xg
<"ac$!
8c$!
<`Kc$!
$!(%
4!(%
<eVc$!
Ys&!
<O~c$!
Cc$!x
c$!p
~c$!h
c4!`
c4!x
c4!p
B0#0
$!0@
9'! 
<! @
E0@(
&+(p
$&! 
$!0@
F0@0
<!@H
R&! 
1&!  
c,#0
&!  
$!(@
c0$ 
E&! 
$!0 
c0$ 
'!0@
'!0`
'!( 
$!(@
'!( 
&!(`
E&!0
$&!(
$!@@
<@BB$
F$! 
S$! `
)9'<
)9'~
)9'5
)9'	
)9't
)9'b
)9'$
1&!  
T<9'>
)9'b
)9&3
d=9'
?9'	
T<9&S
$p*9'
T<9&
)9'~
)9'O
)9'o
)9'_
)9'w
)9'<
&! @
)9'o
)9'b
)9'@
)9'{
)9'V
T<9'
'!0@
'! @
$!(`
c0+hG
$%+X
$%!0
$+0%
$!H#
"%+P
j%+h
j%!0
h%+8
h%!0
D$+@
$+ d
$! g
F$+8
$+Hh
$+@g
D$+(
<+0d
$% C
R9'	
cache
libmount/src/cache.c
token
value
devname
[%p]: 
path
%d: libmount: %8s: 
CACHE
add entry [%2zd] (%s): %s: %s
tagname
tagval
alloc
free
%d: libmount: %8s: [%p]: *** deallocates with refcount=%d
tags for %s requested
reading tags for: %s
tag %s already cached
	read %zd tags
TYPE
PARTUUID
PARTLABEL
PART_ENTRY_UUID
PART_ENTRY_NAME
get %s FS type
libblkid rc=%d
none
/dev/loop
mnt_cache_read_tags
cache_find_tag_value
cache_add_tag
cache_add_entry
cache_find_tag
mnt_resolve_tag
libmount/src/context.c
enabling flag %04x
disabling flag %04x
[RESTRICTED]
----> allocate %s
cxt->fs
apply entry:
ENABLED!
disabled
tabfiler %s
mtab requested [nents=%d]
flags
(cxt->flags & (1 << 22))
preparing target path
x-mount.mkdir
failed to parse mkdir mode '%s'
mkdir %s failed: %m
failed to prepare target '%s'
final target '%s'
not found
%s/%s.%s
%-25s ... %s
/sbin:/sbin/fs.d:/sbin/fs
merging mount flags
final flags: VFS=%08lx user=%08lx
don't update: NOMTAB flag
don't update: external helper
don't update: no update prepared
don't update: syscall failed/not called
force fstab usage for non-root users!
use default optsmode
OPTSMODE: ignore=%d, append=%d, prepend=%d, replace=%d, force=%d, fstab=%d, mtab=%d
fstab not required -- skip
only target; fstab/mtab not required -- skip, probably MS_PROPAGATION
trying to apply fstab (src=%s, target=%s)
trying to apply from mtab
failed to find entry in fstab/mtab
(cxt->flags & (1 << 27))
cxt->action
prepare update
skip update: only MS_PROPAGATION
skip update: NOMTAB flag
skip update: external helper
skip update: no writable destination
skip update: syscall failed [status=%d]
skip update: umount, no table
auto
access(%s) failed [%m]
cifs
FS type: %s [rc=%d]
preparing source path
srcpath '%s'
failed to prepare srcpath [rc=%d]
REMOUNT/BIND/MOVE/pseudo FS source: %s
final srcpath '%s'
<---- reset [status=%d] ---->
<---- free
syscall status set to: %d
initialized for [u]mount.<type> helper [rc=%d]
forking context
fork failed %m
child created
add new child %d
mnt_context_is_parent(cxt)
waiting for child (%d/%d): %d
mnt_context_reset_status
mnt_context_set_optsmode
mnt_context_get_optsmode
set_flag
mnt_context_get_fs
mnt_context_get_fs_userdata
mnt_context_get_fstab_userdata
mnt_context_get_mtab_userdata
mnt_context_set_source
mnt_context_get_source
mnt_context_set_target
mnt_context_get_target
mnt_context_set_fstype
mnt_context_get_fstype
mnt_context_set_options
mnt_context_append_options
mnt_context_get_options
mnt_context_set_fstype_pattern
mnt_context_set_options_pattern
mnt_context_set_fstab
mnt_context_get_fstab
mnt_context_get_mtab
mnt_context_set_tabfilter
mnt_context_get_table
mnt_context_set_tables_errcb
mnt_context_get_cache
mnt_context_set_passwd_cb
mnt_context_get_lock
mnt_context_set_mflags
mnt_context_get_mflags
mnt_context_set_user_mflags
mnt_context_get_user_mflags
mnt_context_set_mountdata
mnt_context_prepare_srcpath
mnt_context_prepare_target
mkdir_target
mnt_context_guess_fstype
mnt_context_prepare_helper
mnt_context_merge_mflags
mnt_context_prepare_update
mnt_context_update_tabs
mnt_context_apply_fstab
apply_table
mnt_context_tab_applied
mnt_context_propagation_only
mnt_context_get_status
mnt_context_helper_executed
mnt_context_get_helper_status
mnt_context_syscall_called
mnt_context_get_syscall_errno
mnt_context_set_syscall_status
mnt_context_init_helper
mnt_context_is_fs_mounted
mnt_fork_context
mnt_context_wait_for_children
libmount/src/context_loopdev.c
loopdev specific options detected
automatically enabling loop= option
loop
trying to setup loopdev for %s
enabling READ-ONLY flag
offset
failed to parse offset=
sizelimit
failed to parse sizelimit=
encryption
encryption no longer supported
checking if %s mounted on %s
%s already mounted
enabling AUTOCLEAR flag
trying to use %s
failed to set loopdev attributes
failed to setup device
loopdev stolen...trying again
loopdev deleted [rc=%d]
closing loopdev FD
mnt_context_is_loopdev
mnt_context_setup_loopdev
is_mounted_same_loopfile
mnt_context_delete_loopdev
mnt_context_clear_loopdev
 (recursive)
libmount/src/context_mount.c
target
mount(2) changing flag: 0x%08lx %s
mount(2) failed [errno=%d %m]
(FAKE) 
<none>
mount: executing helper %s
mount: generate helper mount options
exec
suid
user
argv[%d] = "%s"
%s executed [status=%d]
fork() failed
WARNING: source is NULL -- using "none"!
%smount(2) [source=%s, target=%s, type=%s,  mountflags=0x%08lx, mountdata=%s]
mount(2) success
trying to mount by FS pattern list
trying to mount by filesystems lists
cxt->action == MNT_ACT_MOUNT
cxt->helper_exec_status == 1
cxt->syscall_status == 1
mount: preparing
mount: evaluating permissions
perms: fstab not applied, ignore user mount
perms: user=<name> detected, ignore
perms: src undefined
/dev/
permissions evaluation ends with -EPERMS
mount: fixing optstr
mount: fixing vfs optstr
mount: fixing user optstr
mount: initialize additional propagation mounts
mount: add additional flag: 0x%08lx
fixed options [rc=%d]: vfs: '%s' fs: '%s' user: '%s', optstr: '%s'
mount: preparing failed
(cxt->flags & (1 << 24))
(cxt->action == MNT_ACT_MOUNT)
mount: do mount
next-mount: trying %s
root
noauto
next-mount: not-match [fstype: %s, t-pattern: %s, options: %s, O-pattern: %s]
next-mount: child exit [rc=%d]
mnt_context_mount_setopt
mnt_context_prepare_mount
evaluate_permissions
fix_optstr
mnt_context_do_mount
do_mount
exec_helper
generate_helper_optstr
do_mount_additional
do_mount_by_pattern
mnt_context_finalize_mount
mnt_context_mount
umount: umount.%s %s requested
umount
<not found>
umount: lookup FS for '%s'
umount: failed to read mtab
umount: mtab empty
mtab is broken?!?!
umount: %s: %s is mounted over it on the same point
umount: %s --> %s (retry)
umount: warning: %s is associated with more than one loopdev
umount fs: %s
libmount/src/context_umount.c
cxt->action == MNT_ACT_UMOUNT
umount: undefined target
umount: cannot find '%s' in mtab
umount: failed to copy FS
umount: mtab applied
umount: evaluating permissions
cannot find %s in mtab and you are not root
uhelper
umount: using bind source: %s
umount %s: mtab disagrees with fstab
umount: promiscuous setting ('users') in fstab
umount: checking user=<username> from mtab
umount %s: cannot convert %d to username
umount %s is allowed
umount is not allowed for you
helper
umount: preparing failed
 (FAKE)
(cxt->action == MNT_ACT_UMOUNT)
do umount
umount(2) [target='%s', flags=0x%08x]%s
umount(2) failed [errno=%d] -- trying to remount read-only
read-only re-mount(2) failed [errno=%d]
read-only re-mount(2) success
umount(2) failed [errno=%d]
umount(2) success
umount: %s
next-umount: trying %s
next-umount: not-match [fstype: %s, t-pattern: %s, options: %s, O-pattern: %s]
mnt_context_umount_setopt
mnt_context_prepare_umount
lookup_umount_fs
evaluate_permissions
mnt_context_do_umount
mnt_context_finalize_umount
mnt_context_umount
dest
libmount/src/fs.c
shared:
master:
unbindable
swap
%s,%s
------ fs: %p
source: %s
target: %s
fstype: %s
VFS-optstr: %s
FS-opstr: %s
user-optstr: %s
optional-fields: '%s'
attributes: %s
root:   %s
swaptype: %s
usedsize: %jd
priority: %d
bindsrc: %s
freq:   %d
pass:   %d
id:     %d
parent: %d
devno:  %d:%d
tid:    %d
comment: '%s'
update_str
mnt_fs_get_userdata
mnt_fs_set_userdata
mnt_fs_get_srcpath
mnt_fs_get_source
mnt_fs_set_source
mnt_fs_streq_srcpath
mnt_fs_streq_target
mnt_fs_get_tag
mnt_fs_get_target
mnt_fs_set_target
mnt_fs_get_propagation
mnt_fs_is_swaparea
mnt_fs_is_pseudofs
mnt_fs_is_netfs
mnt_fs_get_fstype
mnt_fs_set_fstype
mnt_fs_strdup_options
mnt_fs_get_options
mnt_fs_get_optional_fields
mnt_fs_set_options
mnt_fs_append_options
mnt_fs_prepend_options
mnt_fs_get_fs_options
mnt_fs_get_vfs_options
mnt_fs_get_user_options
mnt_fs_get_attributes
mnt_fs_set_attributes
mnt_fs_prepend_attributes
mnt_fs_get_freq
mnt_fs_set_freq
mnt_fs_get_passno
mnt_fs_set_passno
mnt_fs_get_root
mnt_fs_set_root
mnt_fs_get_swaptype
mnt_fs_get_size
mnt_fs_get_usedsize
mnt_fs_get_priority
mnt_fs_set_priority
mnt_fs_get_bindsrc
mnt_fs_set_bindsrc
mnt_fs_get_id
mnt_fs_get_parent_id
mnt_fs_get_devno
mnt_fs_get_tid
mnt_fs_get_option
mnt_fs_get_attribute
mnt_fs_get_comment
mnt_fs_set_comment
mnt_fs_append_comment
mnt_fs_match_target
mnt_fs_match_source
mnt_fs_match_fstype
mnt_fs_match_options
mnt_fs_to_mntent
LIBMOUNT_DEBUG
INIT
library debug mask: 0x%04x
library version: %s
    feature: %s
LOCKS
unlink %s
datafile
libmount/src/lock.c
%s~.%d
alloc: default linkfile=%s, lockfile=%s
 !!! LOCKED !!!
free%s
BLOCKED
UNBLOCKED
signals: %s
ENABLED
DISABLED
ml->lockfile
flock: %s
.lock
new lock filename: '%s'
unlocking
cleaning
(%d) %s
%s: unflocking
restoring sigmask
%s: locking
%s: can't F_SETLK lockfile, errno=%d
(%d) waiting for F_SETLKW
(%d) leaving mnt_wait_setlkw(), rc=%d
%s: can't create link: time out (perhaps there is a stale lock file?)
%s: (%d) successfully locked
mnt_new_lock
mnt_lock_use_simplelock
libmount/src/optmap.c
maps
nmaps
namelen
noexec
nosuid
nodev
sync
async
dirsync
remount
rbind
silent
loud
mand
nomand
noatime
iversion
noiversion
diratime
nodiratime
relatime
norelatime
strictatime
nostrictatime
runbindable
private
rprivate
slave
rslave
shared
rshared
defaults
user[=]
nouser
users
nousers
owner
noowner
group
nogroup
_netdev
comment=
loop[=]
encryption=
nofail
uhelper=
helper=
mnt_get_builtin_optmap
mnt_optmap_get_entry
optstr
libmount/src/optstr.c
*optstr
OPTIONS
parse error: "%s"
*name
failed to prepend '%s[=%s]' to '%s'
applying 0x%08lu flags to '%s'
new optstr '%s'
failed to apply flags [rc=%d]
fixing uid
useruid
fixing gid
usergid
fixing user
mnt_optstr_parse_next
mnt_optstr_append_option
__mnt_optstr_append_option
mnt_optstr_get_option
mnt_optstr_locate_option
mnt_optstr_deduplicate_option
mnt_optstr_set_option
mnt_optstr_remove_option
mnt_split_optstr
mnt_optstr_get_flags
mnt_optstr_apply_flags
libmount/src/tab.c
add entry: %s %s
reset
lookup root fs
lookup next fs
lookup next child of '%s'
lookup TARGET: '%s'
lookup canonical TARGET: '%s'
lookup MOUNTPOINT: '%s'
lookup SRCPATH: '%s'
lookup canonical SRCPATH: '%s'
lookup by TAG: %s %s
lookup SOURCE: '%s'
lookup SOURCE: %s TARGET: %s
lookup DEVNO: %d
fsroot
lookup fs-root for '%s'
fs-root for bind
not found '%s' in mountinfo -- using default
%s%s
btrfs
subvol
setting FS root: btrfs subvol
FS root result: %s
fstab_fs
is FS mounted? [target=%s]
- ignore (swap or no data)
- ignore (no source/target)
mnt_table_is_fs_mounted: %s [rc=%d]
mnt_table_is_empty
mnt_table_set_userdata
mnt_table_get_userdata
mnt_table_enable_comments
mnt_table_with_comments
mnt_table_get_intro_comment
mnt_table_set_intro_comment
mnt_table_append_intro_comment
mnt_table_get_trailing_comment
mnt_table_set_trailing_comment
mnt_table_append_trailing_comment
mnt_table_set_cache
mnt_table_get_cache
mnt_table_add_fs
mnt_table_remove_fs
mnt_table_get_root_fs
mnt_table_next_fs
mnt_table_first_fs
mnt_table_last_fs
mnt_table_set_iter
mnt_table_find_target
mnt_table_find_srcpath
mnt_table_find_tag
mnt_table_find_source
mnt_table_find_pair
mnt_table_find_devno
mnt_table_get_fs_root
mnt_table_is_fs_mounted
libmount/src/tab_diff.c
DIFF
add change on %s
resetting
analyze new=%p (%d entries), old=%p (%d entries)
%d changes detected
mnt_tabdiff_next_change
tabdiff_add_entry
intro
trailing
appending %s comment
libmount/src/tab_parse.c
swaps
mountinfo
%s: no final newline
%s:%d: missing newline at line
trying to guess table type
%u %u
Filename	
%s %s %s %s %n
tab parse error: [sscanf rc=%d]: '%s'
tab parse error: [set vars, rc=%d]
tab parse error: [freq]
tab parse error: [passno]
%u %u %u:%u %s %s %s%n
mountinfo parse error: separator not found
%s %s %s
mountinfo parse error [sscanf rc=%d]: '%s'
!fs->source
!fs->target
TARGET=
ROOT=
BINDSRC=
OPTS=
ATTRS=
utab parse error: ENOMEM
%s %s %jd%jd%d
\040(deleted)
%s:%d: %s parse error
.fstab
filename
%s: start parsing [entries=%d, filter=%s]
/proc/mounts
TID for %s is %d
/dev/root
root=
root FS: %s
canonical root FS: %s
%s: stop parsing (%d entries)
%s: parse error (rc=%d)
/etc/fstab.d
dirname
unset
%s table parser filter
force %s usage
/proc/self/mountinfo
merging user fs
found fs -- appending user optstr
found fs:
mnt_table_parse_stream
mnt_table_parse_next
skip_spaces
next_number
mnt_parse_utab_line
mnt_table_parse_file
__mnt_new_table_from_file
mnt_new_table_from_file
mnt_new_table_from_dir
mnt_table_set_parser_errcb
mnt_table_set_parser_fltrcb
mnt_table_parse_swaps
mnt_table_parse_fstab
mnt_table_parse_mtab
mnt_table_merge_user_fs
libmount/src/tab_update.c
%s %s %s %s %d %d
UPDATE
%s: updating
TARGET=%s 
ROOT=%s 
BINDSRC=%s 
ATTRS=%s 
OPTS=%s
%s: write entry failed: %m
%s: fflush failed: %m
allocate
target || fs
resetting FS [fs=0x%p, target=%s, flags=0x%08lx]
FS template:
no writable file available [rc=%d]
upd->fs == ((void *)0)
prepare utab entry
utab entry unnecessary (no options)
setting FS root
upd->fs
utab entry OK
ready
write file done [rc=%d]
%s: replacing
replace done [rc=%d]
%s: update tab
%s: remove entry
%s: modify target
%s: modify options
%s: add entry
%s: update tab: done [rc=%d]
mnt_update_set_filename
mnt_update_get_filename
mnt_update_is_ready
mnt_update_set_fs
utab_new_entry
set_fs_root
mnt_update_get_fs
mnt_update_get_mflags
mnt_update_force_rdonly
fprintf_mtab_fs
mnt_update_table
update_table
fprintf_utab_fs
update_modify_options
add_file_entry
tests
libmount/src/test.c
argc
argv
--help
FAILED [rc=%d]
Usage:
	%s <test> [testoptions]
Tests:
	%-15s
mnt_run_test
libmount/src/utils.c
UTILS
moving to %s parent
failed to chdir to %s: %m
failed to obtain current directory: %m
unexpected chdir (expected=%s, cwd=%s)
current directory moved to %s [last_component='%s']
type
smbfs
ncpfs
reading filesystems list from: %s
 %128[^
filesystems
/etc/filesystems
/proc/filesystems
cannot convert '%s' username to UID
cannot convert '%s' groupname to GID
/proc/swaps
LIBMOUNT_SWAPS
/etc/fstab
LIBMOUNT_FSTAB
/etc/mtab
LIBMOUNT_MTAB
mtab: %s
%s: irregular/non-writable
/run/mount/utab
/dev/.mount/utab
LIBMOUNT_UTAB
/run
utab: %s
%s: irregular/non-writable file
%s.XXXXXX
%s mountpoint is %s
%s fs-root is %s
/proc/cmdline
SUCCESS
%s mkdir %s
anon_inodefs
autofs
bdev
binfmt_misc
cgroup
configfs
cpuset
debugfs
devfs
devpts
devtmpfs
dlmfs
efivarfs
fusectl
fuse.gvfs-fuse-daemon
hugetlbfs
mqueue
nfsd
proc
pstore
ramfs
rootfs
rpc_pipefs
securityfs
sockfs
spufs
sysfs
tmpfs
append_string
is_file_empty
mnt_fstype_is_pseudofs
mnt_fstype_is_netfs
add_filesystem
mnt_get_mountpoint
ver_string
libmount/src/version.c
2.24.0
debug
assert
mnt_parse_version_string
disk
tape
printer
processor
worm
scanner
mo-disk
changer
comm
raid
enclosure
no-lun
/sys/block/%s/dm/name
/dev/mapper/%s
/dm-
%s: '%s'
never
always
 n;^
Qkkbal
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
Ef3IL
wUa5
x=f|
_I7Q
U|mT
F=u=
30[/
f[9^Ey
lF'T
"AQ1I
H%DV#
q9Ru
 R@(:
n+{J
orJ6N
'}4d
0{`<'
Kr6;
] y{
C.VKo-i
_RLD_=
BASH_ENV=
ENV=
HOME=
IFS=
KRB_CONF=
LIBPATH=
MAIL=
NLSPATH=
PATH=
SHELL=
SHLIB_PATH=
LANG=
LANGUAGE=
cannot allocate string
lib/fileutils.c
TMPDIR
%s/%s.XXXXXX
/tmp/
/.ismount-test-file
<swap>
waitpid failed (%s)
LESS
FRSX
less
PAGER
cannot open %s
cannot read %s
failed to callocate cpu set
failed to parse CPU list %s
failed to parse CPU mask %s
parse error: %s
%llu
/proc/%d/task/
/proc
%s/stat
%*d (%255[^)])
/dev/urandom
/dev/random
%s -- %s
KMGTPEYZ
kmgtpeyz
BKMGTPE
%d%s%jd%s
%d%s
.A..
queue/
/sys/dev/block/%d:%d/%s
/sys/dev/block/%d:%d
/sys/block/%s/%s/dev
/sys/block/%s/dev
%s/start
%lld
%s/partition
%s/dev
%1023[^
slaves
partition
dm/uuid
%d:%d:%d:%d
/sys/class/%s_host/host%d/%s
/sys/class/%s_host/host%d
/sys/bus/scsi/devices/%d:%d:%d:%d/%s
/sys/bus/scsi/devices/%d:%d:%d:%d
UTF-8
\x%02x
%*s 
?lib/timeutils.c
usec
today
yesterday
tomorrow
 ago
%y-%m-%d %H:%M:%S
%Y-%m-%d %H:%M:%S
%y-%m-%d %H:%M
%Y-%m-%d %H:%M
%y-%m-%d
%Y-%m-%d
%H:%M:%S
%H:%M
%Y%m%d%H%M%S
Sunday
Monday
Tuesday
Wednesday
Thursday
Friday
Saturday
seconds
second
minutes
minute
months
month
msec
hours
hour
days
weeks
week
years
year
parse_timestamp
parse_sec
COLUMNS
/bin/sh
SHELL
cannot allocate %zu bytes
failed to execute %s
%d.%d.%d
loop%u
/dev/loop/
loopdev:  [%p]: 
closing old open fd
%s successfully assigned
LOOPDEV_DEBUG
/sys/block
init: disable /sys usage
init: ignore ioctls
/dev/loop-control
init: loop-control detected 
sysfs: failed devname to devno
sysfs: init failed
open %s [%s]: %s
iter: initialize
iter: de-initialize
de-initialize
reading loop_info64 OK
reading loop_info64 FAILED
loop/backing_file
get_backing_file [%s]
loop/offset
get_offset [rc=%d]
iter: unset device
iter: scan /sys/block
iter: check %s
%s/loop/backing_file
iter: scan /proc/partitions
/proc/partitions
 %u %*s %*s %128[^
iter: next
iter: next: default check
loop%d
iter: next: scan /dev
loop/sizelimit
get_sizelimit [rc=%d]
get_encrypt_type [rc=%d]
get_crypt_name failed
get_backing_devno [rc=%d]
get_backing_inode [rc=%d]
/sys/module/loop/parameters/max_part
loop/partscan
loop/autoclear
checking %s vs. %s
set offset=%jd
set sizelimit=%jd
set flags=%u
set backing file=%s
LOOP_SET_CAPACITY failed: %m
capacity set
device setup requested
open backing file failed: %m
setup: backing file open: OK
closing already open device (mode mismatch)
setup: device open: OK
LOOP_SET_FD failed: %m
setup: LOOP_SET_FD: OK
LOOP_SET_STATUS64 failed: %m
setup: LOOP_SET_STATUS64: OK
failed to fstat backing file
failed to determine device size
failed to determine expected size
failed to get loop FD
failed to determine loopdev size
expected size misaligned to 512-byte sectors
warning: loopdev and expected size dismatch (%ju/%ju)
failed to set loopdev size, size: %ju, expected: %ju
setup success [rc=0]
setup failed [rc=%d]
LOOP_CLR_FD failed: %m
device removed
/loop%d
add_device %d
add_device done [rc=%d]
find_unused requested
find_unused by loop-control [rc=%d]
find_unused by scan [rc=%d]
%zd,%zd,
%zd-%zd,
%u%c
zKLd
zKLd
