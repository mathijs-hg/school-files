/lib/ld-uClibc.so.0
_fini
__uClibc_main
__deregister_frame_info
__register_frame_info
_Jv_RegisterClasses
perror
read
puts
ioctl
ntohl
strlen
strncmp
g_nmPtnStruct
nm_lib_ptnNameToEntry
nm_printf
nm_lib_writeHeadlessPtnToNvram
nm_lib_writePtnToNvram
nm_lib_readHeadlessPtnFromNvram
nm_lib_readPtnFromNvram
memset
nm_lib_readPtnUsedSize
system
fopen
fprintf
fclose
unlink
g_nmFwupPtnStructEntity
g_nmFwupPtnStruct
ptnContentCache
nm_lib_makeArgs
nm_lib_strToKey
nm_lib_parseU32
g_nmCountFwupCurrWriteBytes
g_nmUpgradeResult
g_nmCountFwupAllWriteBytes
putchar
stdout
fflush
usleep
sysmgr_cfg_getProductInfoFromNvram
sysmgr_proinfo_structShow
sysmgr_cfg_checkSupportList
nm_api_readPtnFromNvram
sscanf
strstr
gset_fw_type
strncpy
nm_lib_parsePtnIndexFile
nm_api_writePtnToNvram
vsprintf
strtoul
strtok_r
strcmp
nvram_flash_write2
nvram_flash_write_tp_partition
nvram_flash_read2
nvram_flash_read_tp_partition
g_nmPtnStructEntity
fscanf
nm_initFwupPtnStruct
MD5_Init
MD5_Update
MD5_Final
memcmp
memcpy
des_min_do
md5_make_digest
rsaVerifySignByBase64EncodePublicKeyBlob
access
sched_getparam
sched_getscheduler
sched_get_priority_max
sched_setscheduler
nm_buildUpgradeStruct
nm_upgradeFwupFile
md5_verify_digest
nm_cleanupPtnContentCache
memmove
snprintf
strcasecmp
uncompress
RSA_safemalloc
RSA_bignum_from_long
RSA_bignum_from_bytes
RSA_safefree
RSA_modpow
RSA_freebn
RSA_bignum_bitcount
RSA_bignum_byte
RSA_SHA_Simple
abort
__bswapsi2
blobmsg_add_field
uloop_fd_add
blob_buf_init
g_fwupPercent
ubus_send_reply
pthread_setcancelstate
stderr
fwrite
pthread_setcanceltype
uloop_init
ubus_connect
ubus_add_object
ubus_strerror
uloop_run
ubus_free
uloop_done
pthread_exit
stat
strtol
json_object_new_object
json_object_new_int
json_object_object_add
json_object_new_string
json_object_to_json_string
json_object_put
json_tokener_parse
json_object_object_get
json_object_get_int
json_object_get_string
isInNoHeadList
nm_api_readPtnUsedSize
nm_api_erasePtn
mmap
__errno_location
upgradeFirmware
munmap
CheckUpgradeFile
sysmgr_cfg_getprofileFromNvram
nm_lib_showPtn
getopt_long
optarg
nm_init
IsCurrentActionUpgrade
sync
libubus.so
_DYNAMIC_LINKING
__RLD_MAP
_GLOBAL_OFFSET_TABLE_
libubox.so
libpthread.so.0
libz.so.1
libjson-c.so.2
libc.so.0
_ftext
_fdata
_edata
__bss_start
_fbss
_end
H9'	
<@ND$!(
<PND$
<\ND$
<hND$
<xND$
e4!0@
e4!0@
<xND$
e4!0@
<0OD$
'!0@
<TOD$
<pOD$
'!0&
'!0@
'!0@
<pOD$
'!0&
'!0@
'!0@
OD$B
OD$B
OD$B
QE$)
PD$B
OD$B
PE$n
<LPD$B
PE$v
$!0@
<tPD$B
OD$B
PD$B
<LQD$
<TQC$B
<hQB$! `
<lQD$B
<x\E$j
<TQD$
$! `
B$! @
d$!(@
QD$B
<`\E$
QD$B
<`\E$
RD$B
<`\E$
<PRD$B
<`\E$
RD$B
<`\E$
RE$0
RD$B
<`\E$
SD$B
<L\E$+
<0SD$B
<L\E$
<\SD$B
<L\E$
SD$B
<,\E$
SD$B
<,\E$
SD$B
<,\E$
RE$ 
SD$B
<,\E$!
SD$B
<,\E$,
SE$ 
<0SD$B
SD$B
'! @
B$! `
'! `
TD$B
SD$B
<8TD$
<DTE$
<TTD$B
\E$\
TD$B
\E$k
'! @
RE$0
TD$B
RE$0
UD$B
<DUd$B
$!8@
UE$0
Ud$!(@
UD$B
$! `
$! `
UE$	
UE$	
VD$B
<`VC$
B$! `
UE$	
<tVE$t
'!0`
VC$|
'!(`
Vd$!(@
VD$B
'! @
UE$	
VD$B
<$WC$l
'! `
<tVE$l
'!0`
'! @
'!(`
<<WD$B
WD$B
WD$B
[E$8
Xd$B
[e$]
$!8@
<PXE$
<\XE$!0
<lXE$!0
<|XE$
XD$B
<lXE$0
XD$B
VE$0
XD$B
<8YD$B
$! `
'! `
<lYD$B
'! `
YD$B
YD$B
'! `
ZD$B
[E$$
'! @
Ud$!(@
<8ZD$B
[E$/
Ud$!(@
<xZD$B
[E$9
ZD$B
<p[E$R
ZD$B
<p[E$Y
[D$B
<p[E$`
[D$B
<p[E$g
<D[D$B
<p[E$n
$! `
$! `
'!(`
'! `
'!0@
'! @
\D$B
<l`E$
<|`e$!0@
\D$B
<l`E$
<|`e$!0@
<(]D$B
<T`E$
B$! @
$! `
$! `
$! `
'! `
'! `
d$!(@
<T]D$B
<8`E$
]D$B
<8`E$
]D$B
<8`E$
]D$B
<8`E$
<(^D$B
<8`E$
<\^D$B
<8`E$
^D$B
<8`E$
^C$B
^B$! `
^D$B
_C$ 
'!(`
< _D$B
`E$'
<H_B$
'! `
$! `
'!(`
'! @
<P_B$! @
_D$ 
'!(@
_D$B
'! @
'! @
'!(@
'! @
'! @
'! @
'! @
'! `
$! `
$! `
'! @
'! `
'! @
'! @
'! `
'! @
'! @
`B$! @
<vTc4
'! `
'! `
pB4!
FB4!
[B4!
qB4!
CB4!
<b%B4!
<QZB4!
LB4!
<B9B4!
<"aB4!
8B4!
<`KB4!
~B4!
'B4!
0B4!
|B4!
<eVB4!
<D"B4!
#B4!
YB4!
]B4!
<O~B4!
CB4!
~B4!
<33B4$
<UUB4$
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
<UUB4$
<33B4$
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
hB$!
C$@'
<33B4$
<UUB4$
<UUB4$
<33B4$
<33B4$
<UUB4$
<UUB4$
<33B4$
'! @
pB$!
'! @
'! @
'! @
qB$!
'! @
<UUB4$
<UUB4$
`B$!
B0% 
`B$!
B0% 
`B$!
B0% 
B0% 
`B$!
`B$!
B0% 
`B$!
`B$!
B0% 
`B$!
<@qB$!
'! @
'! @
<dqB$!
qB$!
'! `
'! `
qB$!
qB$!
'! `
'! `
qB$!
rB$!
'! `
'! `
<<rB$!
`rB$!
$!(`
<hvB$! @
wE$e
$!(`
<hvB$! @
wE$g
$! `
<hvB$! @
wE$k
'!(`
<hvB$! @
wE$n
$!(`
'! `
$!(`
<xvD$
<xvD$
$!0@
vd$!(@
vD$B
vd$!(@
vD$B
$! `
wC$<
'!(`
<,wC$<
'! `
'! `
<hvB$! @
wE$0
<@wD$
<PwD$B
wE$?
B$! `
$! `
wB$! @
$! `
wC$@
'!(`
<,wC$@
'! `
'! `
'! `
<hvB$! @
xB$! @
xB$! @
'! @
xB$! @
< yB$0
<$yB$
'! `
$!0@
'! @
<,yE$,
<4yE$,
$! `
<@yB$! @
B$! @
<dyB$! @
B$!(`
$!8@
yB$! @
$! `
'! `
$!8@
yB$! @
d$!(@
|B$!
$!8@
$!8@
<LzC$
$!8@
$!8@
$!8@
$!8@
$!8@
<<{C$
$!8@
<h{C$
$!8@
$!8@
$!8@
<(|D$
<D|D$
|C$ 
|e$!0@
|C$ 
B$! `
|e$!0@
|C$ 
B$! `
|e$!0@
|C$ 
B$! `
|e$!0@
|C$ 
|e$!0@
|C$ 
|e$!0@
|C$ 
|e$!0@
|C$ 
B$! `
}e$!0@
|C$ 
B$! `
}e$!0@
<D|D$
$! `
'! @
'! @
<8}B$! @
$! `
<X}D$
<h}B$! @
}B$! @
$! `
$! `
<@yB$! @
B$! @
<dyB$! @
B$!(`
$!8@
yB$! @
'! `
$!8@
$! `
'! `
$!8@
yB$! @
d$!(@
'! `
yC$`
$!8@
'! `
}C$`
$!8@
c$! `
zC$`
$!8@
B$! `
~C$`
$!8@
c$! `
<LzC$`
$!8@
B$! `
<0~C$`
$!8@
c$! `
<T~C$`
$!8@
~C$`
$!8@
c$! `
zC$`
$!8@
~C$`
$!8@
c$! `
zC$`
$!8@
~C$`
$!8@
c$! `
<h{C$`
$!8@
B$! `
$!8@
c$! `
{C$`
$!8@
B$! `
$!8@
c$! `
<<{C$`
$!8@
B$! `
$!8@
{C$\
$!8@
B$! @
B$! @
'! @
B$! @
B$! @
B$! @
B$! @
$! `
'! `
$! `
<vTc4
yB4!
'! `
B$! @
'! `
'! @
'! @
'! @
B$! @
'! `
d0+ 
B$! @
B$! @
D$!(
e$!0@
$!8@
$!8@
$!8@
$! `
$! `
'!(`
'! `
$!0@
'!8@
'! @
$!(`
'! `
B$! @
B$! @
B$! @
B$! @
B$! @
e$!0@
e$!0@
e$!0@
e$!0@
e$!0@
B$! @
e$!0@
'! @
e$!0@
e$!0@
D$!(
'! `
$!(`
d$!(@
$! `
$!0`
d$!(@
B$! `
d$!(@
$!8@
$! `
$! `
$! `
$! `
$!(`
$! `
$! `
$!0`
B$! `
'! @
$! `
$!0`
B$! `
B$! @
B$! `
$! `
$! `
'! @
'! @
'! @
e$!0@
'! @
e$!0@
B$! @
e$!0@
B$! @
e$!0@
B$! @
e$!0@
'! @
e$!0@
'!(`
'! @
e$!0@
'!(`
'! @
e$!0@
B$! @
e$!0@
B$! @
e$!0@
d$!(@
'! `
'! @
e$!0@
d$!(@
'! @
e$!0@
B$! `
'! `
$! `
'! `
B$! `
$!(`
D$!(
c$! `
$! `
'! `
'! `
'! `
'! `
'! @
'! @
'! @
'! @
'! @
'! @
/tmp/flash_id
open failed
read failed
NOT ST Flash!
/dev/flash_chrdev
write_to_configflash: open device failed
write_to_configflash: ioctl failed
/dev/ar7100_flash_chrdev
Sector number is: %d
read_flash: open device failed
read_from_configflash: ioctl failed
radio file length too long!
new mac is :%02x:%02x:%02x:%02x:%02x:%02x
[NM_Error](%s) %05d: partition name not found.
[NM_Error](%s) %05d: no enough space in this partition.
[NM_Error](%s) %05d: partition name not found(name:%s).
[NM_Error](%s) %05d: malloc failed! 
[NM_Error](%s) %05d: erase failed! 
[NM_Error](%s) %05d: partition with header not found.
nm_api_readPtnUsedSize
nm_api_erasePtn
nm_api_readPtnFromNvram
nm_api_writePtnToNvram
fwup-ptn
base
size
pivot
/tmp/upgrade.info
[NM_Error](%s) %05d: create /tmp/upgrade.info fail
[NM_Error](%s) %05d: invalid partition-index-file para id.
[NM_Error](%s) %05d: partition name not found.
[NM_Error](%s) %05d: parse upgradeInfo start value failed.
[NM_Error](%s) %05d: parse upgradeInfo len value failed.
[NM_Error](%s) %05d: invalid para id.
partition-table
[NM_Error](%s) %05d: no partition-table in fwup-file.
[NM_Error](%s) %05d: invalid input ptnStruct.
[NM_Error](%s) %05d: memory malloc failed.
[NM_Error](%s) %05d: get data from NVRAM failed.
[NM_Error](%s) %05d: WRITE TO NVRAM FAILED!!!!!!!!.
os-image
[NM_Error](%s) %05d: invalid upgradeInfo dataType found.
[NM_Error](%s) %05d: erase failed
Done.
SupportList:
[NM_Error](%s) %05d: Failed to read system Product Info.
[NM_Error](%s) %05d: Firmware not supports, check failed.
[NM_Error](%s) %05d: Up file partition-table not found!
[NM_Error](%s) %05d: Flash partition-table not found!
[NM_Error](%s) %05d: Up file partition-table base address changed up(0x%08x) flash(0x%08x)!
extra-para
[NM_Error](%s) %05d: Double boot flag up %d flash %d not ok!
soft_ver:
mini_ver:
[NM_Error](%s) %05d: nm_checkSoftVer: not starts with "soft_ver:" nor "mini_ver:"
sw_ver in up = %s
%d.%d.%*s
Rel. %d
soft-version
[NM_Error](%s) %05d: failed to read partition from flash!
[NM_Error](%s) %05d: nm_checkSoftVer: not starts with "soft_ver:"
sw_ver in nvram = %s
[NM_Error](%s) %05d: minimanu firmwave not supported, check failed.
[NM_Error](%s) %05d: Firmwave not supports, check failed.
[NM_Error](%s) %05d: ptn "%s" not found whether in fwup-file or NVRAM.
[NM_Error](%s) %05d: ptn "%s": update data end out of fwup-file.
fs-uboot
product-info
support-list
file-system
[NM_Error](%s) %05d: upgrade boot mode check fail.
[NM_Error](%s) %05d: hardware version not support
[NM_Error](%s) %05d: software version partition is not from fwup file
[NM_Error](%s) %05d: software version dismatched
[NM_Error](%s) %05d: parse new ptn-index failed.
[NM_Error](%s) %05d: getDataFromFwupFile failed.
[NM_Error](%s) %05d: getDataFromNvram failed.
[NM_Error](%s) %05d: checkUpdateContent failed.
[NM_Error](%s) %05d: Get sys para in set integer flag fail!
[NM_Error](%s) %05d: Write sys para in set integer flag fail!
[NM_Error](%s) %05d: pivot root failed.
[NM_Error](%s) %05d: set not integer failed!
[NM_Error](%s) %05d: updateDataToNvram failed.
[NM_Error](%s) %05d: set integer failed!
nm_upgradeFwupFile
nm_setIntegerFlag
nm_buildUpgradeStruct
nm_checkUpdateContent
nm_checkPartition
nm_checkSoftVer
nm_checkUpgradeMode
nm_checkSupportList
nm_updateDataToNvram
nm_updatePartitonDataToNvram
nm_getDataFromNvram
nm_getDataFromFwupFile
nm_createFileForSysLed
partition
base
tail
size
echo "%s" > /dev/console 
[NM_Error](%s) %05d: invalid arguments.
[NM_Error](%s) %05d: Too many arguments.
[NM_Error](%s) %05d: invalid input param.
[NM_Error](%s) %05d: invalid partition-index-file para id.
[NM_Error](%s) %05d: duplicate partition name found.
[NM_Error](%s) %05d: too many partitions.
[NM_Error](%s) %05d: parse base-addr value failed.
[NM_Error](%s) %05d: parse tail-addr value failed.
[NM_Error](%s) %05d: parse size value failed.
[NM_Error](%s) %05d: invalid para id.
/proc/cmdline
[NM_Error](%s) %05d: cannot open /proc/cmdline
root=
mtd:
%d:rootfs
/dev/mtd
[NM_Error](%s) %05d: unimplemented yet
%32s
Nvrammngr not Initialize, now initializing...
partition %02d: name = %-32s, base = 0x%08x, size = 0x%08x Bytes, usedFlag = %d
[NM_Error](%s) %05d: partition not written
nm_lib_readPtnUsedSize
nm_lib_getDualImageIndex
nm_lib_parsePtnIndexFile
nm_lib_ptnNameToEntry
nm_lib_makeArgs
output buf too small.
open input file
read
file too large!
open output file
write
 n;^
Qkkbal
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
-Cloud
cloud %s : %d
/lib/upgrade/pre-upgrade
config-info
[NM_Error](%s) %05d: read config-info partition from flash failed
[NM_Error](%s) %05d: The file's length is bad: %d
fw-type:%[^"	
fw_type_name : %s 
Verify error!
[NM_Error](%s) %05d: check firmware error!
CheckUpgradeFile: 
	 testBuf = %s
md5 verify ok!
CheckUpgradeFile
upgradeFirmware
upgradeFirmware
addUpgradeTimes
handle_fw_cloud
vendor_name
vendor_url
product_name
product_id
product_ver
special_id
language
hw_id
oem_id
country
[Error]%s():%5d @ Some parameter is null.
[Error]%s():%5d @ Maximum number is invalid. maxNum = %d
[Error]%s():%5d @ Too many substrings to string.
0x%s
%u.%u
%u.%u.%u
[Error]%s():%5d @ Invalid file.
[Error]%s():%5d @ No memory.
[Error]%s():%5d @ ucm_string_makeSubStrByChar() failed.
[Error]%s():%5d @ should be 2 args (%d).
[Error]%s():%5d @ _strToVendorName(%s) failed.
[Error]%s():%5d @ _strToVendorUrl(%s) failed.
[Error]%s():%5d @ _strToProductName(%s) failed.
[Error]%s():%5d @ _strToProductId(%s) failed.
[Error]%s():%5d @ _strToSpecialId(%s) failed.
[Error]%s():%5d @ _strToProductVer(%s) failed.
[Error]%s():%5d @ _strToHwId(%s) failed.
[Error]%s():%5d @ _strToOemId(%s) failed.
[Error]%s():%5d @ _strToProductLanguage(%s) failed.
[Error]%s():%5d @ _strToProductCountry(%s) failed.
[Error]%s():%5d @ unknown id(%s), skip it.
productInfo param is null.
--------------------------------------------------------------------
%16s : %s
vendorName
vendorUrl
productName
productLanguage
%16s : %08x
productId
productVer
specialId
hwId
oemId
failed to get product info from nvram.
[Error]%s():%5d @ no memory.
product-info
[Error]%s():%5d @ ucm_nvram_proInfoRead() failed.
[Error]%s():%5d @ sysmgr_proinfo_buildStruct() failed.
[Error]%s():%5d @ vendorName %s NOT Match.
[Error]%s():%5d @ vendorUrl %s NOT Match.
[Error]%s():%5d @ %s NOT Match.
[Error]%s():%5d @ _strToModelId(%s) failed.
[Error]%s():%5d @ productId %s NOT Match.
[Error]%s():%5d @ specialId %s NOT Match.
[Error]%s():%5d @ productVer %s NOT Match.
[Error]%s():%5d @ productLanguage %s NOT Match.
[Error]%s():%5d @ hwId %s NOT Match.
[Error]%s():%5d @ oemId %s NOT Match.
[Error]%s():%5d @ malloc fail
profile
[Error]%s():%5d @ read from flash failed
[Error]%s():%5d @ md5 verify error
[Error]%s():%5d @ uncompress error.
sysmgr_cfg_getprofileFromNvram
sysmgr_cfg_checkSupportList
sysmgr_cfg_getProductInfoFromNvram
sysmgr_proinfo_buildStruct
_makeSubStrByChar
0!0	
RSA1
* qWp
AQLwH'
Y*~e
XGJg
[y!~
bigNum len %d
%04X  
fwup_percent
updateFwupPercent
getFwupPercent
nvram_ubus_type
nvram_ubus
[NU_Error](%s) %05d: ctx is not inited!
percent
/var/run/ubus.sock
nvram_ubus: Failed to set cancel state.
nvram_ubus: Failed to set cancel type.
nvram_ubus: Failed to connect to ubus.
nvram_ubus: Failed to publish object: %s
nvram_ubus_getFwupPercent
echo "%s" > /dev/console
soft-version
soft_ver:
soft_ver:%d.%d.%d Build%s
%02X:%02X:%02X:%02X:%02X:%02X
%02X-%02X-%02X-%02X-%02X-%02X
[NM_Error](%s) %05d: usrconfig_info is null.
usrCfgVersion
bFirstState
bResetConfig
upgradeTimes
flagBitArray
hardversion
%d.%d.%d
releasetime
[NM_Error](%s) %05d: conver json failed.
[NM_Error](%s) %05d: pointer usrconfig_info/str is null.
[NM_Error](%s) %05d: parse json string failed.
[NM_Error](%s) %05d: can not find filed %s.
null
/tmp/reset_now
[NM_Error](%s) %05d: open file failed!
[NM_Error](%s) %05d: reset now! cannot write flash
[NM_Error](%s) %05d: file size error!
[NM_Error](%s) %05d: read file error!
config-info
default-mac
[NM_Error](%s) %05d: partition name not found.
[NM_Error](%s) %05d: partition is empty
[NM_Error](%s) %05d: malloc failed! 
[NM_Error](%s) %05d: failed to read partition from flash!
[NM_Error](%s) %05d: partition %s is empty
soft_ver:%d.%d.%d Build %08x Rel. %d
MAC:
[NM_Error](%s) %05d: open upfile failed!
[NM_Error](%s) %05d: mmap upfile error!
[NM_Error](%s) %05d: error msg:%s
[NM_Error](%s) %05d: upgradeFirmware failed!
[NM_Error](%s) %05d: upgradeFirmware success...
[NM_Error](%s) %05d: check firmware file failed!
chekc firmware file success!
[NM_Error](%s) %05d: failed to read software version from flash!
soft_ver:%[^
fw_id:%[^
cfg_ver:%[^
%d.%d.%d Build %08x Rel. %d
/tmp/softinfo
[NM_Error](%s) %05d: failed to open /tmp/softinfo!
[NM_Error](%s) %05d: Failed to read system Product Info.
%s v%d.%d
/proc/sys/kernel/hostname
[NM_Error](%s) %05d: failed to open /proc/sys/kernel/hostname!
/tmp/device-info
[NM_Error](%s) %05d: failed to open /tmp/device-info!
[NM_Error](%s) %05d: failed to get product info from nvram.
[NM_Error](%s) %05d: failed to get profile from nvram.
[NM_Error](%s) %05d: failed to parse profile data.
DEVINFO
[NM_Error](%s) %05d: failed to new device json.
RFBand
Dual
vendor_name
vendor_url
product_name
language
%u.%u.%u
product_ver
%08x
product_id
special_id
hw_id
oem_id
[NM_Error](%s) %05d: Read MAC from flash failed.
[NM_Error](%s) %05d: Read PIN from flash failed.
%c%c%c%c%c%c%c%c
/tmp/device.info
[NM_Error](%s) %05d: failed to open /tmp/device.info!
[NM_Error](%s) %05d: Open file failed.
[NM_Error](%s) %05d: Malloc failed.
[NM_Error](%s) %05d: Read file failed.
[NM_Error](%s) %05d: md5 verify error
/usr/bin/crytool -r /tmp/user_conf.info -p user-config-info -m 478DA50BF9E3D2CF8819839D4C061445 -d 478DA50BF9E3D2CF
/tmp/user_conf.info
[NM_Error](%s) %05d: need to reset
[NM_Error](%s) %05d: major version number of user-config is different
rm -f /tmp/user_config.info > /dev/null
Usage: nvrammanager [OPTIONS1] [OPTIONS2]
[OPTIONS1] 
  -r, --read=FILE                  Read partition to FILE
  -w, --write=FILE                 Write FILE to partition
  -e, --erase                      Erase partition
  -s, --show                       Show partition table
  -u, --upgrade=FILE               Upgrade firmware from FILE
  -c  --check=FILE                 Check whether the firmware is valid
  -f, --factory                    Force reset to factory config after upgrade
  -h, --help                       Display usage
  -i, --init						setup system and profile info to directory /tmp/
[OPTIONS2] 
  -p, --partition=PTN_NAME         Partition name. It's needed when OPTIONS1(-r or -w or -e) exists.
r:w:u:c:x:p:eshif
[NM_Error](%s) %05d: error option 
[NM_Error](%s) %05d: nm_init failed 
[NM_Error](%s) %05d: error option: no -p 
[NM_Error](%s) %05d: firmware upgrade fail--- !
reboot -f
[NM_Error](%s) %05d: firmware upgrade file check error 
read
write
erase
show
upgrade
check
help
partition
init
factory
main
nvrammanager_verify_user_config
nvrammanager_create_profile
nvrammanager_create_sysinfo
nvrammanager_checkUpgradeFile
nvrammanager_upgradeFirmware
nvrammanager_readPtnFromNvram
nvrammanager_readPtnFromNvramToBuffer
nvrammanager_writePtnToNvram
nvrammanager_convert_config_info
nvrammanager_write_config_info_to_file
fs-uboot
os-image
file-system
radio-backup
radio
bluetooth-XTAL
SBL1
MIBIB
QSEE
DDRPARAMS
boot-config_0
boot-config_1
uboot-env
user-config
device-config
profile
default-mac
default-config
soft-version
product-info
device-id
partition-table
support-list
config-info
group-info
url-sig
tm-sig
EBgIAAACkAABSU0ExAAQAAAEAAQD9lxDCQ5DFNSYJBriTmTmZlEMYVgGcZTO+AIwmdVjhaeJI6wWtN7DqCaHQlOqJ2xvKNrLB+wA1NxUh7VDViymotq/+9QDf7qEtJHmesjirvPN6Hfrf+FO4/hmjbVXgytHORxGta5KW4QHVIwyMSVPOvMC4A5lFIh+D1kJW5GXWtA==
?456789:;<=
 !"#$%&'()*+,-./0123
