/lib/ld-uClibc.so.0
_fini
__uClibc_main
__deregister_frame_info
__register_frame_info
_Jv_RegisterClasses
libeth_encap.so
_DYNAMIC_LINKING
__RLD_MAP
_GLOBAL_OFFSET_TABLE_
uci_alloc_context
uci_set_confdir
uci_free_context
memset
strncmp
strcmp
strncpy
atoi
uci_get_profile_eths
uci_get_eth_port_num
sscanf
memcpy
json_object_from_file
json_object_object_get
json_object_get_string
memcmp
json_object_put
syslog
uci_set_savedir
uci_lookup_ptr
strcpy
log_level
fopen
fgets
fclose
bridgeAllocTableBuf
bridgeTableAction
bridgeFreeTableBuf
snprintf
config_find_interface_by_index
if_nametoindex
json_object_get_int
json_object_get_object
socket
ioctl
memmove
apsd_get_maximal_ha_entries_from_fcache
apsd_update_fcache_flow_list
bridgeAddHDTableEntries
if_indextoname
bridgeDelHDTableEntriesByMAC
bridgeSetHATableEntries
popen
strstr
gettimeofday
pclose
sendto
inet_addr
fread
json_tokener_parse
json_object_array_length
json_object_array_get_idx
plc_get_net_info
plc_get_bridge_info
json_object_get_boolean
strlen
sprintf
apsd_get_vlan_name
exit
__bswapsi2
apsd_check_active_bridge
getpid
bridgeSetEventInfo
apsd_get_active_ports
bridgeDelFdbByName
config_index_to_name
config_find_interface_by_name
bridgeFlushHATable
recvfrom
__errno_location
bind
uloop_fd_add
blobmsg_parse
apsd_check_link_state
sleep
uloop_init
signal
ubus_connect
ubus_register_event_handler
ubus_strerror
uloop_run
ubus_free
uloop_fd_delete
uloop_done
fcntl
setsockopt
poll
wlan_platform_ops
l_stat_5g
__floatsidf
__muldf3
__subdf3
__fixdfsi
system
apsd_activate_link
ntohl
ntohs
apsd_set_ha_entry
puts
malloc
__udivdi3
apsd_get_path_ports
plcNicInit
plcScanDev
plcSetChanUtilEnable
plcGetNtwInfo
plcGetBridgeInfo
plcGetChanUtil
apsd_get_cap_mac
apsd_is_plc_bcast_capable
bridgeSetTcpSP
bridgeSetBridgeMode
bridgeSetFollowRE
plc_is_root
eth_traffic_is_active
update_eth_traffic_ports
bridgeSetIFCompat
bridgeSetIFGroup
bridgeSetIFBroadcast
bridgeSetIFClass
bridgeSetIFPath
bridgeSetNeedha
apsd_check_eth_has_neigh
bridgeSetCouple
apsd_get_work_mode
wlan_delete_wds_entry
apsd_flush_all_fcache_flow
apsd_flush_fc_flow_by_mac
bridgeFlushHDTable
uloop_timeout_cancel
plc_free
apsd_update_hd_table
apsd_get_mod_contex
uloop_timeout_set
plc_is_init
plc_get_ifname
plc_init
wlan_activate_links_for_ap
apsd_get_client_list
wlan_activate_links
apsd_get_bridge_mac
wlan_get_uplink_rate
wlan_get_channel_utilization
apsd_sort_array
plc_get_path_info
apsd_is_plc_capable
plc_activate_link
apsd_get_ap_client_list
loop_avoidance_set_bcast_port
apsd_check_cpu_overload
apsd_get_client_list_ha_entries
apsd_get_if_stat
apsd_get_if_stat_from_fcache
apsd_check_ha_entry_valid
wlan_is_5g_low_noise
apsd_check_mac_in_ap_client_list
apsd_add_hd_entry
apsd_check_relay_stream
apsd_check_mac_in_plc_bridge_list
apsd_cal_hash_and_set_ha
apsd_flush_fcache_flow_entry
apsd_check_cap_has_plc
apsd_get_gw_mac
openlog
optarg
stderr
fprintf
getopt
config_load
event_init
l_ev
event_loop
event_free
config_free
libubus.so
libubox.so
libblobmsg_json.so
libhyfi-bridge.so
libplcapi.so
libjson-c.so.2
libuci.so
libc.so.0
_ftext
_fdata
_edata
__bss_start
_fbss
_end
wlan_platform_mtk
apsd_delete_hd_entry
config_dump
__gnu_local_gp
_gp_disp
HwNatGetAllEntries
wlan_activate_links_for_ap_mtk
config_get_util_compensation
apsd_check_norelay_port
apsd_check_direct_connect_cap
hwnat_get_vlan_port
apsd_get_maximal_ha_entries_from_fcache_mtk
apsd_is_direct_connect_ap
event_run_cb
wlan_is_5g_low_noise_mtk
wlan_get_uplink_rate_mtk
hwnat_set_if_stat
__start
wlan_get_util_adjustment_mtk
apsd_netlink_msg
HwNatInvalidEntry
HwNatTblClear
wlan_get_util_adjustment
apsd_get_parent_mac
apsd_get_if_stat_from_fcache_mtk
apsd_get_mesh_dev_num
apsd_flush_all_fcache_flow_mtk
apsd_cal_hash_and_set_ha_mtk
Ip2Str
wlan_get_links
event_wifi_init
apsd_update_stream_entries_stats
hyfi_cal_ha_hash
config_get_timer_interval
wlan_delete_wds_entry_mtk
path_selection_init
loop_avoidance_init
wlan_get_channel_utilization_mtk
apsd_flush_fcache_flow_entry_mtk
__data_start
wlan_activate_links_mtk
apsd_get_dhcp_ifname
|,9'
<`71&
@s&#
<4D"
(@B$!
<! @
<! @
'!8 
<p@B
<PD`
PDd&lD
&PDd&
<p@C
lDB$
<! @
<! @
<!  
'!0@
<! @
<! @
'!(@
'!(`
$!0@
'#0f
c$&(
$!(@
'!(@
<! @
<! @
4!8@
'! @
<! @
<! @
<! @
&! @
<!  
<!  
&! @
'!0`
<! `
<! `
<! `
<! `
<! `
<! `
<! `
<!  
&! @
'!(`
'!(`
$!(`
$!(`
D,h@
<@|B$
<! @
<! @
<! @
<! @
<! @
<! @
C(D@
&! `
&! @
'!(@
'!(@
DH$!
DD$!(
c0T%
#$&	
#%&_*
#$&	
#1&A
%&&	
%&&	
$!  
$! D
D&! 
s&!0
'! @
$!(`
<! @
$!(%
h&c&D
@(s&
$!(`
4&~/
(B$A
<,R&
$!0@
$!0@
$!0@
$!0@
$!0@
$!0@
$!0@
$0*E$!0@
$!0@
$t*e$!0@
$!0@
$!0@
c$! `
*s&[2
h,R&`
2&!  
'!(@
'!( 
$!0@
+B$<
&871&A
&!0 
D$/6
'!0f
2 Kr
' Ku
k5!X}
k5!X}
k5!X}
k5!X}
0E$X
k5!X}
B$* W
k5!X}
FB$! 
B4!X}
B4!X}
4!H"
6F$	
k5!X}
k5!8
B$+@
c4!X}
E0+ 
< Kb
'! b
< KB
t1J%P6)%
5!X}
k5!X}
k5!X}
k5!X}
k5!X}
k5! 
h&c$A
4!8S
$!(@
4!X}
F0!(
k5!X}
< Kb
< Kb
< KQ
4B$A
$!(%
+9'a
rootap_mac
%s:%d: Error: pUciTupleStr or pValue is null
%s:%d: Error: fail to init uci context:%s
/etc/config
/var/state
%s:%d: Error: fail to get ptr %s 
%s:%d: Error: element type is not option:%d
%s:%d: Error: option type is not string:%d
%s:%d: Dump: Success to get  option value %s = %s 
/proc/stat
%s %u %u %u %u %u %u %u
%s:%d: Error: alloac buffer error
%s:%d: Error: realloac buffer error
%s:%d: Error: get table failed again
%s:%d: Info: cpu =================> %u
/tmp/work_mode
%s:%d: Error: parse work_mode
/tmp/smartip_recv_dhcp_if
recv_dhcp_if
%s:%d: Error: bridgeAllocTableBuf
%s:%d: Error: netlink_msg
%s:%d: Error: No such interface %u
%s:%d: Debug: parse link state %s
status
/tmp/plc_runtime_info
cap_has_plc
/tmp/sync-server/mesh_dev_list
%s:%d: Error: socket
%s:%d: Error: ioctl
%s:%d: Error: get fdb table
%s:%d: Error: get hd table
%s:%d: Error: update hd & hc port
%s:%d: Error: get ha table
%s:%d: Error: update ha entires failed
%s:%d: Error: update flow cache list failed
%s:%d: Error: get interface name
%s:%d: Error: popen cat /proc/net/dev
%s%s
%*s%s%s%*s%*s%*s%*s%*s%*s%s%s
%llu
%s:%d: Error: create socket failed
%s:%d: Dump: send dummy packet, ifname: %s, if_mac: %02X-%02X len: %d
/tmp/runtime_ip_info_lan
lan_gw
br-lan
repacd.repacd.TrafficPlcRoot
repacd.repacd.eth_HasNeigh
%s:%d: Error: can't find ifname[%s] in eth_ifname
repacd.repacd.TrafficEthActive
repacd.repacd.TrafficEthInterface
cap_mac
/tmp/client_mgmt/ap_client_list
parent_mac
%s.%u
%s%u
/tmp/eth_runtime_info
/tmp/wifi_runtime_info.2g
/tmp/wifi_runtime_info.5g
/tmp/wifi_runtime_info.5g2
apsd_calculate_cpu_occupy
apsd_get_work_mode
apsd_get_active_ports
apsd_check_active_bridge
apsd_check_link_state
apsd_get_bridge_mac
apsd_update_hd_table
apsd_get_link_stats_by_port
apsd_get_hyfi_bridge_table
apsd_get_client_list
apsd_get_fdb_client_list
apsd_get_hd_client_list
apsd_get_client_list_ha_entries
apsd_get_maximal_ha_entries
apsd_update_stream_entries_stats
apsd_get_if_stat
apsd_activate_link
apsd_get_gw_mac_from_arp
uci_get_value
apsd_check_eth_has_neigh
%s:%d: Fatal: parse config
bridges
%s:%d: Info: too many bridges
loop_avoidance
path_selection
param
period
high_threshold
delta_threshold
reserved_ratio
idle_threshold
activate_pkts
wlan_enable
plc_enable
adjusted_streams
adjusted_ratio
estimate_ack_enable
eth_vlan_id
iptv_vlan_id
iptv_vlan_backhaul_id
plc_vlan_backhaul_id
plc_vlan_guest_id
plc_vlan_iptv_id
cpu_threshold
abn_threshold
plc_rate_ratio
cpu_limit
backhual_prefered
rate_threshold
util_compensation
wifi_rate_check
rate_abnormal_threshold
interfaces
%s:%d: Info: too many interfaces
%s%d
ethernet
2.4g
5g_2
%s:%d: Fatal: invalid interface type
nonrelay
compat_group
priority
class
needha
ssdp_allow
ctl_iface
backhual
%s:%d: Info: too many couple backhuals
%s:%d: Info: backhaul lan: %s, guest: %s
%s:%d: Info: backhual lan:%s, guest:%s
couple
key_exchange
%s:%d: Debug: Bridges:
%s:%d: Debug: %s ==> flags: %d, loop_avoidance: %d, path_selection: %d
%s:%d: Debug: Interfaces:
%s:%d: Debug: %s ==> type: %d, compat_group: %d, relay: %d
%s:%d: Debug: Param:
%s:%d: Debug: 	period: %d, low_threhold: %d
%s:%d: Error: if_indextoname
config_load
config_dump
config_find_interface_by_index
%s:%d: Error: bridgeSetEventInfo
%s:%d: Error: config_index_to_name fail
%s:%d: Error: Event len is not available
%s:%d: Debug: wifi flush table
%s:%d: Error: bridgeFlushHATable fail
%s:%d: Fatal(%s): socket
%s:%d: Fatal(%s): bind
%s:%d: Fatal(%s): uloop_fd_add
apsd.
configure
%s:%d: Error: wrong type
link_state
%s:%d: Debug: link_state parse 
%s:%d: Debug: link_state parse failed
%s:%d: Debug: wifi 2g state %d
%s:%d: Debug: wifi 5g state %d
%s:%d: Debug: wifi 5g2 state %d
%s:%d: Debug: eth state %d
%s:%d: Debug: eth link state change, need_reconfig
%s:%d: Debug: plc state %d
debug
%s:%d: Info: unknown subtype
%s:%d: Fatal: ubus_connect
apsd.*
%s:%d: Fatal: ubus_register_event_handler: %s
%s:%d: Error: close
dbg_level
mode
LINK_WIFI_2G
LINK_WIFI_5G
LINK_WIFI_5G_2
LINK_PLC
LINK_ETH
event_wifi_init
nl_wifi_newlink_handle
wifi_flush_ha_table
__isDisassociateEvent
event_ubus_init
event_ubus_receive_cb
event_bridge_set_event
event_ubus_receive_link_state
event_bridge_init
event_free
%s:%d: Error: netlink socket create failed
%s:%d: Error: fcntl():
%s:%d: Error: Setsockopt SO_SNDBUF: 
%s:%d: Error: Setsockopt SO_RCVBUF: 
%s:%d: Error: netlink socket send failed
%s:%d: Error: netlink socket receive failed
%s:%d: Error: netlink socket status failed
apsd_netlink_msg
%s:%d: Dump: channel util_tmp: %d
%s:%d: Dump: channel util: %d
%s:%d: Info: reset %s stat counter
iwpriv %s set ResetCounter=1
%s:%d: Dump: ifname: %s, falsecca: %d, tx_total: %d, per: %d
iwpriv %s set APProxyDelete=%02X:%02X:%02X:%02X:%02X:%02X &
%s:%d: Info: Do wds delete: %s
apclii0
%s:%d: Dump: ifname: %s, txrate: %d, rxrate: %d, rssi: %d
wlan_get_uplink_rate_mtk
wlan_get_links_mtk
wlan_get_channel_utilization_mtk
wlan_delete_wds_entry_mtk
wlan_get_util_adjustment_mtk
"@%s:%d: Error: %s hash=%d
/dev/hwnat0
Open %s pseudo device failed
HW_NAT_API: ioctl error
%s:%d: Error: %s  entry_num=%d
%s:%d: Error: Open %s pseudo device failed
%s:%d: Error: HW_NAT_API: ioctl error
%s:%d: Error: start apsd_flush_fcache_flow_entry_mtk:flow_idx(%u)
%s:%d: Error: apsd_flush_fcache_flow_entry_mtk:flow_idx(%u)
%d.%d.%d.%d
%s:%d: Error:  Allocate memory for hwnat_args and hwnat_tuple failed.
hwnat_get_vlan_port
hyfi_cal_ha_hash
HwNatInvalidEntry
HwNatGetAllEntries
apsd_flush_fcache_flow_entry_mtk
apsd_get_maximal_ha_entries_from_fcache_mtk
get_ha_entry_from_hwnat
%*s%s%*s%*s%*s%*s%*s%*s%*s%s%*s
%s:%d: Error: get phy stat
%s:%d: Error: phy info invalid
%[^.]
success
%s:%d: Error: malloc
%s:%d: Info: no plc interface
%s:%d: Info: plc if: %s
%s:%d: Error: init nic failed
%s:%d: Debug: scan plc device %s
%s:%d: Error: scan device
%s:%d: Error: enable channel utilization
%s:%d: Debug: plc init success, mac:%02X-%02X
%s:%d: Error: get network info
%s:%d: Error: get plc %d bridge info
%s:%d: Error: channel info not valid
%s:%d: Error: get channel info
plc_init
plc_scan_dev
plc_get_net_info
plc_get_bridge_info
plc_get_chan_util
plc_update_chan_info
plc_update_phy_info
plc_get_phy_util
plc_get_phy_stat
%s:%d: Debug: Pick %s as broadcast nonrelay port!
Invalid
%s:%d: Debug: configure hyfi bridge with mode %s
%s:%d: Error: bridgeSetTcpSP
%s:%d: Error: bridgeSetBridgeMode
%s:%d: Error: bridgeSetFollowRE
%s:%d: Debug: name:%s, compat_group:%d, relay:%d
%s:%d: Debug: bcast_port_0 is %s
%s:%d: Debug: bcast_port_1 is %s
%s:%d: Error: bridgeSetIFCompat
%s:%d: Error: bridgeSetIFGroup
%s:%d: Error: bridgeSetIFBroadcast
%s:%d: Error: bridgeSetIFClass
%s:%d: Error: bridgeSetIFPath
%s:%d: Error: bridgeSetNeedha
%s:%d: Error: bridgeFlushHATable
%s:%d: Debug: update fdb from if: %s
%s:%d: Info: reconfig bridge
%s:%d: Debug: flush fc flow by mac: %02X:%02X:%02X:%02X:%02X:%02X
Loop avoidance
loop_avoidance_set_bcast_port
loop_avoidance_pick_bcast_nonrelay_port
loop_avoidance_init
loop_avoidance_event_cb
loop_avoidance_configure_bridge_with_mode
loop_avoidance_flush_ha_table
loop_avoidance_delete_wds_entry
%s:%d: Error: bridgeFlushHDTable
%s:%d: Error: Unknown Table Type
%s:%d: Debug: update hd table OK
%s:%d: Error: find mod
ifconfig %s mtu 1504
br-wan
%s:%d: Error: get br mac
%s:%d: Debug: path: %s maybe disconnected
%s:%d: Info: path: %s tx:%d rx:%d abnormal, not choose
%s:%d: Dump: samples: %s
%s:%d: Debug: path %s: chan_util: %d, rate: %d;  phy_util: %d, rate: 200
%s:%d: Debug: activate plc path: %s
%s:%d: Debug: plc_num: %d, cap_has_plc: %d, gw_mac: %02X-%02X-%02X-%02X-%02X-%02X
%s:%d: Debug: try to pick plc as broadcast port again
%s:%d: Debug: path %d util: %d, path %d util: %d
%s:%d: Debug: cpu overload! apsd will not select 2.4G!
%s:%d: Debug: path: %s, util: %d, util_ajustment: %d, ajusted_util: %d, quota: %d, rx_tx_factor: %d, rx_pkt_size: %d, rx_selected: %d, tx_rate: %d, rx_rate: %d, processed_rate: %d
%s:%d: Error: get %s stat failed
%s:%d: Debug: path: %s, diff_rx_bytes: %d, diff_tx_bytes: %d
%s:%d: Debug: backhual: %d, prefered: %d, is_prefered: %d
%s:%d: Debug: client: %02X:%02X:%02X:%02X:%02X:%02X
%d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d
%s:%d: Dump: hd samples: %s
%s:%d: Debug: hd_path %s, best path %s
%s:%d: Dump: data rate of sample[%d] is: %d
%s:%d: Info: add hd client: %02X:%02X:%02X:%02X:%02X:%02X to %s %s
%s:%d: Debug: ha[%d]: hash: %d, dst_port:%d, src_port:%d, port: %d, num_bytes: %d, num_pkts: %d, estimated: %d,is_fcache %d,flow_idx %d
%s:%d: Debug: adjust_num: %d
%s:%d: Debug: relay stream, won't adjust to plc path
%s:%d: Debug: not enough quota, quota: %d, req_quota: %d
%s:%d: Info: set ha entry %s, src_port: %d, dst_port: %d, dst_addr: %02X:%02X:%02X:%02X:%02X:%02X, old path: %d, new path: %s
%s:%d: Info: flush flow idx(%u) %s, src_port:%d, dst_port:%d, protocol: %d, dst_addr: %02X:%02X:%02X:%02X:%02X:%02X,ha_rate: %d, req_quota: %d, quota remain: %d
%s:%d: Info: set ha entry %s, src_port: %d, dst_port: %d, client mac: %02X:%02X:%02X:%02X:%02X:%02X, old path: %d, new path: %s, ha_rate: %d, req_quota: %d, quota remain: %d
Path Selection
%s:%d: Debug: path_port: %s
path_selection_init
path_selection_show_path_ports
path_selection_update_uplink_paths
path_selection_get_wlan_path_info
path_selection_get_wlan_path_rate
path_selection_get_plc_path_info
path_selection_check_paths_full_load
path_selection_init_path_quota
path_selection_update_uplink_path_stats
path_selection_find_hd_port
path_selection_is_high_data_rate
path_selection_update_uplink_hd_table
path_selection_update_uplink_ha_table
path_selection_get_path_by_port
path_selection_update_ha_entry
path_selection_event_cb
path_selection_update_table
path_selection_flush_table
/etc/apsd.json
%s [-c config] [-h]
%s:%d: Error: apsd disabled
%s:%d: Info: %s initialized
main
