/lib/ld-uClibc.so.0
p`:A
_fini
__uClibc_main
__deregister_frame_info
__register_frame_info
_Jv_RegisterClasses
libblobmsg_json.so
_DYNAMIC_LINKING
__RLD_MAP
_GLOBAL_OFFSET_TABLE_
libubus.so
libubox.so
libpthread.so.0
libuci.so
liblua.so.5.1.5
libm.so.0
libosmsg.so
libjson-c.so.2
start_ubus_server
memset
vsprintf
system
uci_lookup_next
uci_alloc_context
uci_set_confdir
uci_load
uci_free_context
uci_lookup_ptr
strncmp
uci_unload
snprintf
popen
fgets
pclose
strlen
strncpy
stat
blob_buf_init
blobmsg_add_json_from_file
blobmsg_format_json_with_cb
json_tokener_parse
json_object_get_object
strstr
json_object_to_json_string
json_object_put
uci_set_savedir
uci_perror
strcmp
luaL_newstate
luaL_openlibs
lua_getfield
lua_pushstring
lua_pcall
lua_tolstring
malloc
strcpy
lua_settop
lua_close
sysmode
atol
sendNotityResultToAutomation
json_object_new_array
json_object_new_object
json_object_new_string
json_object_object_add
json_object_array_add
msg_connCliAndSend
__bswapsi2
blobmsg_parse
blobmsg_add_field
ubus_send_reply
uloop_init
ubus_connect
uloop_fd_add
ubus_add_object
stderr
ubus_strerror
fprintf
uloop_run
ubus_free
uloop_done
pthread_exit
check_auto_notify
check_auto_alerts
check_coordinator_reset
libdl.so.0
libc.so.0
_ftext
_fdata
_edata
__bss_start
_fbss
_end
`,9'&
<l9R&p9s&#
<! @
`1e&
$`1f&	
<! @
<! @
1%&	
$X4e&L
$X4e&#
$X4e&)
<!  
4%&E
4%&N
\3e&
4%&X
\3g&
4%&	
<!8@
4%&	
4%&g
4%&w
4%&	
<!8@
4%&	
4%&L
$!8@
<! @
0F&!
4%&T
4%&P
$p5%&	
<!0@
_/F&
1B4!
$p5%&	
$p5%&	
$!8@
<!  
<$&	
echo -n "%s" > /dev/console 
/etc/profile.d
profile
%s.%s
support
getfirm %s
DEV_ID
/var/run/lookup_op
0x4042
DEBUG[%s %d] RUN mode: %s
/etc/config
/var/state
repacd
ERROR[%s %d] uci: get repacd section failed.
DeviceType
ERROR[%s %d] uci: get DeviceType option failed.
DEBUG[%s %d] DeviceType of repacd is %s.
DEBUG[%s %d] sysmode is %d.
DEBUG[%s %d] calling ubus client.
DEBUG[%s %d] Do nothing, iot events only comes from AP.
DEBUG[%s %d] content:%s
DEBUG[%s %d] luaL_newstate error.
require
luci.controller.admin.mobile_app.msg_server
DEBUG[%s %d] Lua require error: %s
automation_alert_handle
DEBUG[%s %d] calling.
DEBUG[%s %d] called, ret = %d
DEBUG[%s %d] response: %s
automation_notify_handle
true
check_coordinator_reset
get_sysmode_by_uci
check_auto_alerts
_auto_alert_handle
check_auto_notify
_auto_notify_handle
notification
ERROR[%s %d] Failed to create json array.
action_id
DEBUG[%s %d] result: %d, Data: %s
ERROR[%s %d] Faild to send message to Automation.
sendNotityResultToAutomation
ERROR[%s %d] Parse blog msg failed.
ERROR[%s %d] auto_notify_policy error.
ERROR[%s %d] auto_notify content/seq/action_id is invalied.
DEBUG[%s %d] content:%s, seq:%s, action_id:%s
DEBUG[%s %d] auto_notify_handle done.
ERROR[%s %d] auto_alert_policy error.
ERROR[%s %d] auto_alert content/seq is invalied.
DEBUG[%s %d] auto_alert_handle done.
ERROR[%s %d] coordinator_policy error.
ERROR[%s %d] device_id or nickname or custom_nickname or action is invalied.
DEBUG[%s %d] device_id:%s, nickname:%s, custom_nickname:%s, action:%s
reset
DEBUG[%s %d] coordinator_handle done.
ERROR[%s %d] unsupported action.
/var/run/ubus.sock
ERROR[%s %d] Failed to connect to ubus.
msg_server: Failed to publish object: %s
msg_server
device_id
nickname
custom_nickname
action
content
msg_server_ubus_type
coordinator
auto_alert
auto_notify
start_ubus_server
auto_notify_handle
auto_alert_handle
coordinator_handle
