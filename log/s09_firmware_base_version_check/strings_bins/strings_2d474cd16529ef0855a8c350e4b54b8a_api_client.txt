/lib/ld-uClibc.so.0
p0.C
_fini
__uClibc_main
__deregister_frame_info
__register_frame_info
_Jv_RegisterClasses
libdl.so.0
_DYNAMIC_LINKING
__RLD_MAP
_GLOBAL_OFFSET_TABLE_
libubox.so
libubus.so
libblobmsg_json.so
libuci.so
libm.so.0
libjson-c.so.2
libeth_encap.so
strlen
snprintf
stderr
fputs
strncasecmp
memset
malloc
atoi
calloc
memcpy
free
wlanif_resoveApBasicInfo
Dbgf
dbgModuleFind
nr_platform_init
wlanif_dumpAssociatedSTAsOneIface
wlanif_getSTAStats
nr_set_band_steering
nr_set_band_steering_events
wlanif_requestRSSIMeasurment
wlanif_clearAssocInfo
wlanif_kickoutSTA
wlanif_getBSSPHYCapInfo
wlanif_updateBacklistWithMac
wlanif_sendRRMBcnrptRequest
wlanif_sendBTMRequest
wlanif_isVAPReady
nr_set_rrm
nr_set_wnm
optarg
optind
getopt
putchar
nr_start_scan
wlanif_getScanBSSes
strcmp
strdup
__ctype_b
vsprintf
fopen
getenv
strchr
fclose
openlog
fflush
fputc
dbgS
atol
strcasecmp
gettimeofday
syslog
nr_platform_ops
socket
__errno_location
strerror
bind
getpid
bufrdCreate
wlanifMapToRSSIMeasurement
mdCreateEvent
sendto
bufrdDestroy
wlanifBSteerEventsEnable
netdb_apHandleGet
wlanifGetBSSInfo
wlanifMapToBandwidth
wlanifMapToXingDirection
wlanifGetBSSInfoFromBSSID
netdb_resolveRemoteBSSFromBSSID
bufrdConsume
wlanifResolveBandFromSysIndex
__nrDbgAssertExit
wlanifMapFreqToBand
wlanif_resolveBandFromChannelNumber
wlanifUpdataLinkState
memcmp
strncpy
strlcpy
ioctl
perror
wlanifResolveRegclass
sleep
system
evloopTimeoutRegister
nrGetTimestamp
wlanif_startScan
if_nametoindex
profileGetOpts
splitByToken
wlanif_getBlockList
evloopTimeoutUnregister
wlanif_setEnableBandSteering
wlanif_getBandName
wlanif_setDisableBandSteering
profileGetOptsInt
evloopTimeoutCreate
mdListenTableRegister
wlanif_isSTAAssociated
wlanif_isSTAMoved
wlanif_setProbeRespWithhold
strncmp
wlanifBSteerControlCreate
wlanifBSteerEventsCreate
wlanifLinkEventsCreate
mdEventTableRegister
mdListenInitCBRegister
wlanifSendSetParams
wlanifSendEnablebandSteering
wlanifBSteerEventsDestroy
wlanifLinkEventsDestroy
wlanifBSteerControlDestroy
nr_platform_exit
nr_get_ap_basic_info
nr_get_sta_list
nr_send_rrm_beacon_req
nr_send_btm_req
nr_get_sta_stats
nr_get_scan_result
nr_get_phy_cap_info
nr_clear_assoc_info
nr_kickout_sta
nr_update_blacklist
nr_set_probe_rsp_withhold
nr_send_request_rssi
nr_get_vap_status
nr_get_channel_list
nr_get_fdb_dst
nr_get_chan_util
nr_get_uplink_rate
nr_get_block_list
nr_set_maccmd_clearlist
profileElementDefault
nr_set_bs_param
nr_wlanif_bSteerEvents_create
nr_wlanif_bSteerEvents_enable
nr_wlanif_bSteerEvents_unregister
nr_wlanif_linkEvents_create
nr_wlanif_linkEvents_unregister
read
memmove
bufrdS
evloopReadyUnregister
evloopReadReadyCreate
evloopReadyRegister
clock_gettime
realloc
poll
cmdf
evloopS
__divdi3
__moddi3
cmdMainMenuAdd
signal
evloopContext
cmdWordEq
cmdWordNext
cmdWordCopy
__assert
nrFatalShutdown
profileS
configstring
atof
__truncdfsf2
strcpy
vfprintf
strcat
fileno
fcntl
sscanf
cmdS
stdout
setlinebuf
cmdReferenceContext
dbgOutForkCancel
dbgStatusPrint
dbgFileRedirectCancel
dbgFileRedirect
dbgLevelsPrint
dbgModuleLevelFromBuf
dup2
dbgOutFork
__fgetc_unlocked
fgetc
__ctype_toupper
__clz_tab
__unpack_d
__make_fp
__pack_f
libpthread.so.0
libc.so.0
_ftext
_fdata
_edata
__bss_start
_fbss
_end
L79'
s&g	
$!0`
F&!  
$!8@
'!  
$!  
<!  
F$! 
<  B$
<! @
\B$B
'!( 
$!8`
$!8`
$!0 
<! @
$!(@
c$y!
4+ D
R2!  
<!(`
'! `
&!( 
'!(@
'!(@
'! @
G&!(
'!  
$!(@
$!  
&! @
B$* S
'!0@
4!8@
'!(@
$!  
&! @
$! `
$! `
$!  
$!  
<!0 
c$+0D
'!(`
'!(@
'!(`
G&s-
'!( 
B$*(
1b&0
1&e/
D&!(`
&!( 
&!( 
1B$$
21&!
1B$p
p&! 
d&I3
G0! 
'!0@
R&! 
1R&C
G0! 
13&,
<! `
<! `
<! `
1D$!@@
1D$!@@
1D$!@@
21&!
1B&0
1B&H
2s&!
1c$0
B0+XF
D$!(
1b$B
1b&P
1s&0
c$$(
R&+0S
3P&8
0*(e
0*(e
eB$* 
4$0f
	$!8
1&}G
<! @
<! @
$!0 
$!8`
<! @
<! @
$!0 
<! @
$!0 
<! @
<! @
<! @
<! @
<! @
<! @
$!0 
<! @
$!0 
<! @
$!0 
&!  
<!  
<! @
<!8 
<! `
4!( 
<@BB$
ZB$+
Q$!N"*
<!8 
<!8 
<@BB$
1&#(E
<!8 
'!(@
'!(@
3B$0
3B$!
&\41&
3s&0
B$!(
30&!(
3B$C
31&0
B$EX
c$*0e
&* q
$!0C
$!HC
$! `
<!  
<!  
<!  
<!  
<!0@
$!8 
R&yW
<! `
<! `
<0[B$
<! @
<! @
<! @
<! @
<!  
<!  
<!  
$!0@
'!  
$!0@
B$*8E
B$p`
<! @
$!  
$$0F
'!(`
c$7b
c$#c
c$Rc
c$~c
<+0F
$+8g
$+0e
$!Xh
$+8g
(1%8
$#(E
'usage: api_client athX cmd args
cmd: [get_info get_sta_list get_sta_stats bsteer_enable bsteer_enable_events
      bsteer_getrssi send_rrm send_btm]
scan -t 0/1 [-a] -c [channelNum] [channelList]
For example:
ap_scan -t 1 -c 2 36 48
scanresults [-a]
get ap info failed
api_client
init platform failed
get_info
(%s) vap: %s, ssid:%s, macAddr: %s, channum: %d
(%s) support %d channels: 
(%s) %d
get_sta_list
(%s) malloc failed
(%s) get sta list failed
(%s) sta num: %d
sta[%d]: mac: %s, isBTMSupported: %d, isRRMSupported: %d,rssi: %d, txrate: %d, rxrate: %d, idle: %d
		phyCapInfo: valid: %d, maxChWidth: %d, numStreams: %d, phyMode: %d, maxMCS: %d, maxTxPower: %d
get_sta_stats
usage: api_client athX get_sta_stats mac(xx:xx:xx:xx:xx:xx)
invalid sta mac
get sta stats failed
rssi: %d, txrate: %d, rxrate: %d, idle: %d
bsteer_enable
Usage: api_client athX bsteer_enable <enable_flag>
set band steering failed
bsteer_enable_events
Usage: api_client athX bsteer_enable_events <enable_flag>
set vap events failed
bsteer_getrssi
Usage: api_client athX bsteer_getrssi sta(xx:xx:xx:xx:xx:xx) sample_num
request rssi failed
clear_assoc_info
Usage: api_client athX clear_assoc_info sta(xx:xx:xx:xx:xx:xx)
clear sta[%s] assoc info failed
kick_mac
Usage: api_client athX kick_mac sta(xx:xx:xx:xx:xx:xx)
kick sta[%s] failed
get_cap_info
Usage: api_client athX get_cap_info sta(xx:xx:xx:xx:xx:xx)
get addr(%s) cap info failed
cap info: valid: %d, maxChWidth: %d, numStreams: %d, phyMode: %d, maxMCS: %d, maxTxPower: %d
update_blacklist
Usage: api_client athX update_blacklist sta(xx:xx:xx:xx:xx:xx) addMac(0/1)
update blacklist failed
send_rrm
Usage: api_client athX send_rrm sta(xx:xx:xx:xx:xx:xx) channel
send 11k beacon req single
send 11k beacon req failed
send multi 11k beacon req failed
send_btm
Usage: api_client athX send_btm sta(xx:xx:xx:xx:xx:xx) token
[<candidate_bssid> <candidate channel> <PHY type>...]
Invalid number of candidates: %d, maximum is %d
Candidate entry %d: Invalid BSSID
send btm req failed
is_ready
vap is ready
vap is not ready
Usage: api_client athX rrm <enable_flag>
set rrm failed
Usage: api_client athX wnm <enable_flag>
set wnm failed
a:c:
active: %d, ssid: %s, channels: 
scanresults
%s: Failed to allocate buffer for iface %s
ssid: %s
%s: Failed to get scan result for iface %s
scan result num: %d
%s: essid: %s, bssid: %s, channel: %d, rssi:%d
get_apinfo
get_sta_list
scanresults
%03u.%02u 
unknown
append
rewrite
Debug output redirection to %s FAILED
Debug output redirected to %s (%s)
DBG_LEVELS
DBG_APPEND_FILE_PATH
DBG_OUT_FILE_PATH
dbgInit done OK
Invaild debug level %d
Invaild Module Name %s
set module %s debug level:%s.
Debug output redirecting...
Debug output redirected
Directed to stderr
Malloc failed
dbgInit1 done OK
dbg debugging levels per module:
Looking at MP=%p %s
%-12s %d %s
dbg -- no modules !?
Default debug level for new modules is %d %s
Standard level choices are:
    %s=%d
(Names are case INsensitive)
none
NOTICE
debug
dump
%s: Netlink socket creation failed(%s)
%s: Failed to bind netlink socket
wlanifBSteerEvents-rd
%s: %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX RSSI measurement %u on APId %-3d ChanId %-3d ESSId %-3d
%s: Failed to allocate state structure
probe
%s: state->netlinkSocket = %d
%s: Failed to send netlink trigger
%s:  state->eventsEnabled = %d, return OK
%s: Socket close failed
SMPS
%s enter: %d
%s: Read error! # bytes=%u
%s: Failed to recover from fatal error
%s: Invalid message len: %u bytes
%s event type: %d
%s: Received msg from unknown BSS: type %u index %u
%s %d: event->type = %d
%s %d: CALL wlanifBSteerEventsHandleProbeReqInd
%s: Probe request from %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX: RSSI %2u APId %-3d ChanId %-3d ESSId %-3d
%s %d: probeEvent.rssi = %d
%s: Node %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX associated on APId %-3d ChanId %-3d ESSId %-3d, Capabilities: %s %s %s %s, Max bandwidth: %u, Num of spatial streams: %u, PHY mode: %u, Max MCS: %u. Max TX power: %u, band_cap:%d
%s: Tx'ed Auth reject to %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX: RSSI %2u APId %-3d ChanId %-3d ESSId %-3d
%s: %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX RSSI measurement %u on APId %-3d ChanId %-3d ESSId %-3d; Inactivity threshold xing: %u; Low threshold xing: %u; Rate threshold xing: %u; AP steering threshold xing: %u
%s: Received BTM Response from %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX: Dialog Token: %u, Status: %u, Reject: %u, BSS termination delay: %u, Target BSSID %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX
%s: Unhandled WNM msg from %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX: type %u, Dialog Token %u
%s %d:report->rrm_type = %d
%s %d: Warning: beacon report event reports a BSS APId %-3d ChanId %-3d ESSId %-3d not on the serving ESS (%d)
%s %d: Warning: beacon report event channel number %d does not match BSS APId %-3d ChanId %-3d ESSId %-3d identified by BSSID %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX
%s %d: Beacon report from %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX: APId %-3d ChanId %-3d ESSId %-3d rcpi: %dbssid:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX
%s %d: Warning: beacon report event reports a BSS %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX on channel %d does not match local BSS APId %-3d ChanId %-3d ESSId %-3d
%s %d: Beacon report from %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX: APId %-3d ChanId %-3d ESSId %-3dbssid %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX rcpi: %d
%s %d: Beacon report BSSID %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX doesn't match any BSS
%s %d mdCreateEvent creat wlanif_event_beacon_report
%s: Unhandled RRM msg: type %u
%s: band 5g sta num status: max[%d], current[%d]
mtk_wlanifBSteerEventsCreate
wlanifBSteerEventsRegister
wlanifBSteerEventsBufRdCB
wlanifBSteerEventsMsgRx
wlanifBSteerEventsHandleRRMReportInd
wlanifBsteerEventHandle5GStaNumReport
wlanifBSteerEventsHandleProbeReqInd
wlanifBSteerEventsHandleNodeAssociatedInd
wlanifBSteerEventsHandleTxAuthFailInd
wlanifBSteerEventsHandleRSSIXingInd
wlanifBSteerEventsHandleRSSIMeasurementInd
wlanifBSteerEventsHandleWNMEvent
wlanifBSteerEventsHandleBeaconReport
wlanifBSteerEventsHandleBeaconReport
mtk_wlanifBSteerEventsEnable
mtk_wlanifBSteerEventsUnregister
%s: create wlanif_event_vap_restart event
wlanifLinkEvents-rd
%s: %p, len = %d
0x%04x : 
%02x 
%s: invalid ap info
%s: Malformed netlink message length %u (should be %u)
====rcv RTM_NEWLINK msg.
%s: Malformed netlink payload length %u
%s: band = %d ifaceInfo->ifi_index %u
%s: Received message from ifindex %u not managed by lbd
%s: IFLA_WIRELESS rta_type
%s: dataLen %u, IW_EV_LCP_LEN = %d 
%s: Malformed event length %u (available %u)
%s: event.cmd = 0x%x 
wlanifGetBSSInfo(apHandle, sysIndex, &assocEvent.bss) != NRD_NOK
mtk/wlanifLinkEvents_mtk.c
%s: Client %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX disassociated on APId %-3d ChanId %-3d ESSId %-3d
%s: Invalid event length %u (expected %u)
%s:event.u.data.flags is %x
%s:IEEE80211_EV_CHAN_CHANGE
%s: event.u.data.length = 0x%x, data = %p dataEnd = %p, IW_EV_POINT_LEN + event.u.data.length = %d
%s: Channel change to %u
%s: Change of band not supported in lbd; restarting
%s: Invalid channel change event (len=%u, remaining=%u, IW_EV_POINT_LEN=%u)
%s:OID_802_11_WNM_EVENT
wnm_event_data
EVT_BTM_QUERY
EVT_BTM_RSP-nrd
%s:btm_rsp_len == 1, receive btmrsp timeout
BTMRsp-nrd:
unknown wnm event
%s:OID_802_11_RRM_EVENT
nrd:rrm_event_data
nrd:EVT_RRM_BEACON_REPORT
%s: nrd:Received msg from unknown BSS: index %u
nrd:bcn rep:
LocalBss is found!
%s %d: Beacon report from %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX: APId %-3d ChanId %-3d ESSId %-3d rcpi: %d bssid:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX
nrd:EVT_RRM_NEIGHBOR_REQUEST
nrd:unknown rrm event
%s:unknown flag
%s: We don't care the scan result of interface %d
%s: Unhandled event %u len %u
%s: IFLA_OPERSTATE rta_type
%s: Interface on band %u changed state to %u
%s: Invalid length for operstate change: %u
%s: unknown rta_type
%s: Did not consume all attributes: %u bytes left
====rcv unknown nlmsg_type msg.
%s: Did not consume all bytes: %u bytes left
mtk_wlanifLinkEventsCreate
wlanifLinkEventsBSARegister
wlanifLinkEventsBSABufRdCB
mtk_wlanifLinkEventsBSAUnregister
wlanifLinkEventsCmnMsgRx
wlanifLinkEventsCmnHandleNewLink
wlanifLinkEventsCmnHandleIWEvent
wlanifLinkEventsCmnProcessChannelChange
wlanifLinkEventsGenerateScanCompleteEvent
wlanifLinkEventsCmnGenerateDisassocEvent
wlanifGenerateVapRestartEvent
wlanifLinkEventHandleWNMEvent
wlanifLinkEventHandleRRMEvent
wlanifLinkEventHandleBcnrepEvent
wlanifLinkEventHandleBcnrepEvent
wlanifLinkEventsCmnHandleOperState
%s: creat socket failed
%s: Failed to get interface flags for %s
%s: Failed to get vap BSSID for %s
%s: vap %s does not have a valid BSSID
%s: Interface %s has BSSID %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX
%s %d: creat socket failed
%s %d expect0=%d expect1=%d length = %d
%s %d length = %d
unable to get station information
%s %d sta_list->sta_num = %d
%s %d sta_list->staInfo[idx].rssi = %d
%s: unable to get mac of vap
%s: unalbe to get essid string of vap
%s: unable to get channel of vap
ap_info->mac = %02x:%02x:%02x:%02x:%02x:%02x
ap_info->channum = %d, ap_info->ssid = %s
create socket error
ifname = %s, RT_PRIV_IOCTL = 0x%x, ioctl cmd = 0x%x
%s %d: iwr.u.data.length = %d;
%s: ioctl error
ioctl error:
%s %d: sizeof(wlanif_staStats_t) = %d;
%s %d: get stats->txByteCount = %llu, stats->rssi = %d, stats->txPacketCount = %d, stats->idle = %d
%s %d: return NRD_OK;
%s: ioctl error
%s %d: return NRD_OK
%s: oid=0x%x len (%d) failed: %d
too many channels
bcn_req mem alloc fail
invalid num_channels
too many classes
ff:ff:ff:ff:ff:ff
btm_req mem alloc fail
dialogtoken=%d
sending btm req param
%s %d: set btm to target AP with mac = %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX target->candidates[0].channel_number = %d, target->candidates[0].phy_type = %d, target->dialogtoken = %d
%s %d call ioctl
%s %d: ifname = %s
%s %d: iwr.ifr_name = %s
%s %d: rssiInfo.rssi = %d
iwpriv %s set DisConnectSta=%02x:%02x:%02x:%02x:%02x:%02x
%s: clear assoc info failed.
ACLAddEntry
ACLDelEntry
iwpriv %s set AccessPolicy=2
"%02X:%02X:%02X:%02X:%02X:%02X"
%s %d: buf = %s, ifname = %s
iwpriv %s set %s=%s-2
%s %d: cmd = %s
=jacob=> %s() in
%s: failed to start scan
%s %d return NRD_NOK;
%s %d Get extend Bss Total number: %d
extend Bss[%d] info : essid = %s, bssid=%02x:%02x:%02x:%02x:%02x:%02x, channel = %d, rssi = %d
br-lan
send ioctl failed
%s %d: ifname = %s, util_percentage = %d
%s %d: ifname = %s, linkrate->tx = %d, linkrate->rx = %d
%s: ioctl result is too small for %s!
%s: socket fail
%s: unable to get channel of vap(%s)
%s: iface:%s, channel:%d
mtk_get_vap_status
mtk_get_sta_list
mtk_get_sta_list
mtk_get_ap_basic_info
mtk_get_sta_stats
mtk_get_sta_stats
mtk_get_phy_cap_info
mtk_driver_wext_set_oid
mtk_driver_wext_set_oid
mtk_send_rrm_beacon_req
mtk_send_rrm_beacon_req
mtk_send_btm_req
mtk_send_btm_req
mtk_send_request_rssi
mtk_clear_assoc_info
mtk_kickout_sta
mtk_update_blacklist
mtk_start_scan
mtk_get_scan_result
mtk_get_fdb_dst
mtk_get_channel_list
mtk_get_chan_util
mtk_get_uplink_rate
nr_ioctl_get_channel
enable
disable
not only
%s: Set state %s %s with probe witholding for %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX on VAP %s
radio
netdb.c
%s: No RSSI measurement is pending (received one from %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX).
%s: Expecting RSSI measurement from %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX, received one from %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX.
%s: Failed to request RSSI measurement for %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX.
%s: RSSI measurement request for STA %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX is dequeued and sent.
%s: Failed to allocate entry for unresolved VAP %s.
%s : Add vap %s to vap waiting list.
%s : Add vap %s on radio %s to vap waiting list.
Handle restart event for vap %s, channel change from %d to %d.
%s: %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX is aging out.
%s: Remove radio with channel %d on AP %d.
%s: Remove AP %d.
%s: Radio of vap %s is null.
%s: Failed to start scan on channel %d.
%s: scan on channel %d......
%s: Failed to get phy cap info for vap %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX
%s: invalid ESSID length %d, ifName: %s
%s: ESS %s found at index %d for interface %s
state->essCount < 16
%s: Adding new ESS %s to index %d for interface %s
%s: fail to get basic ap info for ifname: %s
%s: invalid band for ifName: %s
%s: No available VAP entry on band %u; maximum number of VAPs allowed on one band: %u
%s: Resolve index failed, ifname: %s
WlanInterfaces
%s: No WLAN interface listed in config file
%s: WLAN interfaces: %s:
%s: Failed to resolve WLAN interfaces from %s: at least one interface is required
%s: resolve %d WLAN interfaces from %s
%s: Failed to resolve radio and VAP names from %s
%s: Fail to get block list.
%s: Enabling band %s failed
%s : Try to resolve vap %s on radio %s.
%s: Failed to get basic ap info for vap: %s
%s: Failed to look up ESS for ifname: %s
%s: Failed to resolve phy cap for ifname: %s
%s : Success to resolve vap %s, so notify vap restart.
%s: Enable wlan control/event interface for vap %s
netdb
DiscoverByScan
ScanFrequency
MinChannelTime
MaxChannelTime
AgeFrequency
RemoteBSSMaxAge
%s: Failed to resolve wlan ifaces
%s: Failed to Enable wlan control/event interface
vapReadyTimeout
scanEnvirTimeout
bssAgingTimeout
%s: Initialized network database.
%s: Duplicate registration (func %p, cookie %p)
%s: Failed to get stations for iface %s
%s: station num of iface %s is %d
%s: The remote ap is valid, but ap handle is null
%s: Failed to allocate ap handle structure
%s: Alloc a new apId %d
%s: find same ESS(%d) BSSes on band %s
%s: maxNumBSSes(%d), numBSSes(%d)
%s: add BSS channelId(%d) essId(%d)
band != wlanif_band_invalid
essId != 0xFF
%s: bss %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX changed channel from %u to %u.
%s: invalid band for bss %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX
%s: Failed to look up vap by bssid %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX
%s: Resolved remote BSS APId %-3d ChanId %-3d ESSId %-3d from bssid %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX
%s: Failed to look up radio by channel %u
%s : Fail to get scan result for vap %s
%s: target band is INVALID!
%s: %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX has been queued.
%s: Failed to allocate entry for STA %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX.
%s: RSSI measurement request for STA %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX is queued on BSS APId %-3d ChanId %-3d ESSId %-3d
%s: Failed to retrieve STA stats for %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX on %s
%s: Set state %s with probe witholding for %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX on VAP %s
%s: Set probe state %s  for %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX on VAP %s
%s: Channel %u is not valid
%s: Requested change state to %d on channel %d for STA %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX, but no VAPs operating on that channel
Translate bssid %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX to BSS APId %-3d ChanId %-3d ESSId %-3d
3600
netdb_init
netdbHandleScanCompleteEvent
netdb_getScanBSSes
netdbHandleRSSIMeasurementEvent
netdb_apHandleAddVapToWaitingList
netdb_apHandleCreate
netdb_bssAgingTimeoutHandler
netdb_scanEnvirTimeoutHandler
netdb_apHandleResolveWaitingVap
netdb_apHandleReinitVap
netdb_apHandleLookupEss
netdb_apHandleResolveVapPHYCapInfo
netdb_apHandleInitVapFromIfname
netdb_apHandleAllocateVap
netdb_apHandleResolveWlanIfaces
netdb_apHanldeEnableWlanifByVap
netdb_apHanldeEnableWlanif
netdb_registerChanChangeObserver
netdb_registerVapRestartObserver
netdb_registerAssocAmountChangeObserver
netdb_remoteApHandleGet
netdb_resolveRemoteApHandle
netdb_getBSSesSameESSForOneBand
netdb_getBSSesSameESS
netdb_resolveRemoteBSSFromBSSID
netdb_dumpAssociatedSTAnum_byBand
netdb_dumpAssociatedSTAsOneIface
netdb_dumpBlockedSTAsOneIface
netdb_requestStaRSSI
netdb_sampleSTAStats
netdb_nonCandidateSetCB
netdb_setCandidateStateForSTA
netdb_setCandidateProbeStateForSTA
netdb_setChannelStateForSTA
wlanif
wlanif init success
%s: Failed to set band steering parameters on band %u
%s: Failed to enable band steering on band %u
%s: Failed to enable band steering event on band %u
%s: Successfully enabled band steering on band %u
%s: Band steering on band %u already disabled
%s: Successfully disabled band steering on band %u
There are too many channels:%d.
%s: %02hhX:%02hhX:%02hhX:%02hhX:%02hhX:%02hhX move from %s to %s.
%s: too small buffer
%s: failed to get basic info of %s
wlanif_setEnableBandSteering
wlanif_setDisableBandSteering
wlanif_isSTAMoved
wlanif_getVAPMac
wlanifControl.c
%s: Invalid crossing direction from driver: %u
%s: Invalid bandwidth from driver: %u
%s: Invalid PHY mode from driver: %u
InactIdleThreshold
InactOverloadThreshold
InactCheckInterval
[Band %u] Inactivity check period value is invalid (%d), use default one
[Band %u] Inactivity check period value is NULL
InactRSSIXingHighThreshold
InactRSSIXingLowThreshold
LowRSSIXingThreshold
MUCheckInterval
[Band %u] Utilization sample period value is invalid (%d), will not perform ACS report
MUAvgPeriod
[Band %u] Utilization average period (%d seconds) is shorter than Utilization sample period (%d seconds).
LowTxRateXingThreshold
HighTxRateXingThreshold
[Band %u] Low Tx rate crossing threshold (%u) is greater or equal to high Tx rate crossing threshold (%u).
LowRateRSSIXingThreshold
HighRateRSSIXingThreshold
[Band %u] Low rate RSSI crossing threshold (%u) is greater or equal to high rate RSSI crossing threshold (%u).
LowRSSIAPSteeringThreshold
InterferenceDetectionEnable
Delay24GProbeRSSIThreshold
Delay24GProbeTimeWindow
Delay24GProbeMinReqCount
%s: read config param failed
%s: radio %d invalid
%s: Failed to resolve VAP for radio [%s]
%s: can't find valid vap
%s: Failed to resolve VAP for radio [%s]. Maybe VAP is brought down
%s: enable band steering failed
%s: set %s band steering event failed
%s: disable band steering failed
BcnrptActiveDuration
BcnrptPassiveDuration
4294967295
6000
AuthAllow
50000
wlanifMapToXingDirection
wlanifMapToBandwidth
wlanifMapToPhyMode
wlanifConvertToSingleStreamMCSIndex
wlanifSendSetParams
wlanifGetFirstVAPByRadio
wlanifSendEnablebandSteering
wlanifBSteerControlCreate
Read error (errno %d) on fd %d `%s'
EOF on fd %d `%s'
bufrd
bufrdInit Done.
ENTER bufrdCreate `%s'
Malloc failure!
ENTER bufrdDestroy `%s'
ENTER bufrdConsume `%s' %d bytes
Redundant bufrdConsume call!
READ
WRITE
UNKNOWN
Pending timeouts:
    %s [%p][%p][%p] %u.%06u
Waiting for ready:
    %s [%p][%p][%p] fd=%d %s
evloopTimeoutRemaining: BAD TIMEOUT LINK FOUND
evloopOnce: initial time; assume 0 elapsed time
evloopOnce: bad elapsed time (%lld usec) ignored!
evloopTimeoutFix(%d): elapsed time is %u.%06u sec
ENTER evloopOnce
evloopOnce call t.o. c.b. for %s
evloopOnce return from c.b.
LEAVE evloopOnce -- abort
evloopOnce: no timeout
evloopOnce: using timeout == %d msec
realloc failure! ABORT!
Awake w/ poll status %d
LEAVE evloopOnce -- EINTR
poll error %d
LEAVE evloopOnce -- nothing to do
Calling Ready handler for `%s'
evloopOnce call ready c.b. for %s
evloopOnce return from ready c.b.
LEAVE evloopOnce
evloop
evloopInit Done.
ENTER evloopRun
LEAVE evloopRun
evloopContextSet context %d value %u
Unregister `%s' fd=%d
register ready `%s'
ENTER evloopWriteReadyCreate `%s'
ENTER evloopReadReadyInit `%s'
invalid timer callback
ENTER evloopTimeoutRegister `%s' %d.%06d
ENTER evloopTimeoutInit `%s'
evloop -- Event loop menu
help
s -- print evloop module status
Invalid queue threshold value
Invalid queue dispatch once number
Not supported option:%s
QueueThreshold = %d QueueDispatchOnce = %d
QueueThreshold=%d, QueueDispatchOnce=%d
%s: Invalid parameters: ModuleID %d, CB %p
Enter %s
%s: Invalid parameters: Priority %d, ModuleID %d
%s: Failed to allocate memory for event
%s: Failed to allocate memory for event data
%s: Priority=%d, QueueLen=%d
%s: Invalid event id!
%s: There is no listeners on event %d
%s: Dispatch event %d from module %d
%s: Event is NULL
mdS.EventDispatchTimer
mdInit Done.
%s: Invalid parameters: ModuleID %d, EventCB %p
%s: Event table is not registered yet: ModuleID=%d, EventID=%d!
%s: Failed to allocate memory
%s: Invalid parameters: ModuleID %d, EventNum %d
%s: Event table is already registered.
%s: Memory allocation failure
p -- Print all parameters
s -- set md queue limit parameters
Usage: s [-l QueueLimitLength] [-d DispatchOnceNumber]
md -- load balancing core module menu
mdListenInitCBRegister
mdEventTableRegister
mdCreateEvent
mdListenTableRegister
mdGetEvent
mdEventDispatch
mdEventDestroy
time1
nr_common.c
time2
diff
!nrIsTimeAfter(time2, time1)
%s (%s:%u): Assertion '%s' failed
nrIsTimeBefore
nrTimeDiff
%s: Invalid parameters: ModuleID %d, Element %p
profile
%s: File %s
MAIN
WLANIF
WLANIF2G
WLANIF5G
NETDB
STADB
STEEREXEC
TRIGGERMON
ESTIMATOR
STEERALG
AIROAMING
profileGetOpts
profileGetOptsLinkPri
profileInit
\%03o
&#%d;
&amp;
&quot;
&apos;
&lt;
&gt;
.empty
ERR: cmdMenu lacks menu!
.wildcard
(Sub)command not found: %.*s
(Sub)command not found: %.*s
ERR: MALLOC FAILURE
ERR: malloc failure
ERR: no command handler for menu item %s
ERR: no command handler for menu item %s
.entry
-off
Cancelling message redirection...
Cancelled message redirection.
Invalid option for `dbg redirect'
Need a filepath to redirect to
Too many args
File open failure!
Malloc Failed for command.
Error parsing command.
Exit server!
Exit server!
%s -- (no help message)
------ Help for %s -----
------------------------
%-18s 
No command: %.*s
ERROR: Menu full!
...>
Failed to dup stdout!
ERR: Failed to open cmd file %s
Read error from file %s
Execution error from file %s
Invalid option
Command failed
Forking debug messages to shell
%*04x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x
exit
dbg -- debug printing control menu
level
here
redirect
redirect {[-a] <path>} | -off -- redirect dbg messages to file
Options: 
   -a -- append to file instead of overwriting. 
   -off -- disable redirection, return to stdout. 
here [-off] -- copy debug messages to current shell context
With `-off' undoes the redirection
level [{<module>|all} [[=] {err|info|debug|dump}] -- print/change module debug level
Using `all' instead of module name will modify level of all current
and future modules.
Instead of one of the named levels, a numeric level value may be used.
The named levels are, in increasing order of verbosity: 
    err -- important internal errors (not generally, external errors)
    info -- important occasional events and external errors
    debug -- messages useful for debugging particular module
    dump -- even greater verbosity, e.g. packet dumps
s -- print dbg status
This includes level for all known modules
exit [<status>] -- terminate server
Default exit status is 0
q -- quit interactive menu
Returns to previous interactive menu or may exit shell
help [cmd] -- long help.
Displays full help message for each command.
h [cmd] -- short help (first line of each help message).
