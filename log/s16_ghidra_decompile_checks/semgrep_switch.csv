/tmp/haruspex_switch/acl_dip_add_004052a4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,17,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/acl_dip_add_004052a4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,42,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_add_004052a4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,59,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_add_004052a4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,76,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_add_004052a4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,93,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_meter_004022e0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,16,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/acl_dip_meter_004022e0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,41,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_meter_004022e0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,58,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_meter_004022e0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,75,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_meter_004022e0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,93,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_modify_00403fec.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,17,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/acl_dip_modify_00403fec.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,42,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_modify_00403fec.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,59,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_modify_00403fec.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,76,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_modify_00403fec.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,93,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_pppoe_00404940.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,17,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/acl_dip_pppoe_00404940.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,42,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_pppoe_00404940.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,59,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_pppoe_00404940.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,76,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_pppoe_00404940.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,93,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_trtcm_00402c4c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,19,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/acl_dip_trtcm_00402c4c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,44,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_trtcm_00402c4c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,61,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_trtcm_00402c4c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,82,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_trtcm_00402c4c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,99,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_dip_trtcm_00402c4c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,116,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_ethertype_00403874.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,15,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/acl_ethertype_00403874.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,40,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_ethertype_00403874.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,57,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_ethertype_00403874.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,74,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_l4_add_00405bec.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,15,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/acl_l4_add_00405bec.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,40,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_l4_add_00405bec.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,57,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_l4_add_00405bec.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,74,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_sp_add_0040631c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,15,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/acl_sp_add_0040631c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,40,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_sp_add_0040631c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,57,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/acl_sp_add_0040631c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,74,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/dip_add_0040701c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,14,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/dip_add_0040701c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,31,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/dip_add_0040701c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,37,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/dip_clear_004075b4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,9,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/dip_del_004073e8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,24,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/dip_dump_00406a4c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,19,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/dip_dump_00406a4c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,30,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/dip_dump_00406a4c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,37,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/dip_dump_00406a4c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,89,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/dip_dump_00406a4c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,93,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/dump_gphy_0040c8d0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,35,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/getnext_00401f5c.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,15,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_switch/getnext_00401f5c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,15,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/getnext_00401f5c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,19,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/getnext_00401f5c.c,external.semgrep-rules-0xdea.c.raptor-pointer-subtraction,19,The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.
/tmp/haruspex_switch/getnext_00401f5c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,20,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/getnext_00401f5c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,22,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/igmp_off_0040c0d8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,7,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/igmp_on_0040b8a8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,22,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/igmp_on_0040b8a8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,24,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/igmp_on_0040b8a8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,31,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/igmp_on_0040b8a8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,42,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/igmp_on_0040b8a8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,87,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/ip_to_str_004021f8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,8,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/main_0040ceac.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,42,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/main_0040ceac.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,63,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/main_0040ceac.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,92,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/main_0040ceac.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,176,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/main_0040ceac.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,491,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/main_0040ceac.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,510,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/main_0040ceac.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,610,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/main_0040ceac.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,632,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/phy_crossover_0040cbc8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,14,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/set_mirror_from_0040aba0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,20,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/set_mirror_to_0040aa70.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,13,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/sip_add_00407bd4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,17,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/sip_add_00407bd4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,34,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/sip_add_00407bd4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,40,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/sip_clear_004081fc.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,9,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/sip_del_0040800c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,24,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/sip_dump_0040765c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,19,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/sip_dump_0040765c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,30,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/sip_dump_0040765c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,37,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/sip_dump_0040765c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,89,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/sip_dump_0040765c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,92,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_add_004089a0.c,external.semgrep-rules-0xdea.c.raptor-integer-truncation,17,Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.
/tmp/haruspex_switch/table_add_004089a0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,18,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/table_add_004089a0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,22,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_add_004089a0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,22,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/table_add_004089a0.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,22,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_switch/table_add_004089a0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,27,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_add_004089a0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,27,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/table_add_004089a0.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,27,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_switch/table_add_004089a0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,41,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/table_add_004089a0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,86,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_add_004089a0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,92,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_clear_0040a9c8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,9,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_del_fid_0040a24c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,13,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/table_del_fid_0040a24c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,17,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_del_fid_0040a24c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,17,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/table_del_fid_0040a24c.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,17,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_switch/table_del_fid_0040a24c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,21,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_del_fid_0040a24c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,21,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/table_del_fid_0040a24c.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,21,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_switch/table_del_fid_0040a24c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,39,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_del_vid_0040a610.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,13,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/table_del_vid_0040a610.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,17,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_del_vid_0040a610.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,17,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/table_del_vid_0040a610.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,17,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_switch/table_del_vid_0040a610.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,21,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_del_vid_0040a610.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,21,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/table_del_vid_0040a610.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,21,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_switch/table_del_vid_0040a610.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,34,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_dump_004082a4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,18,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_dump_004082a4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,30,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_dump_004082a4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,40,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_dump_004082a4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,98,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_dump_004082a4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,102,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_search_mac_fid_00409a14.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,19,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/table_search_mac_fid_00409a14.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,23,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_search_mac_fid_00409a14.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,23,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/table_search_mac_fid_00409a14.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,23,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_switch/table_search_mac_fid_00409a14.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,27,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_search_mac_fid_00409a14.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,27,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/table_search_mac_fid_00409a14.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,27,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_switch/table_search_mac_fid_00409a14.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,39,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_search_mac_fid_00409a14.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,50,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_search_mac_fid_00409a14.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,108,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_search_mac_fid_00409a14.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,112,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_search_mac_vid_004091e8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,19,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/table_search_mac_vid_004091e8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,23,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_search_mac_vid_004091e8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,23,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/table_search_mac_vid_004091e8.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,23,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_switch/table_search_mac_vid_004091e8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,27,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_search_mac_vid_004091e8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,27,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/table_search_mac_vid_004091e8.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,27,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_switch/table_search_mac_vid_004091e8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,39,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_search_mac_vid_004091e8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,50,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_search_mac_vid_004091e8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,108,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/table_search_mac_vid_004091e8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,112,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/vlan_clear_0040b258.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,20,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/vlan_dump_0040ad70.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,19,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/vlan_dump_0040ad70.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,26,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/vlan_dump_0040ad70.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,27,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_switch/vlan_set_0040b3bc.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,23,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_switch/vlan_set_0040b3bc.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,53,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
