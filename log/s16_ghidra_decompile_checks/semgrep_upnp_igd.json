{"errors": [], "interfile_languages_used": [], "paths": {"scanned": ["/tmp/haruspex_upnp_igd/FUN_00401a10_00401a10.c", "/tmp/haruspex_upnp_igd/FUN_00401ae4_00401ae4.c", "/tmp/haruspex_upnp_igd/FUN_00401b68_00401b68.c", "/tmp/haruspex_upnp_igd/FUN_00401be8_00401be8.c", "/tmp/haruspex_upnp_igd/FUN_00401c38_00401c38.c", "/tmp/haruspex_upnp_igd/FUN_00401d8c_00401d8c.c", "/tmp/haruspex_upnp_igd/FUN_00401ddc_00401ddc.c", "/tmp/haruspex_upnp_igd/FUN_00401e10_00401e10.c", "/tmp/haruspex_upnp_igd/FUN_00401e50_00401e50.c", "/tmp/haruspex_upnp_igd/FUN_004020d4_004020d4.c", "/tmp/haruspex_upnp_igd/FUN_00402248_00402248.c", "/tmp/haruspex_upnp_igd/FUN_00402318_00402318.c", "/tmp/haruspex_upnp_igd/FUN_004027b4_004027b4.c", "/tmp/haruspex_upnp_igd/FUN_004028cc_004028cc.c", "/tmp/haruspex_upnp_igd/FUN_00402b64_00402b64.c", "/tmp/haruspex_upnp_igd/FUN_00402bf8_00402bf8.c", "/tmp/haruspex_upnp_igd/FUN_00402cd4_00402cd4.c", "/tmp/haruspex_upnp_igd/FUN_00402db8_00402db8.c", "/tmp/haruspex_upnp_igd/FUN_00402e04_00402e04.c", "/tmp/haruspex_upnp_igd/FUN_00403074_00403074.c", "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "/tmp/haruspex_upnp_igd/FUN_0040484c_0040484c.c", "/tmp/haruspex_upnp_igd/FUN_004049e0_004049e0.c", "/tmp/haruspex_upnp_igd/FUN_00404a94_00404a94.c", "/tmp/haruspex_upnp_igd/FUN_00404b4c_00404b4c.c", "/tmp/haruspex_upnp_igd/FUN_00404c30_00404c30.c", "/tmp/haruspex_upnp_igd/FUN_00404d84_00404d84.c", "/tmp/haruspex_upnp_igd/FUN_00404e1c_00404e1c.c", "/tmp/haruspex_upnp_igd/FUN_00404ee4_00404ee4.c", "/tmp/haruspex_upnp_igd/FUN_00405000_00405000.c", "/tmp/haruspex_upnp_igd/FUN_00405070_00405070.c", "/tmp/haruspex_upnp_igd/FUN_004053b0_004053b0.c", "/tmp/haruspex_upnp_igd/FUN_004055f0_004055f0.c", "/tmp/haruspex_upnp_igd/FUN_00405848_00405848.c", "/tmp/haruspex_upnp_igd/FUN_00405aa0_00405aa0.c", "/tmp/haruspex_upnp_igd/FUN_00405cf8_00405cf8.c", "/tmp/haruspex_upnp_igd/FUN_00405f50_00405f50.c", "/tmp/haruspex_upnp_igd/FUN_004061b0_004061b0.c", "/tmp/haruspex_upnp_igd/FUN_004066b4_004066b4.c", "/tmp/haruspex_upnp_igd/FUN_0040694c_0040694c.c", "/tmp/haruspex_upnp_igd/FUN_00406ba4_00406ba4.c", "/tmp/haruspex_upnp_igd/FUN_00406dfc_00406dfc.c", "/tmp/haruspex_upnp_igd/FUN_00407054_00407054.c", "/tmp/haruspex_upnp_igd/FUN_004072f8_004072f8.c", "/tmp/haruspex_upnp_igd/FUN_00407550_00407550.c", "/tmp/haruspex_upnp_igd/FUN_00407d64_00407d64.c", "/tmp/haruspex_upnp_igd/FUN_00407fdc_00407fdc.c", "/tmp/haruspex_upnp_igd/FUN_0040848c_0040848c.c", "/tmp/haruspex_upnp_igd/FUN_004086e4_004086e4.c", "/tmp/haruspex_upnp_igd/FUN_0040893c_0040893c.c", "/tmp/haruspex_upnp_igd/FUN_00408bac_00408bac.c", "/tmp/haruspex_upnp_igd/FUN_00408bfc_00408bfc.c", "/tmp/haruspex_upnp_igd/FUN_00408cd8_00408cd8.c", "/tmp/haruspex_upnp_igd/FUN_00408eac_00408eac.c", "/tmp/haruspex_upnp_igd/FUN_00409050_00409050.c", "/tmp/haruspex_upnp_igd/FUN_0040917c_0040917c.c", "/tmp/haruspex_upnp_igd/FUN_004091fc_004091fc.c", "/tmp/haruspex_upnp_igd/FUN_004094a0_004094a0.c", "/tmp/haruspex_upnp_igd/FUN_004096d4_004096d4.c", "/tmp/haruspex_upnp_igd/FUN_0040990c_0040990c.c", "/tmp/haruspex_upnp_igd/FUN_00409bbc_00409bbc.c", "/tmp/haruspex_upnp_igd/FUN_0040a178_0040a178.c", "/tmp/haruspex_upnp_igd/FUN_0040a264_0040a264.c", "/tmp/haruspex_upnp_igd/FUN_0040a6b4_0040a6b4.c", "/tmp/haruspex_upnp_igd/FUN_0040a7a0_0040a7a0.c", "/tmp/haruspex_upnp_igd/FUN_0040a9d4_0040a9d4.c", "/tmp/haruspex_upnp_igd/FUN_0040ad0c_0040ad0c.c", "/tmp/haruspex_upnp_igd/FUN_0040af40_0040af40.c", "/tmp/haruspex_upnp_igd/FUN_0040b02c_0040b02c.c", "/tmp/haruspex_upnp_igd/FUN_0040b118_0040b118.c", "/tmp/haruspex_upnp_igd/FUN_0040b34c_0040b34c.c", "/tmp/haruspex_upnp_igd/FUN_0040b438_0040b438.c", "/tmp/haruspex_upnp_igd/FUN_0040b524_0040b524.c", "/tmp/haruspex_upnp_igd/FUN_0040b610_0040b610.c", "/tmp/haruspex_upnp_igd/FUN_0040b6fc_0040b6fc.c", "/tmp/haruspex_upnp_igd/FUN_0040b930_0040b930.c", "/tmp/haruspex_upnp_igd/FUN_0040bc4c_0040bc4c.c", "/tmp/haruspex_upnp_igd/FUN_0040be80_0040be80.c", "/tmp/haruspex_upnp_igd/FUN_0040c0f8_0040c0f8.c", "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "/tmp/haruspex_upnp_igd/FUN_0040c67c_0040c67c.c", "/tmp/haruspex_upnp_igd/FUN_0040c730_0040c730.c", "/tmp/haruspex_upnp_igd/FUN_0040c89c_0040c89c.c", "/tmp/haruspex_upnp_igd/FUN_0040cbd8_0040cbd8.c", "/tmp/haruspex_upnp_igd/FUN_0040cc14_0040cc14.c", "/tmp/haruspex_upnp_igd/FUN_0040cef4_0040cef4.c", "/tmp/haruspex_upnp_igd/FUN_0040cf48_0040cf48.c", "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "/tmp/haruspex_upnp_igd/FUN_0040dcc0_0040dcc0.c", "/tmp/haruspex_upnp_igd/FUN_0040e0b4_0040e0b4.c", "/tmp/haruspex_upnp_igd/FUN_0040e2b8_0040e2b8.c", "/tmp/haruspex_upnp_igd/FUN_0040e55c_0040e55c.c", "/tmp/haruspex_upnp_igd/FUN_0040e7b8_0040e7b8.c", "/tmp/haruspex_upnp_igd/FUN_0040ea7c_0040ea7c.c", "/tmp/haruspex_upnp_igd/FUN_0040ebd0_0040ebd0.c", "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "/tmp/haruspex_upnp_igd/FUN_0040f35c_0040f35c.c", "/tmp/haruspex_upnp_igd/FUN_0040fbe4_0040fbe4.c", "/tmp/haruspex_upnp_igd/FUN_0040fc44_0040fc44.c", "/tmp/haruspex_upnp_igd/FUN_004102f4_004102f4.c", "/tmp/haruspex_upnp_igd/FUN_004105f0_004105f0.c", "/tmp/haruspex_upnp_igd/FUN_004106c8_004106c8.c", "/tmp/haruspex_upnp_igd/FUN_00410748_00410748.c", "/tmp/haruspex_upnp_igd/FUN_00410b58_00410b58.c", "/tmp/haruspex_upnp_igd/FUN_00410dc0_00410dc0.c", "/tmp/haruspex_upnp_igd/FUN_00410e10_00410e10.c", "/tmp/haruspex_upnp_igd/FUN_00410ffc_00410ffc.c", "/tmp/haruspex_upnp_igd/FUN_0041109c_0041109c.c", "/tmp/haruspex_upnp_igd/FUN_004113e4_004113e4.c", "/tmp/haruspex_upnp_igd/FUN_00411668_00411668.c", "/tmp/haruspex_upnp_igd/FUN_004116b8_004116b8.c", "/tmp/haruspex_upnp_igd/FUN_00411704_00411704.c", "/tmp/haruspex_upnp_igd/FUN_00411758_00411758.c", "/tmp/haruspex_upnp_igd/FUN_004117c0_004117c0.c", "/tmp/haruspex_upnp_igd/FUN_00411aa0_00411aa0.c", "/tmp/haruspex_upnp_igd/FUN_00411e70_00411e70.c", "/tmp/haruspex_upnp_igd/FUN_00411f08_00411f08.c", "/tmp/haruspex_upnp_igd/FUN_00411fdc_00411fdc.c", "/tmp/haruspex_upnp_igd/FUN_0041215c_0041215c.c", "/tmp/haruspex_upnp_igd/FUN_00412208_00412208.c", "/tmp/haruspex_upnp_igd/FUN_00412368_00412368.c", "/tmp/haruspex_upnp_igd/FUN_004123d4_004123d4.c", "/tmp/haruspex_upnp_igd/FUN_0041311c_0041311c.c", "/tmp/haruspex_upnp_igd/FUN_00413714_00413714.c", "/tmp/haruspex_upnp_igd/FUN_00413940_00413940.c", "/tmp/haruspex_upnp_igd/FUN_00413960_00413960.c", "/tmp/haruspex_upnp_igd/FUN_00413adc_00413adc.c", "/tmp/haruspex_upnp_igd/FUN_00413d30_00413d30.c", "/tmp/haruspex_upnp_igd/FUN_00413f60_00413f60.c", "/tmp/haruspex_upnp_igd/FUN_00414948_00414948.c", "/tmp/haruspex_upnp_igd/FUN_00414b34_00414b34.c", "/tmp/haruspex_upnp_igd/FUN_00414bc8_00414bc8.c", "/tmp/haruspex_upnp_igd/FUN_00415084_00415084.c", "/tmp/haruspex_upnp_igd/FUN_00415140_00415140.c", "/tmp/haruspex_upnp_igd/FUN_004151d4_004151d4.c", "/tmp/haruspex_upnp_igd/FUN_00415228_00415228.c", "/tmp/haruspex_upnp_igd/FUN_0041527c_0041527c.c", "/tmp/haruspex_upnp_igd/FUN_00415480_00415480.c", "/tmp/haruspex_upnp_igd/FUN_00415530_00415530.c", "/tmp/haruspex_upnp_igd/ILibAddEntry_00413914.c", "/tmp/haruspex_upnp_igd/ILibAddHeaderLine_00411c28.c", "/tmp/haruspex_upnp_igd/ILibAddRequest_0040d13c.c", "/tmp/haruspex_upnp_igd/ILibAddRequest_DirectEx_0040cfe4.c", "/tmp/haruspex_upnp_igd/ILibAddToChain_00410e78.c", "/tmp/haruspex_upnp_igd/ILibCreateChain_004146a4.c", "/tmp/haruspex_upnp_igd/ILibCreateEmptyPacket_004120e8.c", "/tmp/haruspex_upnp_igd/ILibCreateHTTPClientModule_0040cd70.c", "/tmp/haruspex_upnp_igd/ILibCreateLifeTime_00410f08.c", "/tmp/haruspex_upnp_igd/ILibCreateMiniWebServer_0040e84c.c", "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "/tmp/haruspex_upnp_igd/ILibDeleteEntry_00413868.c", "/tmp/haruspex_upnp_igd/ILibDeleteRequests_0040d1e4.c", "/tmp/haruspex_upnp_igd/ILibDestroyHashTree_004115d8.c", "/tmp/haruspex_upnp_igd/ILibDestructPacket_0041124c.c", "/tmp/haruspex_upnp_igd/ILibDestructParserResults_00411388.c", "/tmp/haruspex_upnp_igd/ILibDestructXMLNodeList_0041180c.c", "/tmp/haruspex_upnp_igd/ILibForceUnBlockChain_00414080.c", "/tmp/haruspex_upnp_igd/ILibGetDGramSocket_00412c28.c", "/tmp/haruspex_upnp_igd/ILibGetEntry_004138e8.c", "/tmp/haruspex_upnp_igd/ILibGetLocalIPAddressList_00414750.c", "/tmp/haruspex_upnp_igd/ILibGetMiniWebServerPortNumber_0040e840.c", "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "/tmp/haruspex_upnp_igd/ILibGetStreamSocket_00412cfc.c", "/tmp/haruspex_upnp_igd/ILibGetULong_00413e28.c", "/tmp/haruspex_upnp_igd/ILibInitHashTree_004122e8.c", "/tmp/haruspex_upnp_igd/ILibLifeTime_AddEx_004140e8.c", "/tmp/haruspex_upnp_igd/ILibLifeTime_Remove_004110d8.c", "/tmp/haruspex_upnp_igd/ILibMiniWebServerCloseSession_0040ea08.c", "/tmp/haruspex_upnp_igd/ILibMiniWebServerSend_0040e99c.c", "/tmp/haruspex_upnp_igd/ILibParsePacketHeader_004132d0.c", "/tmp/haruspex_upnp_igd/ILibParseString_004109c0.c", "/tmp/haruspex_upnp_igd/ILibParseUri_00412a10.c", "/tmp/haruspex_upnp_igd/ILibParseXML_00412664.c", "/tmp/haruspex_upnp_igd/ILibProcessXMLNodeList_00413c24.c", "/tmp/haruspex_upnp_igd/ILibReadInnerXML_00413a08.c", "/tmp/haruspex_upnp_igd/ILibSSDP_IPAddressListChanged_0040f9fc.c", "/tmp/haruspex_upnp_igd/ILibSetDirective_00411d2c.c", "/tmp/haruspex_upnp_igd/ILibSetStatusCode_00411df8.c", "/tmp/haruspex_upnp_igd/ILibStartChain_00414274.c", "/tmp/haruspex_upnp_igd/ILibStopChain_00414264.c", "/tmp/haruspex_upnp_igd/UPnPCreateControlPoint_0040264c.c", "/tmp/haruspex_upnp_igd/UPnPGetService_00402cf8.c", "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_AddPortMapping_00407a4c.c", "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_DeletePortMapping_004077a8.c", "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetExternalIPAddress_00408234.c", "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetSpecificPortMappingEntry_00406410.c", "/tmp/haruspex_upnp_igd/_fini_00415930.c", "/tmp/haruspex_upnp_igd/_ftext_004019b0.c", "/tmp/haruspex_upnp_igd/_init_0040192c.c", "/tmp/haruspex_upnp_igd/main_00414d84.c"]}, "results": [{"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 35, "line": 8, "offset": 132}, "extra": {"engine_kind": "OSS", "fingerprint": "971d4df410da2c9f6b5957891ea6f722f9bb91d32565212107e4df9a0496bb7516cab4af59ea878301fb1c5e180178c5770545fb3d6873ca191662d0989b66eb_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(8);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "undefined4*", "end": {"col": 25, "line": 8, "offset": 122}, "start": {"col": 13, "line": 8, "offset": 110}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 8, "offset": 129}, "start": {"col": 26, "line": 8, "offset": 123}}, "$RET": {"abstract_content": "puVar1", "end": {"col": 9, "line": 8, "offset": 106}, "start": {"col": 3, "line": 8, "offset": 100}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00401be8_00401be8.c", "start": {"col": 3, "line": 8, "offset": 100}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 8, "offset": 132}, "extra": {"engine_kind": "OSS", "fingerprint": "b134418b079555ad33bd4f6811024016bd5871ea9962d4c25302edc6f1f95baced330696ce00bd350bc1da90023b33e06656f9feda8ea09bf37e5bb2c2b2c92c_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(8);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 8, "offset": 129}, "start": {"col": 26, "line": 8, "offset": 123}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00401be8_00401be8.c", "start": {"col": 26, "line": 8, "offset": 123}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 35, "line": 8, "offset": 132}, "extra": {"engine_kind": "OSS", "fingerprint": "3e71ee86979219d055abeaeb03cb45de7f32373c74bcee2c17b59693363fe0ab9258f0ab3294914576c67f3ed61afde50b060617e727a1e0cb8113812053be43_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(8);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "8", "end": {"col": 34, "line": 8, "offset": 131}, "start": {"col": 33, "line": 8, "offset": 130}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00401be8_00401be8.c", "start": {"col": 26, "line": 8, "offset": 123}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 34, "line": 13, "offset": 266}, "extra": {"engine_kind": "OSS", "fingerprint": "d6794ecaf81e6d035c99d033611d8c17002ea9e993667f9cd694b2d8d2180fa4539185e2346e14317641dfc5602f1a5aa2a862391a7a4d94cf2791c42856e135_0", "is_ignored": false, "lines": "  __s = (char *)malloc(sVar2 + 7);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 16, "line": 13, "offset": 248}, "start": {"col": 10, "line": 13, "offset": 242}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 23, "line": 13, "offset": 255}, "start": {"col": 17, "line": 13, "offset": 249}}, "$RET": {"abstract_content": "__s", "end": {"col": 6, "line": 13, "offset": 238}, "start": {"col": 3, "line": 13, "offset": 235}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00401c38_00401c38.c", "start": {"col": 3, "line": 13, "offset": 235}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 34, "line": 13, "offset": 266}, "extra": {"engine_kind": "OSS", "fingerprint": "edf489fa7470bc863d4ff9f6d0078f46911685bed77fadc9dd41436e997a942f0cefb19fdb849a40c991b3f1947fb4528f3f2fdb8e99b8a1cb92f3679d69c097_0", "is_ignored": false, "lines": "  __s = (char *)malloc(sVar2 + 7);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 23, "line": 13, "offset": 255}, "start": {"col": 17, "line": 13, "offset": 249}}, "$X": {"abstract_content": "sVar2", "end": {"col": 29, "line": 13, "offset": 261}, "propagated_value": {"svalue_abstract_content": "strlen(param_1)", "svalue_end": {"col": 26, "line": 12, "offset": 231}, "svalue_start": {"col": 11, "line": 12, "offset": 216}}, "start": {"col": 24, "line": 13, "offset": 256}}, "$Y": {"abstract_content": "7", "end": {"col": 33, "line": 13, "offset": 265}, "start": {"col": 32, "line": 13, "offset": 264}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00401c38_00401c38.c", "start": {"col": 17, "line": 13, "offset": 249}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 34, "line": 13, "offset": 266}, "extra": {"engine_kind": "OSS", "fingerprint": "b202e6bcdd0c10bc85c21f417ce4b570a090c63dc65628b65a200cf65a62be0bdf47b4ba7db520a2dd4a7406f0a15e239ca63c973fa7c0032b64b005b4850f21_0", "is_ignored": false, "lines": "  __s = (char *)malloc(sVar2 + 7);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 23, "line": 13, "offset": 255}, "start": {"col": 17, "line": 13, "offset": 249}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00401c38_00401c38.c", "start": {"col": 17, "line": 13, "offset": 249}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 47, "line": 14, "offset": 314}, "extra": {"engine_kind": "OSS", "fingerprint": "399b799bb7e65cf09e4fe1c8b08ba50c372877d37932fd8f703297b4e58914d7772bcb0d544e2d2498ae8fabb025e8a535eb33b5287c1d8d6d58f8f8ed918bbf_0", "is_ignored": false, "lines": "  iVar3 = sprintf(__s,\"%s:%d\",param_1,param_2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%s:%d\"", "end": {"col": 8, "line": 1, "offset": 7}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 22, "line": 14, "offset": 289}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar2+7)", "svalue_end": {"col": 34, "line": 13, "offset": 266}, "svalue_start": {"col": 9, "line": 13, "offset": 241}}, "start": {"col": 19, "line": 14, "offset": 286}}, "$FMT": {"abstract_content": "\"%s:%d\"", "end": {"col": 30, "line": 14, "offset": 297}, "start": {"col": 23, "line": 14, "offset": 290}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00401c38_00401c38.c", "start": {"col": 11, "line": 14, "offset": 278}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 14, "offset": 314}, "extra": {"engine_kind": "OSS", "fingerprint": "7a3c6a23bc46c356ba3c586fb8a1dcd98034d6d33aba34732322b25726132c2a34af882f97c560c80667def9a1da17527239ee1d7ff67d996f51c9206b67ee32_0", "is_ignored": false, "lines": "  iVar3 = sprintf(__s,\"%s:%d\",param_1,param_2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 18, "line": 14, "offset": 285}, "start": {"col": 11, "line": 14, "offset": 278}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00401c38_00401c38.c", "start": {"col": 11, "line": 14, "offset": 278}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 34, "line": 28, "offset": 656}, "extra": {"engine_kind": "OSS", "fingerprint": "98a3951d632da29319aefcd2fc5c53ec4f07afa5477b1538e21669666a7a7b5547b460bcc2581d79061cd7eaa49135e71f5ff9c2e9696f8a10ced59ce49d1f55_0", "is_ignored": false, "lines": "  __s = (char *)malloc(sVar2 + 7);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 16, "line": 28, "offset": 638}, "start": {"col": 10, "line": 28, "offset": 632}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 23, "line": 28, "offset": 645}, "start": {"col": 17, "line": 28, "offset": 639}}, "$RET": {"abstract_content": "__s", "end": {"col": 6, "line": 28, "offset": 628}, "start": {"col": 3, "line": 28, "offset": 625}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00401e50_00401e50.c", "start": {"col": 3, "line": 28, "offset": 625}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 34, "line": 28, "offset": 656}, "extra": {"engine_kind": "OSS", "fingerprint": "2d715b1ae9d915585351fb3d503bafa11b867175da7050d0c2d35d29449c5fd61cd0d5db909da409bfc39fbabe923544d923189b567784e40cc0784e4044b3bf_0", "is_ignored": false, "lines": "  __s = (char *)malloc(sVar2 + 7);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 23, "line": 28, "offset": 645}, "start": {"col": 17, "line": 28, "offset": 639}}, "$X": {"abstract_content": "sVar2", "end": {"col": 29, "line": 28, "offset": 651}, "propagated_value": {"svalue_abstract_content": "strlen(local_3c)", "svalue_end": {"col": 27, "line": 27, "offset": 621}, "svalue_start": {"col": 11, "line": 27, "offset": 605}}, "start": {"col": 24, "line": 28, "offset": 646}}, "$Y": {"abstract_content": "7", "end": {"col": 33, "line": 28, "offset": 655}, "start": {"col": 32, "line": 28, "offset": 654}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00401e50_00401e50.c", "start": {"col": 17, "line": 28, "offset": 639}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 34, "line": 28, "offset": 656}, "extra": {"engine_kind": "OSS", "fingerprint": "cf5525c0d1c9fd7b84e06118e2d265183a877e8ba568085a77e17d945789f99761b59e17db66d50a771bd5318e6b7e8c4584a49de8fe43134c62ef071d2f7e34_0", "is_ignored": false, "lines": "  __s = (char *)malloc(sVar2 + 7);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 23, "line": 28, "offset": 645}, "start": {"col": 17, "line": 28, "offset": 639}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00401e50_00401e50.c", "start": {"col": 17, "line": 28, "offset": 639}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 50, "line": 29, "offset": 707}, "extra": {"engine_kind": "OSS", "fingerprint": "8e59bc4540d05ac94728aa2a9d681e309368e018232b2c4c1b167b42966cd63ae1892473860b6ff5a4c367cd6b04f1d3ae1121b1cdcdb86384095452fa47091f_0", "is_ignored": false, "lines": "  sprintf(__s,\"%s:%d\",local_3c,(uint)local_40[0]);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%s:%d\"", "end": {"col": 8, "line": 1, "offset": 7}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 14, "line": 29, "offset": 671}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar2+7)", "svalue_end": {"col": 34, "line": 28, "offset": 656}, "svalue_start": {"col": 9, "line": 28, "offset": 631}}, "start": {"col": 11, "line": 29, "offset": 668}}, "$FMT": {"abstract_content": "\"%s:%d\"", "end": {"col": 22, "line": 29, "offset": 679}, "start": {"col": 15, "line": 29, "offset": 672}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00401e50_00401e50.c", "start": {"col": 3, "line": 29, "offset": 660}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 50, "line": 29, "offset": 707}, "extra": {"engine_kind": "OSS", "fingerprint": "d2d0a5e4138c1161d07e10da80f6554956e5164d2dd7236642a8e73555668f4eb5607775197bb4947f9722ed5c5190eabe5b9c518f3feca3a08281f2c2229207_0", "is_ignored": false, "lines": "  sprintf(__s,\"%s:%d\",local_3c,(uint)local_40[0]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 10, "line": 29, "offset": 667}, "start": {"col": 3, "line": 29, "offset": 660}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00401e50_00401e50.c", "start": {"col": 3, "line": 29, "offset": 660}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 60, "line": 21, "offset": 400}, "extra": {"engine_kind": "OSS", "fingerprint": "39326238c46f64db6311e67d34c6493849163851b710f3f1ca5712a8a19c8dc5b0b0db1bcd72e282b19a186d9a01d5b44700d3e9b180e775c9b19b5caf23c2e0_0", "is_ignored": false, "lines": "    if (((__n <= sVar1) && (iVar2 = memcmp(__s,param_2,__n), iVar2 == 0)) &&", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar2", "end": {"col": 34, "line": 21, "offset": 374}, "start": {"col": 29, "line": 21, "offset": 369}}, "$UNSIGNED": {"abstract_content": "__n", "end": {"col": 59, "line": 21, "offset": 399}, "propagated_value": {"svalue_abstract_content": "strlen(param_2)", "svalue_end": {"col": 26, "line": 20, "offset": 339}, "svalue_start": {"col": 11, "line": 20, "offset": 324}}, "start": {"col": 56, "line": 21, "offset": 396}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00402248_00402248.c", "start": {"col": 29, "line": 21, "offset": 369}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 58, "line": 16, "offset": 339}, "extra": {"engine_kind": "OSS", "fingerprint": "0b412c4e59f7263ca3cb7cc9b8620caef4f3ccc25907b531a6bbe399a6d4fc5e2a3bb827143f0e4ef4c7a928934f6fc48ab4db9f6fa81b01e7575b360f5f48e6_0", "is_ignored": false, "lines": "  iVar3 = strncmp(*(char **)(param_1 + 4),DeviceType,__n);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar3", "end": {"col": 8, "line": 16, "offset": 289}, "start": {"col": 3, "line": 16, "offset": 284}}, "$UNSIGNED": {"abstract_content": "__n", "end": {"col": 57, "line": 16, "offset": 338}, "propagated_value": {"svalue_abstract_content": "strlen(DeviceType)", "svalue_end": {"col": 27, "line": 15, "offset": 280}, "svalue_start": {"col": 9, "line": 15, "offset": 262}}, "start": {"col": 54, "line": 16, "offset": 335}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00402b64_00402b64.c", "start": {"col": 3, "line": 16, "offset": 284}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 58, "line": 13, "offset": 250}, "extra": {"engine_kind": "OSS", "fingerprint": "974908bb0cf4c3d1fef0b6a73d3ef784eba4d8b8f1c555dac29cfbef9d1a793c919c4eae782fa9178a678b75799a0527c3ef6d2e5188da0f414338f426037166_0", "is_ignored": false, "lines": "  iVar1 = strncmp(*(char **)(param_1 + 4),DeviceType,__n);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar1", "end": {"col": 8, "line": 13, "offset": 200}, "start": {"col": 3, "line": 13, "offset": 195}}, "$UNSIGNED": {"abstract_content": "__n", "end": {"col": 57, "line": 13, "offset": 249}, "propagated_value": {"svalue_abstract_content": "strlen(DeviceType)", "svalue_end": {"col": 27, "line": 12, "offset": 191}, "svalue_start": {"col": 9, "line": 12, "offset": 173}}, "start": {"col": 54, "line": 13, "offset": 246}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00402bf8_00402bf8.c", "start": {"col": 3, "line": 13, "offset": 195}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 19, "offset": 669}, "extra": {"engine_kind": "OSS", "fingerprint": "84295c028898e8f1e82b43bc34570ab041a79c2217b161d6a5ce0aa2983504ef9bde45f3e242958fb280780927f4a4e9a68de338bca1ef1add2af0b3cdafd33c_0", "is_ignored": false, "lines": "        __dest = (char *)malloc((size_t)(ppcVar4[3] + 1));", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 25, "line": 19, "offset": 636}, "start": {"col": 19, "line": 19, "offset": 630}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 19, "offset": 643}, "start": {"col": 26, "line": 19, "offset": 637}}, "$RET": {"abstract_content": "__dest", "end": {"col": 15, "line": 19, "offset": 626}, "start": {"col": 9, "line": 19, "offset": 620}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00402e04_00402e04.c", "start": {"col": 9, "line": 19, "offset": 620}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 19, "offset": 669}, "extra": {"engine_kind": "OSS", "fingerprint": "e2f9c91285042f1e65691d69e8b1666d3883c009824217727c7a12651106fa38d9aae000e5cd4c12dab6b8afd2e897065f54531716db5bc51834a8f514ec41d5_0", "is_ignored": false, "lines": "        __dest = (char *)malloc((size_t)(ppcVar4[3] + 1));", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 19, "offset": 643}, "start": {"col": 26, "line": 19, "offset": 637}}, "$X": {"abstract_content": "ppcVar4[3]", "end": {"col": 52, "line": 19, "offset": 663}, "start": {"col": 42, "line": 19, "offset": 653}}, "$Y": {"abstract_content": "1", "end": {"col": 56, "line": 19, "offset": 667}, "start": {"col": 55, "line": 19, "offset": 666}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00402e04_00402e04.c", "start": {"col": 26, "line": 19, "offset": 637}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 19, "offset": 669}, "extra": {"engine_kind": "OSS", "fingerprint": "9e0c7a92eb0418f324081bac2288e254ed19e11378ebaf60a2a58588921f90895715828e224fa35c6794c905b24d2c013372b266dd95b849976e2ee71459ba8b_0", "is_ignored": false, "lines": "        __dest = (char *)malloc((size_t)(ppcVar4[3] + 1));", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 19, "offset": 643}, "start": {"col": 26, "line": 19, "offset": 637}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00402e04_00402e04.c", "start": {"col": 26, "line": 19, "offset": 637}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 34, "line": 20, "offset": 704}, "extra": {"engine_kind": "OSS", "fingerprint": "1d33917c5574692a592a96e8e0a9cc04ef8dc359256da033ec8afa20802dd993637a8b6e7ad7970986913571c2ed4a7c2a77737f3381db897f77c9d03c1cd2d6_0", "is_ignored": false, "lines": "        strcpy(__dest,ppcVar4[2]);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00402e04_00402e04.c", "start": {"col": 9, "line": 20, "offset": 679}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 34, "line": 20, "offset": 704}, "extra": {"engine_kind": "OSS", "fingerprint": "88e1f1f398da94bdad56485a3a7af617dca4df874559678d23cc82f3e36a818e78fe401a2930609913ca0a6cd9c36f4bbdfe280adad64f86cdd8876bb9a035d7_0", "is_ignored": false, "lines": "        strcpy(__dest,ppcVar4[2]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 15, "line": 20, "offset": 685}, "start": {"col": 9, "line": 20, "offset": 679}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00402e04_00402e04.c", "start": {"col": 9, "line": 20, "offset": 679}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 49, "line": 28, "offset": 1085}, "extra": {"engine_kind": "OSS", "fingerprint": "3ac1de71a4d285d42c40db371bae40cd1aff77bf6ad12a575bd7f2389923860dcc72ad8c66a029672df800581fb3a119bba9d27866cf014c90099dfccfed0cbb_0", "is_ignored": false, "lines": "          iVar2 = strncmp(WAN_Service,__s,sVar3);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar2", "end": {"col": 16, "line": 28, "offset": 1052}, "start": {"col": 11, "line": 28, "offset": 1047}}, "$UNSIGNED": {"abstract_content": "sVar3", "end": {"col": 48, "line": 28, "offset": 1084}, "propagated_value": {"svalue_abstract_content": "strlen(WAN_Service)", "svalue_end": {"col": 38, "line": 27, "offset": 1035}, "svalue_start": {"col": 19, "line": 27, "offset": 1016}}, "start": {"col": 43, "line": 28, "offset": 1079}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00402e04_00402e04.c", "start": {"col": 11, "line": 28, "offset": 1047}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 35, "line": 41, "offset": 785}, "extra": {"engine_kind": "OSS", "fingerprint": "8b8202a15f2331ebe79a27c17fec1a288371dd8aa79ba0946bbc0e799cefa87acad7c4c8858caf2ac4ed87bfc830710e16a3d962988a498468a0acb311814956_0", "is_ignored": false, "lines": "  __s = (undefined4 *)malloc(0x5c);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "undefined4*", "end": {"col": 22, "line": 41, "offset": 772}, "start": {"col": 10, "line": 41, "offset": 760}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 29, "line": 41, "offset": 779}, "start": {"col": 23, "line": 41, "offset": 773}}, "$RET": {"abstract_content": "__s", "end": {"col": 6, "line": 41, "offset": 756}, "start": {"col": 3, "line": 41, "offset": 753}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 3, "line": 41, "offset": 753}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 41, "offset": 785}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_0", "is_ignored": false, "lines": "  __s = (undefined4 *)malloc(0x5c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 29, "line": 41, "offset": 779}, "start": {"col": 23, "line": 41, "offset": 773}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 23, "line": 41, "offset": 773}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 35, "line": 41, "offset": 785}, "extra": {"engine_kind": "OSS", "fingerprint": "d45a6b68125c8c970283ef26dfab3319e29c6ef9f92096a2c98c6ee75423fba997fee94044ac8e21ea809820f0db90054acbecd2a75f0389aacdd3199f43d695_0", "is_ignored": false, "lines": "  __s = (undefined4 *)malloc(0x5c);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x5c", "end": {"col": 34, "line": 41, "offset": 784}, "start": {"col": 30, "line": 41, "offset": 780}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 23, "line": 41, "offset": 773}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 21, "line": 42, "offset": 807}, "extra": {"engine_kind": "OSS", "fingerprint": "64463716943a8cd6701e1fd75159c0212bcc2bf3fb86e42f2fae7f154f1d83053c863fadc2bd582b04e9ba2e8c184bd0557062bee4f5f9723dc9ad29747962ab_0", "is_ignored": false, "lines": "  memset(__s,0,0x5c);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 15, "line": 42, "offset": 801}, "start": {"col": 14, "line": 42, "offset": 800}}, "$DST": {"abstract_content": "__s", "end": {"col": 13, "line": 42, "offset": 799}, "propagated_value": {"svalue_abstract_content": "(undefined4*malloc(0x5c)", "svalue_end": {"col": 35, "line": 41, "offset": 785}, "svalue_start": {"col": 9, "line": 41, "offset": 759}}, "start": {"col": 10, "line": 42, "offset": 796}}, "$LEN": {"abstract_content": "0x5c", "end": {"col": 20, "line": 42, "offset": 806}, "start": {"col": 16, "line": 42, "offset": 802}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 3, "line": 42, "offset": 789}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 32, "line": 45, "offset": 881}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_1", "is_ignored": false, "lines": "  pcVar2 = (char *)malloc(0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 45, "offset": 875}, "start": {"col": 20, "line": 45, "offset": 869}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 20, "line": 45, "offset": 869}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 32, "line": 45, "offset": 881}, "extra": {"engine_kind": "OSS", "fingerprint": "94ad301e7c7a6fef9a883899024a104a19d6ba9fe58d818ec00528980b1a549648e919f1e2ac50b0d3b8e5684cdf5553394bd989845d2c91033a361adb88bd31_0", "is_ignored": false, "lines": "  pcVar2 = (char *)malloc(0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x10", "end": {"col": 31, "line": 45, "offset": 880}, "start": {"col": 27, "line": 45, "offset": 876}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 20, "line": 45, "offset": 869}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 48, "offset": 1039}, "extra": {"engine_kind": "OSS", "fingerprint": "b5cce5eaa0f1b470974f955783ef736fd5f8ddb42fae1fe4ba3c501a738530c42ca1c58fd54c5d3303f65c2d26de906b48b6ac8db71c57d1fd8729d471a5f27f_0", "is_ignored": false, "lines": "  sprintf(pcVar2,\"%d.%d.%d.%d\",param_5 & 0xff,(int)param_5 >> 8 & 0xff,(int)param_5 >> 0x10 & 0xff,\n          param_5 >> 0x18,puVar12);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 10, "line": 47, "offset": 914}, "start": {"col": 3, "line": 47, "offset": 907}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 3, "line": 47, "offset": 907}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 38, "line": 78, "offset": 2147}, "extra": {"engine_kind": "OSS", "fingerprint": "5715b483fcc54983b40ee2db32773f428bad90151e1d25e02660e5548dfb3c5695f09cd05b028312741cba68c2a74b2296709414e1ff3e285d3d7af0fa7ad24c_0", "is_ignored": false, "lines": "          pvVar11 = malloc(sVar4 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 78, "offset": 2136}, "start": {"col": 21, "line": 78, "offset": 2130}}, "$RET": {"abstract_content": "pvVar11", "end": {"col": 18, "line": 78, "offset": 2127}, "start": {"col": 11, "line": 78, "offset": 2120}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 11, "line": 78, "offset": 2120}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 38, "line": 78, "offset": 2147}, "extra": {"engine_kind": "OSS", "fingerprint": "9cd942039ba2dc917819236b79082186e27f43e312d198d4d25ea1b77f0420f94e5e0bd6cc2bc6a2c659c5bf35cdf9672b90814187b53a9193015270e9af1b85_0", "is_ignored": false, "lines": "          pvVar11 = malloc(sVar4 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 78, "offset": 2136}, "start": {"col": 21, "line": 78, "offset": 2130}}, "$X": {"abstract_content": "sVar4", "end": {"col": 33, "line": 78, "offset": 2142}, "start": {"col": 28, "line": 78, "offset": 2137}}, "$Y": {"abstract_content": "1", "end": {"col": 37, "line": 78, "offset": 2146}, "start": {"col": 36, "line": 78, "offset": 2145}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 21, "line": 78, "offset": 2130}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 78, "offset": 2147}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_2", "is_ignored": false, "lines": "          pvVar11 = malloc(sVar4 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 78, "offset": 2136}, "start": {"col": 21, "line": 78, "offset": 2130}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 21, "line": 78, "offset": 2130}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 80, "offset": 2217}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_0", "is_ignored": false, "lines": "          memcpy(pvVar11,local_68,sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 17, "line": 80, "offset": 2193}, "start": {"col": 11, "line": 80, "offset": 2187}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 11, "line": 80, "offset": 2187}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 40, "line": 89, "offset": 2540}, "extra": {"engine_kind": "OSS", "fingerprint": "5715b483fcc54983b40ee2db32773f428bad90151e1d25e02660e5548dfb3c5695f09cd05b028312741cba68c2a74b2296709414e1ff3e285d3d7af0fa7ad24c_1", "is_ignored": false, "lines": "            pvVar11 = malloc(sVar4 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 29, "line": 89, "offset": 2529}, "start": {"col": 23, "line": 89, "offset": 2523}}, "$RET": {"abstract_content": "pvVar11", "end": {"col": 20, "line": 89, "offset": 2520}, "start": {"col": 13, "line": 89, "offset": 2513}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 13, "line": 89, "offset": 2513}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 40, "line": 89, "offset": 2540}, "extra": {"engine_kind": "OSS", "fingerprint": "9cd942039ba2dc917819236b79082186e27f43e312d198d4d25ea1b77f0420f94e5e0bd6cc2bc6a2c659c5bf35cdf9672b90814187b53a9193015270e9af1b85_1", "is_ignored": false, "lines": "            pvVar11 = malloc(sVar4 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 29, "line": 89, "offset": 2529}, "start": {"col": 23, "line": 89, "offset": 2523}}, "$X": {"abstract_content": "sVar4", "end": {"col": 35, "line": 89, "offset": 2535}, "start": {"col": 30, "line": 89, "offset": 2530}}, "$Y": {"abstract_content": "1", "end": {"col": 39, "line": 89, "offset": 2539}, "start": {"col": 38, "line": 89, "offset": 2538}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 23, "line": 89, "offset": 2523}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 89, "offset": 2540}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_3", "is_ignored": false, "lines": "            pvVar11 = malloc(sVar4 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 29, "line": 89, "offset": 2529}, "start": {"col": 23, "line": 89, "offset": 2523}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 23, "line": 89, "offset": 2523}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 43, "line": 91, "offset": 2614}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_1", "is_ignored": false, "lines": "            memcpy(pvVar11,local_68,sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 19, "line": 91, "offset": 2590}, "start": {"col": 13, "line": 91, "offset": 2584}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 13, "line": 91, "offset": 2584}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 40, "line": 103, "offset": 3004}, "extra": {"engine_kind": "OSS", "fingerprint": "5715b483fcc54983b40ee2db32773f428bad90151e1d25e02660e5548dfb3c5695f09cd05b028312741cba68c2a74b2296709414e1ff3e285d3d7af0fa7ad24c_2", "is_ignored": false, "lines": "            pvVar11 = malloc(sVar4 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 29, "line": 103, "offset": 2993}, "start": {"col": 23, "line": 103, "offset": 2987}}, "$RET": {"abstract_content": "pvVar11", "end": {"col": 20, "line": 103, "offset": 2984}, "start": {"col": 13, "line": 103, "offset": 2977}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 13, "line": 103, "offset": 2977}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 40, "line": 103, "offset": 3004}, "extra": {"engine_kind": "OSS", "fingerprint": "9cd942039ba2dc917819236b79082186e27f43e312d198d4d25ea1b77f0420f94e5e0bd6cc2bc6a2c659c5bf35cdf9672b90814187b53a9193015270e9af1b85_2", "is_ignored": false, "lines": "            pvVar11 = malloc(sVar4 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 29, "line": 103, "offset": 2993}, "start": {"col": 23, "line": 103, "offset": 2987}}, "$X": {"abstract_content": "sVar4", "end": {"col": 35, "line": 103, "offset": 2999}, "start": {"col": 30, "line": 103, "offset": 2994}}, "$Y": {"abstract_content": "1", "end": {"col": 39, "line": 103, "offset": 3003}, "start": {"col": 38, "line": 103, "offset": 3002}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 23, "line": 103, "offset": 2987}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 103, "offset": 3004}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_4", "is_ignored": false, "lines": "            pvVar11 = malloc(sVar4 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 29, "line": 103, "offset": 2993}, "start": {"col": 23, "line": 103, "offset": 2987}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 23, "line": 103, "offset": 2987}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 43, "line": 105, "offset": 3079}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_2", "is_ignored": false, "lines": "            memcpy(pvVar11,local_68,sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 19, "line": 105, "offset": 3055}, "start": {"col": 13, "line": 105, "offset": 3049}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 13, "line": 105, "offset": 3049}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 42, "line": 114, "offset": 3415}, "extra": {"engine_kind": "OSS", "fingerprint": "5715b483fcc54983b40ee2db32773f428bad90151e1d25e02660e5548dfb3c5695f09cd05b028312741cba68c2a74b2296709414e1ff3e285d3d7af0fa7ad24c_3", "is_ignored": false, "lines": "              pvVar11 = malloc(sVar4 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 114, "offset": 3404}, "start": {"col": 25, "line": 114, "offset": 3398}}, "$RET": {"abstract_content": "pvVar11", "end": {"col": 22, "line": 114, "offset": 3395}, "start": {"col": 15, "line": 114, "offset": 3388}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 15, "line": 114, "offset": 3388}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 42, "line": 114, "offset": 3415}, "extra": {"engine_kind": "OSS", "fingerprint": "9cd942039ba2dc917819236b79082186e27f43e312d198d4d25ea1b77f0420f94e5e0bd6cc2bc6a2c659c5bf35cdf9672b90814187b53a9193015270e9af1b85_3", "is_ignored": false, "lines": "              pvVar11 = malloc(sVar4 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 114, "offset": 3404}, "start": {"col": 25, "line": 114, "offset": 3398}}, "$X": {"abstract_content": "sVar4", "end": {"col": 37, "line": 114, "offset": 3410}, "start": {"col": 32, "line": 114, "offset": 3405}}, "$Y": {"abstract_content": "1", "end": {"col": 41, "line": 114, "offset": 3414}, "start": {"col": 40, "line": 114, "offset": 3413}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 25, "line": 114, "offset": 3398}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 42, "line": 114, "offset": 3415}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_5", "is_ignored": false, "lines": "              pvVar11 = malloc(sVar4 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 114, "offset": 3404}, "start": {"col": 25, "line": 114, "offset": 3398}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 25, "line": 114, "offset": 3398}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 45, "line": 116, "offset": 3495}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_3", "is_ignored": false, "lines": "              memcpy(pvVar11,local_68,sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 21, "line": 116, "offset": 3471}, "start": {"col": 15, "line": 116, "offset": 3465}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 15, "line": 116, "offset": 3465}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 72, "line": 127, "offset": 3952}, "extra": {"engine_kind": "OSS", "fingerprint": "780e80286bcb7ba46d9f081a8fbd6dd681a97176a178299849f012c628940cdfa8f5eaa7ed8519f2b8aba26a86ec9f277f0896046c3c5a55b4180b5715cf721a_0", "is_ignored": false, "lines": "              iVar3 = ILibParseString(local_68,0,sVar4,&DAT_00415bb4,3);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar3", "end": {"col": 20, "line": 127, "offset": 3900}, "start": {"col": 15, "line": 127, "offset": 3895}}, "$UNSIGNED": {"abstract_content": "sVar4", "end": {"col": 55, "line": 127, "offset": 3935}, "start": {"col": 50, "line": 127, "offset": 3930}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 15, "line": 127, "offset": 3895}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 55, "line": 131, "offset": 4138}, "extra": {"engine_kind": "OSS", "fingerprint": "5715b483fcc54983b40ee2db32773f428bad90151e1d25e02660e5548dfb3c5695f09cd05b028312741cba68c2a74b2296709414e1ff3e285d3d7af0fa7ad24c_4", "is_ignored": false, "lines": "                  pvVar11 = malloc(sVar4 + 1 + sVar10);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 35, "line": 131, "offset": 4118}, "start": {"col": 29, "line": 131, "offset": 4112}}, "$RET": {"abstract_content": "pvVar11", "end": {"col": 26, "line": 131, "offset": 4109}, "start": {"col": 19, "line": 131, "offset": 4102}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 131, "offset": 4102}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 55, "line": 131, "offset": 4138}, "extra": {"engine_kind": "OSS", "fingerprint": "dfafb195c568c9d6dde681cbc6f5cac0f20feecc51df29e71f095e12b22af3c54bf3b06d724642fc2093d7c8667c1ebb5a25ee6e89c814a88104469bca9ba8af_0", "is_ignored": false, "lines": "                  pvVar11 = malloc(sVar4 + 1 + sVar10);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 35, "line": 131, "offset": 4118}, "start": {"col": 29, "line": 131, "offset": 4112}}, "$X": {"abstract_content": "sVar4+1", "end": {"col": 45, "line": 131, "offset": 4128}, "start": {"col": 36, "line": 131, "offset": 4119}}, "$Y": {"abstract_content": "sVar10", "end": {"col": 54, "line": 131, "offset": 4137}, "propagated_value": {"svalue_abstract_content": "strlen(param_3)", "svalue_end": {"col": 43, "line": 130, "offset": 4082}, "svalue_start": {"col": 28, "line": 130, "offset": 4067}}, "start": {"col": 48, "line": 131, "offset": 4131}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 29, "line": 131, "offset": 4112}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 55, "line": 131, "offset": 4138}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_6", "is_ignored": false, "lines": "                  pvVar11 = malloc(sVar4 + 1 + sVar10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 35, "line": 131, "offset": 4118}, "start": {"col": 29, "line": 131, "offset": 4112}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 29, "line": 131, "offset": 4112}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 48, "line": 134, "offset": 4266}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_4", "is_ignored": false, "lines": "                  memcpy(pvVar11,param_3,sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 25, "line": 134, "offset": 4243}, "start": {"col": 19, "line": 134, "offset": 4237}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 134, "offset": 4237}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 55, "line": 141, "offset": 4544}, "extra": {"engine_kind": "OSS", "fingerprint": "5715b483fcc54983b40ee2db32773f428bad90151e1d25e02660e5548dfb3c5695f09cd05b028312741cba68c2a74b2296709414e1ff3e285d3d7af0fa7ad24c_5", "is_ignored": false, "lines": "                  pvVar11 = malloc(sVar4 + 2 + sVar10);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 35, "line": 141, "offset": 4524}, "start": {"col": 29, "line": 141, "offset": 4518}}, "$RET": {"abstract_content": "pvVar11", "end": {"col": 26, "line": 141, "offset": 4515}, "start": {"col": 19, "line": 141, "offset": 4508}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 141, "offset": 4508}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 55, "line": 141, "offset": 4544}, "extra": {"engine_kind": "OSS", "fingerprint": "78080c58e3a04e9d782a6544e9862fb0eacabe23ad21c035984a7caa4c0164e900fe02ad1911358ee551e44ec2436adb9b756e80827715a3681f8e95700661c6_0", "is_ignored": false, "lines": "                  pvVar11 = malloc(sVar4 + 2 + sVar10);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 35, "line": 141, "offset": 4524}, "start": {"col": 29, "line": 141, "offset": 4518}}, "$X": {"abstract_content": "sVar4+2", "end": {"col": 45, "line": 141, "offset": 4534}, "start": {"col": 36, "line": 141, "offset": 4525}}, "$Y": {"abstract_content": "sVar10", "end": {"col": 54, "line": 141, "offset": 4543}, "propagated_value": {"svalue_abstract_content": "strlen(param_3)", "svalue_end": {"col": 43, "line": 140, "offset": 4488}, "svalue_start": {"col": 28, "line": 140, "offset": 4473}}, "start": {"col": 48, "line": 141, "offset": 4537}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 29, "line": 141, "offset": 4518}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 55, "line": 141, "offset": 4544}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_7", "is_ignored": false, "lines": "                  pvVar11 = malloc(sVar4 + 2 + sVar10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 35, "line": 141, "offset": 4524}, "start": {"col": 29, "line": 141, "offset": 4518}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 29, "line": 141, "offset": 4518}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 48, "line": 144, "offset": 4672}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_5", "is_ignored": false, "lines": "                  memcpy(pvVar11,param_3,sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 25, "line": 144, "offset": 4649}, "start": {"col": 19, "line": 144, "offset": 4643}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 144, "offset": 4643}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 38, "line": 149, "offset": 4862}, "extra": {"engine_kind": "OSS", "fingerprint": "e9d8ddde4db4411985a2f09c4fea1b78233a150156949d3e2fb06d54ba9e54f6c03473aecfd4befb6e274e48db711243d6d05737a684088fb96a62d909f0821e_0", "is_ignored": false, "lines": "                strcpy(__dest,pcVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 17, "line": 149, "offset": 4841}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 149, "offset": 4862}, "extra": {"engine_kind": "OSS", "fingerprint": "dc63cb7f256df65e33a8aa61763a45e98312ba7b5d0f7bdf54b7e2e7e3033444591e21b2c5d85c1b2c28e75799493f235bd60fd91a83bbda9ffd0cf3b6e671bc_0", "is_ignored": false, "lines": "                strcpy(__dest,pcVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 23, "line": 149, "offset": 4847}, "start": {"col": 17, "line": 149, "offset": 4841}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 17, "line": 149, "offset": 4841}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 44, "line": 152, "offset": 4944}, "extra": {"engine_kind": "OSS", "fingerprint": "5715b483fcc54983b40ee2db32773f428bad90151e1d25e02660e5548dfb3c5695f09cd05b028312741cba68c2a74b2296709414e1ff3e285d3d7af0fa7ad24c_6", "is_ignored": false, "lines": "                pvVar11 = malloc(sVar4 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 33, "line": 152, "offset": 4933}, "start": {"col": 27, "line": 152, "offset": 4927}}, "$RET": {"abstract_content": "pvVar11", "end": {"col": 24, "line": 152, "offset": 4924}, "start": {"col": 17, "line": 152, "offset": 4917}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 17, "line": 152, "offset": 4917}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 44, "line": 152, "offset": 4944}, "extra": {"engine_kind": "OSS", "fingerprint": "9cd942039ba2dc917819236b79082186e27f43e312d198d4d25ea1b77f0420f94e5e0bd6cc2bc6a2c659c5bf35cdf9672b90814187b53a9193015270e9af1b85_4", "is_ignored": false, "lines": "                pvVar11 = malloc(sVar4 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 33, "line": 152, "offset": 4933}, "start": {"col": 27, "line": 152, "offset": 4927}}, "$X": {"abstract_content": "sVar4", "end": {"col": 39, "line": 152, "offset": 4939}, "start": {"col": 34, "line": 152, "offset": 4934}}, "$Y": {"abstract_content": "1", "end": {"col": 43, "line": 152, "offset": 4943}, "start": {"col": 42, "line": 152, "offset": 4942}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 27, "line": 152, "offset": 4927}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 44, "line": 152, "offset": 4944}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_8", "is_ignored": false, "lines": "                pvVar11 = malloc(sVar4 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 33, "line": 152, "offset": 4933}, "start": {"col": 27, "line": 152, "offset": 4927}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 27, "line": 152, "offset": 4927}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 154, "offset": 5026}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_6", "is_ignored": false, "lines": "                memcpy(pvVar11,local_68,sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 23, "line": 154, "offset": 5002}, "start": {"col": 17, "line": 154, "offset": 4996}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 17, "line": 154, "offset": 4996}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 28, "line": 171, "offset": 5534}, "extra": {"engine_kind": "OSS", "fingerprint": "2ef549e38d8680a968ac48d6ce81b3dd7307e080879a51b86739b6b4bf11083d3ab37c6de31d2ed152b13e891f6248d71bf9e031b096d112209ee405895eb86e_0", "is_ignored": false, "lines": "          sVar4 = sVar4 - 5;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "5", "end": {"col": 28, "line": 171, "offset": 5534}, "start": {"col": 27, "line": 171, "offset": 5533}}, "$UNSIGNED": {"abstract_content": "sVar4", "end": {"col": 16, "line": 171, "offset": 5522}, "start": {"col": 11, "line": 171, "offset": 5517}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 11, "line": 171, "offset": 5517}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 36, "line": 174, "offset": 5614}, "extra": {"engine_kind": "OSS", "fingerprint": "5715b483fcc54983b40ee2db32773f428bad90151e1d25e02660e5548dfb3c5695f09cd05b028312741cba68c2a74b2296709414e1ff3e285d3d7af0fa7ad24c_7", "is_ignored": false, "lines": "        pvVar11 = malloc(sVar4 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 174, "offset": 5603}, "start": {"col": 19, "line": 174, "offset": 5597}}, "$RET": {"abstract_content": "pvVar11", "end": {"col": 16, "line": 174, "offset": 5594}, "start": {"col": 9, "line": 174, "offset": 5587}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 9, "line": 174, "offset": 5587}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 36, "line": 174, "offset": 5614}, "extra": {"engine_kind": "OSS", "fingerprint": "9cd942039ba2dc917819236b79082186e27f43e312d198d4d25ea1b77f0420f94e5e0bd6cc2bc6a2c659c5bf35cdf9672b90814187b53a9193015270e9af1b85_5", "is_ignored": false, "lines": "        pvVar11 = malloc(sVar4 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 174, "offset": 5603}, "start": {"col": 19, "line": 174, "offset": 5597}}, "$X": {"abstract_content": "sVar4", "end": {"col": 31, "line": 174, "offset": 5609}, "start": {"col": 26, "line": 174, "offset": 5604}}, "$Y": {"abstract_content": "1", "end": {"col": 35, "line": 174, "offset": 5613}, "start": {"col": 34, "line": 174, "offset": 5612}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 174, "offset": 5597}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 174, "offset": 5614}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_9", "is_ignored": false, "lines": "        pvVar11 = malloc(sVar4 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 174, "offset": 5603}, "start": {"col": 19, "line": 174, "offset": 5597}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 174, "offset": 5597}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 176, "offset": 5680}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_7", "is_ignored": false, "lines": "        memcpy(pvVar11,local_68,sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 15, "line": 176, "offset": 5656}, "start": {"col": 9, "line": 176, "offset": 5650}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 9, "line": 176, "offset": 5650}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 38, "line": 187, "offset": 6019}, "extra": {"engine_kind": "OSS", "fingerprint": "5715b483fcc54983b40ee2db32773f428bad90151e1d25e02660e5548dfb3c5695f09cd05b028312741cba68c2a74b2296709414e1ff3e285d3d7af0fa7ad24c_8", "is_ignored": false, "lines": "          pvVar11 = malloc(sVar4 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 187, "offset": 6008}, "start": {"col": 21, "line": 187, "offset": 6002}}, "$RET": {"abstract_content": "pvVar11", "end": {"col": 18, "line": 187, "offset": 5999}, "start": {"col": 11, "line": 187, "offset": 5992}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 11, "line": 187, "offset": 5992}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 38, "line": 187, "offset": 6019}, "extra": {"engine_kind": "OSS", "fingerprint": "9cd942039ba2dc917819236b79082186e27f43e312d198d4d25ea1b77f0420f94e5e0bd6cc2bc6a2c659c5bf35cdf9672b90814187b53a9193015270e9af1b85_6", "is_ignored": false, "lines": "          pvVar11 = malloc(sVar4 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 187, "offset": 6008}, "start": {"col": 21, "line": 187, "offset": 6002}}, "$X": {"abstract_content": "sVar4", "end": {"col": 33, "line": 187, "offset": 6014}, "start": {"col": 28, "line": 187, "offset": 6009}}, "$Y": {"abstract_content": "1", "end": {"col": 37, "line": 187, "offset": 6018}, "start": {"col": 36, "line": 187, "offset": 6017}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 21, "line": 187, "offset": 6002}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 187, "offset": 6019}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_10", "is_ignored": false, "lines": "          pvVar11 = malloc(sVar4 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 187, "offset": 6008}, "start": {"col": 21, "line": 187, "offset": 6002}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 21, "line": 187, "offset": 6002}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 189, "offset": 6089}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_8", "is_ignored": false, "lines": "          memcpy(pvVar11,local_68,sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 17, "line": 189, "offset": 6065}, "start": {"col": 11, "line": 189, "offset": 6059}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 11, "line": 189, "offset": 6059}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 38, "line": 196, "offset": 6358}, "extra": {"engine_kind": "OSS", "fingerprint": "5715b483fcc54983b40ee2db32773f428bad90151e1d25e02660e5548dfb3c5695f09cd05b028312741cba68c2a74b2296709414e1ff3e285d3d7af0fa7ad24c_9", "is_ignored": false, "lines": "          pvVar11 = malloc(sVar4 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 196, "offset": 6347}, "start": {"col": 21, "line": 196, "offset": 6341}}, "$RET": {"abstract_content": "pvVar11", "end": {"col": 18, "line": 196, "offset": 6338}, "start": {"col": 11, "line": 196, "offset": 6331}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 11, "line": 196, "offset": 6331}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 38, "line": 196, "offset": 6358}, "extra": {"engine_kind": "OSS", "fingerprint": "9cd942039ba2dc917819236b79082186e27f43e312d198d4d25ea1b77f0420f94e5e0bd6cc2bc6a2c659c5bf35cdf9672b90814187b53a9193015270e9af1b85_7", "is_ignored": false, "lines": "          pvVar11 = malloc(sVar4 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 196, "offset": 6347}, "start": {"col": 21, "line": 196, "offset": 6341}}, "$X": {"abstract_content": "sVar4", "end": {"col": 33, "line": 196, "offset": 6353}, "start": {"col": 28, "line": 196, "offset": 6348}}, "$Y": {"abstract_content": "1", "end": {"col": 37, "line": 196, "offset": 6357}, "start": {"col": 36, "line": 196, "offset": 6356}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 21, "line": 196, "offset": 6341}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 196, "offset": 6358}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_11", "is_ignored": false, "lines": "          pvVar11 = malloc(sVar4 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 196, "offset": 6347}, "start": {"col": 21, "line": 196, "offset": 6341}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 21, "line": 196, "offset": 6341}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 198, "offset": 6428}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_9", "is_ignored": false, "lines": "          memcpy(pvVar11,local_68,sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 17, "line": 198, "offset": 6404}, "start": {"col": 11, "line": 198, "offset": 6398}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 11, "line": 198, "offset": 6398}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 38, "line": 207, "offset": 6741}, "extra": {"engine_kind": "OSS", "fingerprint": "5715b483fcc54983b40ee2db32773f428bad90151e1d25e02660e5548dfb3c5695f09cd05b028312741cba68c2a74b2296709414e1ff3e285d3d7af0fa7ad24c_10", "is_ignored": false, "lines": "          pvVar11 = malloc(sVar4 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 207, "offset": 6730}, "start": {"col": 21, "line": 207, "offset": 6724}}, "$RET": {"abstract_content": "pvVar11", "end": {"col": 18, "line": 207, "offset": 6721}, "start": {"col": 11, "line": 207, "offset": 6714}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 11, "line": 207, "offset": 6714}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 38, "line": 207, "offset": 6741}, "extra": {"engine_kind": "OSS", "fingerprint": "9cd942039ba2dc917819236b79082186e27f43e312d198d4d25ea1b77f0420f94e5e0bd6cc2bc6a2c659c5bf35cdf9672b90814187b53a9193015270e9af1b85_8", "is_ignored": false, "lines": "          pvVar11 = malloc(sVar4 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 207, "offset": 6730}, "start": {"col": 21, "line": 207, "offset": 6724}}, "$X": {"abstract_content": "sVar4", "end": {"col": 33, "line": 207, "offset": 6736}, "start": {"col": 28, "line": 207, "offset": 6731}}, "$Y": {"abstract_content": "1", "end": {"col": 37, "line": 207, "offset": 6740}, "start": {"col": 36, "line": 207, "offset": 6739}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 21, "line": 207, "offset": 6724}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 207, "offset": 6741}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_12", "is_ignored": false, "lines": "          pvVar11 = malloc(sVar4 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 207, "offset": 6730}, "start": {"col": 21, "line": 207, "offset": 6724}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 21, "line": 207, "offset": 6724}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 209, "offset": 6811}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_10", "is_ignored": false, "lines": "          memcpy(pvVar11,local_68,sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 17, "line": 209, "offset": 6787}, "start": {"col": 11, "line": 209, "offset": 6781}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 11, "line": 209, "offset": 6781}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 36, "line": 219, "offset": 7161}, "extra": {"engine_kind": "OSS", "fingerprint": "5715b483fcc54983b40ee2db32773f428bad90151e1d25e02660e5548dfb3c5695f09cd05b028312741cba68c2a74b2296709414e1ff3e285d3d7af0fa7ad24c_11", "is_ignored": false, "lines": "        pvVar11 = malloc(sVar4 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 219, "offset": 7150}, "start": {"col": 19, "line": 219, "offset": 7144}}, "$RET": {"abstract_content": "pvVar11", "end": {"col": 16, "line": 219, "offset": 7141}, "start": {"col": 9, "line": 219, "offset": 7134}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 9, "line": 219, "offset": 7134}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 36, "line": 219, "offset": 7161}, "extra": {"engine_kind": "OSS", "fingerprint": "9cd942039ba2dc917819236b79082186e27f43e312d198d4d25ea1b77f0420f94e5e0bd6cc2bc6a2c659c5bf35cdf9672b90814187b53a9193015270e9af1b85_9", "is_ignored": false, "lines": "        pvVar11 = malloc(sVar4 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 219, "offset": 7150}, "start": {"col": 19, "line": 219, "offset": 7144}}, "$X": {"abstract_content": "sVar4", "end": {"col": 31, "line": 219, "offset": 7156}, "start": {"col": 26, "line": 219, "offset": 7151}}, "$Y": {"abstract_content": "1", "end": {"col": 35, "line": 219, "offset": 7160}, "start": {"col": 34, "line": 219, "offset": 7159}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 219, "offset": 7144}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 219, "offset": 7161}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_13", "is_ignored": false, "lines": "        pvVar11 = malloc(sVar4 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 219, "offset": 7150}, "start": {"col": 19, "line": 219, "offset": 7144}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 219, "offset": 7144}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 221, "offset": 7227}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_11", "is_ignored": false, "lines": "        memcpy(pvVar11,local_68,sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 15, "line": 221, "offset": 7203}, "start": {"col": 9, "line": 221, "offset": 7197}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 9, "line": 221, "offset": 7197}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 24, "line": 240, "offset": 7932}, "extra": {"engine_kind": "OSS", "fingerprint": "af8fcb9eba7601f9419a13eabb97ab0d31e41422804ad2f7343b259fc5881c7f01374c6f0216ccd0b46ff103d124b83089ca77c6c7dd06833547a0b5b4f81410_0", "is_ignored": false, "lines": "              sVar4 = 0;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0", "end": {"col": 24, "line": 240, "offset": 7932}, "start": {"col": 23, "line": 240, "offset": 7931}}, "$UNSIGNED": {"abstract_content": "sVar4", "end": {"col": 20, "line": 240, "offset": 7928}, "start": {"col": 15, "line": 240, "offset": 7923}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 15, "line": 240, "offset": 7923}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 26, "line": 243, "offset": 8031}, "extra": {"engine_kind": "OSS", "fingerprint": "8ea9c19b4339f1eb9ec1fdb7c7ab323856099cd2e939dee7e709cab8d5442f5d28de64c44721fbab8576ec2c4d1e0dedb2594ce6723bc356de7e9cffceb05f19_0", "is_ignored": false, "lines": "                sVar7 = 0;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0", "end": {"col": 26, "line": 243, "offset": 8031}, "start": {"col": 25, "line": 243, "offset": 8030}}, "$UNSIGNED": {"abstract_content": "sVar7", "end": {"col": 22, "line": 243, "offset": 8027}, "start": {"col": 17, "line": 243, "offset": 8022}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 17, "line": 243, "offset": 8022}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 27, "line": 245, "offset": 8099}, "extra": {"engine_kind": "OSS", "fingerprint": "765607889c39fa677401e5cecc3858f509c68cc846767a131092da9c6cf028e4f4448006a2e9c39f95980b0f00b7af05be5d832b8547cf57906d228a22c698cb_0", "is_ignored": false, "lines": "                sVar10 = 0;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0", "end": {"col": 27, "line": 245, "offset": 8099}, "start": {"col": 26, "line": 245, "offset": 8098}}, "$UNSIGNED": {"abstract_content": "sVar10", "end": {"col": 23, "line": 245, "offset": 8095}, "start": {"col": 17, "line": 245, "offset": 8089}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 17, "line": 245, "offset": 8089}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 48, "line": 283, "offset": 9762}, "extra": {"engine_kind": "OSS", "fingerprint": "25e931c97c783ad133848bff210811dc5e57ae5775f96f71a327e730fc0540e612fcc597deb643566188c332b00aef43b430f63045503a888b0274b717027b56_0", "is_ignored": false, "lines": "                ppcVar5 = (char **)malloc(0x28);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char**", "end": {"col": 35, "line": 283, "offset": 9749}, "start": {"col": 28, "line": 283, "offset": 9742}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 42, "line": 283, "offset": 9756}, "start": {"col": 36, "line": 283, "offset": 9750}}, "$RET": {"abstract_content": "ppcVar5", "end": {"col": 24, "line": 283, "offset": 9738}, "start": {"col": 17, "line": 283, "offset": 9731}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 17, "line": 283, "offset": 9731}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 48, "line": 283, "offset": 9762}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_14", "is_ignored": false, "lines": "                ppcVar5 = (char **)malloc(0x28);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 42, "line": 283, "offset": 9756}, "start": {"col": 36, "line": 283, "offset": 9750}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 36, "line": 283, "offset": 9750}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 48, "line": 283, "offset": 9762}, "extra": {"engine_kind": "OSS", "fingerprint": "d7b070fa4c960c7a2e2337b2665707508bdeafe761015f337947094a1483e67512941cd848fbaae2c61c81294669ecadeea8905652e277a4bce4a56837ef86fa_0", "is_ignored": false, "lines": "                ppcVar5 = (char **)malloc(0x28);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x28", "end": {"col": 47, "line": 283, "offset": 9761}, "start": {"col": 43, "line": 283, "offset": 9757}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 36, "line": 283, "offset": 9750}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 291, "offset": 10152}, "extra": {"engine_kind": "OSS", "fingerprint": "011d7e588fc8facb341756c1628045538fb0ba1afe006d01401e934db1cab1b0165eda05db48f4e17ddab37267fb471a757a68fb67d5d3e67a1281375fc843b8_0", "is_ignored": false, "lines": "                  local_48 = sVar7 + 1;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "local_48", "end": {"col": 27, "line": 291, "offset": 10140}, "start": {"col": 19, "line": 291, "offset": 10132}}, "$UNSIGNED": {"abstract_content": "sVar7", "end": {"col": 35, "line": 291, "offset": 10148}, "start": {"col": 30, "line": 291, "offset": 10143}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 291, "offset": 10132}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 64, "line": 294, "offset": 10304}, "extra": {"engine_kind": "OSS", "fingerprint": "f5ea643105cd2cba76001f97c09df6a8965543dede97359c65abddedc62ec666901ba6bc40e71daa2bfd4e67893c451bb2ea85eb8b874464ec99065e0b252de0_0", "is_ignored": false, "lines": "                    local_2c = (char *)malloc(local_48 + sVar6);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 39, "line": 294, "offset": 10279}, "start": {"col": 33, "line": 294, "offset": 10273}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 46, "line": 294, "offset": 10286}, "start": {"col": 40, "line": 294, "offset": 10280}}, "$RET": {"abstract_content": "local_2c", "end": {"col": 29, "line": 294, "offset": 10269}, "start": {"col": 21, "line": 294, "offset": 10261}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 21, "line": 294, "offset": 10261}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 64, "line": 294, "offset": 10304}, "extra": {"engine_kind": "OSS", "fingerprint": "64a586704922d4076b0d669745f7240a6340b2189c3e6d50f912990e4168fb1a853bb0a1faddd2cc5652b983fd721b94e5bd167811de94170cd8c32500823a8f_0", "is_ignored": false, "lines": "                    local_2c = (char *)malloc(local_48 + sVar6);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 46, "line": 294, "offset": 10286}, "start": {"col": 40, "line": 294, "offset": 10280}}, "$X": {"abstract_content": "local_48", "end": {"col": 55, "line": 294, "offset": 10295}, "propagated_value": {"svalue_abstract_content": "sVar7+1", "svalue_end": {"col": 39, "line": 291, "offset": 10152}, "svalue_start": {"col": 30, "line": 291, "offset": 10143}}, "start": {"col": 47, "line": 294, "offset": 10287}}, "$Y": {"abstract_content": "sVar6", "end": {"col": 63, "line": 294, "offset": 10303}, "propagated_value": {"svalue_abstract_content": "strlen(param_3)", "svalue_end": {"col": 44, "line": 293, "offset": 10239}, "svalue_start": {"col": 29, "line": 293, "offset": 10224}}, "start": {"col": 58, "line": 294, "offset": 10298}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 40, "line": 294, "offset": 10280}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 64, "line": 294, "offset": 10304}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_15", "is_ignored": false, "lines": "                    local_2c = (char *)malloc(local_48 + sVar6);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 46, "line": 294, "offset": 10286}, "start": {"col": 40, "line": 294, "offset": 10280}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 40, "line": 294, "offset": 10280}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 51, "line": 297, "offset": 10444}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_12", "is_ignored": false, "lines": "                    memcpy(local_2c,param_3,sVar6);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 27, "line": 297, "offset": 10420}, "start": {"col": 21, "line": 297, "offset": 10414}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 21, "line": 297, "offset": 10414}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 62, "line": 299, "offset": 10552}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_13", "is_ignored": false, "lines": "                    memcpy(ppcVar5[3] + sVar6,local_5c,sVar7);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 27, "line": 299, "offset": 10517}, "start": {"col": 21, "line": 299, "offset": 10511}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 21, "line": 299, "offset": 10511}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 62, "line": 305, "offset": 10819}, "extra": {"engine_kind": "OSS", "fingerprint": "f5ea643105cd2cba76001f97c09df6a8965543dede97359c65abddedc62ec666901ba6bc40e71daa2bfd4e67893c451bb2ea85eb8b874464ec99065e0b252de0_1", "is_ignored": false, "lines": "                  local_2c = (char *)malloc(local_48 + sVar6);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 37, "line": 305, "offset": 10794}, "start": {"col": 31, "line": 305, "offset": 10788}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 44, "line": 305, "offset": 10801}, "start": {"col": 38, "line": 305, "offset": 10795}}, "$RET": {"abstract_content": "local_2c", "end": {"col": 27, "line": 305, "offset": 10784}, "start": {"col": 19, "line": 305, "offset": 10776}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 305, "offset": 10776}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 62, "line": 305, "offset": 10819}, "extra": {"engine_kind": "OSS", "fingerprint": "64a586704922d4076b0d669745f7240a6340b2189c3e6d50f912990e4168fb1a853bb0a1faddd2cc5652b983fd721b94e5bd167811de94170cd8c32500823a8f_1", "is_ignored": false, "lines": "                  local_2c = (char *)malloc(local_48 + sVar6);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 44, "line": 305, "offset": 10801}, "start": {"col": 38, "line": 305, "offset": 10795}}, "$X": {"abstract_content": "local_48", "end": {"col": 53, "line": 305, "offset": 10810}, "propagated_value": {"svalue_abstract_content": "sVar7+1", "svalue_end": {"col": 39, "line": 291, "offset": 10152}, "svalue_start": {"col": 30, "line": 291, "offset": 10143}}, "start": {"col": 45, "line": 305, "offset": 10802}}, "$Y": {"abstract_content": "sVar6", "end": {"col": 61, "line": 305, "offset": 10818}, "propagated_value": {"svalue_abstract_content": "strlen(param_3)", "svalue_end": {"col": 42, "line": 304, "offset": 10756}, "svalue_start": {"col": 27, "line": 304, "offset": 10741}}, "start": {"col": 56, "line": 305, "offset": 10813}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 38, "line": 305, "offset": 10795}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 62, "line": 305, "offset": 10819}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_16", "is_ignored": false, "lines": "                  local_2c = (char *)malloc(local_48 + sVar6);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 44, "line": 305, "offset": 10801}, "start": {"col": 38, "line": 305, "offset": 10795}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 38, "line": 305, "offset": 10795}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 49, "line": 308, "offset": 10953}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_14", "is_ignored": false, "lines": "                  memcpy(local_2c,param_3,sVar6);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 25, "line": 308, "offset": 10929}, "start": {"col": 19, "line": 308, "offset": 10923}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 308, "offset": 10923}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 68, "line": 310, "offset": 11065}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_15", "is_ignored": false, "lines": "                  memcpy(ppcVar5[3] + sVar6,local_5c + 1,sVar7 - 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 25, "line": 310, "offset": 11022}, "start": {"col": 19, "line": 310, "offset": 11016}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 310, "offset": 11016}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 53, "line": 315, "offset": 11260}, "extra": {"engine_kind": "OSS", "fingerprint": "3a80907eb9160db8253c243533e447e21ec6b2f59dcc2b895a981c4d166ccf8652fe6953379c4581f68995119f2c4e37dcbf949c3d3a93be351112e60ce4f934_0", "is_ignored": false, "lines": "                  pcVar2 = (char *)malloc(sVar7 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 42, "line": 315, "offset": 11249}, "start": {"col": 36, "line": 315, "offset": 11243}}, "$X": {"abstract_content": "sVar7", "end": {"col": 48, "line": 315, "offset": 11255}, "start": {"col": 43, "line": 315, "offset": 11250}}, "$Y": {"abstract_content": "1", "end": {"col": 52, "line": 315, "offset": 11259}, "start": {"col": 51, "line": 315, "offset": 11258}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 36, "line": 315, "offset": 11243}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 53, "line": 315, "offset": 11260}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_17", "is_ignored": false, "lines": "                  pcVar2 = (char *)malloc(sVar7 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 42, "line": 315, "offset": 11249}, "start": {"col": 36, "line": 315, "offset": 11243}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 36, "line": 315, "offset": 11243}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 48, "line": 317, "offset": 11348}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_16", "is_ignored": false, "lines": "                  memcpy(pcVar2,local_5c,sVar7);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 25, "line": 317, "offset": 11325}, "start": {"col": 19, "line": 317, "offset": 11319}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 317, "offset": 11319}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 63, "line": 325, "offset": 11716}, "extra": {"engine_kind": "OSS", "fingerprint": "484ff7250a5f2faaa8813ab161b30b75ba69832a7d6778177f023b44babac8381b41ac007c1b112551e9d36d979bb3cb7ca1b08d273926e2aaa021e8225d27f8_0", "is_ignored": false, "lines": "                    pcVar2 = (char *)malloc(sVar4 + 1 + sVar7);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 44, "line": 325, "offset": 11697}, "start": {"col": 38, "line": 325, "offset": 11691}}, "$X": {"abstract_content": "sVar4+1", "end": {"col": 54, "line": 325, "offset": 11707}, "start": {"col": 45, "line": 325, "offset": 11698}}, "$Y": {"abstract_content": "sVar7", "end": {"col": 62, "line": 325, "offset": 11715}, "propagated_value": {"svalue_abstract_content": "strlen(param_3)", "svalue_end": {"col": 44, "line": 324, "offset": 11652}, "svalue_start": {"col": 29, "line": 324, "offset": 11637}}, "start": {"col": 57, "line": 325, "offset": 11710}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 38, "line": 325, "offset": 11691}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 63, "line": 325, "offset": 11716}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_18", "is_ignored": false, "lines": "                    pcVar2 = (char *)malloc(sVar4 + 1 + sVar7);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 44, "line": 325, "offset": 11697}, "start": {"col": 38, "line": 325, "offset": 11691}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 38, "line": 325, "offset": 11691}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 49, "line": 328, "offset": 11852}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_17", "is_ignored": false, "lines": "                    memcpy(pcVar2,param_3,sVar7);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 27, "line": 328, "offset": 11830}, "start": {"col": 21, "line": 328, "offset": 11824}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 21, "line": 328, "offset": 11824}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 65, "line": 330, "offset": 11963}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_18", "is_ignored": false, "lines": "                    memcpy(ppcVar5[2] + sVar7,local_58[0],sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 27, "line": 330, "offset": 11925}, "start": {"col": 21, "line": 330, "offset": 11919}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 21, "line": 330, "offset": 11919}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 61, "line": 336, "offset": 12229}, "extra": {"engine_kind": "OSS", "fingerprint": "484ff7250a5f2faaa8813ab161b30b75ba69832a7d6778177f023b44babac8381b41ac007c1b112551e9d36d979bb3cb7ca1b08d273926e2aaa021e8225d27f8_1", "is_ignored": false, "lines": "                  pcVar2 = (char *)malloc(sVar4 + 1 + sVar7);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 42, "line": 336, "offset": 12210}, "start": {"col": 36, "line": 336, "offset": 12204}}, "$X": {"abstract_content": "sVar4+1", "end": {"col": 52, "line": 336, "offset": 12220}, "start": {"col": 43, "line": 336, "offset": 12211}}, "$Y": {"abstract_content": "sVar7", "end": {"col": 60, "line": 336, "offset": 12228}, "propagated_value": {"svalue_abstract_content": "strlen(param_3)", "svalue_end": {"col": 42, "line": 335, "offset": 12167}, "svalue_start": {"col": 27, "line": 335, "offset": 12152}}, "start": {"col": 55, "line": 336, "offset": 12223}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 36, "line": 336, "offset": 12204}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 61, "line": 336, "offset": 12229}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_19", "is_ignored": false, "lines": "                  pcVar2 = (char *)malloc(sVar4 + 1 + sVar7);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 42, "line": 336, "offset": 12210}, "start": {"col": 36, "line": 336, "offset": 12204}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 36, "line": 336, "offset": 12204}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 339, "offset": 12359}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_19", "is_ignored": false, "lines": "                  memcpy(pcVar2,param_3,sVar7);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 25, "line": 339, "offset": 12337}, "start": {"col": 19, "line": 339, "offset": 12331}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 339, "offset": 12331}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 71, "line": 341, "offset": 12474}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_20", "is_ignored": false, "lines": "                  memcpy(ppcVar5[2] + sVar7,local_58[0] + 1,sVar4 - 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 25, "line": 341, "offset": 12428}, "start": {"col": 19, "line": 341, "offset": 12422}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 341, "offset": 12422}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 53, "line": 346, "offset": 12669}, "extra": {"engine_kind": "OSS", "fingerprint": "9cd942039ba2dc917819236b79082186e27f43e312d198d4d25ea1b77f0420f94e5e0bd6cc2bc6a2c659c5bf35cdf9672b90814187b53a9193015270e9af1b85_10", "is_ignored": false, "lines": "                  pcVar2 = (char *)malloc(sVar4 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 42, "line": 346, "offset": 12658}, "start": {"col": 36, "line": 346, "offset": 12652}}, "$X": {"abstract_content": "sVar4", "end": {"col": 48, "line": 346, "offset": 12664}, "start": {"col": 43, "line": 346, "offset": 12659}}, "$Y": {"abstract_content": "1", "end": {"col": 52, "line": 346, "offset": 12668}, "start": {"col": 51, "line": 346, "offset": 12667}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 36, "line": 346, "offset": 12652}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 53, "line": 346, "offset": 12669}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_20", "is_ignored": false, "lines": "                  pcVar2 = (char *)malloc(sVar4 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 42, "line": 346, "offset": 12658}, "start": {"col": 36, "line": 346, "offset": 12652}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 36, "line": 346, "offset": 12652}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 51, "line": 348, "offset": 12760}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_21", "is_ignored": false, "lines": "                  memcpy(pcVar2,local_58[0],sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 25, "line": 348, "offset": 12734}, "start": {"col": 19, "line": 348, "offset": 12728}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 348, "offset": 12728}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 64, "line": 356, "offset": 13124}, "extra": {"engine_kind": "OSS", "fingerprint": "1ff301cfc277adaf8be85fb53c86c011c1d3b72b62a87f4e50836bfedcf8c88ea80ebd7db9b563bf4af74a7ec1d8333a3b1b9536b8b926c5fc7f73af5570611d_0", "is_ignored": false, "lines": "                    pcVar2 = (char *)malloc(sVar10 + 1 + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 44, "line": 356, "offset": 13104}, "start": {"col": 38, "line": 356, "offset": 13098}}, "$X": {"abstract_content": "sVar10+1", "end": {"col": 55, "line": 356, "offset": 13115}, "start": {"col": 45, "line": 356, "offset": 13105}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 63, "line": 356, "offset": 13123}, "propagated_value": {"svalue_abstract_content": "strlen(param_3)", "svalue_end": {"col": 44, "line": 355, "offset": 13059}, "svalue_start": {"col": 29, "line": 355, "offset": 13044}}, "start": {"col": 58, "line": 356, "offset": 13118}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 38, "line": 356, "offset": 13098}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 64, "line": 356, "offset": 13124}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_21", "is_ignored": false, "lines": "                    pcVar2 = (char *)malloc(sVar10 + 1 + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 44, "line": 356, "offset": 13104}, "start": {"col": 38, "line": 356, "offset": 13098}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 38, "line": 356, "offset": 13098}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 49, "line": 359, "offset": 13260}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_22", "is_ignored": false, "lines": "                    memcpy(pcVar2,param_3,sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 27, "line": 359, "offset": 13238}, "start": {"col": 21, "line": 359, "offset": 13232}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 21, "line": 359, "offset": 13232}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 63, "line": 361, "offset": 13369}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_23", "is_ignored": false, "lines": "                    memcpy(ppcVar5[4] + sVar4,local_60,sVar10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 27, "line": 361, "offset": 13333}, "start": {"col": 21, "line": 361, "offset": 13327}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 21, "line": 361, "offset": 13327}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 62, "line": 367, "offset": 13637}, "extra": {"engine_kind": "OSS", "fingerprint": "1ff301cfc277adaf8be85fb53c86c011c1d3b72b62a87f4e50836bfedcf8c88ea80ebd7db9b563bf4af74a7ec1d8333a3b1b9536b8b926c5fc7f73af5570611d_1", "is_ignored": false, "lines": "                  pcVar2 = (char *)malloc(sVar10 + 1 + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 42, "line": 367, "offset": 13617}, "start": {"col": 36, "line": 367, "offset": 13611}}, "$X": {"abstract_content": "sVar10+1", "end": {"col": 53, "line": 367, "offset": 13628}, "start": {"col": 43, "line": 367, "offset": 13618}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 61, "line": 367, "offset": 13636}, "propagated_value": {"svalue_abstract_content": "strlen(param_3)", "svalue_end": {"col": 42, "line": 366, "offset": 13574}, "svalue_start": {"col": 27, "line": 366, "offset": 13559}}, "start": {"col": 56, "line": 367, "offset": 13631}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 36, "line": 367, "offset": 13611}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 62, "line": 367, "offset": 13637}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_22", "is_ignored": false, "lines": "                  pcVar2 = (char *)malloc(sVar10 + 1 + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 42, "line": 367, "offset": 13617}, "start": {"col": 36, "line": 367, "offset": 13611}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 36, "line": 367, "offset": 13611}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 370, "offset": 13767}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_24", "is_ignored": false, "lines": "                  memcpy(pcVar2,param_3,sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 25, "line": 370, "offset": 13745}, "start": {"col": 19, "line": 370, "offset": 13739}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 370, "offset": 13739}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 69, "line": 372, "offset": 13880}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_25", "is_ignored": false, "lines": "                  memcpy(ppcVar5[4] + sVar4,local_60 + 1,sVar10 - 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 25, "line": 372, "offset": 13836}, "start": {"col": 19, "line": 372, "offset": 13830}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 372, "offset": 13830}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 54, "line": 377, "offset": 14077}, "extra": {"engine_kind": "OSS", "fingerprint": "fec48161432c9d43f63399d9995c0853d6ff8055e0dc3bb04d54a3baf17a9a9bc6ddf651cdd2d7d881baa3fbc5fb065107e2b9910916401431763b32e9033acf_0", "is_ignored": false, "lines": "                  pcVar2 = (char *)malloc(sVar10 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 42, "line": 377, "offset": 14065}, "start": {"col": 36, "line": 377, "offset": 14059}}, "$X": {"abstract_content": "sVar10", "end": {"col": 49, "line": 377, "offset": 14072}, "start": {"col": 43, "line": 377, "offset": 14066}}, "$Y": {"abstract_content": "1", "end": {"col": 53, "line": 377, "offset": 14076}, "start": {"col": 52, "line": 377, "offset": 14075}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 36, "line": 377, "offset": 14059}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 54, "line": 377, "offset": 14077}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_23", "is_ignored": false, "lines": "                  pcVar2 = (char *)malloc(sVar10 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 42, "line": 377, "offset": 14065}, "start": {"col": 36, "line": 377, "offset": 14059}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 36, "line": 377, "offset": 14059}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 49, "line": 379, "offset": 14166}, "extra": {"engine_kind": "OSS", "fingerprint": "c4ed95edc6aa31ca25a6466187dae463565133abcb8a3dc0f4c34f2a1065018e23bb44d77d075174ed4e7b675a35bd7f0524088ac8aa24c0b59349d9d67d327e_26", "is_ignored": false, "lines": "                  memcpy(pcVar2,local_60,sVar10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 25, "line": 379, "offset": 14142}, "start": {"col": 19, "line": 379, "offset": 14136}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 19, "line": 379, "offset": 14136}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 54, "line": 384, "offset": 14335}, "extra": {"engine_kind": "OSS", "fingerprint": "6be58bb1d58e343c009c13e1c5798cd0e94b996f401d31176684b9c8b4cf6b3a8dc7c790ba02c8c1d7ce542cc686d9c3326d831328866d246706e3a568411e27_0", "is_ignored": false, "lines": "                pcVar2 = (char *)malloc(local_4c + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 40, "line": 384, "offset": 14321}, "start": {"col": 34, "line": 384, "offset": 14315}}, "$X": {"abstract_content": "local_4c", "end": {"col": 49, "line": 384, "offset": 14330}, "start": {"col": 41, "line": 384, "offset": 14322}}, "$Y": {"abstract_content": "1", "end": {"col": 53, "line": 384, "offset": 14334}, "start": {"col": 52, "line": 384, "offset": 14333}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 34, "line": 384, "offset": 14315}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 54, "line": 384, "offset": 14335}, "extra": {"engine_kind": "OSS", "fingerprint": "8de2a752028bd0bbdb057035c5530d8b45d48b0ac909234ef7620bc8fa42102ea3b6be434fbe62d50a913672158ad310b1f1b02f7f88c92532bfbf46b5e0a02e_24", "is_ignored": false, "lines": "                pcVar2 = (char *)malloc(local_4c + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 40, "line": 384, "offset": 14321}, "start": {"col": 34, "line": 384, "offset": 14315}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 34, "line": 384, "offset": 14315}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 54, "line": 384, "offset": 14335}, "extra": {"engine_kind": "OSS", "fingerprint": "71a8979e409d5dc903801e116ed440aeed4bcde0feeed0cd3db2e466ae810f8422e988919cfb2692d69b34e1ca671419f0a78e375e6a28b7401a0a2cafa5d82a_0", "is_ignored": false, "lines": "                pcVar2 = (char *)malloc(local_4c + 1);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "local_4c+1", "end": {"col": 53, "line": 384, "offset": 14334}, "start": {"col": 41, "line": 384, "offset": 14322}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 34, "line": 384, "offset": 14315}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-format-string-bugs", "end": {"col": 50, "line": 386, "offset": 14421}, "extra": {"engine_kind": "OSS", "fingerprint": "762fbfc11fb68a795078979160544ccbcaf23ea9a1962eb4baaedc19c5342f48917bf4acf76d732fd9bb0765d658060a7ac9e585eb65e2b46df406aa99e33aac_0", "is_ignored": false, "lines": "                sprintf(pcVar2,local_64,local_4c);", "message": "The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/134", "https://julianor.tripod.com/bc/formatstring-1.2.pdf", "http://phrack.org/issues/70/13.html#article", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 17, "line": 386, "offset": 14388}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 50, "line": 386, "offset": 14421}, "extra": {"engine_kind": "OSS", "fingerprint": "62560147aeaae046dfdf7f1db1f7b75ff843663ead17ed5f644c5f07cf1540f276cb349906623e6e5161defe0ec27e5f97be09982abba5ea390b412ef74d4501_0", "is_ignored": false, "lines": "                sprintf(pcVar2,local_64,local_4c);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "local_64", "end": {"col": 9, "line": 1, "offset": 8}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "pcVar2", "end": {"col": 31, "line": 386, "offset": 14402}, "propagated_value": {"svalue_abstract_content": "(char*malloc(local_4c+1)", "svalue_end": {"col": 54, "line": 384, "offset": 14335}, "svalue_start": {"col": 26, "line": 384, "offset": 14307}}, "start": {"col": 25, "line": 386, "offset": 14396}}, "$FMT": {"abstract_content": "local_64", "end": {"col": 40, "line": 386, "offset": 14411}, "start": {"col": 32, "line": 386, "offset": 14403}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 17, "line": 386, "offset": 14388}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 50, "line": 386, "offset": 14421}, "extra": {"engine_kind": "OSS", "fingerprint": "b5cce5eaa0f1b470974f955783ef736fd5f8ddb42fae1fe4ba3c501a738530c42ca1c58fd54c5d3303f65c2d26de906b48b6ac8db71c57d1fd8729d471a5f27f_1", "is_ignored": false, "lines": "                sprintf(pcVar2,local_64,local_4c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 24, "line": 386, "offset": 14395}, "start": {"col": 17, "line": 386, "offset": 14388}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00403160_00403160.c", "start": {"col": 17, "line": 386, "offset": 14388}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 41, "line": 35, "offset": 952}, "extra": {"engine_kind": "OSS", "fingerprint": "828c8dc5504bd2fc4a7023ad28aacc6700c4217272410f180dca8e6f23d7e0d8a4c955ae77209517098a30cce3a52b16386bad57c16ef8a89fd1da7d0d04fef0_0", "is_ignored": false, "lines": "            ppvVar5 = (void **)malloc(8);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "void**", "end": {"col": 31, "line": 35, "offset": 942}, "start": {"col": 24, "line": 35, "offset": 935}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 38, "line": 35, "offset": 949}, "start": {"col": 32, "line": 35, "offset": 943}}, "$RET": {"abstract_content": "ppvVar5", "end": {"col": 20, "line": 35, "offset": 931}, "start": {"col": 13, "line": 35, "offset": 924}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 13, "line": 35, "offset": 924}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 35, "offset": 952}, "extra": {"engine_kind": "OSS", "fingerprint": "a7af5cd8821aa9ecef0b78accba06e63f5d6f5ac2306a71dfd86005d3eaf390eca253de03c063ba771f1e7d38a0a4cf210727e88a1905720a39f4649d0323484_0", "is_ignored": false, "lines": "            ppvVar5 = (void **)malloc(8);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 38, "line": 35, "offset": 949}, "start": {"col": 32, "line": 35, "offset": 943}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 32, "line": 35, "offset": 943}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 41, "line": 35, "offset": 952}, "extra": {"engine_kind": "OSS", "fingerprint": "8291212e4c2bb9afb3fb17da3e22986f5aaea6def874d64885445fbffdbaedc92528605588ad724f32fefd7b5168c527eff401a16d93d4445dcbbd815bb950e2_0", "is_ignored": false, "lines": "            ppvVar5 = (void **)malloc(8);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "8", "end": {"col": 40, "line": 35, "offset": 951}, "start": {"col": 39, "line": 35, "offset": 950}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 32, "line": 35, "offset": 943}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 44, "line": 46, "offset": 1463}, "extra": {"engine_kind": "OSS", "fingerprint": "496c56d5caaac7e6b984e23314b3ed513e9b8a300cd1258e351d23bb4427376c8d22ff6a7f90e1494cefd8e93732403c94d93ca65110c527cd3a9d7b66d0f8a7_0", "is_ignored": false, "lines": "                pvVar10 = malloc(sVar6 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 33, "line": 46, "offset": 1452}, "start": {"col": 27, "line": 46, "offset": 1446}}, "$RET": {"abstract_content": "pvVar10", "end": {"col": 24, "line": 46, "offset": 1443}, "start": {"col": 17, "line": 46, "offset": 1436}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 17, "line": 46, "offset": 1436}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 44, "line": 46, "offset": 1463}, "extra": {"engine_kind": "OSS", "fingerprint": "b8ad9d69b424de61efd389e2ea738bf177123a4b4427c96380d99c1de4a32cca9b9e85dd2e0054a652f4253de1b2a1da5066693dac5c27413c6250d4c6dade9d_0", "is_ignored": false, "lines": "                pvVar10 = malloc(sVar6 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 33, "line": 46, "offset": 1452}, "start": {"col": 27, "line": 46, "offset": 1446}}, "$X": {"abstract_content": "sVar6", "end": {"col": 39, "line": 46, "offset": 1458}, "propagated_value": {"svalue_abstract_content": "ILibReadInnerXML(ppvVar8 local_30)", "svalue_end": {"col": 59, "line": 45, "offset": 1418}, "svalue_start": {"col": 25, "line": 45, "offset": 1384}}, "start": {"col": 34, "line": 46, "offset": 1453}}, "$Y": {"abstract_content": "1", "end": {"col": 43, "line": 46, "offset": 1462}, "start": {"col": 42, "line": 46, "offset": 1461}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 27, "line": 46, "offset": 1446}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 44, "line": 46, "offset": 1463}, "extra": {"engine_kind": "OSS", "fingerprint": "a7af5cd8821aa9ecef0b78accba06e63f5d6f5ac2306a71dfd86005d3eaf390eca253de03c063ba771f1e7d38a0a4cf210727e88a1905720a39f4649d0323484_1", "is_ignored": false, "lines": "                pvVar10 = malloc(sVar6 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 33, "line": 46, "offset": 1452}, "start": {"col": 27, "line": 46, "offset": 1446}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 27, "line": 46, "offset": 1446}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 50, "line": 48, "offset": 1550}, "extra": {"engine_kind": "OSS", "fingerprint": "d8470dd8343abf23a73e04cbb9b58b5822422d13bbc02305e27579abca33f82a359b476b03f9d24840f95d014b942a389e2f8fffd827fb8aa3f754e7748677e6_0", "is_ignored": false, "lines": "                memcpy(pvVar10,local_30[0],sVar6);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 23, "line": 48, "offset": 1523}, "start": {"col": 17, "line": 48, "offset": 1517}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 17, "line": 48, "offset": 1517}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 46, "line": 70, "offset": 2400}, "extra": {"engine_kind": "OSS", "fingerprint": "a88579be3f1c572eba88cb847f8bb619125027cf905b16b1b0a84a2b3125a33d8b9f79829270f5227190ba921728c9dcb4bdb1a826b37c968ad8cc969694f1a1_0", "is_ignored": false, "lines": "          puVar7 = (undefined4 *)malloc(0x20);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "undefined4*", "end": {"col": 33, "line": 70, "offset": 2387}, "start": {"col": 21, "line": 70, "offset": 2375}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 40, "line": 70, "offset": 2394}, "start": {"col": 34, "line": 70, "offset": 2388}}, "$RET": {"abstract_content": "puVar7", "end": {"col": 17, "line": 70, "offset": 2371}, "start": {"col": 11, "line": 70, "offset": 2365}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 11, "line": 70, "offset": 2365}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 46, "line": 70, "offset": 2400}, "extra": {"engine_kind": "OSS", "fingerprint": "a7af5cd8821aa9ecef0b78accba06e63f5d6f5ac2306a71dfd86005d3eaf390eca253de03c063ba771f1e7d38a0a4cf210727e88a1905720a39f4649d0323484_2", "is_ignored": false, "lines": "          puVar7 = (undefined4 *)malloc(0x20);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 40, "line": 70, "offset": 2394}, "start": {"col": 34, "line": 70, "offset": 2388}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 34, "line": 70, "offset": 2388}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 46, "line": 70, "offset": 2400}, "extra": {"engine_kind": "OSS", "fingerprint": "64ec20bdb6d387545eccfb6ef18c11f7ca41b999d68e9bad469c5155e0ae2422c157e520ddcce61416472d03c0f3f1306b234707ce6436a2f77b5a330ab3ccf0_0", "is_ignored": false, "lines": "          puVar7 = (undefined4 *)malloc(0x20);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x20", "end": {"col": 45, "line": 70, "offset": 2399}, "start": {"col": 41, "line": 70, "offset": 2395}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 34, "line": 70, "offset": 2388}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 42, "line": 87, "offset": 3039}, "extra": {"engine_kind": "OSS", "fingerprint": "496c56d5caaac7e6b984e23314b3ed513e9b8a300cd1258e351d23bb4427376c8d22ff6a7f90e1494cefd8e93732403c94d93ca65110c527cd3a9d7b66d0f8a7_1", "is_ignored": false, "lines": "              pvVar10 = malloc(sVar6 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 87, "offset": 3028}, "start": {"col": 25, "line": 87, "offset": 3022}}, "$RET": {"abstract_content": "pvVar10", "end": {"col": 22, "line": 87, "offset": 3019}, "start": {"col": 15, "line": 87, "offset": 3012}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 15, "line": 87, "offset": 3012}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 42, "line": 87, "offset": 3039}, "extra": {"engine_kind": "OSS", "fingerprint": "b8ad9d69b424de61efd389e2ea738bf177123a4b4427c96380d99c1de4a32cca9b9e85dd2e0054a652f4253de1b2a1da5066693dac5c27413c6250d4c6dade9d_1", "is_ignored": false, "lines": "              pvVar10 = malloc(sVar6 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 87, "offset": 3028}, "start": {"col": 25, "line": 87, "offset": 3022}}, "$X": {"abstract_content": "sVar6", "end": {"col": 37, "line": 87, "offset": 3034}, "propagated_value": {"svalue_abstract_content": "ILibReadInnerXML(ppvVar5 local_30)", "svalue_end": {"col": 57, "line": 86, "offset": 2996}, "svalue_start": {"col": 23, "line": 86, "offset": 2962}}, "start": {"col": 32, "line": 87, "offset": 3029}}, "$Y": {"abstract_content": "1", "end": {"col": 41, "line": 87, "offset": 3038}, "start": {"col": 40, "line": 87, "offset": 3037}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 25, "line": 87, "offset": 3022}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 42, "line": 87, "offset": 3039}, "extra": {"engine_kind": "OSS", "fingerprint": "a7af5cd8821aa9ecef0b78accba06e63f5d6f5ac2306a71dfd86005d3eaf390eca253de03c063ba771f1e7d38a0a4cf210727e88a1905720a39f4649d0323484_3", "is_ignored": false, "lines": "              pvVar10 = malloc(sVar6 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 87, "offset": 3028}, "start": {"col": 25, "line": 87, "offset": 3022}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 25, "line": 87, "offset": 3022}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 48, "line": 89, "offset": 3123}, "extra": {"engine_kind": "OSS", "fingerprint": "d8470dd8343abf23a73e04cbb9b58b5822422d13bbc02305e27579abca33f82a359b476b03f9d24840f95d014b942a389e2f8fffd827fb8aa3f754e7748677e6_1", "is_ignored": false, "lines": "              memcpy(pvVar10,local_30[0],sVar6);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 21, "line": 89, "offset": 3096}, "start": {"col": 15, "line": 89, "offset": 3090}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 15, "line": 89, "offset": 3090}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 47, "line": 102, "offset": 3777}, "extra": {"engine_kind": "OSS", "fingerprint": "2330782ec9664544918d8b70bd58ab8ce36642dbe5f4f9dd5bc6e0d9485f8314253dc1bd3d3e57650423d12ad89261aaf55477355b2685f66681c72e75fd91ae_0", "is_ignored": false, "lines": "                  ppvVar8 = (void **)malloc(8);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "void**", "end": {"col": 37, "line": 102, "offset": 3767}, "start": {"col": 30, "line": 102, "offset": 3760}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 44, "line": 102, "offset": 3774}, "start": {"col": 38, "line": 102, "offset": 3768}}, "$RET": {"abstract_content": "ppvVar8", "end": {"col": 26, "line": 102, "offset": 3756}, "start": {"col": 19, "line": 102, "offset": 3749}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 19, "line": 102, "offset": 3749}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 102, "offset": 3777}, "extra": {"engine_kind": "OSS", "fingerprint": "a7af5cd8821aa9ecef0b78accba06e63f5d6f5ac2306a71dfd86005d3eaf390eca253de03c063ba771f1e7d38a0a4cf210727e88a1905720a39f4649d0323484_4", "is_ignored": false, "lines": "                  ppvVar8 = (void **)malloc(8);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 44, "line": 102, "offset": 3774}, "start": {"col": 38, "line": 102, "offset": 3768}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 38, "line": 102, "offset": 3768}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 47, "line": 102, "offset": 3777}, "extra": {"engine_kind": "OSS", "fingerprint": "8291212e4c2bb9afb3fb17da3e22986f5aaea6def874d64885445fbffdbaedc92528605588ad724f32fefd7b5168c527eff401a16d93d4445dcbbd815bb950e2_1", "is_ignored": false, "lines": "                  ppvVar8 = (void **)malloc(8);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "8", "end": {"col": 46, "line": 102, "offset": 3776}, "start": {"col": 45, "line": 102, "offset": 3775}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 38, "line": 102, "offset": 3768}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 46, "line": 105, "offset": 3925}, "extra": {"engine_kind": "OSS", "fingerprint": "496c56d5caaac7e6b984e23314b3ed513e9b8a300cd1258e351d23bb4427376c8d22ff6a7f90e1494cefd8e93732403c94d93ca65110c527cd3a9d7b66d0f8a7_2", "is_ignored": false, "lines": "                  pvVar10 = malloc(sVar6 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 35, "line": 105, "offset": 3914}, "start": {"col": 29, "line": 105, "offset": 3908}}, "$RET": {"abstract_content": "pvVar10", "end": {"col": 26, "line": 105, "offset": 3905}, "start": {"col": 19, "line": 105, "offset": 3898}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 19, "line": 105, "offset": 3898}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 46, "line": 105, "offset": 3925}, "extra": {"engine_kind": "OSS", "fingerprint": "b8ad9d69b424de61efd389e2ea738bf177123a4b4427c96380d99c1de4a32cca9b9e85dd2e0054a652f4253de1b2a1da5066693dac5c27413c6250d4c6dade9d_2", "is_ignored": false, "lines": "                  pvVar10 = malloc(sVar6 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 35, "line": 105, "offset": 3914}, "start": {"col": 29, "line": 105, "offset": 3908}}, "$X": {"abstract_content": "sVar6", "end": {"col": 41, "line": 105, "offset": 3920}, "propagated_value": {"svalue_abstract_content": "ILibReadInnerXML(ppvVar14 local_30)", "svalue_end": {"col": 62, "line": 104, "offset": 3878}, "svalue_start": {"col": 27, "line": 104, "offset": 3843}}, "start": {"col": 36, "line": 105, "offset": 3915}}, "$Y": {"abstract_content": "1", "end": {"col": 45, "line": 105, "offset": 3924}, "start": {"col": 44, "line": 105, "offset": 3923}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 29, "line": 105, "offset": 3908}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 46, "line": 105, "offset": 3925}, "extra": {"engine_kind": "OSS", "fingerprint": "a7af5cd8821aa9ecef0b78accba06e63f5d6f5ac2306a71dfd86005d3eaf390eca253de03c063ba771f1e7d38a0a4cf210727e88a1905720a39f4649d0323484_5", "is_ignored": false, "lines": "                  pvVar10 = malloc(sVar6 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 35, "line": 105, "offset": 3914}, "start": {"col": 29, "line": 105, "offset": 3908}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 29, "line": 105, "offset": 3908}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 52, "line": 107, "offset": 4018}, "extra": {"engine_kind": "OSS", "fingerprint": "d8470dd8343abf23a73e04cbb9b58b5822422d13bbc02305e27579abca33f82a359b476b03f9d24840f95d014b942a389e2f8fffd827fb8aa3f754e7748677e6_2", "is_ignored": false, "lines": "                  memcpy(pvVar10,local_30[0],sVar6);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 25, "line": 107, "offset": 3991}, "start": {"col": 19, "line": 107, "offset": 3985}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 19, "line": 107, "offset": 3985}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 47, "line": 120, "offset": 4564}, "extra": {"engine_kind": "OSS", "fingerprint": "496c56d5caaac7e6b984e23314b3ed513e9b8a300cd1258e351d23bb4427376c8d22ff6a7f90e1494cefd8e93732403c94d93ca65110c527cd3a9d7b66d0f8a7_3", "is_ignored": false, "lines": "              pvVar10 = malloc(puVar7[4] << 2);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 120, "offset": 4548}, "start": {"col": 25, "line": 120, "offset": 4542}}, "$RET": {"abstract_content": "pvVar10", "end": {"col": 22, "line": 120, "offset": 4539}, "start": {"col": 15, "line": 120, "offset": 4532}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 15, "line": 120, "offset": 4532}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 120, "offset": 4564}, "extra": {"engine_kind": "OSS", "fingerprint": "a7af5cd8821aa9ecef0b78accba06e63f5d6f5ac2306a71dfd86005d3eaf390eca253de03c063ba771f1e7d38a0a4cf210727e88a1905720a39f4649d0323484_6", "is_ignored": false, "lines": "              pvVar10 = malloc(puVar7[4] << 2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 120, "offset": 4548}, "start": {"col": 25, "line": 120, "offset": 4542}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 25, "line": 120, "offset": 4542}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 48, "line": 150, "offset": 5802}, "extra": {"engine_kind": "OSS", "fingerprint": "496c56d5caaac7e6b984e23314b3ed513e9b8a300cd1258e351d23bb4427376c8d22ff6a7f90e1494cefd8e93732403c94d93ca65110c527cd3a9d7b66d0f8a7_4", "is_ignored": false, "lines": "                    pvVar10 = malloc(sVar6 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 37, "line": 150, "offset": 5791}, "start": {"col": 31, "line": 150, "offset": 5785}}, "$RET": {"abstract_content": "pvVar10", "end": {"col": 28, "line": 150, "offset": 5782}, "start": {"col": 21, "line": 150, "offset": 5775}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 21, "line": 150, "offset": 5775}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 48, "line": 150, "offset": 5802}, "extra": {"engine_kind": "OSS", "fingerprint": "b8ad9d69b424de61efd389e2ea738bf177123a4b4427c96380d99c1de4a32cca9b9e85dd2e0054a652f4253de1b2a1da5066693dac5c27413c6250d4c6dade9d_3", "is_ignored": false, "lines": "                    pvVar10 = malloc(sVar6 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 37, "line": 150, "offset": 5791}, "start": {"col": 31, "line": 150, "offset": 5785}}, "$X": {"abstract_content": "sVar6", "end": {"col": 43, "line": 150, "offset": 5797}, "propagated_value": {"svalue_abstract_content": "ILibReadInnerXML(ppvVar5 local_30)", "svalue_end": {"col": 63, "line": 149, "offset": 5753}, "svalue_start": {"col": 29, "line": 149, "offset": 5719}}, "start": {"col": 38, "line": 150, "offset": 5792}}, "$Y": {"abstract_content": "1", "end": {"col": 47, "line": 150, "offset": 5801}, "start": {"col": 46, "line": 150, "offset": 5800}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 31, "line": 150, "offset": 5785}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 48, "line": 150, "offset": 5802}, "extra": {"engine_kind": "OSS", "fingerprint": "a7af5cd8821aa9ecef0b78accba06e63f5d6f5ac2306a71dfd86005d3eaf390eca253de03c063ba771f1e7d38a0a4cf210727e88a1905720a39f4649d0323484_7", "is_ignored": false, "lines": "                    pvVar10 = malloc(sVar6 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 37, "line": 150, "offset": 5791}, "start": {"col": 31, "line": 150, "offset": 5785}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 31, "line": 150, "offset": 5785}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 54, "line": 152, "offset": 5898}, "extra": {"engine_kind": "OSS", "fingerprint": "d8470dd8343abf23a73e04cbb9b58b5822422d13bbc02305e27579abca33f82a359b476b03f9d24840f95d014b942a389e2f8fffd827fb8aa3f754e7748677e6_3", "is_ignored": false, "lines": "                    memcpy(pvVar10,local_30[0],sVar6);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 27, "line": 152, "offset": 5871}, "start": {"col": 21, "line": 152, "offset": 5865}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 21, "line": 152, "offset": 5865}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 50, "line": 161, "offset": 6265}, "extra": {"engine_kind": "OSS", "fingerprint": "496c56d5caaac7e6b984e23314b3ed513e9b8a300cd1258e351d23bb4427376c8d22ff6a7f90e1494cefd8e93732403c94d93ca65110c527cd3a9d7b66d0f8a7_5", "is_ignored": false, "lines": "                      pvVar10 = malloc(sVar6 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 39, "line": 161, "offset": 6254}, "start": {"col": 33, "line": 161, "offset": 6248}}, "$RET": {"abstract_content": "pvVar10", "end": {"col": 30, "line": 161, "offset": 6245}, "start": {"col": 23, "line": 161, "offset": 6238}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 23, "line": 161, "offset": 6238}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 50, "line": 161, "offset": 6265}, "extra": {"engine_kind": "OSS", "fingerprint": "b8ad9d69b424de61efd389e2ea738bf177123a4b4427c96380d99c1de4a32cca9b9e85dd2e0054a652f4253de1b2a1da5066693dac5c27413c6250d4c6dade9d_4", "is_ignored": false, "lines": "                      pvVar10 = malloc(sVar6 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 39, "line": 161, "offset": 6254}, "start": {"col": 33, "line": 161, "offset": 6248}}, "$X": {"abstract_content": "sVar6", "end": {"col": 45, "line": 161, "offset": 6260}, "propagated_value": {"svalue_abstract_content": "ILibReadInnerXML(ppvVar5 local_30)", "svalue_end": {"col": 65, "line": 160, "offset": 6214}, "svalue_start": {"col": 31, "line": 160, "offset": 6180}}, "start": {"col": 40, "line": 161, "offset": 6255}}, "$Y": {"abstract_content": "1", "end": {"col": 49, "line": 161, "offset": 6264}, "start": {"col": 48, "line": 161, "offset": 6263}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 33, "line": 161, "offset": 6248}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 50, "line": 161, "offset": 6265}, "extra": {"engine_kind": "OSS", "fingerprint": "a7af5cd8821aa9ecef0b78accba06e63f5d6f5ac2306a71dfd86005d3eaf390eca253de03c063ba771f1e7d38a0a4cf210727e88a1905720a39f4649d0323484_8", "is_ignored": false, "lines": "                      pvVar10 = malloc(sVar6 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 39, "line": 161, "offset": 6254}, "start": {"col": 33, "line": 161, "offset": 6248}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 33, "line": 161, "offset": 6248}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 56, "line": 163, "offset": 6365}, "extra": {"engine_kind": "OSS", "fingerprint": "d8470dd8343abf23a73e04cbb9b58b5822422d13bbc02305e27579abca33f82a359b476b03f9d24840f95d014b942a389e2f8fffd827fb8aa3f754e7748677e6_4", "is_ignored": false, "lines": "                      memcpy(pvVar10,local_30[0],sVar6);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 29, "line": 163, "offset": 6338}, "start": {"col": 23, "line": 163, "offset": 6332}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 23, "line": 163, "offset": 6332}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 46, "line": 173, "offset": 6818}, "extra": {"engine_kind": "OSS", "fingerprint": "496c56d5caaac7e6b984e23314b3ed513e9b8a300cd1258e351d23bb4427376c8d22ff6a7f90e1494cefd8e93732403c94d93ca65110c527cd3a9d7b66d0f8a7_6", "is_ignored": false, "lines": "                  pvVar10 = malloc(sVar6 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 35, "line": 173, "offset": 6807}, "start": {"col": 29, "line": 173, "offset": 6801}}, "$RET": {"abstract_content": "pvVar10", "end": {"col": 26, "line": 173, "offset": 6798}, "start": {"col": 19, "line": 173, "offset": 6791}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 19, "line": 173, "offset": 6791}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 46, "line": 173, "offset": 6818}, "extra": {"engine_kind": "OSS", "fingerprint": "b8ad9d69b424de61efd389e2ea738bf177123a4b4427c96380d99c1de4a32cca9b9e85dd2e0054a652f4253de1b2a1da5066693dac5c27413c6250d4c6dade9d_5", "is_ignored": false, "lines": "                  pvVar10 = malloc(sVar6 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 35, "line": 173, "offset": 6807}, "start": {"col": 29, "line": 173, "offset": 6801}}, "$X": {"abstract_content": "sVar6", "end": {"col": 41, "line": 173, "offset": 6813}, "propagated_value": {"svalue_abstract_content": "ILibReadInnerXML(ppvVar5 local_30)", "svalue_end": {"col": 61, "line": 172, "offset": 6771}, "svalue_start": {"col": 27, "line": 172, "offset": 6737}}, "start": {"col": 36, "line": 173, "offset": 6808}}, "$Y": {"abstract_content": "1", "end": {"col": 45, "line": 173, "offset": 6817}, "start": {"col": 44, "line": 173, "offset": 6816}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 29, "line": 173, "offset": 6801}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 46, "line": 173, "offset": 6818}, "extra": {"engine_kind": "OSS", "fingerprint": "a7af5cd8821aa9ecef0b78accba06e63f5d6f5ac2306a71dfd86005d3eaf390eca253de03c063ba771f1e7d38a0a4cf210727e88a1905720a39f4649d0323484_9", "is_ignored": false, "lines": "                  pvVar10 = malloc(sVar6 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 35, "line": 173, "offset": 6807}, "start": {"col": 29, "line": 173, "offset": 6801}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 29, "line": 173, "offset": 6801}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 52, "line": 175, "offset": 6910}, "extra": {"engine_kind": "OSS", "fingerprint": "d8470dd8343abf23a73e04cbb9b58b5822422d13bbc02305e27579abca33f82a359b476b03f9d24840f95d014b942a389e2f8fffd827fb8aa3f754e7748677e6_5", "is_ignored": false, "lines": "                  memcpy(pvVar10,local_30[0],sVar6);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 25, "line": 175, "offset": 6883}, "start": {"col": 19, "line": 175, "offset": 6877}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040418c_0040418c.c", "start": {"col": 19, "line": 175, "offset": 6877}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 34, "line": 17, "offset": 397}, "extra": {"engine_kind": "OSS", "fingerprint": "1d4ec6a5a875a85b7b9a167540248ccc61118beb1a228906b0381e256a65e750da691622f8ae5c06175caf0b7ae6ff5a356a9d28c3190de96285f382e870b382_0", "is_ignored": false, "lines": "  ppvVar2 = (void **)malloc(0x1c);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "void**", "end": {"col": 21, "line": 17, "offset": 384}, "start": {"col": 14, "line": 17, "offset": 377}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 17, "offset": 391}, "start": {"col": 22, "line": 17, "offset": 385}}, "$RET": {"abstract_content": "ppvVar2", "end": {"col": 10, "line": 17, "offset": 373}, "start": {"col": 3, "line": 17, "offset": 366}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00404c30_00404c30.c", "start": {"col": 3, "line": 17, "offset": 366}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 34, "line": 17, "offset": 397}, "extra": {"engine_kind": "OSS", "fingerprint": "0699c84078d667b8c3f00500cf72c879e1b06e945e5b9d9eb01005250ccb6d51e1bc5e1677756279145937bab12e0a4950d9fd0b08c77145c9f708ef15681d36_0", "is_ignored": false, "lines": "  ppvVar2 = (void **)malloc(0x1c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 17, "offset": 391}, "start": {"col": 22, "line": 17, "offset": 385}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00404c30_00404c30.c", "start": {"col": 22, "line": 17, "offset": 385}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 34, "line": 17, "offset": 397}, "extra": {"engine_kind": "OSS", "fingerprint": "c125120bb475c0ca5a56b0e04b51861765809b8c4487c14e5928750044395b1897a4203c09bd1d4c377494c895867b92d95f883a74efa7c2ee9b933459259236_0", "is_ignored": false, "lines": "  ppvVar2 = (void **)malloc(0x1c);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x1c", "end": {"col": 33, "line": 17, "offset": 396}, "start": {"col": 29, "line": 17, "offset": 392}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00404c30_00404c30.c", "start": {"col": 22, "line": 17, "offset": 385}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 29, "line": 20, "offset": 482}, "extra": {"engine_kind": "OSS", "fingerprint": "9dd8cdda84a776d269ce0c4089c650efbdacb8840a582f4aebffb27c56faab70052150ee9a90f2ab3c91fc737949ab77d2b9a826d65d0810bd695eec37a1dd92_0", "is_ignored": false, "lines": "  pvVar4 = malloc(sVar3 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 20, "offset": 471}, "start": {"col": 12, "line": 20, "offset": 465}}, "$X": {"abstract_content": "sVar3", "end": {"col": 24, "line": 20, "offset": 477}, "propagated_value": {"svalue_abstract_content": "strlen(param_2)", "svalue_end": {"col": 26, "line": 19, "offset": 452}, "svalue_start": {"col": 11, "line": 19, "offset": 437}}, "start": {"col": 19, "line": 20, "offset": 472}}, "$Y": {"abstract_content": "1", "end": {"col": 28, "line": 20, "offset": 481}, "start": {"col": 27, "line": 20, "offset": 480}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00404c30_00404c30.c", "start": {"col": 12, "line": 20, "offset": 465}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 29, "line": 20, "offset": 482}, "extra": {"engine_kind": "OSS", "fingerprint": "0699c84078d667b8c3f00500cf72c879e1b06e945e5b9d9eb01005250ccb6d51e1bc5e1677756279145937bab12e0a4950d9fd0b08c77145c9f708ef15681d36_1", "is_ignored": false, "lines": "  pvVar4 = malloc(sVar3 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 20, "offset": 471}, "start": {"col": 12, "line": 20, "offset": 465}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00404c30_00404c30.c", "start": {"col": 12, "line": 20, "offset": 465}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 31, "line": 23, "offset": 562}, "extra": {"engine_kind": "OSS", "fingerprint": "5f889340437d2e699add4fd5b2b2a9bad920b933067127a04340ddbaafdca45175958ec0a14ee760da413316296cf72a60b2ef8fbaec6d76efccd69ca027f8af_0", "is_ignored": false, "lines": "  memcpy(pvVar4,param_2,sVar3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 23, "offset": 540}, "start": {"col": 3, "line": 23, "offset": 534}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00404c30_00404c30.c", "start": {"col": 3, "line": 23, "offset": 534}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 41, "line": 28, "offset": 653}, "extra": {"engine_kind": "OSS", "fingerprint": "182ef8b268b685bfac5bd388413aaf750276fe25331501da2f05724c5d8e996b36580cb9ed936e3face4eab868a2502f6ea6e2a5d0de161b6bbf749dc6b379f8_0", "is_ignored": false, "lines": "      __dest = (char *)malloc(sVar2 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 23, "line": 28, "offset": 635}, "start": {"col": 17, "line": 28, "offset": 629}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 30, "line": 28, "offset": 642}, "start": {"col": 24, "line": 28, "offset": 636}}, "$RET": {"abstract_content": "__dest", "end": {"col": 13, "line": 28, "offset": 625}, "start": {"col": 7, "line": 28, "offset": 619}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00404ee4_00404ee4.c", "start": {"col": 7, "line": 28, "offset": 619}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 41, "line": 28, "offset": 653}, "extra": {"engine_kind": "OSS", "fingerprint": "bc43936ecd94c2fca2c8bfe97252d0c7b6e5340b46639e132f1e018c6c3ccb79b4930f73f50551199496222fc1fcaf909209cad5870f5c6af18525a69bca9a1b_0", "is_ignored": false, "lines": "      __dest = (char *)malloc(sVar2 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 30, "line": 28, "offset": 642}, "start": {"col": 24, "line": 28, "offset": 636}}, "$X": {"abstract_content": "sVar2", "end": {"col": 36, "line": 28, "offset": 648}, "propagated_value": {"svalue_abstract_content": "strlen(param_3)", "svalue_end": {"col": 30, "line": 27, "offset": 611}, "svalue_start": {"col": 15, "line": 27, "offset": 596}}, "start": {"col": 31, "line": 28, "offset": 643}}, "$Y": {"abstract_content": "1", "end": {"col": 40, "line": 28, "offset": 652}, "start": {"col": 39, "line": 28, "offset": 651}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00404ee4_00404ee4.c", "start": {"col": 24, "line": 28, "offset": 636}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 28, "offset": 653}, "extra": {"engine_kind": "OSS", "fingerprint": "6251bb9cd92b21938415a654f9f3534728b2e6f56d9075a47e7fc304a1322a802fcb6190e3b33041a379d07939aa10671d10fbe58e6efbb24fc8f6c46ecf827c_0", "is_ignored": false, "lines": "      __dest = (char *)malloc(sVar2 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 30, "line": 28, "offset": 642}, "start": {"col": 24, "line": 28, "offset": 636}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00404ee4_00404ee4.c", "start": {"col": 24, "line": 28, "offset": 636}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 29, "line": 30, "offset": 710}, "extra": {"engine_kind": "OSS", "fingerprint": "f3b138a6d81b94ccc7e71a7ea7c0d5f9ddf5abcdbbb97db175664357012cbee7306dcd0d2bb43d46d3528a04f65d8bf13b9ceea05dd3f74451cadeecda0eede8_0", "is_ignored": false, "lines": "      strcpy(__dest,param_3);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00404ee4_00404ee4.c", "start": {"col": 7, "line": 30, "offset": 688}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 29, "line": 30, "offset": 710}, "extra": {"engine_kind": "OSS", "fingerprint": "ee781013083292db483dfa79b4904f00030a5046dc1a47bab43f82453602e6e6b535bdd5ad18f73fea6a7d0ceaa3903a388da88d409086d1a4c5711f88dd5242_0", "is_ignored": false, "lines": "      strcpy(__dest,param_3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 13, "line": 30, "offset": 694}, "start": {"col": 7, "line": 30, "offset": 688}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00404ee4_00404ee4.c", "start": {"col": 7, "line": 30, "offset": 688}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 37, "line": 28, "offset": 702}, "extra": {"engine_kind": "OSS", "fingerprint": "4b540a7e1552726525f72ba984d49dfc2115ac45d3f5ecad87e4b7f461c39257231969ffec4d1d7b7d7f4f612cf9c70a103d4763101678463152fe0bf5e91c4e_0", "is_ignored": false, "lines": "  pcVar3 = (char *)malloc(sVar2 + 7);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 19, "line": 28, "offset": 684}, "start": {"col": 13, "line": 28, "offset": 678}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 28, "offset": 691}, "start": {"col": 20, "line": 28, "offset": 685}}, "$RET": {"abstract_content": "pcVar3", "end": {"col": 9, "line": 28, "offset": 674}, "start": {"col": 3, "line": 28, "offset": 668}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405070_00405070.c", "start": {"col": 3, "line": 28, "offset": 668}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 37, "line": 28, "offset": 702}, "extra": {"engine_kind": "OSS", "fingerprint": "f08a779ec0c0058701893141cab1c48a97075e76834ea5224792d6e0b7e00aaf0f9cb9f2a1454e02bcc9e0b85007e713f4b2f603529c500e637dec2d9da24ed8_0", "is_ignored": false, "lines": "  pcVar3 = (char *)malloc(sVar2 + 7);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 28, "offset": 691}, "start": {"col": 20, "line": 28, "offset": 685}}, "$X": {"abstract_content": "sVar2", "end": {"col": 32, "line": 28, "offset": 697}, "propagated_value": {"svalue_abstract_content": "strlen(local_3c)", "svalue_end": {"col": 27, "line": 27, "offset": 664}, "svalue_start": {"col": 11, "line": 27, "offset": 648}}, "start": {"col": 27, "line": 28, "offset": 692}}, "$Y": {"abstract_content": "7", "end": {"col": 36, "line": 28, "offset": 701}, "start": {"col": 35, "line": 28, "offset": 700}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405070_00405070.c", "start": {"col": 20, "line": 28, "offset": 685}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 28, "offset": 702}, "extra": {"engine_kind": "OSS", "fingerprint": "ac8d99ffc907b72552806ddb049c015c5be5fe296bcc0a919102ec4e7cff764a8036210f424ca6e040db198e5f78c2889985d9dd00f3a221a583aeac9908be64_0", "is_ignored": false, "lines": "  pcVar3 = (char *)malloc(sVar2 + 7);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 28, "offset": 691}, "start": {"col": 20, "line": 28, "offset": 685}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405070_00405070.c", "start": {"col": 20, "line": 28, "offset": 685}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 53, "line": 29, "offset": 756}, "extra": {"engine_kind": "OSS", "fingerprint": "d63d193d343b2c794d8debc651d071e889cb176efbd3d88cdff7d8e989b2b872c70341d099f0f5c6e865f4e919834452c35b958fd31061406440d3bb4ae105c4_0", "is_ignored": false, "lines": "  sprintf(pcVar3,\"%s:%d\",local_3c,(uint)local_40[0]);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%s:%d\"", "end": {"col": 8, "line": 1, "offset": 7}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "pcVar3", "end": {"col": 17, "line": 29, "offset": 720}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar2+7)", "svalue_end": {"col": 37, "line": 28, "offset": 702}, "svalue_start": {"col": 12, "line": 28, "offset": 677}}, "start": {"col": 11, "line": 29, "offset": 714}}, "$FMT": {"abstract_content": "\"%s:%d\"", "end": {"col": 25, "line": 29, "offset": 728}, "start": {"col": 18, "line": 29, "offset": 721}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405070_00405070.c", "start": {"col": 3, "line": 29, "offset": 706}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 53, "line": 29, "offset": 756}, "extra": {"engine_kind": "OSS", "fingerprint": "c71a5446fa54321ae3b52ad0d897e352f0d7827e2a208b338346d033d759cbf6405622058baad8edfcd69b8a32b1b266b9bc0049bf396d21e2cff36dfd336999_0", "is_ignored": false, "lines": "  sprintf(pcVar3,\"%s:%d\",local_3c,(uint)local_40[0]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 10, "line": 29, "offset": 713}, "start": {"col": 3, "line": 29, "offset": 706}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405070_00405070.c", "start": {"col": 3, "line": 29, "offset": 706}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 62, "line": 36, "offset": 1128}, "extra": {"engine_kind": "OSS", "fingerprint": "45b81cc2afd856172ac7ed8aca420da3c92d4cde34731a7088edb4e40aff76fbb2a79f6002ef006a1594b203716a5b7141c794adfe9b084e82dcedbab062a5d4_0", "is_ignored": false, "lines": "  sVar2 = strlen(*(char **)(*(int *)(param_1 + 0x20) + 0x40));", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "param_1", "end": {"col": 45, "line": 36, "offset": 1111}, "start": {"col": 38, "line": 36, "offset": 1104}}, "$UNSIGNED": {"abstract_content": "sVar2", "end": {"col": 8, "line": 36, "offset": 1074}, "start": {"col": 3, "line": 36, "offset": 1069}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405070_00405070.c", "start": {"col": 3, "line": 36, "offset": 1069}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 48, "line": 38, "offset": 1205}, "extra": {"engine_kind": "OSS", "fingerprint": "4b540a7e1552726525f72ba984d49dfc2115ac45d3f5ecad87e4b7f461c39257231969ffec4d1d7b7d7f4f612cf9c70a103d4763101678463152fe0bf5e91c4e_1", "is_ignored": false, "lines": "  pcVar3 = (char *)malloc(sVar2 + sVar4 + 0x10);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 19, "line": 38, "offset": 1176}, "start": {"col": 13, "line": 38, "offset": 1170}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 38, "offset": 1183}, "start": {"col": 20, "line": 38, "offset": 1177}}, "$RET": {"abstract_content": "pcVar3", "end": {"col": 9, "line": 38, "offset": 1166}, "start": {"col": 3, "line": 38, "offset": 1160}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405070_00405070.c", "start": {"col": 3, "line": 38, "offset": 1160}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 48, "line": 38, "offset": 1205}, "extra": {"engine_kind": "OSS", "fingerprint": "5e9206033d6bcca1db530608ee6cabb71b573429866d29fbe8ca203805fcd218602fe99b56d77da4060458d9f15ded33fc9f958128d5757bb5f6ef0f96825151_0", "is_ignored": false, "lines": "  pcVar3 = (char *)malloc(sVar2 + sVar4 + 0x10);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 38, "offset": 1183}, "start": {"col": 20, "line": 38, "offset": 1177}}, "$X": {"abstract_content": "sVar2+sVar4", "end": {"col": 40, "line": 38, "offset": 1197}, "start": {"col": 27, "line": 38, "offset": 1184}}, "$Y": {"abstract_content": "0x10", "end": {"col": 47, "line": 38, "offset": 1204}, "start": {"col": 43, "line": 38, "offset": 1200}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405070_00405070.c", "start": {"col": 20, "line": 38, "offset": 1177}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 48, "line": 38, "offset": 1205}, "extra": {"engine_kind": "OSS", "fingerprint": "ac8d99ffc907b72552806ddb049c015c5be5fe296bcc0a919102ec4e7cff764a8036210f424ca6e040db198e5f78c2889985d9dd00f3a221a583aeac9908be64_1", "is_ignored": false, "lines": "  pcVar3 = (char *)malloc(sVar2 + sVar4 + 0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 38, "offset": 1183}, "start": {"col": 20, "line": 38, "offset": 1177}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405070_00405070.c", "start": {"col": 20, "line": 38, "offset": 1177}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 61, "line": 41, "offset": 1417}, "extra": {"engine_kind": "OSS", "fingerprint": "85971794042efc0b9ebfb350f1c202a461fa2417e737c4108427fe1b6a1396b50f950a0de83560422f96f1b57abd8488b0fcdd7a4ba53e20d4c70732059a78ab_0", "is_ignored": false, "lines": "  sprintf(pcVar3,\"<http://%s:%d%s>\",local_20,uVar5,local_38);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"<http://%s:%d%s>\"", "end": {"col": 19, "line": 1, "offset": 18}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "pcVar3", "end": {"col": 17, "line": 41, "offset": 1373}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar2+sVar4+0x10)", "svalue_end": {"col": 48, "line": 38, "offset": 1205}, "svalue_start": {"col": 12, "line": 38, "offset": 1169}}, "start": {"col": 11, "line": 41, "offset": 1367}}, "$FMT": {"abstract_content": "\"<http://%s:%d%s>\"", "end": {"col": 36, "line": 41, "offset": 1392}, "start": {"col": 18, "line": 41, "offset": 1374}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405070_00405070.c", "start": {"col": 3, "line": 41, "offset": 1359}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 61, "line": 41, "offset": 1417}, "extra": {"engine_kind": "OSS", "fingerprint": "c71a5446fa54321ae3b52ad0d897e352f0d7827e2a208b338346d033d759cbf6405622058baad8edfcd69b8a32b1b266b9bc0049bf396d21e2cff36dfd336999_1", "is_ignored": false, "lines": "  sprintf(pcVar3,\"<http://%s:%d%s>\",local_20,uVar5,local_38);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 10, "line": 41, "offset": 1366}, "start": {"col": 3, "line": 41, "offset": 1359}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405070_00405070.c", "start": {"col": 3, "line": 41, "offset": 1359}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 36, "line": 26, "offset": 651}, "extra": {"engine_kind": "OSS", "fingerprint": "ab87a9044d32b67c5251cd324c9d6bc000defd5021f07cdc083464fcdf0fe7172357d75031e7f0691786dbd1052e151c629b8c544ac11d11aa5a89366229d243_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar2 + 7);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 26, "offset": 633}, "start": {"col": 12, "line": 26, "offset": 627}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 26, "offset": 640}, "start": {"col": 19, "line": 26, "offset": 634}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 26, "offset": 623}, "start": {"col": 5, "line": 26, "offset": 620}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004053b0_004053b0.c", "start": {"col": 5, "line": 26, "offset": 620}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 36, "line": 26, "offset": 651}, "extra": {"engine_kind": "OSS", "fingerprint": "b8df7c4b6fa7a6186f1b0f2ddb463ded565e344dc4ee0c880f16caa1bc77c96bcbdabbf6985d3de13c2cfda37df251ff002f691567bd3b4a1324fd36b37d4015_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar2 + 7);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 26, "offset": 640}, "start": {"col": 19, "line": 26, "offset": 634}}, "$X": {"abstract_content": "sVar2", "end": {"col": 31, "line": 26, "offset": 646}, "propagated_value": {"svalue_abstract_content": "strlen(local_3c)", "svalue_end": {"col": 29, "line": 25, "offset": 614}, "svalue_start": {"col": 13, "line": 25, "offset": 598}}, "start": {"col": 26, "line": 26, "offset": 641}}, "$Y": {"abstract_content": "7", "end": {"col": 35, "line": 26, "offset": 650}, "start": {"col": 34, "line": 26, "offset": 649}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004053b0_004053b0.c", "start": {"col": 19, "line": 26, "offset": 634}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 26, "offset": 651}, "extra": {"engine_kind": "OSS", "fingerprint": "e5a907cc0d1ab5e64573f5d875b5d1b4425f825f23a9bac65a4db7d8a11560da496a95c810092b5aa1add9e85481ea7550a3da457b8e062aa9ef6a023a0557e9_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar2 + 7);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 26, "offset": 640}, "start": {"col": 19, "line": 26, "offset": 634}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004053b0_004053b0.c", "start": {"col": 19, "line": 26, "offset": 634}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 52, "line": 27, "offset": 704}, "extra": {"engine_kind": "OSS", "fingerprint": "a26e7cbd7cb50facd52f60f8a25c206fa55b20f651f8927bbb1bb61581dc87bd37035753d9a94d36463961a1a1fccba2bd68a5ad6f8a0dcb8ff041231ae48588_0", "is_ignored": false, "lines": "    sprintf(__s,\"%s:%d\",local_3c,(uint)local_40[0]);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%s:%d\"", "end": {"col": 8, "line": 1, "offset": 7}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 16, "line": 27, "offset": 668}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar2+7)", "svalue_end": {"col": 36, "line": 26, "offset": 651}, "svalue_start": {"col": 11, "line": 26, "offset": 626}}, "start": {"col": 13, "line": 27, "offset": 665}}, "$FMT": {"abstract_content": "\"%s:%d\"", "end": {"col": 24, "line": 27, "offset": 676}, "start": {"col": 17, "line": 27, "offset": 669}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004053b0_004053b0.c", "start": {"col": 5, "line": 27, "offset": 657}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 52, "line": 27, "offset": 704}, "extra": {"engine_kind": "OSS", "fingerprint": "d839ddce32fdde4e9f228cddb68aeed1b66c5bb8d556eb4f7db1a3733081c98662ff0b0cf6b4dbba9550c8ed828b10d36efd0894f221eb845d86c5c3a44056c9_0", "is_ignored": false, "lines": "    sprintf(__s,\"%s:%d\",local_3c,(uint)local_40[0]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 12, "line": 27, "offset": 664}, "start": {"col": 5, "line": 27, "offset": 657}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004053b0_004053b0.c", "start": {"col": 5, "line": 27, "offset": 657}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "6cda18429ddb3a8d503ea25fa4ea7779d63c9d2d90381b9e49d43ce8c917e7c3abd8c5d537232d4cc705e1dedc8ac437123bdd5a88e70491971d291efdab45e0_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 24, "offset": 441}, "start": {"col": 12, "line": 24, "offset": 435}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 24, "offset": 431}, "start": {"col": 3, "line": 24, "offset": 426}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004055f0_004055f0.c", "start": {"col": 3, "line": 24, "offset": 426}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "e11c39b3d5b3ae3e086338bd1121da70c5a3913782aee05978b3e8f940c8f551eaa81ba3589e431390cecf013ff2c74bf91aa31fbb945b687e766aa350d11530_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004055f0_004055f0.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "415b1cbdfeb1e0a97a9cbc916046be0a1158f0da60bc4d6b132b78d3b7b6ddc296e1f9155a547e54342995a2e5069318a975c4b5d15d249e1ef8ac1877d7ee1a_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 24, "offset": 452}, "start": {"col": 26, "line": 24, "offset": 449}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004055f0_004055f0.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "a0033f5eed4cd5bf7f61d4b8af3273d1bc2d1444916656632c49c2060c046c42b986e334683e6ec51f9467ee3e12324525b58edbdc56adbf31d25a56b68247f9_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x112);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 27, "offset": 535}, "start": {"col": 12, "line": 27, "offset": 529}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 27, "offset": 525}, "start": {"col": 5, "line": 27, "offset": 522}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004055f0_004055f0.c", "start": {"col": 5, "line": 27, "offset": 522}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "17d690a6f13e5e2a57f7840c943cc57bef9530880f1bdc76e32bbadd1957403fb817660b72abebe22e94695312e9210778b94ceb88aa0b9355dd2e84a3e989aa_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x112);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$X": {"abstract_content": "sVar1", "end": {"col": 31, "line": 27, "offset": 548}, "start": {"col": 26, "line": 27, "offset": 543}}, "$Y": {"abstract_content": "0x112", "end": {"col": 39, "line": 27, "offset": 556}, "start": {"col": 34, "line": 27, "offset": 551}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004055f0_004055f0.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "e11c39b3d5b3ae3e086338bd1121da70c5a3913782aee05978b3e8f940c8f551eaa81ba3589e431390cecf013ff2c74bf91aa31fbb945b687e766aa350d11530_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x112);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004055f0_004055f0.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 57, "line": 30, "offset": 913}, "extra": {"engine_kind": "OSS", "fingerprint": "6c130c04cae742739fa05824f2fe2b919930ea0ea1ba44ed84c64c7837f448ff7777ed89977d34525330bb5a507ac4727e4dfe0af1d488f8b7d05064dad5f553_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetConnectionTypeInfo xmlns:u=\\\"%s\\\"></u:GetConnectionTypeInfo%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sGetConnectionTypeInfo xmlns:u=\\\"%s\\\"></u:GetConnectionTypeInfo%s\"", "end": {"col": 69, "line": 1, "offset": 68}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 28, "offset": 582}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+0x112)", "svalue_end": {"col": 40, "line": 27, "offset": 557}, "svalue_start": {"col": 11, "line": 27, "offset": 528}}, "start": {"col": 21, "line": 28, "offset": 579}}, "$FMT": {"abstract_content": "\"%sGetConnectionTypeInfo xmlns:u=\\\"%s\\\"></u:GetConnectionTypeInfo%s\"", "end": {"col": 93, "line": 28, "offset": 651}, "start": {"col": 25, "line": 28, "offset": 583}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004055f0_004055f0.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 30, "offset": 913}, "extra": {"engine_kind": "OSS", "fingerprint": "6aea2b0c31f731d47dfd443c78e5255610ba901af5b0e8eede95a08a3920e7214894eec6211429ab195f05d241701d17d55ef854ac497ed167673ec01b731bf9_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetConnectionTypeInfo xmlns:u=\\\"%s\\\"></u:GetConnectionTypeInfo%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 28, "offset": 578}, "start": {"col": 13, "line": 28, "offset": 571}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004055f0_004055f0.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 36, "offset": 1151}, "extra": {"engine_kind": "OSS", "fingerprint": "eb5ae4ff133c4d823ed9d92933c592a2fa6cff05f9d8747f3637b6f416a49887766d3756f26948e642218894bf75b6161af535fce2a406c4ea139dc28e1b1ea4_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xae + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 36, "offset": 1114}, "start": {"col": 15, "line": 36, "offset": 1108}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1121}, "start": {"col": 22, "line": 36, "offset": 1115}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 36, "offset": 1104}, "start": {"col": 5, "line": 36, "offset": 1098}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004055f0_004055f0.c", "start": {"col": 5, "line": 36, "offset": 1098}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 36, "offset": 1151}, "extra": {"engine_kind": "OSS", "fingerprint": "dfb26e4c0fd0107b1f5baba97a7659b2f94586576b987bd30f8d18ce96db50b11c64b4c2922313da2f8292f930588ce6aba74e95e1d2272ab0994288d83e090c_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xae + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1121}, "start": {"col": 22, "line": 36, "offset": 1115}}, "$X": {"abstract_content": "sVar1+sVar3+0xae", "end": {"col": 49, "line": 36, "offset": 1142}, "start": {"col": 29, "line": 36, "offset": 1122}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 36, "offset": 1150}, "start": {"col": 52, "line": 36, "offset": 1145}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004055f0_004055f0.c", "start": {"col": 22, "line": 36, "offset": 1115}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 36, "offset": 1151}, "extra": {"engine_kind": "OSS", "fingerprint": "e11c39b3d5b3ae3e086338bd1121da70c5a3913782aee05978b3e8f940c8f551eaa81ba3589e431390cecf013ff2c74bf91aa31fbb945b687e766aa350d11530_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xae + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1121}, "start": {"col": 22, "line": 36, "offset": 1115}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004055f0_004055f0.c", "start": {"col": 22, "line": 36, "offset": 1115}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 100, "line": 39, "offset": 1479}, "extra": {"engine_kind": "OSS", "fingerprint": "e3cb045bcfab39f84cae9301166dc766011a67232b4dc8af1d24b7d5240a80cc9251df1443acf8061af5e603fb768b3ab06bdefcc4262357922e06cd86c12598_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetConnectionTypeInfo\",iVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 37, "offset": 1182}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar3+0xae+sVar4)", "svalue_end": {"col": 58, "line": 36, "offset": 1151}, "svalue_start": {"col": 14, "line": 36, "offset": 1107}}, "start": {"col": 24, "line": 37, "offset": 1176}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 38, "offset": 1379}, "start": {"col": 24, "line": 38, "offset": 1207}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004055f0_004055f0.c", "start": {"col": 16, "line": 37, "offset": 1168}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 100, "line": 39, "offset": 1479}, "extra": {"engine_kind": "OSS", "fingerprint": "6aea2b0c31f731d47dfd443c78e5255610ba901af5b0e8eede95a08a3920e7214894eec6211429ab195f05d241701d17d55ef854ac497ed167673ec01b731bf9_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetConnectionTypeInfo\",iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 37, "offset": 1175}, "start": {"col": 16, "line": 37, "offset": 1168}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004055f0_004055f0.c", "start": {"col": 16, "line": 37, "offset": 1168}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "9bd355972be36e4a46eaa1b90c8e0eb1ad0d0c086eb54edb575146140e3023d4baa072042b78684e260a6c042b62c81060c42e2335f5b5ecaf10a069390b7c17_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 24, "offset": 441}, "start": {"col": 12, "line": 24, "offset": 435}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 24, "offset": 431}, "start": {"col": 3, "line": 24, "offset": 426}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405848_00405848.c", "start": {"col": 3, "line": 24, "offset": 426}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "efef55f0580a492749994ca43c31f61f0d0f27b9ea2163c1281b867f7fb8c4765f7c835973815bc4cb440d951644bf90740845f0d525dcdaa484f5c050de325d_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405848_00405848.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "acefefca42e1acde95e31ca668136bdb61bab023c3ca0a946241ec41c6014f2b02ff8d1c4180040d77cf434f073ef81440911129f3f1f6b628bb7e2ee7b7f291_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 24, "offset": 452}, "start": {"col": 26, "line": 24, "offset": 449}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405848_00405848.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 39, "line": 27, "offset": 556}, "extra": {"engine_kind": "OSS", "fingerprint": "326a8981d124d296b28fb5008452e9b0842282139525591277b363ce4bec045b79b03cdd2a5ba39ff763e11d0fbf56973c1fce022bf9da8dcde8501a891c5982_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0xfe);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 27, "offset": 535}, "start": {"col": 12, "line": 27, "offset": 529}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 27, "offset": 525}, "start": {"col": 5, "line": 27, "offset": 522}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405848_00405848.c", "start": {"col": 5, "line": 27, "offset": 522}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 39, "line": 27, "offset": 556}, "extra": {"engine_kind": "OSS", "fingerprint": "6046c18272f9ac4e2d613b937811d0540f61cbaaac8a7749217ae9a66e38351c3cb99795ba51d99bac47e44e1c35f2c2e53b330225dbf2d02e34ea1d1bcd41e1_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0xfe);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$X": {"abstract_content": "sVar1", "end": {"col": 31, "line": 27, "offset": 548}, "start": {"col": 26, "line": 27, "offset": 543}}, "$Y": {"abstract_content": "0xfe", "end": {"col": 38, "line": 27, "offset": 555}, "start": {"col": 34, "line": 27, "offset": 551}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405848_00405848.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 27, "offset": 556}, "extra": {"engine_kind": "OSS", "fingerprint": "efef55f0580a492749994ca43c31f61f0d0f27b9ea2163c1281b867f7fb8c4765f7c835973815bc4cb440d951644bf90740845f0d525dcdaa484f5c050de325d_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0xfe);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405848_00405848.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 57, "line": 30, "offset": 892}, "extra": {"engine_kind": "OSS", "fingerprint": "6bccde7dfb27127d54e97bc69516f710a7c98052ad1a09e0cb8059d3adfc04d609e54d09f8600e7b278c39ad5dc0033bddb808350aaff88066f154236db6e4dc_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetUserName xmlns:u=\\\"%s\\\"></u:GetUserName%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sGetUserName xmlns:u=\\\"%s\\\"></u:GetUserName%s\"", "end": {"col": 49, "line": 1, "offset": 48}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 28, "offset": 581}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+0xfe)", "svalue_end": {"col": 39, "line": 27, "offset": 556}, "svalue_start": {"col": 11, "line": 27, "offset": 528}}, "start": {"col": 21, "line": 28, "offset": 578}}, "$FMT": {"abstract_content": "\"%sGetUserName xmlns:u=\\\"%s\\\"></u:GetUserName%s\"", "end": {"col": 73, "line": 28, "offset": 630}, "start": {"col": 25, "line": 28, "offset": 582}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405848_00405848.c", "start": {"col": 13, "line": 28, "offset": 570}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 30, "offset": 892}, "extra": {"engine_kind": "OSS", "fingerprint": "4cceb10cc0d6b6264c81c6b6b4c705c1a58132fe139f8280012164d1042912965d1456acc59b5949e66b4beaa8cb847c40e07c76941aade62cad43cb98a7d7d0_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetUserName xmlns:u=\\\"%s\\\"></u:GetUserName%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 28, "offset": 577}, "start": {"col": 13, "line": 28, "offset": 570}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405848_00405848.c", "start": {"col": 13, "line": 28, "offset": 570}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 36, "offset": 1130}, "extra": {"engine_kind": "OSS", "fingerprint": "7ea6e2dcf5fa8328d1c13dd32b7f7f23297b745824b6932b5a9722ddfecb609eb4779ab12b18adc54cca3b4ed1da12549f6796348a2903c2336b2ce363ac5c9b_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xa4 + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 36, "offset": 1093}, "start": {"col": 15, "line": 36, "offset": 1087}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1100}, "start": {"col": 22, "line": 36, "offset": 1094}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 36, "offset": 1083}, "start": {"col": 5, "line": 36, "offset": 1077}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405848_00405848.c", "start": {"col": 5, "line": 36, "offset": 1077}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 36, "offset": 1130}, "extra": {"engine_kind": "OSS", "fingerprint": "2903dc0672ca3fdcdfafd1bb842badadf60994e5b5cfccac00a2b4a5496e55f8d7207a935b6fd6f29c68064a5bc79a5d9d4d39924b9c0dd8c8faafedeccb83e2_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xa4 + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1100}, "start": {"col": 22, "line": 36, "offset": 1094}}, "$X": {"abstract_content": "sVar1+sVar3+0xa4", "end": {"col": 49, "line": 36, "offset": 1121}, "start": {"col": 29, "line": 36, "offset": 1101}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 36, "offset": 1129}, "start": {"col": 52, "line": 36, "offset": 1124}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405848_00405848.c", "start": {"col": 22, "line": 36, "offset": 1094}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 36, "offset": 1130}, "extra": {"engine_kind": "OSS", "fingerprint": "efef55f0580a492749994ca43c31f61f0d0f27b9ea2163c1281b867f7fb8c4765f7c835973815bc4cb440d951644bf90740845f0d525dcdaa484f5c050de325d_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xa4 + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1100}, "start": {"col": 22, "line": 36, "offset": 1094}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405848_00405848.c", "start": {"col": 22, "line": 36, "offset": 1094}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 90, "line": 39, "offset": 1448}, "extra": {"engine_kind": "OSS", "fingerprint": "9865a6c09cc4909f796125f6fc4e8d3a6bcd19d84997c5038be006a24b11ea8a8fd66dfe0e1e14984bb8320e66cffac857e20482802814094148fa26c7423c82_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetUserName\",iVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 37, "offset": 1161}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar3+0xa4+sVar4)", "svalue_end": {"col": 58, "line": 36, "offset": 1130}, "svalue_start": {"col": 14, "line": 36, "offset": 1086}}, "start": {"col": 24, "line": 37, "offset": 1155}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 38, "offset": 1358}, "start": {"col": 24, "line": 38, "offset": 1186}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405848_00405848.c", "start": {"col": 16, "line": 37, "offset": 1147}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 90, "line": 39, "offset": 1448}, "extra": {"engine_kind": "OSS", "fingerprint": "4cceb10cc0d6b6264c81c6b6b4c705c1a58132fe139f8280012164d1042912965d1456acc59b5949e66b4beaa8cb847c40e07c76941aade62cad43cb98a7d7d0_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetUserName\",iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 37, "offset": 1154}, "start": {"col": 16, "line": 37, "offset": 1147}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405848_00405848.c", "start": {"col": 16, "line": 37, "offset": 1147}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "ddecc2b362b9e405a36ecd6317ab52790c7f5d3fd4c41f955815446e3a0d2e28d78b4199009c0c12e8950ad8013427ed52f8d16d65db4139202bb810add82fa4_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 24, "offset": 441}, "start": {"col": 12, "line": 24, "offset": 435}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 24, "offset": 431}, "start": {"col": 3, "line": 24, "offset": 426}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405aa0_00405aa0.c", "start": {"col": 3, "line": 24, "offset": 426}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "ac70a1458edf1af830fca8160ca3307f2ed1889f4fc82b6c24152654808f5b9974ef98bccc37c077684465312808ebbdc72c7f19728a80def262282f490ef2e2_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405aa0_00405aa0.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "6a65b42a6515990d4c2401bc2e0dff94f05d1ac3b3dfc01efad5f3d479a7b5bc6e6b9f3b2e36825ba3f3071b150c6362b126865710c9f4b98a43d6d5fc934b24_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 24, "offset": 452}, "start": {"col": 26, "line": 24, "offset": 449}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405aa0_00405aa0.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "fbcce4d17a72145a3f57f0816bce5b52da5da9b6e5f22b31bab087230cee246062b1eb6559a69cef574de9487c41daab5e9ca9da196647fb924f8ac0dafa9598_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x112);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 27, "offset": 535}, "start": {"col": 12, "line": 27, "offset": 529}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 27, "offset": 525}, "start": {"col": 5, "line": 27, "offset": 522}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405aa0_00405aa0.c", "start": {"col": 5, "line": 27, "offset": 522}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "fd6aa92e85991d31750fc1c47719775d6d77b1573fb974282e5d8e3fd9eafc9abd1c94765455798c16226abbc2c2ce70c9478cd6e86353da942c71bfd5e544f5_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x112);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$X": {"abstract_content": "sVar1", "end": {"col": 31, "line": 27, "offset": 548}, "start": {"col": 26, "line": 27, "offset": 543}}, "$Y": {"abstract_content": "0x112", "end": {"col": 39, "line": 27, "offset": 556}, "start": {"col": 34, "line": 27, "offset": 551}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405aa0_00405aa0.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "ac70a1458edf1af830fca8160ca3307f2ed1889f4fc82b6c24152654808f5b9974ef98bccc37c077684465312808ebbdc72c7f19728a80def262282f490ef2e2_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x112);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405aa0_00405aa0.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 57, "line": 30, "offset": 913}, "extra": {"engine_kind": "OSS", "fingerprint": "1313541b00efb03d8439a719098a3031e493ddd1b1fb01c1a872b37508969d433f2b36a1044e08978fa59ba0a25491f04d8c1672e3a2289b5d8eb1a9a9af0375_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetIdleDisconnectTime xmlns:u=\\\"%s\\\"></u:GetIdleDisconnectTime%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sGetIdleDisconnectTime xmlns:u=\\\"%s\\\"></u:GetIdleDisconnectTime%s\"", "end": {"col": 69, "line": 1, "offset": 68}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 28, "offset": 582}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+0x112)", "svalue_end": {"col": 40, "line": 27, "offset": 557}, "svalue_start": {"col": 11, "line": 27, "offset": 528}}, "start": {"col": 21, "line": 28, "offset": 579}}, "$FMT": {"abstract_content": "\"%sGetIdleDisconnectTime xmlns:u=\\\"%s\\\"></u:GetIdleDisconnectTime%s\"", "end": {"col": 93, "line": 28, "offset": 651}, "start": {"col": 25, "line": 28, "offset": 583}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405aa0_00405aa0.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 30, "offset": 913}, "extra": {"engine_kind": "OSS", "fingerprint": "0cf6f7f6c16cba6e64c6e4764739ed58b608e8cb5f926bb2cf507c4979a495543fbbaa53290ec05bdde1b1027e3bc14fe952af129438eaf3c9c15f6b393eed64_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetIdleDisconnectTime xmlns:u=\\\"%s\\\"></u:GetIdleDisconnectTime%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 28, "offset": 578}, "start": {"col": 13, "line": 28, "offset": 571}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405aa0_00405aa0.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 36, "offset": 1151}, "extra": {"engine_kind": "OSS", "fingerprint": "523a15acb46d0090972bf80ffddc0e37a309bfbd569afe1ae90f2e2e3f1049f7b213cc13f8ed0a15e7bde297ea9c02375acf9b8d9128e6091ce940bef04879ec_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xae + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 36, "offset": 1114}, "start": {"col": 15, "line": 36, "offset": 1108}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1121}, "start": {"col": 22, "line": 36, "offset": 1115}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 36, "offset": 1104}, "start": {"col": 5, "line": 36, "offset": 1098}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405aa0_00405aa0.c", "start": {"col": 5, "line": 36, "offset": 1098}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 36, "offset": 1151}, "extra": {"engine_kind": "OSS", "fingerprint": "72fc66e85b891aafa27532a1daf7e74ce490f1811067b2c66d484085d6680a726650f92d92f6a6991b72be2223d235c8eb8fc6ecced17cece26c3643d13ce1c1_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xae + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1121}, "start": {"col": 22, "line": 36, "offset": 1115}}, "$X": {"abstract_content": "sVar1+sVar3+0xae", "end": {"col": 49, "line": 36, "offset": 1142}, "start": {"col": 29, "line": 36, "offset": 1122}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 36, "offset": 1150}, "start": {"col": 52, "line": 36, "offset": 1145}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405aa0_00405aa0.c", "start": {"col": 22, "line": 36, "offset": 1115}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 36, "offset": 1151}, "extra": {"engine_kind": "OSS", "fingerprint": "ac70a1458edf1af830fca8160ca3307f2ed1889f4fc82b6c24152654808f5b9974ef98bccc37c077684465312808ebbdc72c7f19728a80def262282f490ef2e2_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xae + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1121}, "start": {"col": 22, "line": 36, "offset": 1115}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405aa0_00405aa0.c", "start": {"col": 22, "line": 36, "offset": 1115}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 100, "line": 39, "offset": 1479}, "extra": {"engine_kind": "OSS", "fingerprint": "d9cd5bc74bbc69a5e1a9c7d9e1bfd1a62484712e9bb0967912937c90f56a3cd74d28adbdc1a67642cae9c7692bef71418111c70ee91f6addffe815015b959386_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetIdleDisconnectTime\",iVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 37, "offset": 1182}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar3+0xae+sVar4)", "svalue_end": {"col": 58, "line": 36, "offset": 1151}, "svalue_start": {"col": 14, "line": 36, "offset": 1107}}, "start": {"col": 24, "line": 37, "offset": 1176}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 38, "offset": 1379}, "start": {"col": 24, "line": 38, "offset": 1207}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405aa0_00405aa0.c", "start": {"col": 16, "line": 37, "offset": 1168}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 100, "line": 39, "offset": 1479}, "extra": {"engine_kind": "OSS", "fingerprint": "0cf6f7f6c16cba6e64c6e4764739ed58b608e8cb5f926bb2cf507c4979a495543fbbaa53290ec05bdde1b1027e3bc14fe952af129438eaf3c9c15f6b393eed64_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetIdleDisconnectTime\",iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 37, "offset": 1175}, "start": {"col": 16, "line": 37, "offset": 1168}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405aa0_00405aa0.c", "start": {"col": 16, "line": 37, "offset": 1168}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "86bf16cff5e912535571b7d6ce8dc302f38975629943dcd18b00a8b7707a76ac99426c5cbf8709569f9e4ae9aa5614f9e9c7af5d19a118a7adb5ab68723e15ff_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 24, "offset": 441}, "start": {"col": 12, "line": 24, "offset": 435}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 24, "offset": 431}, "start": {"col": 3, "line": 24, "offset": 426}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405cf8_00405cf8.c", "start": {"col": 3, "line": 24, "offset": 426}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "2ad7427cd5e68dc83010cf86bb041d31f3309d01f7b230de1f2ae03875aed4db4f42a0ad223b87404485d6d55694969567b351dde25f8b2e7a2a3c76c1f5870e_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405cf8_00405cf8.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "eeb8b974f0d29bc9704882bd82eaf5e94562a9794c0f5d04ac98bff72234a9402c718bec3438f7922d1ba507282fc714e30af7baafb990e614d9b63fac51c42f_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 24, "offset": 452}, "start": {"col": 26, "line": 24, "offset": 449}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405cf8_00405cf8.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "7645012d31f1859846dc4918498eb0b1be189e486776a1efd0a5125cbf3b167e6d116fd82d7b71445f5ad0b1d97024a764596b9060129c0d780f3792cc0388a6_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x116);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 27, "offset": 535}, "start": {"col": 12, "line": 27, "offset": 529}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 27, "offset": 525}, "start": {"col": 5, "line": 27, "offset": 522}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405cf8_00405cf8.c", "start": {"col": 5, "line": 27, "offset": 522}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "3e4de5bb45ec0ee0718cb0d06122a27499230b8a574fedbc5599553d7be520b02d3cacde66e67971351fe82645cf5d78a14e7d215a985da4fb6e78b31a8014db_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x116);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$X": {"abstract_content": "sVar1", "end": {"col": 31, "line": 27, "offset": 548}, "start": {"col": 26, "line": 27, "offset": 543}}, "$Y": {"abstract_content": "0x116", "end": {"col": 39, "line": 27, "offset": 556}, "start": {"col": 34, "line": 27, "offset": 551}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405cf8_00405cf8.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "2ad7427cd5e68dc83010cf86bb041d31f3309d01f7b230de1f2ae03875aed4db4f42a0ad223b87404485d6d55694969567b351dde25f8b2e7a2a3c76c1f5870e_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x116);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405cf8_00405cf8.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 57, "line": 30, "offset": 917}, "extra": {"engine_kind": "OSS", "fingerprint": "c24b987949f32fed59cddb9540a998952af9098b6afe9c85cdd085dfac6dd277c318619a5b98e68c5b217573bd7586f07d4cec7e5086f1881863f868fb27cfb6_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetLinkLayerMaxBitRates xmlns:u=\\\"%s\\\"></u:GetLinkLayerMaxBitRates%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sGetLinkLayerMaxBitRates xmlns:u=\\\"%s\\\"></u:GetLinkLayerMaxBitRates%s\"", "end": {"col": 73, "line": 1, "offset": 72}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 28, "offset": 582}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+0x116)", "svalue_end": {"col": 40, "line": 27, "offset": 557}, "svalue_start": {"col": 11, "line": 27, "offset": 528}}, "start": {"col": 21, "line": 28, "offset": 579}}, "$FMT": {"abstract_content": "\"%sGetLinkLayerMaxBitRates xmlns:u=\\\"%s\\\"></u:GetLinkLayerMaxBitRates%s\"", "end": {"col": 97, "line": 28, "offset": 655}, "start": {"col": 25, "line": 28, "offset": 583}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405cf8_00405cf8.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 30, "offset": 917}, "extra": {"engine_kind": "OSS", "fingerprint": "72d343f18e1971aed01c967731e0d057194712656dea9802ffc0b7360a3c8189557e83a08efc4f38caad92717be3a514ad9225ff0ed489c14eec0c8ff7883fad_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetLinkLayerMaxBitRates xmlns:u=\\\"%s\\\"></u:GetLinkLayerMaxBitRates%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 28, "offset": 578}, "start": {"col": 13, "line": 28, "offset": 571}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405cf8_00405cf8.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 36, "offset": 1155}, "extra": {"engine_kind": "OSS", "fingerprint": "54e77b75b00e15d2a474f530712e1633c437a1ebf604fbb34b6d7164125b4a98c882ef8244f4e8b3efad8c254bc48628cd518114a539e8cc2e05c5cfdaa2b355_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xb0 + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 36, "offset": 1118}, "start": {"col": 15, "line": 36, "offset": 1112}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1125}, "start": {"col": 22, "line": 36, "offset": 1119}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 36, "offset": 1108}, "start": {"col": 5, "line": 36, "offset": 1102}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405cf8_00405cf8.c", "start": {"col": 5, "line": 36, "offset": 1102}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 36, "offset": 1155}, "extra": {"engine_kind": "OSS", "fingerprint": "424eac2d58fd2134dc29b6ccc0270e09467a39cc472db3ced8948bffe3784556a28638fd45a613556ee80763e86e776ad55c231b7662e871ea3a760373390e1a_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xb0 + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1125}, "start": {"col": 22, "line": 36, "offset": 1119}}, "$X": {"abstract_content": "sVar1+sVar3+0xb0", "end": {"col": 49, "line": 36, "offset": 1146}, "start": {"col": 29, "line": 36, "offset": 1126}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 36, "offset": 1154}, "start": {"col": 52, "line": 36, "offset": 1149}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405cf8_00405cf8.c", "start": {"col": 22, "line": 36, "offset": 1119}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 36, "offset": 1155}, "extra": {"engine_kind": "OSS", "fingerprint": "2ad7427cd5e68dc83010cf86bb041d31f3309d01f7b230de1f2ae03875aed4db4f42a0ad223b87404485d6d55694969567b351dde25f8b2e7a2a3c76c1f5870e_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xb0 + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1125}, "start": {"col": 22, "line": 36, "offset": 1119}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405cf8_00405cf8.c", "start": {"col": 22, "line": 36, "offset": 1119}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 24, "line": 40, "offset": 1508}, "extra": {"engine_kind": "OSS", "fingerprint": "484560ecd44478cbd8ed27a08160f5d77107172aca60673a8824fa602181736644f1b0f3bd2ee2219de3e4a451ef7470a3444e205dbe91b916ed79b10cbc4413_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetLinkLayerMaxBitRates\",iVar2\n                      );", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 37, "offset": 1186}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar3+0xb0+sVar4)", "svalue_end": {"col": 58, "line": 36, "offset": 1155}, "svalue_start": {"col": 14, "line": 36, "offset": 1111}}, "start": {"col": 24, "line": 37, "offset": 1180}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 38, "offset": 1383}, "start": {"col": 24, "line": 38, "offset": 1211}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405cf8_00405cf8.c", "start": {"col": 16, "line": 37, "offset": 1172}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 24, "line": 40, "offset": 1508}, "extra": {"engine_kind": "OSS", "fingerprint": "72d343f18e1971aed01c967731e0d057194712656dea9802ffc0b7360a3c8189557e83a08efc4f38caad92717be3a514ad9225ff0ed489c14eec0c8ff7883fad_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetLinkLayerMaxBitRates\",iVar2\n                      );", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 37, "offset": 1179}, "start": {"col": 16, "line": 37, "offset": 1172}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405cf8_00405cf8.c", "start": {"col": 16, "line": 37, "offset": 1172}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 24, "offset": 466}, "extra": {"engine_kind": "OSS", "fingerprint": "ef6e357fd0df0dea0883e3d99eb27aea204b6ec1f866be1ac89ba712e562dc1a1985b6c2e7130b6ae910ed0a60a428e06952fca17e3ca0ead40e5f70956c0447_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 24, "offset": 454}, "start": {"col": 12, "line": 24, "offset": 448}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 461}, "start": {"col": 19, "line": 24, "offset": 455}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 24, "offset": 444}, "start": {"col": 3, "line": 24, "offset": 439}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405f50_00405f50.c", "start": {"col": 3, "line": 24, "offset": 439}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 24, "offset": 466}, "extra": {"engine_kind": "OSS", "fingerprint": "a1f27c8bd72d179aae26ba5312570a96477ea809cc0a50f0442a40f3dacc26ba475b8a7dcd26227b7227caa8f031450f7c77aef93d622667aee3ceeb3897437d_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 461}, "start": {"col": 19, "line": 24, "offset": 455}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405f50_00405f50.c", "start": {"col": 19, "line": 24, "offset": 455}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 24, "offset": 466}, "extra": {"engine_kind": "OSS", "fingerprint": "bfc5be0fec76843eec1ca5d92c28147e40e29af9a90d3c095965180833287238cd89fc3617205db6c27f66e9ced0ce4ce3e5e4073775972c129e3cf488b161c9_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 24, "offset": 465}, "start": {"col": 26, "line": 24, "offset": 462}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405f50_00405f50.c", "start": {"col": 19, "line": 24, "offset": 455}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 40, "line": 27, "offset": 570}, "extra": {"engine_kind": "OSS", "fingerprint": "01ddfb6d0cf23cd9187d81da5393b65c520c7be887de81ce3634e62b1ae6ca96a6113297935bd9cb2c6888c6ab10a81d806b36716daf3d7f0f97479b10fe82fe_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x14c);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 27, "offset": 548}, "start": {"col": 12, "line": 27, "offset": 542}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 555}, "start": {"col": 19, "line": 27, "offset": 549}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 27, "offset": 538}, "start": {"col": 5, "line": 27, "offset": 535}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405f50_00405f50.c", "start": {"col": 5, "line": 27, "offset": 535}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 40, "line": 27, "offset": 570}, "extra": {"engine_kind": "OSS", "fingerprint": "251d83e9bbddfd5e07222bde7feae7bb291067ae981ce91c50d831eb288e85b1973bc38068bbea7d89f46d81c95b21eaba8e67dd92d0420e62ab6c323462e00e_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x14c);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 555}, "start": {"col": 19, "line": 27, "offset": 549}}, "$X": {"abstract_content": "sVar1", "end": {"col": 31, "line": 27, "offset": 561}, "start": {"col": 26, "line": 27, "offset": 556}}, "$Y": {"abstract_content": "0x14c", "end": {"col": 39, "line": 27, "offset": 569}, "start": {"col": 34, "line": 27, "offset": 564}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405f50_00405f50.c", "start": {"col": 19, "line": 27, "offset": 549}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 27, "offset": 570}, "extra": {"engine_kind": "OSS", "fingerprint": "a1f27c8bd72d179aae26ba5312570a96477ea809cc0a50f0442a40f3dacc26ba475b8a7dcd26227b7227caa8f031450f7c77aef93d622667aee3ceeb3897437d_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x14c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 555}, "start": {"col": 19, "line": 27, "offset": 549}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405f50_00405f50.c", "start": {"col": 19, "line": 27, "offset": 549}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 74, "line": 32, "offset": 1040}, "extra": {"engine_kind": "OSS", "fingerprint": "81fcaf6962d379406c5b46e48fadb9cdf66497d9a2e6a97c188a2593bc98685ff3ebe239b8e1e948c80a724c577a54500365ca55754a25dab35ad8454031d1b2_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\n                    \"%sGetGenericPortMappingEntry xmlns:u=\\\"%s\\\"><NewPortMappingIndex>%u</NewPortMappingIndex></u:GetGenericPortMappingEntry%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,param_4 & 0xffff,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sGetGenericPortMappingEntry xmlns:u=\\\"%s\\\"><NewPortMappingIndex>%u</NewPortMappingIndex></u:GetGenericPortMappingEntry%s\"", "end": {"col": 124, "line": 1, "offset": 123}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 28, "offset": 595}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+0x14c)", "svalue_end": {"col": 40, "line": 27, "offset": 570}, "svalue_start": {"col": 11, "line": 27, "offset": 541}}, "start": {"col": 21, "line": 28, "offset": 592}}, "$FMT": {"abstract_content": "\"%sGetGenericPortMappingEntry xmlns:u=\\\"%s\\\"><NewPortMappingIndex>%u</NewPortMappingIndex></u:GetGenericPortMappingEntry%s\"", "end": {"col": 144, "line": 29, "offset": 740}, "start": {"col": 21, "line": 29, "offset": 617}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405f50_00405f50.c", "start": {"col": 13, "line": 28, "offset": 584}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 74, "line": 32, "offset": 1040}, "extra": {"engine_kind": "OSS", "fingerprint": "8f3d5ab69c7f40129e65be7064c11739bbd23e7899308a8a2c09179b49c5531fbfb311f3a924de163c8299be9f72faf84070417a909d7db94a9b46560e2fcb8f_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\n                    \"%sGetGenericPortMappingEntry xmlns:u=\\\"%s\\\"><NewPortMappingIndex>%u</NewPortMappingIndex></u:GetGenericPortMappingEntry%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,param_4 & 0xffff,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 28, "offset": 591}, "start": {"col": 13, "line": 28, "offset": 584}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405f50_00405f50.c", "start": {"col": 13, "line": 28, "offset": 584}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 38, "offset": 1278}, "extra": {"engine_kind": "OSS", "fingerprint": "c0570feeed3613dbf9be5e5c492a77e8c2127d19b3f7ebecc2699c2b9f461f687a2b008ddac77671a629938848901a720dcfe799da82fce5e1bd3584f3488965_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xb3 + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 38, "offset": 1241}, "start": {"col": 15, "line": 38, "offset": 1235}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 38, "offset": 1248}, "start": {"col": 22, "line": 38, "offset": 1242}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 38, "offset": 1231}, "start": {"col": 5, "line": 38, "offset": 1225}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405f50_00405f50.c", "start": {"col": 5, "line": 38, "offset": 1225}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 38, "offset": 1278}, "extra": {"engine_kind": "OSS", "fingerprint": "2758803a3fe392df8e116e7024b2e1875bc1fe4cf74d6db917d26a6f35bbbb36360a983cc37d182da670cdf7a2b4c737a9b40788845d265bf66f95e85e029f75_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xb3 + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 38, "offset": 1248}, "start": {"col": 22, "line": 38, "offset": 1242}}, "$X": {"abstract_content": "sVar1+sVar3+0xb3", "end": {"col": 49, "line": 38, "offset": 1269}, "start": {"col": 29, "line": 38, "offset": 1249}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 38, "offset": 1277}, "start": {"col": 52, "line": 38, "offset": 1272}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405f50_00405f50.c", "start": {"col": 22, "line": 38, "offset": 1242}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 38, "offset": 1278}, "extra": {"engine_kind": "OSS", "fingerprint": "a1f27c8bd72d179aae26ba5312570a96477ea809cc0a50f0442a40f3dacc26ba475b8a7dcd26227b7227caa8f031450f7c77aef93d622667aee3ceeb3897437d_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xb3 + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 38, "offset": 1248}, "start": {"col": 22, "line": 38, "offset": 1242}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405f50_00405f50.c", "start": {"col": 22, "line": 38, "offset": 1242}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 30, "line": 42, "offset": 1635}, "extra": {"engine_kind": "OSS", "fingerprint": "ab35b86dbcfadd42ad2e5f510567c282e14237373a74f586d7aab355147da075957cbb79e756a6098349825cad332934eb94f6c804ff2b001c10439b821e5fd3_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetGenericPortMappingEntry\",\n                       iVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 39, "offset": 1309}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar3+0xb3+sVar4)", "svalue_end": {"col": 58, "line": 38, "offset": 1278}, "svalue_start": {"col": 14, "line": 38, "offset": 1234}}, "start": {"col": 24, "line": 39, "offset": 1303}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 40, "offset": 1506}, "start": {"col": 24, "line": 40, "offset": 1334}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405f50_00405f50.c", "start": {"col": 16, "line": 39, "offset": 1295}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 42, "offset": 1635}, "extra": {"engine_kind": "OSS", "fingerprint": "8f3d5ab69c7f40129e65be7064c11739bbd23e7899308a8a2c09179b49c5531fbfb311f3a924de163c8299be9f72faf84070417a909d7db94a9b46560e2fcb8f_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetGenericPortMappingEntry\",\n                       iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 39, "offset": 1302}, "start": {"col": 16, "line": 39, "offset": 1295}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00405f50_00405f50.c", "start": {"col": 16, "line": 39, "offset": 1295}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 24, "offset": 472}, "extra": {"engine_kind": "OSS", "fingerprint": "1d4c32e51c4809bdb8a3db6405f9f9b5dc6d88a569349ee9720a719d7b832b79f1e4c6069c86a3f78440c2fbca5046df2973ea20820990e2adc942e96c4fd081_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 24, "offset": 460}, "start": {"col": 12, "line": 24, "offset": 454}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 467}, "start": {"col": 19, "line": 24, "offset": 461}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 24, "offset": 450}, "start": {"col": 3, "line": 24, "offset": 445}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004061b0_004061b0.c", "start": {"col": 3, "line": 24, "offset": 445}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 24, "offset": 472}, "extra": {"engine_kind": "OSS", "fingerprint": "dcd4588e90e0a6bef46b06c1158fb6cb3861eb11a159ec8650bc5eb03afbe1609da26def37d8f4dcc6d6bd714952be4370659cf3e79d833b18778d063862d9aa_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 467}, "start": {"col": 19, "line": 24, "offset": 461}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004061b0_004061b0.c", "start": {"col": 19, "line": 24, "offset": 461}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 24, "offset": 472}, "extra": {"engine_kind": "OSS", "fingerprint": "94a9bd88bb20d3986745eda925c27227704b1c45060d118859ae7f2f446cc34995bb72104fc3c46fc758c6c0eca0d2b24634d896a247e75d7dd218f85c0bb3e6_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 24, "offset": 471}, "start": {"col": 26, "line": 24, "offset": 468}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004061b0_004061b0.c", "start": {"col": 19, "line": 24, "offset": 461}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 40, "line": 27, "offset": 576}, "extra": {"engine_kind": "OSS", "fingerprint": "9dc5a16b2f6b9aa9340239e6c3985c926239bbffbfe6fc560bc0a1edf5e42c4d8c8608a724bd06834726203ca737dd837ed60f240ced47562c8f66299827b0d5_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x14b);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 27, "offset": 554}, "start": {"col": 12, "line": 27, "offset": 548}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 561}, "start": {"col": 19, "line": 27, "offset": 555}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 27, "offset": 544}, "start": {"col": 5, "line": 27, "offset": 541}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004061b0_004061b0.c", "start": {"col": 5, "line": 27, "offset": 541}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 40, "line": 27, "offset": 576}, "extra": {"engine_kind": "OSS", "fingerprint": "07f8c7c6252e0fdcd8797c4c27fd9320f26908137fdd303eb0928ad616c97a8f332ab7b2e9e239d8bcb31b6d584ac9ccc51699ba0c7be46b7502ea28db2ce330_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x14b);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 561}, "start": {"col": 19, "line": 27, "offset": 555}}, "$X": {"abstract_content": "sVar1", "end": {"col": 31, "line": 27, "offset": 567}, "start": {"col": 26, "line": 27, "offset": 562}}, "$Y": {"abstract_content": "0x14b", "end": {"col": 39, "line": 27, "offset": 575}, "start": {"col": 34, "line": 27, "offset": 570}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004061b0_004061b0.c", "start": {"col": 19, "line": 27, "offset": 555}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 27, "offset": 576}, "extra": {"engine_kind": "OSS", "fingerprint": "dcd4588e90e0a6bef46b06c1158fb6cb3861eb11a159ec8650bc5eb03afbe1609da26def37d8f4dcc6d6bd714952be4370659cf3e79d833b18778d063862d9aa_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x14b);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 561}, "start": {"col": 19, "line": 27, "offset": 555}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004061b0_004061b0.c", "start": {"col": 19, "line": 27, "offset": 555}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 65, "line": 32, "offset": 1031}, "extra": {"engine_kind": "OSS", "fingerprint": "015d025cffeedae2ce84b2e47552795bbc1fb6e01a4333c53c3b98a53edeb260210de1c6e5fc6eb24f8f36dc4aaf679d80bef3715beb49673dbf95f53442dbc2_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\n                    \"%sSetIdleDisconnectTime xmlns:u=\\\"%s\\\"><NewIdleDisconnectTime>%u</NewIdleDisconnectTime></u:SetIdleDisconnectTime%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,param_4,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sSetIdleDisconnectTime xmlns:u=\\\"%s\\\"><NewIdleDisconnectTime>%u</NewIdleDisconnectTime></u:SetIdleDisconnectTime%s\"", "end": {"col": 118, "line": 1, "offset": 117}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 28, "offset": 601}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+0x14b)", "svalue_end": {"col": 40, "line": 27, "offset": 576}, "svalue_start": {"col": 11, "line": 27, "offset": 547}}, "start": {"col": 21, "line": 28, "offset": 598}}, "$FMT": {"abstract_content": "\"%sSetIdleDisconnectTime xmlns:u=\\\"%s\\\"><NewIdleDisconnectTime>%u</NewIdleDisconnectTime></u:SetIdleDisconnectTime%s\"", "end": {"col": 138, "line": 29, "offset": 740}, "start": {"col": 21, "line": 29, "offset": 623}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004061b0_004061b0.c", "start": {"col": 13, "line": 28, "offset": 590}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 65, "line": 32, "offset": 1031}, "extra": {"engine_kind": "OSS", "fingerprint": "51b4d70304000ba281453e186b099c876becb52025befa28d89595f2808e12db8f1e48544413dad311d2f6534ab43c96f27e74da01a871ab27937f7aa4fce0f0_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\n                    \"%sSetIdleDisconnectTime xmlns:u=\\\"%s\\\"><NewIdleDisconnectTime>%u</NewIdleDisconnectTime></u:SetIdleDisconnectTime%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,param_4,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 28, "offset": 597}, "start": {"col": 13, "line": 28, "offset": 590}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004061b0_004061b0.c", "start": {"col": 13, "line": 28, "offset": 590}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 38, "offset": 1269}, "extra": {"engine_kind": "OSS", "fingerprint": "d8538d3325c79434eaf9b7278be62d33b07688001addc9be3ea4b8d5aea8e71f0877d5d720e19c8808e1aa60340185546bfe9d26be7abe6f3076c54d45714afd_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xae + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 38, "offset": 1232}, "start": {"col": 15, "line": 38, "offset": 1226}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 38, "offset": 1239}, "start": {"col": 22, "line": 38, "offset": 1233}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 38, "offset": 1222}, "start": {"col": 5, "line": 38, "offset": 1216}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004061b0_004061b0.c", "start": {"col": 5, "line": 38, "offset": 1216}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 38, "offset": 1269}, "extra": {"engine_kind": "OSS", "fingerprint": "3eef9f9bb57f6daae74f033ad94ace489e4398d0399217b8c30ff654d50a2efd707b5b03d85637b16f4cb58dc49438201729c3d4a281365f8ac1664730867b45_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xae + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 38, "offset": 1239}, "start": {"col": 22, "line": 38, "offset": 1233}}, "$X": {"abstract_content": "sVar1+sVar3+0xae", "end": {"col": 49, "line": 38, "offset": 1260}, "start": {"col": 29, "line": 38, "offset": 1240}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 38, "offset": 1268}, "start": {"col": 52, "line": 38, "offset": 1263}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004061b0_004061b0.c", "start": {"col": 22, "line": 38, "offset": 1233}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 38, "offset": 1269}, "extra": {"engine_kind": "OSS", "fingerprint": "dcd4588e90e0a6bef46b06c1158fb6cb3861eb11a159ec8650bc5eb03afbe1609da26def37d8f4dcc6d6bd714952be4370659cf3e79d833b18778d063862d9aa_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xae + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 38, "offset": 1239}, "start": {"col": 22, "line": 38, "offset": 1233}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004061b0_004061b0.c", "start": {"col": 22, "line": 38, "offset": 1233}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 100, "line": 41, "offset": 1597}, "extra": {"engine_kind": "OSS", "fingerprint": "25dafea95c5821f2d2a816ac05b01670bf64183c8d046932e6734eeac49e8df27117aadf6e3887cca626db3a0cfd75e62b6d2b4e1e45052fbcba21e4060eb954_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"SetIdleDisconnectTime\",iVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 39, "offset": 1300}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar3+0xae+sVar4)", "svalue_end": {"col": 58, "line": 38, "offset": 1269}, "svalue_start": {"col": 14, "line": 38, "offset": 1225}}, "start": {"col": 24, "line": 39, "offset": 1294}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 40, "offset": 1497}, "start": {"col": 24, "line": 40, "offset": 1325}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004061b0_004061b0.c", "start": {"col": 16, "line": 39, "offset": 1286}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 100, "line": 41, "offset": 1597}, "extra": {"engine_kind": "OSS", "fingerprint": "51b4d70304000ba281453e186b099c876becb52025befa28d89595f2808e12db8f1e48544413dad311d2f6534ab43c96f27e74da01a871ab27937f7aa4fce0f0_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"SetIdleDisconnectTime\",iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 39, "offset": 1293}, "start": {"col": 16, "line": 39, "offset": 1286}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004061b0_004061b0.c", "start": {"col": 16, "line": 39, "offset": 1286}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 24, "offset": 481}, "extra": {"engine_kind": "OSS", "fingerprint": "e2c8e87651bd2deddd44f6709425cc97fae1df506e6a4d25611493d37b8921de305466b02d9d115c33052fc34d44a3388a3daefa1e20534aa09d39d6a6f60bdf_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 24, "offset": 469}, "start": {"col": 12, "line": 24, "offset": 463}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 476}, "start": {"col": 19, "line": 24, "offset": 470}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 24, "offset": 459}, "start": {"col": 3, "line": 24, "offset": 454}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004066b4_004066b4.c", "start": {"col": 3, "line": 24, "offset": 454}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 24, "offset": 481}, "extra": {"engine_kind": "OSS", "fingerprint": "009217d743965982a4e187b1e607ccf88634471260198dddc5dc350a73e0490e55c41fef9a691839468ac12b2175e4e2c4246171afd75676421e537aadc05b7a_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 476}, "start": {"col": 19, "line": 24, "offset": 470}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004066b4_004066b4.c", "start": {"col": 19, "line": 24, "offset": 470}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 24, "offset": 481}, "extra": {"engine_kind": "OSS", "fingerprint": "3828193f879b5848edab66990a9c7e6976b9c368acdb24ea7c4a3c30b65517f61e4dc28c942babd04ddd75aa567c7840c0525af745126745db8b4ab29cc66e3f_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 24, "offset": 480}, "start": {"col": 26, "line": 24, "offset": 477}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004066b4_004066b4.c", "start": {"col": 19, "line": 24, "offset": 470}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 56, "line": 29, "offset": 659}, "extra": {"engine_kind": "OSS", "fingerprint": "b914910d101b51e09420698fbc94bae6016de070c2fc57a9d30164833b91f4633137abc392e025604955905720a0757ba4f78aae670bf1ce49198fb2e823309c_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + sVar2 + 0x144 + sVar3);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 29, "offset": 621}, "start": {"col": 12, "line": 29, "offset": 615}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 29, "offset": 628}, "start": {"col": 19, "line": 29, "offset": 622}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 29, "offset": 611}, "start": {"col": 5, "line": 29, "offset": 608}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004066b4_004066b4.c", "start": {"col": 5, "line": 29, "offset": 608}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 56, "line": 29, "offset": 659}, "extra": {"engine_kind": "OSS", "fingerprint": "0e3e2421fdd1e9fc88592aabea0a1993bec61a9e77cdeecc62e03e7b1ca39aae19678f4ec3e21e3b1a72200db43930eb9f8231797d628c1d14f42eb7ac13cc26_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + sVar2 + 0x144 + sVar3);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 29, "offset": 628}, "start": {"col": 19, "line": 29, "offset": 622}}, "$X": {"abstract_content": "sVar1+sVar2+0x144", "end": {"col": 47, "line": 29, "offset": 650}, "start": {"col": 26, "line": 29, "offset": 629}}, "$Y": {"abstract_content": "sVar3", "end": {"col": 55, "line": 29, "offset": 658}, "propagated_value": {"svalue_abstract_content": "strlen(param_5)", "svalue_end": {"col": 28, "line": 28, "offset": 602}, "svalue_start": {"col": 13, "line": 28, "offset": 587}}, "start": {"col": 50, "line": 29, "offset": 653}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004066b4_004066b4.c", "start": {"col": 19, "line": 29, "offset": 622}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 56, "line": 29, "offset": 659}, "extra": {"engine_kind": "OSS", "fingerprint": "009217d743965982a4e187b1e607ccf88634471260198dddc5dc350a73e0490e55c41fef9a691839468ac12b2175e4e2c4246171afd75676421e537aadc05b7a_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + sVar2 + 0x144 + sVar3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 29, "offset": 628}, "start": {"col": 19, "line": 29, "offset": 622}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004066b4_004066b4.c", "start": {"col": 19, "line": 29, "offset": 622}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 73, "line": 34, "offset": 1127}, "extra": {"engine_kind": "OSS", "fingerprint": "54750cb0ef95b82a935bdd748100bfc914948d4028b2713a6ad3a4446e612716016713c144e8d1f3cb058f0b9b59e1ab43f16cb4cd5079a658d8315f7c72d752_0", "is_ignored": false, "lines": "    iVar4 = sprintf(__s,\n                    \"%sConfigureConnection xmlns:u=\\\"%s\\\"><NewUserName>%s</NewUserName><NewPassword>%s</NewPassword></u:ConfigureConnection%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,param_4,param_5,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sConfigureConnection xmlns:u=\\\"%s\\\"><NewUserName>%s</NewUserName><NewPassword>%s</NewPassword></u:ConfigureConnection%s\"", "end": {"col": 123, "line": 1, "offset": 122}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 30, "offset": 684}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar2+0x144+sVar3)", "svalue_end": {"col": 56, "line": 29, "offset": 659}, "svalue_start": {"col": 11, "line": 29, "offset": 614}}, "start": {"col": 21, "line": 30, "offset": 681}}, "$FMT": {"abstract_content": "\"%sConfigureConnection xmlns:u=\\\"%s\\\"><NewUserName>%s</NewUserName><NewPassword>%s</NewPassword></u:ConfigureConnection%s\"", "end": {"col": 143, "line": 31, "offset": 828}, "start": {"col": 21, "line": 31, "offset": 706}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004066b4_004066b4.c", "start": {"col": 13, "line": 30, "offset": 673}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 73, "line": 34, "offset": 1127}, "extra": {"engine_kind": "OSS", "fingerprint": "0aad0d6c4fdc308a40e4c80591d705887c219231dd6eecfb54f65a5c76fad21f36ffa90ef81014985c2c650881d69dee23d4f3321c44b6017caf0ed22ab216c4_0", "is_ignored": false, "lines": "    iVar4 = sprintf(__s,\n                    \"%sConfigureConnection xmlns:u=\\\"%s\\\"><NewUserName>%s</NewUserName><NewPassword>%s</NewPassword></u:ConfigureConnection%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,param_4,param_5,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 30, "offset": 680}, "start": {"col": 13, "line": 30, "offset": 673}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004066b4_004066b4.c", "start": {"col": 13, "line": 30, "offset": 673}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 40, "offset": 1365}, "extra": {"engine_kind": "OSS", "fingerprint": "e6b93a4233d308b7aa15430d08ed1c91c1478e0def5fc1ba082273ac25680f2525132cc0882d160cc946df5538974c8be1b5ac41d79266b115630d38a57a8711_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xac + sVar3);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 40, "offset": 1328}, "start": {"col": 15, "line": 40, "offset": 1322}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 40, "offset": 1335}, "start": {"col": 22, "line": 40, "offset": 1329}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 40, "offset": 1318}, "start": {"col": 5, "line": 40, "offset": 1312}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004066b4_004066b4.c", "start": {"col": 5, "line": 40, "offset": 1312}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 40, "offset": 1365}, "extra": {"engine_kind": "OSS", "fingerprint": "6a6e5cade73c6fd52e67fb31797bc5809257eda313a7c93fbe1d3d2fb8c5ac4b40f346e874e26e5e329f73109b155c107ae759cadc747cbe58641fc508fc1ae1_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xac + sVar3);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 40, "offset": 1335}, "start": {"col": 22, "line": 40, "offset": 1329}}, "$X": {"abstract_content": "sVar1+sVar2+0xac", "end": {"col": 49, "line": 40, "offset": 1356}, "start": {"col": 29, "line": 40, "offset": 1336}}, "$Y": {"abstract_content": "sVar3", "end": {"col": 57, "line": 40, "offset": 1364}, "start": {"col": 52, "line": 40, "offset": 1359}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004066b4_004066b4.c", "start": {"col": 22, "line": 40, "offset": 1329}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 40, "offset": 1365}, "extra": {"engine_kind": "OSS", "fingerprint": "009217d743965982a4e187b1e607ccf88634471260198dddc5dc350a73e0490e55c41fef9a691839468ac12b2175e4e2c4246171afd75676421e537aadc05b7a_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xac + sVar3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 40, "offset": 1335}, "start": {"col": 22, "line": 40, "offset": 1329}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004066b4_004066b4.c", "start": {"col": 22, "line": 40, "offset": 1329}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 98, "line": 43, "offset": 1691}, "extra": {"engine_kind": "OSS", "fingerprint": "ba470b2d56899d5b058b4bc34c23ef054987c058cc2c1f30cdb8392f966716583f0ad156dbea423f73b47e10f11299b18742e7465070b9db050d1c425f8bcf5e_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"ConfigureConnection\",iVar4);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 41, "offset": 1396}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar2+0xac+sVar3)", "svalue_end": {"col": 58, "line": 40, "offset": 1365}, "svalue_start": {"col": 14, "line": 40, "offset": 1321}}, "start": {"col": 24, "line": 41, "offset": 1390}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 42, "offset": 1593}, "start": {"col": 24, "line": 42, "offset": 1421}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004066b4_004066b4.c", "start": {"col": 16, "line": 41, "offset": 1382}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 98, "line": 43, "offset": 1691}, "extra": {"engine_kind": "OSS", "fingerprint": "0aad0d6c4fdc308a40e4c80591d705887c219231dd6eecfb54f65a5c76fad21f36ffa90ef81014985c2c650881d69dee23d4f3321c44b6017caf0ed22ab216c4_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"ConfigureConnection\",iVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 41, "offset": 1389}, "start": {"col": 16, "line": 41, "offset": 1382}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004066b4_004066b4.c", "start": {"col": 16, "line": 41, "offset": 1382}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "f4be08b3d1a1cdba072695187197691fa42a4a2614e465ccfc091c301352a8dd49c9ce6c081c36521569d29f84248ea9ac4387b49a88b2d3c9fc47dfc1f2ce31_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 24, "offset": 441}, "start": {"col": 12, "line": 24, "offset": 435}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 24, "offset": 431}, "start": {"col": 3, "line": 24, "offset": 426}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040694c_0040694c.c", "start": {"col": 3, "line": 24, "offset": 426}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "57e2c4c48565c0d3b292beaee16e59a2368a014597a0fec6f0ffb43532405bd2f454d69608dad914347a1a5706b1640ba019cce3e9bf5806aafb2b33868eaad2_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040694c_0040694c.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "09fc6c7333ee8d9a9487c465303627244f58f0a78fcef743d573fc28b29a50fc5742c18b6f23a180eeccce93838dfcf1e8ca415372c3e778507421d7513a8c1e_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 24, "offset": 452}, "start": {"col": 26, "line": 24, "offset": 449}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040694c_0040694c.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "cb29468754699e627c81adb9ff6c2853729a85c92828ba1aa11513bd80edc8700205b3bae76cd9030c3352c983c58a93ab77ac967264244d9317c86f25c86524_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x120);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 27, "offset": 535}, "start": {"col": 12, "line": 27, "offset": 529}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 27, "offset": 525}, "start": {"col": 5, "line": 27, "offset": 522}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040694c_0040694c.c", "start": {"col": 5, "line": 27, "offset": 522}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "374b5d3ad161693cfc7ceb7a9b2371b806a75df96b7940a3913b2681f26182c7ba16933d0dde8f94a2d8e66d0c537dec0c2e091e315e1fa55f31dd413ff577ff_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x120);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$X": {"abstract_content": "sVar1", "end": {"col": 31, "line": 27, "offset": 548}, "start": {"col": 26, "line": 27, "offset": 543}}, "$Y": {"abstract_content": "0x120", "end": {"col": 39, "line": 27, "offset": 556}, "start": {"col": 34, "line": 27, "offset": 551}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040694c_0040694c.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "57e2c4c48565c0d3b292beaee16e59a2368a014597a0fec6f0ffb43532405bd2f454d69608dad914347a1a5706b1640ba019cce3e9bf5806aafb2b33868eaad2_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x120);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040694c_0040694c.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 57, "line": 32, "offset": 969}, "extra": {"engine_kind": "OSS", "fingerprint": "7e338185fda2ea9a669f28b12a7408a7525be800f4d22de892787a1d9c4000208897fed5f8fcde5e0803a15d798a24e3f552f5a7645e7009c48f0b366a7b2fb7_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\n                    \"%sGetPPPAuthenticationProtocol xmlns:u=\\\"%s\\\"></u:GetPPPAuthenticationProtocol%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sGetPPPAuthenticationProtocol xmlns:u=\\\"%s\\\"></u:GetPPPAuthenticationProtocol%s\"", "end": {"col": 83, "line": 1, "offset": 82}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 28, "offset": 582}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+0x120)", "svalue_end": {"col": 40, "line": 27, "offset": 557}, "svalue_start": {"col": 11, "line": 27, "offset": 528}}, "start": {"col": 21, "line": 28, "offset": 579}}, "$FMT": {"abstract_content": "\"%sGetPPPAuthenticationProtocol xmlns:u=\\\"%s\\\"></u:GetPPPAuthenticationProtocol%s\"", "end": {"col": 103, "line": 29, "offset": 686}, "start": {"col": 21, "line": 29, "offset": 604}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040694c_0040694c.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 32, "offset": 969}, "extra": {"engine_kind": "OSS", "fingerprint": "fedb604ac22619101da3a4f31573df83e5f6bc9c55a6a6d3ad78f29b486afb44ae255e9943b19b02a176f64dff24529388e0e1a2b8c4d6c93c07ebfd327289ee_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\n                    \"%sGetPPPAuthenticationProtocol xmlns:u=\\\"%s\\\"></u:GetPPPAuthenticationProtocol%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 28, "offset": 578}, "start": {"col": 13, "line": 28, "offset": 571}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040694c_0040694c.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 38, "offset": 1207}, "extra": {"engine_kind": "OSS", "fingerprint": "0a2255bcf02b0b4f9eee794cb2153af46e00c6496cdb38098c3ac1a3e2408d14def5d0cb813a88428bf00a843bc6069ee2598db623128cfb402815cf38bb38da_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xb5 + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 38, "offset": 1170}, "start": {"col": 15, "line": 38, "offset": 1164}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 38, "offset": 1177}, "start": {"col": 22, "line": 38, "offset": 1171}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 38, "offset": 1160}, "start": {"col": 5, "line": 38, "offset": 1154}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040694c_0040694c.c", "start": {"col": 5, "line": 38, "offset": 1154}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 38, "offset": 1207}, "extra": {"engine_kind": "OSS", "fingerprint": "7827c547bf7e5ad566bb8b78b5fd5949fff154ed723c6f339c0b959dc0041285ad64b288c4840d47cdcc18e295b7989e213219963f9b1b7ec7faa7d6a5094a11_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xb5 + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 38, "offset": 1177}, "start": {"col": 22, "line": 38, "offset": 1171}}, "$X": {"abstract_content": "sVar1+sVar3+0xb5", "end": {"col": 49, "line": 38, "offset": 1198}, "start": {"col": 29, "line": 38, "offset": 1178}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 38, "offset": 1206}, "start": {"col": 52, "line": 38, "offset": 1201}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040694c_0040694c.c", "start": {"col": 22, "line": 38, "offset": 1171}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 38, "offset": 1207}, "extra": {"engine_kind": "OSS", "fingerprint": "57e2c4c48565c0d3b292beaee16e59a2368a014597a0fec6f0ffb43532405bd2f454d69608dad914347a1a5706b1640ba019cce3e9bf5806aafb2b33868eaad2_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xb5 + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 38, "offset": 1177}, "start": {"col": 22, "line": 38, "offset": 1171}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040694c_0040694c.c", "start": {"col": 22, "line": 38, "offset": 1171}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 30, "line": 42, "offset": 1566}, "extra": {"engine_kind": "OSS", "fingerprint": "d131747f1ec62c2dab60fe9c8c5cc0befdcd8f943583ccb0f35ad0c81a7fb411b9535a6673b451a2ab81fa364416a6a56f6b62812bfbece2b00876de40d7a23b_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetPPPAuthenticationProtocol\",\n                       iVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 39, "offset": 1238}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar3+0xb5+sVar4)", "svalue_end": {"col": 58, "line": 38, "offset": 1207}, "svalue_start": {"col": 14, "line": 38, "offset": 1163}}, "start": {"col": 24, "line": 39, "offset": 1232}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 40, "offset": 1435}, "start": {"col": 24, "line": 40, "offset": 1263}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040694c_0040694c.c", "start": {"col": 16, "line": 39, "offset": 1224}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 42, "offset": 1566}, "extra": {"engine_kind": "OSS", "fingerprint": "fedb604ac22619101da3a4f31573df83e5f6bc9c55a6a6d3ad78f29b486afb44ae255e9943b19b02a176f64dff24529388e0e1a2b8c4d6c93c07ebfd327289ee_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetPPPAuthenticationProtocol\",\n                       iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 39, "offset": 1231}, "start": {"col": 16, "line": 39, "offset": 1224}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040694c_0040694c.c", "start": {"col": 16, "line": 39, "offset": 1224}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "fe7e5480d08cb6057f7c436df1b75aa5710495634c51d89a76066872153510ac93476abaccb956093bd3eb2373b99618c28cf320e79052675542f870ce657fe6_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 24, "offset": 441}, "start": {"col": 12, "line": 24, "offset": 435}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 24, "offset": 431}, "start": {"col": 3, "line": 24, "offset": 426}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406ba4_00406ba4.c", "start": {"col": 3, "line": 24, "offset": 426}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "277c89b20092e93ae818633d2853f389ea214fa02922301035a89723606b03f16be261e9a25ba90d6f5987d9dc2234999ce8b40870ce30ef6569f9f3b15a0ff2_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406ba4_00406ba4.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "c8d9aacf7d284a4327849e50208865a238b2b108c0f9b6b06be5a45ccb7ffdd91b8f6a4f036e29e6365ace66b5941abe09376123db890a20bd730c1437e65ab4_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 24, "offset": 452}, "start": {"col": 26, "line": 24, "offset": 449}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406ba4_00406ba4.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "e0642402247fb4c93982e0110ffd0833987577d1931458f1b7847ebe6f2d95fa9972192ed072a556aa89507b9a9451c0f9f13ede726bea6d3d8c8441966ffc1e_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x108);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 27, "offset": 535}, "start": {"col": 12, "line": 27, "offset": 529}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 27, "offset": 525}, "start": {"col": 5, "line": 27, "offset": 522}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406ba4_00406ba4.c", "start": {"col": 5, "line": 27, "offset": 522}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "c5fb066054761986c210b810492d1e1620fd87040cb89c72a80f597f12c36f05e23d98bd25bb26e851b9bf416eff6d94eac136532bd209480f9856c5225e8626_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x108);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$X": {"abstract_content": "sVar1", "end": {"col": 31, "line": 27, "offset": 548}, "start": {"col": 26, "line": 27, "offset": 543}}, "$Y": {"abstract_content": "0x108", "end": {"col": 39, "line": 27, "offset": 556}, "start": {"col": 34, "line": 27, "offset": 551}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406ba4_00406ba4.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "277c89b20092e93ae818633d2853f389ea214fa02922301035a89723606b03f16be261e9a25ba90d6f5987d9dc2234999ce8b40870ce30ef6569f9f3b15a0ff2_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x108);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406ba4_00406ba4.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 57, "line": 30, "offset": 903}, "extra": {"engine_kind": "OSS", "fingerprint": "f0807cf40e81504ab2f178ae69ba9e86e9ec425a9daf036aeebe3f70e40522eeb37d2b040389fa24d7e46313e5d85ba736a70832e00d32a8cbc0af278d6ef1b4_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetNATRSIPStatus xmlns:u=\\\"%s\\\"></u:GetNATRSIPStatus%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sGetNATRSIPStatus xmlns:u=\\\"%s\\\"></u:GetNATRSIPStatus%s\"", "end": {"col": 59, "line": 1, "offset": 58}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 28, "offset": 582}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+0x108)", "svalue_end": {"col": 40, "line": 27, "offset": 557}, "svalue_start": {"col": 11, "line": 27, "offset": 528}}, "start": {"col": 21, "line": 28, "offset": 579}}, "$FMT": {"abstract_content": "\"%sGetNATRSIPStatus xmlns:u=\\\"%s\\\"></u:GetNATRSIPStatus%s\"", "end": {"col": 83, "line": 28, "offset": 641}, "start": {"col": 25, "line": 28, "offset": 583}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406ba4_00406ba4.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 30, "offset": 903}, "extra": {"engine_kind": "OSS", "fingerprint": "a5f3f0f8ba1bdffdc711da6f517f5b0b0a55513fc266bcac8f25e7aa8b03e249b085f52357b0bb91645aaf63e80d7b7437c739423d479d058c5995d531c27bb2_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetNATRSIPStatus xmlns:u=\\\"%s\\\"></u:GetNATRSIPStatus%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 28, "offset": 578}, "start": {"col": 13, "line": 28, "offset": 571}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406ba4_00406ba4.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 36, "offset": 1141}, "extra": {"engine_kind": "OSS", "fingerprint": "568c4d9d70d8458c14c14a634ecd56fd9acaf13ce890e2b7ef420eae73ee0ebc760255b8574119a52b40639374e1b8499c2a143cd5778e20d517af81e4efee77_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xa9 + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 36, "offset": 1104}, "start": {"col": 15, "line": 36, "offset": 1098}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1111}, "start": {"col": 22, "line": 36, "offset": 1105}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 36, "offset": 1094}, "start": {"col": 5, "line": 36, "offset": 1088}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406ba4_00406ba4.c", "start": {"col": 5, "line": 36, "offset": 1088}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 36, "offset": 1141}, "extra": {"engine_kind": "OSS", "fingerprint": "8430aea067d870717d309967d467db5343bb9e4375d7a3cf541b80233d5d61334e69dee8bdeb5d27bae93b691f17b9052b98bce60f5143c0b9f22ecdbc347bce_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xa9 + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1111}, "start": {"col": 22, "line": 36, "offset": 1105}}, "$X": {"abstract_content": "sVar1+sVar3+0xa9", "end": {"col": 49, "line": 36, "offset": 1132}, "start": {"col": 29, "line": 36, "offset": 1112}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 36, "offset": 1140}, "start": {"col": 52, "line": 36, "offset": 1135}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406ba4_00406ba4.c", "start": {"col": 22, "line": 36, "offset": 1105}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 36, "offset": 1141}, "extra": {"engine_kind": "OSS", "fingerprint": "277c89b20092e93ae818633d2853f389ea214fa02922301035a89723606b03f16be261e9a25ba90d6f5987d9dc2234999ce8b40870ce30ef6569f9f3b15a0ff2_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xa9 + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1111}, "start": {"col": 22, "line": 36, "offset": 1105}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406ba4_00406ba4.c", "start": {"col": 22, "line": 36, "offset": 1105}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 95, "line": 39, "offset": 1464}, "extra": {"engine_kind": "OSS", "fingerprint": "6d1f24017a928d26b409d199101d27224b5a55327d57c0e17eb6d9fa72936fb4060d5b2a5ac251685bafe9c6942466bc008248aa375cd221b71621a7a06c8a49_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetNATRSIPStatus\",iVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 37, "offset": 1172}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar3+0xa9+sVar4)", "svalue_end": {"col": 58, "line": 36, "offset": 1141}, "svalue_start": {"col": 14, "line": 36, "offset": 1097}}, "start": {"col": 24, "line": 37, "offset": 1166}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 38, "offset": 1369}, "start": {"col": 24, "line": 38, "offset": 1197}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406ba4_00406ba4.c", "start": {"col": 16, "line": 37, "offset": 1158}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 95, "line": 39, "offset": 1464}, "extra": {"engine_kind": "OSS", "fingerprint": "a5f3f0f8ba1bdffdc711da6f517f5b0b0a55513fc266bcac8f25e7aa8b03e249b085f52357b0bb91645aaf63e80d7b7437c739423d479d058c5995d531c27bb2_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetNATRSIPStatus\",iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 37, "offset": 1165}, "start": {"col": 16, "line": 37, "offset": 1158}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406ba4_00406ba4.c", "start": {"col": 16, "line": 37, "offset": 1158}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "b4347955e65bf95496f0fe3662634bb117f77179a249d70ebd80de4a0afefb164ed2b611af9ab5fe4924686215dcc088f12054cab4ebbcca8b0504d70d67a27d_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 24, "offset": 441}, "start": {"col": 12, "line": 24, "offset": 435}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 24, "offset": 431}, "start": {"col": 3, "line": 24, "offset": 426}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406dfc_00406dfc.c", "start": {"col": 3, "line": 24, "offset": 426}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "c75e0e9b18add397aa8702cc561dffd495ca14c918e858ab2f4d2b92c87b9033f1e40fefd6e4f5584775d386ec9996e2b0ff4189443273034d01d857cf71987c_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406dfc_00406dfc.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "3a23f2e8f9951f1ff7820138e18fbb18f6c68982f0cadc457115c2328b7d97b11440bf4077fa41286b9aa497036cefb7bdb11270c667b6b9512026ed49c66977_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 24, "offset": 452}, "start": {"col": 26, "line": 24, "offset": 449}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406dfc_00406dfc.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "97e1776b292031cfb432a58e1ed563b91a6a2a69d8b4005492b90a6e0cb893c211d27f2c4f87fe97790e0cdb10803291edfe891d59c20a7607137274efde5f9e_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x118);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 27, "offset": 535}, "start": {"col": 12, "line": 27, "offset": 529}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 27, "offset": 525}, "start": {"col": 5, "line": 27, "offset": 522}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406dfc_00406dfc.c", "start": {"col": 5, "line": 27, "offset": 522}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "8a085217d4e3cead26536ec9788acf3c36b8ab945bae40c29e2d497c893e84fa05561bf5f3fd2b50464252e103e1e8a013f7731b44d0d07fce35afb97779ff7c_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x118);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$X": {"abstract_content": "sVar1", "end": {"col": 31, "line": 27, "offset": 548}, "start": {"col": 26, "line": 27, "offset": 543}}, "$Y": {"abstract_content": "0x118", "end": {"col": 39, "line": 27, "offset": 556}, "start": {"col": 34, "line": 27, "offset": 551}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406dfc_00406dfc.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "c75e0e9b18add397aa8702cc561dffd495ca14c918e858ab2f4d2b92c87b9033f1e40fefd6e4f5584775d386ec9996e2b0ff4189443273034d01d857cf71987c_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x118);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406dfc_00406dfc.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 57, "line": 30, "offset": 919}, "extra": {"engine_kind": "OSS", "fingerprint": "35281368cdbfd41e4f9ccee3ac793ec28bb4c3d09eba72c97325d0313ee648d803d6538fb3ab834348faab31a17c17ff904a9c42941cedeea6236d8fea8cc18b_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetPPPEncryptionProtocol xmlns:u=\\\"%s\\\"></u:GetPPPEncryptionProtocol%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sGetPPPEncryptionProtocol xmlns:u=\\\"%s\\\"></u:GetPPPEncryptionProtocol%s\"", "end": {"col": 75, "line": 1, "offset": 74}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 28, "offset": 582}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+0x118)", "svalue_end": {"col": 40, "line": 27, "offset": 557}, "svalue_start": {"col": 11, "line": 27, "offset": 528}}, "start": {"col": 21, "line": 28, "offset": 579}}, "$FMT": {"abstract_content": "\"%sGetPPPEncryptionProtocol xmlns:u=\\\"%s\\\"></u:GetPPPEncryptionProtocol%s\"", "end": {"col": 99, "line": 28, "offset": 657}, "start": {"col": 25, "line": 28, "offset": 583}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406dfc_00406dfc.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 30, "offset": 919}, "extra": {"engine_kind": "OSS", "fingerprint": "f2efefecec8a0a42b3222732f5dbb1d9a722617d69069a5243a68b2c933271d9d8ef4fbde73efbea988cf9eac12be640f4e8dcedba1c647a37a4781ebaaba49d_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetPPPEncryptionProtocol xmlns:u=\\\"%s\\\"></u:GetPPPEncryptionProtocol%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 28, "offset": 578}, "start": {"col": 13, "line": 28, "offset": 571}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406dfc_00406dfc.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 36, "offset": 1157}, "extra": {"engine_kind": "OSS", "fingerprint": "b3297c5485a58a5a5c695ab99486f07629ace70354f50cdd31e0ae25b4a4c2ef0f255cbdeec17df897dc93fa4327b3b92e486981fe67b38f8e1e63b2e2873fcc_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xb1 + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 36, "offset": 1120}, "start": {"col": 15, "line": 36, "offset": 1114}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1127}, "start": {"col": 22, "line": 36, "offset": 1121}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 36, "offset": 1110}, "start": {"col": 5, "line": 36, "offset": 1104}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406dfc_00406dfc.c", "start": {"col": 5, "line": 36, "offset": 1104}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 36, "offset": 1157}, "extra": {"engine_kind": "OSS", "fingerprint": "561374ebc8e1f2f00d3503872698629ff4c8e2bfaece12155f2a1d29b6784b0fc52c9b959d1ae67287c9ccd62a2874cdb2555b2e6e7234443f891946e0ce6ea2_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xb1 + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1127}, "start": {"col": 22, "line": 36, "offset": 1121}}, "$X": {"abstract_content": "sVar1+sVar3+0xb1", "end": {"col": 49, "line": 36, "offset": 1148}, "start": {"col": 29, "line": 36, "offset": 1128}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 36, "offset": 1156}, "start": {"col": 52, "line": 36, "offset": 1151}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406dfc_00406dfc.c", "start": {"col": 22, "line": 36, "offset": 1121}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 36, "offset": 1157}, "extra": {"engine_kind": "OSS", "fingerprint": "c75e0e9b18add397aa8702cc561dffd495ca14c918e858ab2f4d2b92c87b9033f1e40fefd6e4f5584775d386ec9996e2b0ff4189443273034d01d857cf71987c_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xb1 + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1127}, "start": {"col": 22, "line": 36, "offset": 1121}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406dfc_00406dfc.c", "start": {"col": 22, "line": 36, "offset": 1121}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 30, "line": 40, "offset": 1512}, "extra": {"engine_kind": "OSS", "fingerprint": "fb31640fd10cee771349709beea30f8efd07c3d69ff3802fcac53f428f45793a32dca703a48a2f53df4fad286c5b23f3710ed162780f9ed0ea1789b5eee1bdbf_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetPPPEncryptionProtocol\",\n                       iVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 37, "offset": 1188}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar3+0xb1+sVar4)", "svalue_end": {"col": 58, "line": 36, "offset": 1157}, "svalue_start": {"col": 14, "line": 36, "offset": 1113}}, "start": {"col": 24, "line": 37, "offset": 1182}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 38, "offset": 1385}, "start": {"col": 24, "line": 38, "offset": 1213}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406dfc_00406dfc.c", "start": {"col": 16, "line": 37, "offset": 1174}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 40, "offset": 1512}, "extra": {"engine_kind": "OSS", "fingerprint": "f2efefecec8a0a42b3222732f5dbb1d9a722617d69069a5243a68b2c933271d9d8ef4fbde73efbea988cf9eac12be640f4e8dcedba1c647a37a4781ebaaba49d_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetPPPEncryptionProtocol\",\n                       iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 37, "offset": 1181}, "start": {"col": 16, "line": 37, "offset": 1174}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00406dfc_00406dfc.c", "start": {"col": 16, "line": 37, "offset": 1174}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 25, "offset": 517}, "extra": {"engine_kind": "OSS", "fingerprint": "d72897007d583dc1bbb094c3ced5d959e44642ef87fdbbf412c7b63f2a0f52c5bf82d02504ee2b496f22768211bfd5ce7731f1127c09369348afa0683afc6e0d_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 25, "offset": 505}, "start": {"col": 12, "line": 25, "offset": 499}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 25, "offset": 512}, "start": {"col": 19, "line": 25, "offset": 506}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 25, "offset": 495}, "start": {"col": 3, "line": 25, "offset": 490}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407054_00407054.c", "start": {"col": 3, "line": 25, "offset": 490}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 25, "offset": 517}, "extra": {"engine_kind": "OSS", "fingerprint": "31217f94166f04658c5e0edbe3dd61cc3905b2122ca10e13ddd8ae4d023413e8c958a3d81307c5208008aa3541c4114e32de5df27f11e8f18717fd928ed37d79_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 25, "offset": 512}, "start": {"col": 19, "line": 25, "offset": 506}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407054_00407054.c", "start": {"col": 19, "line": 25, "offset": 506}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 25, "offset": 517}, "extra": {"engine_kind": "OSS", "fingerprint": "52fc0fc6dbdcfc2ecc4c666380d606638e67c28e8fdb67775ee57a5e8399b6cf804e90e74a72e59ace07e899a8898c5442beb3e51f707ec2a39199c6efbdddb1_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 25, "offset": 516}, "start": {"col": 26, "line": 25, "offset": 513}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407054_00407054.c", "start": {"col": 19, "line": 25, "offset": 506}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 59, "line": 30, "offset": 701}, "extra": {"engine_kind": "OSS", "fingerprint": "06c65097677d3212e4048e7f65b1929323098528d08d5a1b87a7c8fa54c76d2f5bfff68a5e53166186861183fcc0a509bfa49358b0d7fb9514e5dc640bb81b26_0", "is_ignored": false, "lines": "    __s = (char *)malloc(local_30 + sVar1 + 0x16c + sVar2);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 30, "offset": 660}, "start": {"col": 12, "line": 30, "offset": 654}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 30, "offset": 667}, "start": {"col": 19, "line": 30, "offset": 661}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 30, "offset": 650}, "start": {"col": 5, "line": 30, "offset": 647}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407054_00407054.c", "start": {"col": 5, "line": 30, "offset": 647}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 59, "line": 30, "offset": 701}, "extra": {"engine_kind": "OSS", "fingerprint": "b2e7efc0f7473c1d5225905814fd8cf650360117f896ba06df11cf00418d9f4e08c7ec3da7cc068b9cd411053da331bb29adbd6916f1b80d9de8db1a21aa6cff_0", "is_ignored": false, "lines": "    __s = (char *)malloc(local_30 + sVar1 + 0x16c + sVar2);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 30, "offset": 667}, "start": {"col": 19, "line": 30, "offset": 661}}, "$X": {"abstract_content": "local_30+sVar1+0x16c", "end": {"col": 50, "line": 30, "offset": 692}, "start": {"col": 26, "line": 30, "offset": 668}}, "$Y": {"abstract_content": "sVar2", "end": {"col": 58, "line": 30, "offset": 700}, "propagated_value": {"svalue_abstract_content": "strlen(param_6)", "svalue_end": {"col": 28, "line": 29, "offset": 641}, "svalue_start": {"col": 13, "line": 29, "offset": 626}}, "start": {"col": 53, "line": 30, "offset": 695}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407054_00407054.c", "start": {"col": 19, "line": 30, "offset": 661}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 59, "line": 30, "offset": 701}, "extra": {"engine_kind": "OSS", "fingerprint": "31217f94166f04658c5e0edbe3dd61cc3905b2122ca10e13ddd8ae4d023413e8c958a3d81307c5208008aa3541c4114e32de5df27f11e8f18717fd928ed37d79_1", "is_ignored": false, "lines": "    __s = (char *)malloc(local_30 + sVar1 + 0x16c + sVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 30, "offset": 667}, "start": {"col": 19, "line": 30, "offset": 661}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407054_00407054.c", "start": {"col": 19, "line": 30, "offset": 661}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 87, "line": 35, "offset": 1220}, "extra": {"engine_kind": "OSS", "fingerprint": "6d346c35d4dba862c124528e407aa209e8ac5cb53c0f1ee0b55dfc4d402cbf761022c9a8e6fdcef90601da96867770b28f820636babd78edacae009431cb36a3_0", "is_ignored": false, "lines": "    iVar3 = sprintf(__s,\n                    \"%sDeletePortMapping xmlns:u=\\\"%s\\\"><NewRemoteHost>%s</NewRemoteHost><NewExternalPort>%u</NewExternalPort><NewProtocol>%s</NewProtocol></u:DeletePortMapping%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,param_4,(uint)param_5,param_6,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sDeletePortMapping xmlns:u=\\\"%s\\\"><NewRemoteHost>%s</NewRemoteHost><NewExternalPort>%u</NewExternalPort><NewProtocol>%s</NewProtocol></u:DeletePortMapping%s\"", "end": {"col": 160, "line": 1, "offset": 159}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 31, "offset": 726}, "propagated_value": {"svalue_abstract_content": "(char*malloc(local_30+sVar1+0x16c+sVar2)", "svalue_end": {"col": 59, "line": 30, "offset": 701}, "svalue_start": {"col": 11, "line": 30, "offset": 653}}, "start": {"col": 21, "line": 31, "offset": 723}}, "$FMT": {"abstract_content": "\"%sDeletePortMapping xmlns:u=\\\"%s\\\"><NewRemoteHost>%s</NewRemoteHost><NewExternalPort>%u</NewExternalPort><NewProtocol>%s</NewProtocol></u:DeletePortMapping%s\"", "end": {"col": 180, "line": 32, "offset": 907}, "start": {"col": 21, "line": 32, "offset": 748}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407054_00407054.c", "start": {"col": 13, "line": 31, "offset": 715}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 87, "line": 35, "offset": 1220}, "extra": {"engine_kind": "OSS", "fingerprint": "440df2182c0b6b4a80d2df4360206c72e9c828e9071be577c5d66efce92a2ba218db476dcd98e3a36d7b019918d597812e20556b7f75aee524e88455b0c41d28_0", "is_ignored": false, "lines": "    iVar3 = sprintf(__s,\n                    \"%sDeletePortMapping xmlns:u=\\\"%s\\\"><NewRemoteHost>%s</NewRemoteHost><NewExternalPort>%u</NewExternalPort><NewProtocol>%s</NewProtocol></u:DeletePortMapping%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,param_4,(uint)param_5,param_6,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 31, "offset": 722}, "start": {"col": 13, "line": 31, "offset": 715}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407054_00407054.c", "start": {"col": 13, "line": 31, "offset": 715}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 41, "offset": 1458}, "extra": {"engine_kind": "OSS", "fingerprint": "7dc994372a8ee479692083cd2b2494a28274cd4db49c204c5022ea22f9fae6940432fea3360e20726b79565a428bf3e970f41f1977b5e1c7147e2cc1a66e7cbd_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xaa + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 41, "offset": 1421}, "start": {"col": 15, "line": 41, "offset": 1415}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 41, "offset": 1428}, "start": {"col": 22, "line": 41, "offset": 1422}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 41, "offset": 1411}, "start": {"col": 5, "line": 41, "offset": 1405}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407054_00407054.c", "start": {"col": 5, "line": 41, "offset": 1405}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 41, "offset": 1458}, "extra": {"engine_kind": "OSS", "fingerprint": "963b37bdffb34849e48cb498efbe52bf56628ccdbd4e7d1376038153d1fb6a31a395707e2dc37c1de2995a08bb408a5bf24534506bbd37a2313534af1852c8e0_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xaa + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 41, "offset": 1428}, "start": {"col": 22, "line": 41, "offset": 1422}}, "$X": {"abstract_content": "sVar1+sVar2+0xaa", "end": {"col": 49, "line": 41, "offset": 1449}, "start": {"col": 29, "line": 41, "offset": 1429}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 41, "offset": 1457}, "start": {"col": 52, "line": 41, "offset": 1452}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407054_00407054.c", "start": {"col": 22, "line": 41, "offset": 1422}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 41, "offset": 1458}, "extra": {"engine_kind": "OSS", "fingerprint": "31217f94166f04658c5e0edbe3dd61cc3905b2122ca10e13ddd8ae4d023413e8c958a3d81307c5208008aa3541c4114e32de5df27f11e8f18717fd928ed37d79_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xaa + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 41, "offset": 1428}, "start": {"col": 22, "line": 41, "offset": 1422}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407054_00407054.c", "start": {"col": 22, "line": 41, "offset": 1422}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 96, "line": 44, "offset": 1782}, "extra": {"engine_kind": "OSS", "fingerprint": "5042c7745ad33158296ebd204b8e29b8a9b8571540115e705bb27f9572dc583a69c0ba3cc3ad5bbd90f8e55c2e9d8b55b697778b303cab68d759aea9c0c54426_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"DeletePortMapping\",iVar3);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0", "end": {"col": 59, "line": 44, "offset": 1745}, "start": {"col": 58, "line": 44, "offset": 1744}}, "$UNSIGNED": {"abstract_content": "local_30", "end": {"col": 13, "line": 42, "offset": 1472}, "start": {"col": 5, "line": 42, "offset": 1464}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407054_00407054.c", "start": {"col": 5, "line": 42, "offset": 1464}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 96, "line": 44, "offset": 1782}, "extra": {"engine_kind": "OSS", "fingerprint": "0264334695386ce6001646e4570e5c54a2cf4fe51ad76ef1dacdb399524ef98b176a639fa146900b9fc6844ac7c505cfe48a4a9f6dc5be8c409b703d2e8557ff_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"DeletePortMapping\",iVar3);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 42, "offset": 1489}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar2+0xaa+sVar4)", "svalue_end": {"col": 58, "line": 41, "offset": 1458}, "svalue_start": {"col": 14, "line": 41, "offset": 1414}}, "start": {"col": 24, "line": 42, "offset": 1483}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 43, "offset": 1686}, "start": {"col": 24, "line": 43, "offset": 1514}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407054_00407054.c", "start": {"col": 16, "line": 42, "offset": 1475}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 96, "line": 44, "offset": 1782}, "extra": {"engine_kind": "OSS", "fingerprint": "440df2182c0b6b4a80d2df4360206c72e9c828e9071be577c5d66efce92a2ba218db476dcd98e3a36d7b019918d597812e20556b7f75aee524e88455b0c41d28_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"DeletePortMapping\",iVar3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 42, "offset": 1482}, "start": {"col": 16, "line": 42, "offset": 1475}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407054_00407054.c", "start": {"col": 16, "line": 42, "offset": 1475}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "7940b5267811bcfc1c703cb1631082377f4981a55603b23b6ca9bc3a4bc6e00df589b4bb026168860d774e5fb4bc93c99e5752b47406093e12ba494150ced790_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 24, "offset": 441}, "start": {"col": 12, "line": 24, "offset": 435}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 24, "offset": 431}, "start": {"col": 3, "line": 24, "offset": 426}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004072f8_004072f8.c", "start": {"col": 3, "line": 24, "offset": 426}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "31e6de55fd5d3dd594114b2f5f0f162a328de0fc60a9b07734efd1a56ecb2df8ed8666221a4f87164f3735e452ffc53d3edccda5b46012c83c74702d7e37a7d6_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004072f8_004072f8.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "394674db7b3cab76f2db116967d1cf248ff9aa4315a0411c2df31eb2e5cf5ece8827b27f760c3f2d60d3594fffe19a5208e7cdee51ebecd6bb61972986b74bd3_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 24, "offset": 452}, "start": {"col": 26, "line": 24, "offset": 449}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004072f8_004072f8.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "bd555734ec546ee1578f5f19f58e780e190392d2eca4c35603f15dc816f094817bda63937b6799ad6879da375889b311a564a98943a253778e2816f5fd940c61_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x108);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 27, "offset": 535}, "start": {"col": 12, "line": 27, "offset": 529}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 27, "offset": 525}, "start": {"col": 5, "line": 27, "offset": 522}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004072f8_004072f8.c", "start": {"col": 5, "line": 27, "offset": 522}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "f40ccac7dd23d6148786a67c5dcd1f7486e3c0f735a91f7cc1b0dbf04c27d9d2a6963d3b1bca2db2330296c03eb223b12ce4ac77d1b615744ad4a1b7a4f1e62e_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x108);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$X": {"abstract_content": "sVar1", "end": {"col": 31, "line": 27, "offset": 548}, "start": {"col": 26, "line": 27, "offset": 543}}, "$Y": {"abstract_content": "0x108", "end": {"col": 39, "line": 27, "offset": 556}, "start": {"col": 34, "line": 27, "offset": 551}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004072f8_004072f8.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "31e6de55fd5d3dd594114b2f5f0f162a328de0fc60a9b07734efd1a56ecb2df8ed8666221a4f87164f3735e452ffc53d3edccda5b46012c83c74702d7e37a7d6_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x108);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004072f8_004072f8.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 57, "line": 30, "offset": 903}, "extra": {"engine_kind": "OSS", "fingerprint": "e73003ed9752e47c4993c8094b721ee703f7943f5ee8e975c3c4fcde57d2582a1312540d0bfff0b4e56ba3827f265836eed8bce7f19e18096e192fa7e27e5b68_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sForceTermination xmlns:u=\\\"%s\\\"></u:ForceTermination%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sForceTermination xmlns:u=\\\"%s\\\"></u:ForceTermination%s\"", "end": {"col": 59, "line": 1, "offset": 58}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 28, "offset": 582}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+0x108)", "svalue_end": {"col": 40, "line": 27, "offset": 557}, "svalue_start": {"col": 11, "line": 27, "offset": 528}}, "start": {"col": 21, "line": 28, "offset": 579}}, "$FMT": {"abstract_content": "\"%sForceTermination xmlns:u=\\\"%s\\\"></u:ForceTermination%s\"", "end": {"col": 83, "line": 28, "offset": 641}, "start": {"col": 25, "line": 28, "offset": 583}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004072f8_004072f8.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 30, "offset": 903}, "extra": {"engine_kind": "OSS", "fingerprint": "61762c631d6672efd9e98270b8a0b2d22800252f1ff805153e57e56e54af801c43fb7452e27ddbf439e64e65f6540a677aa532ee9a4320bc91fcc4870404272f_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sForceTermination xmlns:u=\\\"%s\\\"></u:ForceTermination%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 28, "offset": 578}, "start": {"col": 13, "line": 28, "offset": 571}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004072f8_004072f8.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 36, "offset": 1141}, "extra": {"engine_kind": "OSS", "fingerprint": "111a2563b8668e46c76b2745b83377f6c2adf466ba9db9931193518e475801c48556eeb5c6ddec86b559df70ad3e76e1167a7afd6648f8eb0bdc20058b480689_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xa9 + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 36, "offset": 1104}, "start": {"col": 15, "line": 36, "offset": 1098}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1111}, "start": {"col": 22, "line": 36, "offset": 1105}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 36, "offset": 1094}, "start": {"col": 5, "line": 36, "offset": 1088}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004072f8_004072f8.c", "start": {"col": 5, "line": 36, "offset": 1088}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 36, "offset": 1141}, "extra": {"engine_kind": "OSS", "fingerprint": "29874538f8cb40df8d8367fdba47cdcd00868357da463e09d135b440bce291d81aff4c8ded28877510c7dc988281bdd9b94d44d31a92fd9bfec3fad80641e143_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xa9 + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1111}, "start": {"col": 22, "line": 36, "offset": 1105}}, "$X": {"abstract_content": "sVar1+sVar3+0xa9", "end": {"col": 49, "line": 36, "offset": 1132}, "start": {"col": 29, "line": 36, "offset": 1112}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 36, "offset": 1140}, "start": {"col": 52, "line": 36, "offset": 1135}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004072f8_004072f8.c", "start": {"col": 22, "line": 36, "offset": 1105}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 36, "offset": 1141}, "extra": {"engine_kind": "OSS", "fingerprint": "31e6de55fd5d3dd594114b2f5f0f162a328de0fc60a9b07734efd1a56ecb2df8ed8666221a4f87164f3735e452ffc53d3edccda5b46012c83c74702d7e37a7d6_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xa9 + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1111}, "start": {"col": 22, "line": 36, "offset": 1105}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004072f8_004072f8.c", "start": {"col": 22, "line": 36, "offset": 1105}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 95, "line": 39, "offset": 1464}, "extra": {"engine_kind": "OSS", "fingerprint": "14effe500ec7581a9a165360ae65f955f9237cc0c7f8352078ff9dcb3f96df2c242a6e3b75de85f1abfe706ef30fb295b9b5877e1c9481e17978aeb2f0bf7508_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"ForceTermination\",iVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 37, "offset": 1172}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar3+0xa9+sVar4)", "svalue_end": {"col": 58, "line": 36, "offset": 1141}, "svalue_start": {"col": 14, "line": 36, "offset": 1097}}, "start": {"col": 24, "line": 37, "offset": 1166}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 38, "offset": 1369}, "start": {"col": 24, "line": 38, "offset": 1197}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004072f8_004072f8.c", "start": {"col": 16, "line": 37, "offset": 1158}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 95, "line": 39, "offset": 1464}, "extra": {"engine_kind": "OSS", "fingerprint": "61762c631d6672efd9e98270b8a0b2d22800252f1ff805153e57e56e54af801c43fb7452e27ddbf439e64e65f6540a677aa532ee9a4320bc91fcc4870404272f_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"ForceTermination\",iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 37, "offset": 1165}, "start": {"col": 16, "line": 37, "offset": 1158}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004072f8_004072f8.c", "start": {"col": 16, "line": 37, "offset": 1158}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "a53d21484cfb8f72c0fa15e2cb611ada9cc8c4ec3fd35d72d187f2825cfc27d391a71a1a3fb2fcd31087164c94e3ecf669a75fe7a4e1eca776369780e15258bd_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 24, "offset": 441}, "start": {"col": 12, "line": 24, "offset": 435}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 24, "offset": 431}, "start": {"col": 3, "line": 24, "offset": 426}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407550_00407550.c", "start": {"col": 3, "line": 24, "offset": 426}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "21f4ecddef6a255cb771365fb91f631490dcfb2eb0a0cdf976f5a492163f8e6c7876a39338dd16f04aa0b64d3c1b7a630c9e5feeaa63740e837d76f763746081_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407550_00407550.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "0a202563073b3d3afe763060e77b36c7b4c4771dde0fd10bec1222c9dd116abdc294bd8452fb1f4b30626113cd24bd5ae4fad9e5e150d716ad44067aab5d6c32_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 24, "offset": 452}, "start": {"col": 26, "line": 24, "offset": 449}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407550_00407550.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 39, "line": 27, "offset": 556}, "extra": {"engine_kind": "OSS", "fingerprint": "f95bd89b907747bf28c4469fd3c0361744e7c289ab2c9652d923faa6060134ccf155b11d3b0317e23d44906d78dbee1541d7cb52cf10316176e0eb19b12bd22b_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0xfe);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 27, "offset": 535}, "start": {"col": 12, "line": 27, "offset": 529}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 27, "offset": 525}, "start": {"col": 5, "line": 27, "offset": 522}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407550_00407550.c", "start": {"col": 5, "line": 27, "offset": 522}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 39, "line": 27, "offset": 556}, "extra": {"engine_kind": "OSS", "fingerprint": "087c6d91a63cb79ceaa19b584b71301f1d94484e3cfb7c0e6e58f019860be042bc014807a81479a8b7243e767c7eef885eb1c9c8165eda1d5b7ea3405dcdc988_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0xfe);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$X": {"abstract_content": "sVar1", "end": {"col": 31, "line": 27, "offset": 548}, "start": {"col": 26, "line": 27, "offset": 543}}, "$Y": {"abstract_content": "0xfe", "end": {"col": 38, "line": 27, "offset": 555}, "start": {"col": 34, "line": 27, "offset": 551}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407550_00407550.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 27, "offset": 556}, "extra": {"engine_kind": "OSS", "fingerprint": "21f4ecddef6a255cb771365fb91f631490dcfb2eb0a0cdf976f5a492163f8e6c7876a39338dd16f04aa0b64d3c1b7a630c9e5feeaa63740e837d76f763746081_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0xfe);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407550_00407550.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 57, "line": 30, "offset": 892}, "extra": {"engine_kind": "OSS", "fingerprint": "063523e2f940ae4a4c497e8ad4b42dff3715e71d755794327fd4ed183ebba76859d93f1e7445832b7d571d7376086ee25c24656dc884c70f437964a9da7a4a0d_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetPassword xmlns:u=\\\"%s\\\"></u:GetPassword%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sGetPassword xmlns:u=\\\"%s\\\"></u:GetPassword%s\"", "end": {"col": 49, "line": 1, "offset": 48}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 28, "offset": 581}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+0xfe)", "svalue_end": {"col": 39, "line": 27, "offset": 556}, "svalue_start": {"col": 11, "line": 27, "offset": 528}}, "start": {"col": 21, "line": 28, "offset": 578}}, "$FMT": {"abstract_content": "\"%sGetPassword xmlns:u=\\\"%s\\\"></u:GetPassword%s\"", "end": {"col": 73, "line": 28, "offset": 630}, "start": {"col": 25, "line": 28, "offset": 582}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407550_00407550.c", "start": {"col": 13, "line": 28, "offset": 570}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 30, "offset": 892}, "extra": {"engine_kind": "OSS", "fingerprint": "820479fe84780d8b7fccf2b4e88a8855308afcdf9947350e54280dbc2ad4c6f9864f609d51f969305f27ac7c6e6e74228dacd03e189e83fddd1b2bb4938d25a0_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetPassword xmlns:u=\\\"%s\\\"></u:GetPassword%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 28, "offset": 577}, "start": {"col": 13, "line": 28, "offset": 570}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407550_00407550.c", "start": {"col": 13, "line": 28, "offset": 570}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 36, "offset": 1130}, "extra": {"engine_kind": "OSS", "fingerprint": "827b9d930e17544301ad2fa4dc6f0e87d79b481405af60e6dafb7dd22bcc9180b642ed42186b134c5ea93b99f58d6f5ea8e399c7b3cf81a7b8e7a66d26da3167_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xa4 + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 36, "offset": 1093}, "start": {"col": 15, "line": 36, "offset": 1087}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1100}, "start": {"col": 22, "line": 36, "offset": 1094}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 36, "offset": 1083}, "start": {"col": 5, "line": 36, "offset": 1077}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407550_00407550.c", "start": {"col": 5, "line": 36, "offset": 1077}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 36, "offset": 1130}, "extra": {"engine_kind": "OSS", "fingerprint": "476d767c0b42e98f8d02c93bd430bceffde5e2a657221c7103e38032138a7bac375552196cba858919769c14f84b56ac39fe163cf8a825465d37d49f0a5148de_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xa4 + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1100}, "start": {"col": 22, "line": 36, "offset": 1094}}, "$X": {"abstract_content": "sVar1+sVar3+0xa4", "end": {"col": 49, "line": 36, "offset": 1121}, "start": {"col": 29, "line": 36, "offset": 1101}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 36, "offset": 1129}, "start": {"col": 52, "line": 36, "offset": 1124}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407550_00407550.c", "start": {"col": 22, "line": 36, "offset": 1094}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 36, "offset": 1130}, "extra": {"engine_kind": "OSS", "fingerprint": "21f4ecddef6a255cb771365fb91f631490dcfb2eb0a0cdf976f5a492163f8e6c7876a39338dd16f04aa0b64d3c1b7a630c9e5feeaa63740e837d76f763746081_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xa4 + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1100}, "start": {"col": 22, "line": 36, "offset": 1094}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407550_00407550.c", "start": {"col": 22, "line": 36, "offset": 1094}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 90, "line": 39, "offset": 1448}, "extra": {"engine_kind": "OSS", "fingerprint": "bd089bb1ad6364e3be51e6d4f96687d7bd332c5c702c31c58c177deae3f94e2074e88d31d3e5c4d37492b617433b7ca43501fbf95a17d851cf7d876f64a1339c_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetPassword\",iVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 37, "offset": 1161}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar3+0xa4+sVar4)", "svalue_end": {"col": 58, "line": 36, "offset": 1130}, "svalue_start": {"col": 14, "line": 36, "offset": 1086}}, "start": {"col": 24, "line": 37, "offset": 1155}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 38, "offset": 1358}, "start": {"col": 24, "line": 38, "offset": 1186}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407550_00407550.c", "start": {"col": 16, "line": 37, "offset": 1147}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 90, "line": 39, "offset": 1448}, "extra": {"engine_kind": "OSS", "fingerprint": "820479fe84780d8b7fccf2b4e88a8855308afcdf9947350e54280dbc2ad4c6f9864f609d51f969305f27ac7c6e6e74228dacd03e189e83fddd1b2bb4938d25a0_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetPassword\",iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 37, "offset": 1154}, "start": {"col": 16, "line": 37, "offset": 1147}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407550_00407550.c", "start": {"col": 16, "line": 37, "offset": 1147}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 24, "offset": 467}, "extra": {"engine_kind": "OSS", "fingerprint": "63468b5108d66130a660024a5f48518f3cb2ff1bb9c263ba5a8d5a89b95dd27076bbd2b2da46ed3772f7ee09aa0da05f6b50d68e72922df70b156750a61490ba_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 24, "offset": 455}, "start": {"col": 12, "line": 24, "offset": 449}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 462}, "start": {"col": 19, "line": 24, "offset": 456}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 24, "offset": 445}, "start": {"col": 3, "line": 24, "offset": 440}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407d64_00407d64.c", "start": {"col": 3, "line": 24, "offset": 440}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 24, "offset": 467}, "extra": {"engine_kind": "OSS", "fingerprint": "f98b4ffb7a763914c8cb28a935468d57b7eabb579f2c0f7d0e4fa613eaade19d7386b60ca1c615ba2303192fd4afd11b8eea5179bbd5e8b94f2febfe76cc9049_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 462}, "start": {"col": 19, "line": 24, "offset": 456}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407d64_00407d64.c", "start": {"col": 19, "line": 24, "offset": 456}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 24, "offset": 467}, "extra": {"engine_kind": "OSS", "fingerprint": "c391645c145a290b531c907812a114c99c8e96b2c49144a8dfad1a3175503170637a42e564f1144748313addcd046b33199d578c79fef0d87ced7e203e90c3ba_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 24, "offset": 466}, "start": {"col": 26, "line": 24, "offset": 463}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407d64_00407d64.c", "start": {"col": 19, "line": 24, "offset": 456}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 48, "line": 28, "offset": 608}, "extra": {"engine_kind": "OSS", "fingerprint": "c9a029e2063136be1560f40f4b9d66ab61166fbffd623a9c3b13e60d293695a7ff724e6ca9d07467bd8b889025bb911527c008e6c8489f2b947500b54628e051_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + sVar2 + 0x131);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 28, "offset": 578}, "start": {"col": 12, "line": 28, "offset": 572}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 28, "offset": 585}, "start": {"col": 19, "line": 28, "offset": 579}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 28, "offset": 568}, "start": {"col": 5, "line": 28, "offset": 565}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407d64_00407d64.c", "start": {"col": 5, "line": 28, "offset": 565}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 48, "line": 28, "offset": 608}, "extra": {"engine_kind": "OSS", "fingerprint": "837eaa780d599e6578ab581e89cfb7fc03e679897298585f8c9a87beee58fc1892ebddd1704d4e0b53c6e7e28fa98de1b0b4cb520a257eeb06b83fa2a166e167_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + sVar2 + 0x131);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 28, "offset": 585}, "start": {"col": 19, "line": 28, "offset": 579}}, "$X": {"abstract_content": "sVar1+sVar2", "end": {"col": 39, "line": 28, "offset": 599}, "start": {"col": 26, "line": 28, "offset": 586}}, "$Y": {"abstract_content": "0x131", "end": {"col": 47, "line": 28, "offset": 607}, "start": {"col": 42, "line": 28, "offset": 602}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407d64_00407d64.c", "start": {"col": 19, "line": 28, "offset": 579}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 48, "line": 28, "offset": 608}, "extra": {"engine_kind": "OSS", "fingerprint": "f98b4ffb7a763914c8cb28a935468d57b7eabb579f2c0f7d0e4fa613eaade19d7386b60ca1c615ba2303192fd4afd11b8eea5179bbd5e8b94f2febfe76cc9049_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + sVar2 + 0x131);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 28, "offset": 585}, "start": {"col": 19, "line": 28, "offset": 579}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407d64_00407d64.c", "start": {"col": 19, "line": 28, "offset": 579}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 65, "line": 33, "offset": 1047}, "extra": {"engine_kind": "OSS", "fingerprint": "4c387c633497d2ec664db3c8ffcb424888e48a318b59a9e31ab078e04e37bd99dc3d6d890c8fc7a6b71b1eab116c9d8a27f6597b380842b380b7d5958532df49_0", "is_ignored": false, "lines": "    iVar3 = sprintf(__s,\n                    \"%sSetConnectionType xmlns:u=\\\"%s\\\"><NewConnectionType>%s</NewConnectionType></u:SetConnectionType%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,param_4,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sSetConnectionType xmlns:u=\\\"%s\\\"><NewConnectionType>%s</NewConnectionType></u:SetConnectionType%s\"", "end": {"col": 102, "line": 1, "offset": 101}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 29, "offset": 633}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar2+0x131)", "svalue_end": {"col": 48, "line": 28, "offset": 608}, "svalue_start": {"col": 11, "line": 28, "offset": 571}}, "start": {"col": 21, "line": 29, "offset": 630}}, "$FMT": {"abstract_content": "\"%sSetConnectionType xmlns:u=\\\"%s\\\"><NewConnectionType>%s</NewConnectionType></u:SetConnectionType%s\"", "end": {"col": 122, "line": 30, "offset": 756}, "start": {"col": 21, "line": 30, "offset": 655}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407d64_00407d64.c", "start": {"col": 13, "line": 29, "offset": 622}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 65, "line": 33, "offset": 1047}, "extra": {"engine_kind": "OSS", "fingerprint": "f76a4f6af50766a8b132c658ae2dac189acef66a8ef4c7084f5e9fe846176fa42a077eac8e25e5a7f90fef32966c9e937a073aad63cda54069d839321906a4c7_0", "is_ignored": false, "lines": "    iVar3 = sprintf(__s,\n                    \"%sSetConnectionType xmlns:u=\\\"%s\\\"><NewConnectionType>%s</NewConnectionType></u:SetConnectionType%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,param_4,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 29, "offset": 629}, "start": {"col": 13, "line": 29, "offset": 622}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407d64_00407d64.c", "start": {"col": 13, "line": 29, "offset": 622}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 39, "offset": 1285}, "extra": {"engine_kind": "OSS", "fingerprint": "dacd1833ccd5f6181bacf89b63547d61811c507e70495515a816274231581a369a1442233520fb25659fe83aa661735b99d70f412ca0bb058c132387045bb457_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xaa + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 39, "offset": 1248}, "start": {"col": 15, "line": 39, "offset": 1242}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 39, "offset": 1255}, "start": {"col": 22, "line": 39, "offset": 1249}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 39, "offset": 1238}, "start": {"col": 5, "line": 39, "offset": 1232}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407d64_00407d64.c", "start": {"col": 5, "line": 39, "offset": 1232}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 39, "offset": 1285}, "extra": {"engine_kind": "OSS", "fingerprint": "fc82a4d175102c1d5c923b0db6a06fd11222968dc591837866c0e15f912409594213f2b14b8294d18f3a6108fb2fe528d3c1ec9e20bec469e238c6b54a926e20_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xaa + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 39, "offset": 1255}, "start": {"col": 22, "line": 39, "offset": 1249}}, "$X": {"abstract_content": "sVar1+sVar2+0xaa", "end": {"col": 49, "line": 39, "offset": 1276}, "start": {"col": 29, "line": 39, "offset": 1256}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 39, "offset": 1284}, "start": {"col": 52, "line": 39, "offset": 1279}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407d64_00407d64.c", "start": {"col": 22, "line": 39, "offset": 1249}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 39, "offset": 1285}, "extra": {"engine_kind": "OSS", "fingerprint": "f98b4ffb7a763914c8cb28a935468d57b7eabb579f2c0f7d0e4fa613eaade19d7386b60ca1c615ba2303192fd4afd11b8eea5179bbd5e8b94f2febfe76cc9049_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xaa + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 39, "offset": 1255}, "start": {"col": 22, "line": 39, "offset": 1249}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407d64_00407d64.c", "start": {"col": 22, "line": 39, "offset": 1249}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 96, "line": 42, "offset": 1609}, "extra": {"engine_kind": "OSS", "fingerprint": "cc23bb7279e6d7211c74e43d935ce3752be2e391cbedf10c66f84b05af5dff067d2cddbd891772d9cfb7d40867bac30d1179142f6d80f82c833b31f95ddd8b24_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"SetConnectionType\",iVar3);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 40, "offset": 1316}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar2+0xaa+sVar4)", "svalue_end": {"col": 58, "line": 39, "offset": 1285}, "svalue_start": {"col": 14, "line": 39, "offset": 1241}}, "start": {"col": 24, "line": 40, "offset": 1310}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 41, "offset": 1513}, "start": {"col": 24, "line": 41, "offset": 1341}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407d64_00407d64.c", "start": {"col": 16, "line": 40, "offset": 1302}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 96, "line": 42, "offset": 1609}, "extra": {"engine_kind": "OSS", "fingerprint": "f76a4f6af50766a8b132c658ae2dac189acef66a8ef4c7084f5e9fe846176fa42a077eac8e25e5a7f90fef32966c9e937a073aad63cda54069d839321906a4c7_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"SetConnectionType\",iVar3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 40, "offset": 1309}, "start": {"col": 16, "line": 40, "offset": 1302}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407d64_00407d64.c", "start": {"col": 16, "line": 40, "offset": 1302}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "a2d06a5521a090c74b8df69c1469c66cdd52f4a7945f6e3a87c9b8ca93a1857f2e9f47eb668ea8a34476ba6f69a20c63875e02753fb265fc79ce50e5770418d4_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 24, "offset": 441}, "start": {"col": 12, "line": 24, "offset": 435}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 24, "offset": 431}, "start": {"col": 3, "line": 24, "offset": 426}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407fdc_00407fdc.c", "start": {"col": 3, "line": 24, "offset": 426}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "8f9893becb9f407f5379453479522e4491558cf9afc9be0d5f10eba1f5e448fc9d12472447b22fcd33640580002e4656854df21f7b2fce3f51da95c9d54ec9fb_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407fdc_00407fdc.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "0330f1153ac221e378958c734a7552a9457bae8cc88400df1e4e6d97dd47e1791a1460a011872e027b230bde03ad719839d6e59e3a439091b75b637d46998c07_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 24, "offset": 452}, "start": {"col": 26, "line": 24, "offset": 449}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407fdc_00407fdc.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "0b04dcafae36e534ad97b79e7e330efbede56fb1ddba52098a7e5b25593e87b730ea7f3c66639ef637dc225667366200240db7484ef29785094296366ca4f323_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x10a);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 27, "offset": 535}, "start": {"col": 12, "line": 27, "offset": 529}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 27, "offset": 525}, "start": {"col": 5, "line": 27, "offset": 522}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407fdc_00407fdc.c", "start": {"col": 5, "line": 27, "offset": 522}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "6470acdd0823389b9c0ec4fec1591583285caeb7c552aeb903bf422841e3da157e14dda50825993ef677dad48f2ea711caf541cc155328c75cf3cdd6deb36c56_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x10a);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$X": {"abstract_content": "sVar1", "end": {"col": 31, "line": 27, "offset": 548}, "start": {"col": 26, "line": 27, "offset": 543}}, "$Y": {"abstract_content": "0x10a", "end": {"col": 39, "line": 27, "offset": 556}, "start": {"col": 34, "line": 27, "offset": 551}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407fdc_00407fdc.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "8f9893becb9f407f5379453479522e4491558cf9afc9be0d5f10eba1f5e448fc9d12472447b22fcd33640580002e4656854df21f7b2fce3f51da95c9d54ec9fb_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x10a);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407fdc_00407fdc.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 57, "line": 30, "offset": 905}, "extra": {"engine_kind": "OSS", "fingerprint": "ba94b7f3d4f09601fd167c36bc1abe92fd620dcf24c8a75ce1341a11393ca539c20eca68093c9eb688aa16fd97cc350d430003368d91072b0cfdc512d4a8554a_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sRequestConnection xmlns:u=\\\"%s\\\"></u:RequestConnection%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sRequestConnection xmlns:u=\\\"%s\\\"></u:RequestConnection%s\"", "end": {"col": 61, "line": 1, "offset": 60}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 28, "offset": 582}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+0x10a)", "svalue_end": {"col": 40, "line": 27, "offset": 557}, "svalue_start": {"col": 11, "line": 27, "offset": 528}}, "start": {"col": 21, "line": 28, "offset": 579}}, "$FMT": {"abstract_content": "\"%sRequestConnection xmlns:u=\\\"%s\\\"></u:RequestConnection%s\"", "end": {"col": 85, "line": 28, "offset": 643}, "start": {"col": 25, "line": 28, "offset": 583}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407fdc_00407fdc.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 30, "offset": 905}, "extra": {"engine_kind": "OSS", "fingerprint": "8c252680d3ce4755a72cc7d0b379babbef6b35f34e058b51679a2149705ad41dc0f722f58100e947671052236417eff88605170dbee8e31978492987661d642a_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sRequestConnection xmlns:u=\\\"%s\\\"></u:RequestConnection%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 28, "offset": 578}, "start": {"col": 13, "line": 28, "offset": 571}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407fdc_00407fdc.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 36, "offset": 1143}, "extra": {"engine_kind": "OSS", "fingerprint": "f9b7a5de35079213faa81eee0de3fcc74361444298d9ac0fe9cb339a723574aa1b133235b8150d2ecd5ce93da2c2d61677c1fc6442afa7c3a6b98f330c8d3c34_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xaa + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 36, "offset": 1106}, "start": {"col": 15, "line": 36, "offset": 1100}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1113}, "start": {"col": 22, "line": 36, "offset": 1107}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 36, "offset": 1096}, "start": {"col": 5, "line": 36, "offset": 1090}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407fdc_00407fdc.c", "start": {"col": 5, "line": 36, "offset": 1090}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 36, "offset": 1143}, "extra": {"engine_kind": "OSS", "fingerprint": "ec511f5d86c96bae20d24ccc1a31bd5d180d099898dc689396a6f84c84d9c805a275f84f41e83ae4e09cb75ed4cac6968b87297fbda232fa833f7977ef513792_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xaa + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1113}, "start": {"col": 22, "line": 36, "offset": 1107}}, "$X": {"abstract_content": "sVar1+sVar3+0xaa", "end": {"col": 49, "line": 36, "offset": 1134}, "start": {"col": 29, "line": 36, "offset": 1114}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 36, "offset": 1142}, "start": {"col": 52, "line": 36, "offset": 1137}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407fdc_00407fdc.c", "start": {"col": 22, "line": 36, "offset": 1107}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 36, "offset": 1143}, "extra": {"engine_kind": "OSS", "fingerprint": "8f9893becb9f407f5379453479522e4491558cf9afc9be0d5f10eba1f5e448fc9d12472447b22fcd33640580002e4656854df21f7b2fce3f51da95c9d54ec9fb_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xaa + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1113}, "start": {"col": 22, "line": 36, "offset": 1107}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407fdc_00407fdc.c", "start": {"col": 22, "line": 36, "offset": 1107}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 96, "line": 39, "offset": 1467}, "extra": {"engine_kind": "OSS", "fingerprint": "c68f9d2402ad67f9f4ff4490ba9d1295e3e3eb67cb1e2a630690238939bc2d342f6e2d923935ddc4beed7f540f9208075ae3382c2a785d931374a4c42e8171ac_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"RequestConnection\",iVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 37, "offset": 1174}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar3+0xaa+sVar4)", "svalue_end": {"col": 58, "line": 36, "offset": 1143}, "svalue_start": {"col": 14, "line": 36, "offset": 1099}}, "start": {"col": 24, "line": 37, "offset": 1168}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 38, "offset": 1371}, "start": {"col": 24, "line": 38, "offset": 1199}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407fdc_00407fdc.c", "start": {"col": 16, "line": 37, "offset": 1160}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 96, "line": 39, "offset": 1467}, "extra": {"engine_kind": "OSS", "fingerprint": "8c252680d3ce4755a72cc7d0b379babbef6b35f34e058b51679a2149705ad41dc0f722f58100e947671052236417eff88605170dbee8e31978492987661d642a_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"RequestConnection\",iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 37, "offset": 1167}, "start": {"col": 16, "line": 37, "offset": 1160}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00407fdc_00407fdc.c", "start": {"col": 16, "line": 37, "offset": 1160}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "d2b1f2cff37edf8dfd03227c1d91afed6577e01baf88b1053179b6a9be8c6765ba19cd48b22e95b6f0d0126eee3d815aec2f3fc0a161ae1fab495f04c06069b3_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 24, "offset": 441}, "start": {"col": 12, "line": 24, "offset": 435}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 24, "offset": 431}, "start": {"col": 3, "line": 24, "offset": 426}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040848c_0040848c.c", "start": {"col": 3, "line": 24, "offset": 426}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "63be5188420d7b69df82f1a68bbd4f99d970b8f8138f2b3690df251e45f0fc11a62c9158433c113d5d7ff408fb04102239cad64a2ea01e07635f0ca45e94d0fb_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040848c_0040848c.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "bbe967be40175a727a275a66221ce79ea1e451f2221619d48019a8a4c20489a6a49f55b2919fae981a028187d6754ec58d8b0fd3cfb4ae160d809fef3e26ed7e_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 24, "offset": 452}, "start": {"col": 26, "line": 24, "offset": 449}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040848c_0040848c.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "85bb89fa6a3650cc9672a9c3eae90edb0d103dae37ee976a754d0d0eac1932367955a20761194077cee90f921241d3d73d070b210ae5b1b9a85946649fc343fa_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x102);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 27, "offset": 535}, "start": {"col": 12, "line": 27, "offset": 529}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 27, "offset": 525}, "start": {"col": 5, "line": 27, "offset": 522}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040848c_0040848c.c", "start": {"col": 5, "line": 27, "offset": 522}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "b6e9da830622b06567ea3b0014c910dbb05f9b04003e6bdbc9e8fcfbabb45e880c23f3ca9039657a774e94c61ad9863d85e1da9a684db4f9190931dd358d49db_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x102);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$X": {"abstract_content": "sVar1", "end": {"col": 31, "line": 27, "offset": 548}, "start": {"col": 26, "line": 27, "offset": 543}}, "$Y": {"abstract_content": "0x102", "end": {"col": 39, "line": 27, "offset": 556}, "start": {"col": 34, "line": 27, "offset": 551}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040848c_0040848c.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "63be5188420d7b69df82f1a68bbd4f99d970b8f8138f2b3690df251e45f0fc11a62c9158433c113d5d7ff408fb04102239cad64a2ea01e07635f0ca45e94d0fb_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x102);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040848c_0040848c.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 57, "line": 30, "offset": 897}, "extra": {"engine_kind": "OSS", "fingerprint": "b730bf2b8156223d14abbd76f9d5f0fe1e048734b9b4f7811343f6e67605ec588b7a05c377e3b5c1f7004422e0c781d9ceee48039b21dc6ff0a5c43f36ce5e60_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetStatusInfo xmlns:u=\\\"%s\\\"></u:GetStatusInfo%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sGetStatusInfo xmlns:u=\\\"%s\\\"></u:GetStatusInfo%s\"", "end": {"col": 53, "line": 1, "offset": 52}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 28, "offset": 582}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+0x102)", "svalue_end": {"col": 40, "line": 27, "offset": 557}, "svalue_start": {"col": 11, "line": 27, "offset": 528}}, "start": {"col": 21, "line": 28, "offset": 579}}, "$FMT": {"abstract_content": "\"%sGetStatusInfo xmlns:u=\\\"%s\\\"></u:GetStatusInfo%s\"", "end": {"col": 77, "line": 28, "offset": 635}, "start": {"col": 25, "line": 28, "offset": 583}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040848c_0040848c.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 30, "offset": 897}, "extra": {"engine_kind": "OSS", "fingerprint": "5bc317908d55107fff5b0bf3eb24f6592fa0985e00f20f2e52b6b4c19466a234236971ab33766fb9279ae3ff61edd5d6dca8155b9517e3abf48c2efc5b1bceac_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetStatusInfo xmlns:u=\\\"%s\\\"></u:GetStatusInfo%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 28, "offset": 578}, "start": {"col": 13, "line": 28, "offset": 571}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040848c_0040848c.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 36, "offset": 1135}, "extra": {"engine_kind": "OSS", "fingerprint": "afa175dd3f613e82c0a9a7e6b607b1d3f1aa19084e054bc4a8b598c4edcce333b2935c87420f1b42d3926813cf947d10e1e3b16f9740fc89c6717d762384164f_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xa6 + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 36, "offset": 1098}, "start": {"col": 15, "line": 36, "offset": 1092}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1105}, "start": {"col": 22, "line": 36, "offset": 1099}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 36, "offset": 1088}, "start": {"col": 5, "line": 36, "offset": 1082}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040848c_0040848c.c", "start": {"col": 5, "line": 36, "offset": 1082}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 36, "offset": 1135}, "extra": {"engine_kind": "OSS", "fingerprint": "6928556dd315199547ab39c9b0a2c12f73e86e64df519de1cec4e15f316fc69d4e0d7a59d3ef5cdfc2b024603c380bebb99c595986f6b351613c6fc8423860b8_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xa6 + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1105}, "start": {"col": 22, "line": 36, "offset": 1099}}, "$X": {"abstract_content": "sVar1+sVar3+0xa6", "end": {"col": 49, "line": 36, "offset": 1126}, "start": {"col": 29, "line": 36, "offset": 1106}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 36, "offset": 1134}, "start": {"col": 52, "line": 36, "offset": 1129}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040848c_0040848c.c", "start": {"col": 22, "line": 36, "offset": 1099}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 36, "offset": 1135}, "extra": {"engine_kind": "OSS", "fingerprint": "63be5188420d7b69df82f1a68bbd4f99d970b8f8138f2b3690df251e45f0fc11a62c9158433c113d5d7ff408fb04102239cad64a2ea01e07635f0ca45e94d0fb_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xa6 + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 36, "offset": 1105}, "start": {"col": 22, "line": 36, "offset": 1099}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040848c_0040848c.c", "start": {"col": 22, "line": 36, "offset": 1099}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 92, "line": 39, "offset": 1455}, "extra": {"engine_kind": "OSS", "fingerprint": "045a31c33dd6fab883a30fdaea48ce18e5d4d7a22ff9500a08e25af81ffe98d7a2e2969ec6428b207a5420e7ab36ed85f2116a81888fae367203cb1ce6c6982c_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetStatusInfo\",iVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 37, "offset": 1166}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar3+0xa6+sVar4)", "svalue_end": {"col": 58, "line": 36, "offset": 1135}, "svalue_start": {"col": 14, "line": 36, "offset": 1091}}, "start": {"col": 24, "line": 37, "offset": 1160}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 38, "offset": 1363}, "start": {"col": 24, "line": 38, "offset": 1191}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040848c_0040848c.c", "start": {"col": 16, "line": 37, "offset": 1152}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 92, "line": 39, "offset": 1455}, "extra": {"engine_kind": "OSS", "fingerprint": "5bc317908d55107fff5b0bf3eb24f6592fa0985e00f20f2e52b6b4c19466a234236971ab33766fb9279ae3ff61edd5d6dca8155b9517e3abf48c2efc5b1bceac_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetStatusInfo\",iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 37, "offset": 1159}, "start": {"col": 16, "line": 37, "offset": 1152}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040848c_0040848c.c", "start": {"col": 16, "line": 37, "offset": 1152}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "1d5811c4e23e69519edb98cf02d5b3644c2a17102e166f5a0d4c12b4965220c70d43b1fcb58f9f747d72c5a4c5a4fdc5327b8939d9a506d608b3899b51cda887_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 24, "offset": 441}, "start": {"col": 12, "line": 24, "offset": 435}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 24, "offset": 431}, "start": {"col": 3, "line": 24, "offset": 426}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004086e4_004086e4.c", "start": {"col": 3, "line": 24, "offset": 426}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "514033c8a3f616fc991ce4123b6bc17d7a7f2cdfabec9053d5c0b6d8a2e5953b07450541d417bcee1266edd36efa40ca0cc51f8e38bdbebfb174904db37d153c_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 24, "offset": 448}, "start": {"col": 19, "line": 24, "offset": 442}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004086e4_004086e4.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 24, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "16bf1fb381784dcd08063c85a422f9f692550be6c197c137d6ddca91770b3b03e60bf6e47f9ad55187e695235e3328f3cfc3230a2d0b7f9363c81a005d38dabc_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 24, "offset": 452}, "start": {"col": 26, "line": 24, "offset": 449}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004086e4_004086e4.c", "start": {"col": 19, "line": 24, "offset": 442}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "e648af6951b2460be0d68663a3fb4d23115a144abe58b22b9ad94874681eb19d3868a21f7aff0d26ded9bef5d1e4ca814344b9affdcbfd145a44480ef9c711cd_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x11a);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 27, "offset": 535}, "start": {"col": 12, "line": 27, "offset": 529}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 27, "offset": 525}, "start": {"col": 5, "line": 27, "offset": 522}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004086e4_004086e4.c", "start": {"col": 5, "line": 27, "offset": 522}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "8991081e248f9df415596cda1923eec932a81657fa8234c79d666d13952b351ce8bf1a5677a0d039c24631a5f7011da9034997f9beab8021f80ff91e8c12a2c0_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x11a);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}, "$X": {"abstract_content": "sVar1", "end": {"col": 31, "line": 27, "offset": 548}, "start": {"col": 26, "line": 27, "offset": 543}}, "$Y": {"abstract_content": "0x11a", "end": {"col": 39, "line": 27, "offset": 556}, "start": {"col": 34, "line": 27, "offset": 551}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004086e4_004086e4.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 27, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "514033c8a3f616fc991ce4123b6bc17d7a7f2cdfabec9053d5c0b6d8a2e5953b07450541d417bcee1266edd36efa40ca0cc51f8e38bdbebfb174904db37d153c_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x11a);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 27, "offset": 542}, "start": {"col": 19, "line": 27, "offset": 536}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004086e4_004086e4.c", "start": {"col": 19, "line": 27, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 57, "line": 31, "offset": 942}, "extra": {"engine_kind": "OSS", "fingerprint": "db4bd4be9e931634de3cc39104e230f62b44f1a12397c6dfacb10aa434323bf50306a1b6aec7d06d0224323b88e551214d557f692a63335d769e556ea418f3dd_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetPPPCompressionProtocol xmlns:u=\\\"%s\\\"></u:GetPPPCompressionProtocol%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sGetPPPCompressionProtocol xmlns:u=\\\"%s\\\"></u:GetPPPCompressionProtocol%s\"", "end": {"col": 77, "line": 1, "offset": 76}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 28, "offset": 582}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+0x11a)", "svalue_end": {"col": 40, "line": 27, "offset": 557}, "svalue_start": {"col": 11, "line": 27, "offset": 528}}, "start": {"col": 21, "line": 28, "offset": 579}}, "$FMT": {"abstract_content": "\"%sGetPPPCompressionProtocol xmlns:u=\\\"%s\\\"></u:GetPPPCompressionProtocol%s\"", "end": {"col": 101, "line": 28, "offset": 659}, "start": {"col": 25, "line": 28, "offset": 583}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004086e4_004086e4.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 31, "offset": 942}, "extra": {"engine_kind": "OSS", "fingerprint": "70759354965d0190c60bdbef6c5673eafacf78722499a3247f0736aca3385a5cc1ea4f5a6d55117dddf02a7666793159e24635c17fa3eb7abfa8185237f4723d_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetPPPCompressionProtocol xmlns:u=\\\"%s\\\"></u:GetPPPCompressionProtocol%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 28, "offset": 578}, "start": {"col": 13, "line": 28, "offset": 571}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004086e4_004086e4.c", "start": {"col": 13, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 37, "offset": 1180}, "extra": {"engine_kind": "OSS", "fingerprint": "f85b6def9893c1d4e9f329d5892b9c12980c20f776806b99c12f9bdcd8c579900b7c4293cd9f44082d204facbbed6dbd26df602cc0ab94cec891ae988667d318_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xb2 + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 37, "offset": 1143}, "start": {"col": 15, "line": 37, "offset": 1137}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 37, "offset": 1150}, "start": {"col": 22, "line": 37, "offset": 1144}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 37, "offset": 1133}, "start": {"col": 5, "line": 37, "offset": 1127}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004086e4_004086e4.c", "start": {"col": 5, "line": 37, "offset": 1127}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 37, "offset": 1180}, "extra": {"engine_kind": "OSS", "fingerprint": "8270dd7347810e3fed491974717e478313d091e9fa907a5da3b244e1cb6457e07fb1d7712c7adfbfcf72894d618eb1cf758f23eb6203e0a3449ade18e0a9fdd6_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xb2 + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 37, "offset": 1150}, "start": {"col": 22, "line": 37, "offset": 1144}}, "$X": {"abstract_content": "sVar1+sVar3+0xb2", "end": {"col": 49, "line": 37, "offset": 1171}, "start": {"col": 29, "line": 37, "offset": 1151}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 37, "offset": 1179}, "start": {"col": 52, "line": 37, "offset": 1174}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004086e4_004086e4.c", "start": {"col": 22, "line": 37, "offset": 1144}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 37, "offset": 1180}, "extra": {"engine_kind": "OSS", "fingerprint": "514033c8a3f616fc991ce4123b6bc17d7a7f2cdfabec9053d5c0b6d8a2e5953b07450541d417bcee1266edd36efa40ca0cc51f8e38bdbebfb174904db37d153c_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xb2 + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 37, "offset": 1150}, "start": {"col": 22, "line": 37, "offset": 1144}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004086e4_004086e4.c", "start": {"col": 22, "line": 37, "offset": 1144}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 30, "line": 41, "offset": 1536}, "extra": {"engine_kind": "OSS", "fingerprint": "748e420b58957e5a39f329f3b0cfc9cd3ac68dac8f75a5d775d9fb60ad41ff30ab93a92d1af138b346bd7d056e0061e7f3492c1ce5e6c9335ecdd0e544e56cd6_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetPPPCompressionProtocol\",\n                       iVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 38, "offset": 1211}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar3+0xb2+sVar4)", "svalue_end": {"col": 58, "line": 37, "offset": 1180}, "svalue_start": {"col": 14, "line": 37, "offset": 1136}}, "start": {"col": 24, "line": 38, "offset": 1205}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 39, "offset": 1408}, "start": {"col": 24, "line": 39, "offset": 1236}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004086e4_004086e4.c", "start": {"col": 16, "line": 38, "offset": 1197}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 41, "offset": 1536}, "extra": {"engine_kind": "OSS", "fingerprint": "70759354965d0190c60bdbef6c5673eafacf78722499a3247f0736aca3385a5cc1ea4f5a6d55117dddf02a7666793159e24635c17fa3eb7abfa8185237f4723d_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetPPPCompressionProtocol\",\n                       iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 38, "offset": 1204}, "start": {"col": 16, "line": 38, "offset": 1197}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004086e4_004086e4.c", "start": {"col": 16, "line": 38, "offset": 1197}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 48, "line": 18, "offset": 518}, "extra": {"engine_kind": "OSS", "fingerprint": "e1b4eb1abcb9837ebb452a133f0ff25d937078e58f348284458a66ce36da837ba9d678bd403bebf49e786800e57dabd61df7ce5242e866fdb2f280eb8eecb04e_0", "is_ignored": false, "lines": "      iVar1 = strncmp(*ppcVar2,WAN_Service,__n);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar1", "end": {"col": 12, "line": 18, "offset": 482}, "start": {"col": 7, "line": 18, "offset": 477}}, "$UNSIGNED": {"abstract_content": "__n", "end": {"col": 47, "line": 18, "offset": 517}, "propagated_value": {"svalue_abstract_content": "strlen(WAN_Service)", "svalue_end": {"col": 32, "line": 17, "offset": 469}, "svalue_start": {"col": 13, "line": 17, "offset": 450}}, "start": {"col": 44, "line": 18, "offset": 514}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00408bfc_00408bfc.c", "start": {"col": 7, "line": 18, "offset": 477}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 62, "line": 21, "offset": 594}, "extra": {"engine_kind": "OSS", "fingerprint": "ca84042248ee04645e6d34b0ca5a50511635385e4ea65f87b04cf50e705ccad6c7734ec409784e954a5d72c265f47aa61d0671d0c048bc132025ddcbbce267ae_0", "is_ignored": false, "lines": "            __dest = (char *)malloc((size_t)(ppcVar4[3] + 1));", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 29, "line": 21, "offset": 561}, "start": {"col": 23, "line": 21, "offset": 555}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 36, "line": 21, "offset": 568}, "start": {"col": 30, "line": 21, "offset": 562}}, "$RET": {"abstract_content": "__dest", "end": {"col": 19, "line": 21, "offset": 551}, "start": {"col": 13, "line": 21, "offset": 545}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040be80_0040be80.c", "start": {"col": 13, "line": 21, "offset": 545}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 62, "line": 21, "offset": 594}, "extra": {"engine_kind": "OSS", "fingerprint": "225509387d45982b9cab29f57c272a3d7dc15ccb818408acf35887084ab09d47bc114db1b4653f5fdb19fe87045f90379ecf12b81aa6e0481d235f3397843611_0", "is_ignored": false, "lines": "            __dest = (char *)malloc((size_t)(ppcVar4[3] + 1));", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 36, "line": 21, "offset": 568}, "start": {"col": 30, "line": 21, "offset": 562}}, "$X": {"abstract_content": "ppcVar4[3]", "end": {"col": 56, "line": 21, "offset": 588}, "start": {"col": 46, "line": 21, "offset": 578}}, "$Y": {"abstract_content": "1", "end": {"col": 60, "line": 21, "offset": 592}, "start": {"col": 59, "line": 21, "offset": 591}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040be80_0040be80.c", "start": {"col": 30, "line": 21, "offset": 562}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 62, "line": 21, "offset": 594}, "extra": {"engine_kind": "OSS", "fingerprint": "6b50a3e7cb04093796b8a45e36761ce5ee6fd47c926a2a8d6875ac03f69ff8b164e8798ceade94a3e0f690117d8e4543029a1706c60aaefc8d5a6ba3a5d7c05c_0", "is_ignored": false, "lines": "            __dest = (char *)malloc((size_t)(ppcVar4[3] + 1));", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 36, "line": 21, "offset": 568}, "start": {"col": 30, "line": 21, "offset": 562}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040be80_0040be80.c", "start": {"col": 30, "line": 21, "offset": 562}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 38, "line": 23, "offset": 682}, "extra": {"engine_kind": "OSS", "fingerprint": "9e4c2bd0f630579bde39aa2b76e97092b1ab0982ec93e35851c5abfc4622fb3da22148d0283ec7f447cee7eea27f26101c83790ec024f3cc52ad7c87a81068ac_0", "is_ignored": false, "lines": "            strcpy(__dest,ppcVar4[2]);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040be80_0040be80.c", "start": {"col": 13, "line": 23, "offset": 657}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 23, "offset": 682}, "extra": {"engine_kind": "OSS", "fingerprint": "0acf66e69c8abb9643f35432da49cd0bf0bd1be5cef79696355193b7a4f176bfd613fc739b29ef0237581fc672aa96f8737c8f10069d07eb8d4ebeb0e82b37d2_0", "is_ignored": false, "lines": "            strcpy(__dest,ppcVar4[2]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 19, "line": 23, "offset": 663}, "start": {"col": 13, "line": 23, "offset": 657}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040be80_0040be80.c", "start": {"col": 13, "line": 23, "offset": 657}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 44, "line": 27, "offset": 646}, "extra": {"engine_kind": "OSS", "fingerprint": "dd00fe7f5c71beb1cd610a4826c7cd6179962d6754830731425d9da9a3b496019e62790dfa9f0ad17ead1342f317b3509893f2fb07fb9d922d5542ed4795e7ad_0", "is_ignored": false, "lines": "      pcVar3 = (char *)malloc(sVar2 + 0x12);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 23, "line": 27, "offset": 625}, "start": {"col": 17, "line": 27, "offset": 619}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 30, "line": 27, "offset": 632}, "start": {"col": 24, "line": 27, "offset": 626}}, "$RET": {"abstract_content": "pcVar3", "end": {"col": 13, "line": 27, "offset": 615}, "start": {"col": 7, "line": 27, "offset": 609}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 7, "line": 27, "offset": 609}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 44, "line": 27, "offset": 646}, "extra": {"engine_kind": "OSS", "fingerprint": "932044b1a48c0f08be41a241a2c9a52dbd7eed64d6982b467c5df4b98ad7b046fe303801666754d516c363d3abf9033c140cd309e19327d18bae7a162e9ce07c_0", "is_ignored": false, "lines": "      pcVar3 = (char *)malloc(sVar2 + 0x12);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 30, "line": 27, "offset": 632}, "start": {"col": 24, "line": 27, "offset": 626}}, "$X": {"abstract_content": "sVar2", "end": {"col": 36, "line": 27, "offset": 638}, "propagated_value": {"svalue_abstract_content": "strlen(local_34)", "svalue_end": {"col": 31, "line": 26, "offset": 601}, "svalue_start": {"col": 15, "line": 26, "offset": 585}}, "start": {"col": 31, "line": 27, "offset": 633}}, "$Y": {"abstract_content": "0x12", "end": {"col": 43, "line": 27, "offset": 645}, "start": {"col": 39, "line": 27, "offset": 641}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 24, "line": 27, "offset": 626}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 44, "line": 27, "offset": 646}, "extra": {"engine_kind": "OSS", "fingerprint": "e91956c6c1f521bad518d75b416547f772597b1debd94f655b2d1f1e8948ae702ef854a95bba153b7dd74e3eb9f75dda7e4e7e4ca759355331b545eeec464670_0", "is_ignored": false, "lines": "      pcVar3 = (char *)malloc(sVar2 + 0x12);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 30, "line": 27, "offset": 632}, "start": {"col": 24, "line": 27, "offset": 626}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 24, "line": 27, "offset": 626}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 65, "line": 28, "offset": 712}, "extra": {"engine_kind": "OSS", "fingerprint": "4339534d1a2398b002f9d4ec9347b0adc93556a10d7a7ba9e880f49f76d4cf4e6cacdfe828f4a0fc9a3880a21a3c530bcbb42c9b0f34fd670f36c8ba266cbb47_0", "is_ignored": false, "lines": "      sprintf(pcVar3,\"http://%s:%d/\",local_34,(uint)local_38[0]);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"http://%s:%d/\"", "end": {"col": 16, "line": 1, "offset": 15}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "pcVar3", "end": {"col": 21, "line": 28, "offset": 668}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar2+0x12)", "svalue_end": {"col": 44, "line": 27, "offset": 646}, "svalue_start": {"col": 16, "line": 27, "offset": 618}}, "start": {"col": 15, "line": 28, "offset": 662}}, "$FMT": {"abstract_content": "\"http://%s:%d/\"", "end": {"col": 37, "line": 28, "offset": 684}, "start": {"col": 22, "line": 28, "offset": 669}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 7, "line": 28, "offset": 654}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 65, "line": 28, "offset": 712}, "extra": {"engine_kind": "OSS", "fingerprint": "e2ed295635b7f2367432877d4fd53ccfd5bf6f250dd6f7f0c5036ec63c1e911618f96fcc184f549605c132918ec33dabae3648ab88c318f94a3aa65822dcc288_0", "is_ignored": false, "lines": "      sprintf(pcVar3,\"http://%s:%d/\",local_34,(uint)local_38[0]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 14, "line": 28, "offset": 661}, "start": {"col": 7, "line": 28, "offset": 654}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 7, "line": 28, "offset": 654}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 43, "line": 45, "offset": 1576}, "extra": {"engine_kind": "OSS", "fingerprint": "f82be500eeb775d3f928a4a9051fa3e7d5352938fb2b5fd3c4ccf07adfa2267280d1c92c5854416140eeb239532e4989d09a9d7f120047a778d04272953896fb_0", "is_ignored": false, "lines": "              strcpy(WAN_Service,*ppcVar7);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 15, "line": 45, "offset": 1548}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 43, "line": 45, "offset": 1576}, "extra": {"engine_kind": "OSS", "fingerprint": "ea1524b50203a811b6b5ca792be18180981d0d56a9b96e1f6420c441fd2376fe2d8572d9d12b92e508268d3d145422207e04cd1ccb8126708d662c8f9d958b68_0", "is_ignored": false, "lines": "              strcpy(WAN_Service,*ppcVar7);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 21, "line": 45, "offset": 1554}, "start": {"col": 15, "line": 45, "offset": 1548}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 15, "line": 45, "offset": 1548}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 43, "line": 50, "offset": 1806}, "extra": {"engine_kind": "OSS", "fingerprint": "f82be500eeb775d3f928a4a9051fa3e7d5352938fb2b5fd3c4ccf07adfa2267280d1c92c5854416140eeb239532e4989d09a9d7f120047a778d04272953896fb_1", "is_ignored": false, "lines": "              strcpy(WAN_Service,*ppcVar7);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 15, "line": 50, "offset": 1778}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 43, "line": 50, "offset": 1806}, "extra": {"engine_kind": "OSS", "fingerprint": "ea1524b50203a811b6b5ca792be18180981d0d56a9b96e1f6420c441fd2376fe2d8572d9d12b92e508268d3d145422207e04cd1ccb8126708d662c8f9d958b68_1", "is_ignored": false, "lines": "              strcpy(WAN_Service,*ppcVar7);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 21, "line": 50, "offset": 1784}, "start": {"col": 15, "line": 50, "offset": 1778}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 15, "line": 50, "offset": 1778}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 41, "line": 59, "offset": 2037}, "extra": {"engine_kind": "OSS", "fingerprint": "dd00fe7f5c71beb1cd610a4826c7cd6179962d6754830731425d9da9a3b496019e62790dfa9f0ad17ead1342f317b3509893f2fb07fb9d922d5542ed4795e7ad_1", "is_ignored": false, "lines": "      pcVar3 = (char *)malloc(sVar2 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 23, "line": 59, "offset": 2019}, "start": {"col": 17, "line": 59, "offset": 2013}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 30, "line": 59, "offset": 2026}, "start": {"col": 24, "line": 59, "offset": 2020}}, "$RET": {"abstract_content": "pcVar3", "end": {"col": 13, "line": 59, "offset": 2009}, "start": {"col": 7, "line": 59, "offset": 2003}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 7, "line": 59, "offset": 2003}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 41, "line": 59, "offset": 2037}, "extra": {"engine_kind": "OSS", "fingerprint": "1e7a87617e42a52bd267621bc639a5e5cf6b0071f58e8e5f20af46c269432af7a7e0ad566c63aa8d36eabb09c9661a28817e180d7993b65637921bd3692e51bc_0", "is_ignored": false, "lines": "      pcVar3 = (char *)malloc(sVar2 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 30, "line": 59, "offset": 2026}, "start": {"col": 24, "line": 59, "offset": 2020}}, "$X": {"abstract_content": "sVar2", "end": {"col": 36, "line": 59, "offset": 2032}, "propagated_value": {"svalue_abstract_content": "strlen(param_4)", "svalue_end": {"col": 30, "line": 58, "offset": 1995}, "svalue_start": {"col": 15, "line": 58, "offset": 1980}}, "start": {"col": 31, "line": 59, "offset": 2027}}, "$Y": {"abstract_content": "1", "end": {"col": 40, "line": 59, "offset": 2036}, "start": {"col": 39, "line": 59, "offset": 2035}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 24, "line": 59, "offset": 2020}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 59, "offset": 2037}, "extra": {"engine_kind": "OSS", "fingerprint": "e91956c6c1f521bad518d75b416547f772597b1debd94f655b2d1f1e8948ae702ef854a95bba153b7dd74e3eb9f75dda7e4e7e4ca759355331b545eeec464670_1", "is_ignored": false, "lines": "      pcVar3 = (char *)malloc(sVar2 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 30, "line": 59, "offset": 2026}, "start": {"col": 24, "line": 59, "offset": 2020}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 24, "line": 59, "offset": 2020}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 29, "line": 61, "offset": 2107}, "extra": {"engine_kind": "OSS", "fingerprint": "f82be500eeb775d3f928a4a9051fa3e7d5352938fb2b5fd3c4ccf07adfa2267280d1c92c5854416140eeb239532e4989d09a9d7f120047a778d04272953896fb_2", "is_ignored": false, "lines": "      strcpy(pcVar3,param_4);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 7, "line": 61, "offset": 2085}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 29, "line": 61, "offset": 2107}, "extra": {"engine_kind": "OSS", "fingerprint": "ea1524b50203a811b6b5ca792be18180981d0d56a9b96e1f6420c441fd2376fe2d8572d9d12b92e508268d3d145422207e04cd1ccb8126708d662c8f9d958b68_2", "is_ignored": false, "lines": "      strcpy(pcVar3,param_4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 13, "line": 61, "offset": 2091}, "start": {"col": 7, "line": 61, "offset": 2085}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 7, "line": 61, "offset": 2085}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 43, "line": 76, "offset": 2605}, "extra": {"engine_kind": "OSS", "fingerprint": "dd00fe7f5c71beb1cd610a4826c7cd6179962d6754830731425d9da9a3b496019e62790dfa9f0ad17ead1342f317b3509893f2fb07fb9d922d5542ed4795e7ad_2", "is_ignored": false, "lines": "        pcVar3 = (char *)malloc(sVar2 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 25, "line": 76, "offset": 2587}, "start": {"col": 19, "line": 76, "offset": 2581}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 76, "offset": 2594}, "start": {"col": 26, "line": 76, "offset": 2588}}, "$RET": {"abstract_content": "pcVar3", "end": {"col": 15, "line": 76, "offset": 2577}, "start": {"col": 9, "line": 76, "offset": 2571}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 9, "line": 76, "offset": 2571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 43, "line": 76, "offset": 2605}, "extra": {"engine_kind": "OSS", "fingerprint": "1e7a87617e42a52bd267621bc639a5e5cf6b0071f58e8e5f20af46c269432af7a7e0ad566c63aa8d36eabb09c9661a28817e180d7993b65637921bd3692e51bc_1", "is_ignored": false, "lines": "        pcVar3 = (char *)malloc(sVar2 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 76, "offset": 2594}, "start": {"col": 26, "line": 76, "offset": 2588}}, "$X": {"abstract_content": "sVar2", "end": {"col": 38, "line": 76, "offset": 2600}, "start": {"col": 33, "line": 76, "offset": 2595}}, "$Y": {"abstract_content": "1", "end": {"col": 42, "line": 76, "offset": 2604}, "start": {"col": 41, "line": 76, "offset": 2603}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 26, "line": 76, "offset": 2588}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 43, "line": 76, "offset": 2605}, "extra": {"engine_kind": "OSS", "fingerprint": "e91956c6c1f521bad518d75b416547f772597b1debd94f655b2d1f1e8948ae702ef854a95bba153b7dd74e3eb9f75dda7e4e7e4ca759355331b545eeec464670_2", "is_ignored": false, "lines": "        pcVar3 = (char *)malloc(sVar2 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 76, "offset": 2594}, "start": {"col": 26, "line": 76, "offset": 2588}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 26, "line": 76, "offset": 2588}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 77, "offset": 2644}, "extra": {"engine_kind": "OSS", "fingerprint": "a2bf12f3ee0fd3620ad46f1d9c231237f554794d6c551817c40c980178c95fe571299816d91f3098ade4467f22ae94e7394f925aaf3f29ec60c3709b1b28a6ed_0", "is_ignored": false, "lines": "        memcpy(pcVar3,local_2c,sVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 15, "line": 77, "offset": 2621}, "start": {"col": 9, "line": 77, "offset": 2615}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 9, "line": 77, "offset": 2615}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 43, "line": 81, "offset": 2739}, "extra": {"engine_kind": "OSS", "fingerprint": "dd00fe7f5c71beb1cd610a4826c7cd6179962d6754830731425d9da9a3b496019e62790dfa9f0ad17ead1342f317b3509893f2fb07fb9d922d5542ed4795e7ad_3", "is_ignored": false, "lines": "        pcVar3 = (char *)malloc(sVar2 + 2);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 25, "line": 81, "offset": 2721}, "start": {"col": 19, "line": 81, "offset": 2715}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 81, "offset": 2728}, "start": {"col": 26, "line": 81, "offset": 2722}}, "$RET": {"abstract_content": "pcVar3", "end": {"col": 15, "line": 81, "offset": 2711}, "start": {"col": 9, "line": 81, "offset": 2705}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 9, "line": 81, "offset": 2705}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 43, "line": 81, "offset": 2739}, "extra": {"engine_kind": "OSS", "fingerprint": "6a68cccd4043b9b247806e0455b09972e2045d20147c2d29235aa834d675475f64f81b1f5fccec3faee2e5262946edc04b297ed99361bc255b86c4573a4ec1ad_0", "is_ignored": false, "lines": "        pcVar3 = (char *)malloc(sVar2 + 2);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 81, "offset": 2728}, "start": {"col": 26, "line": 81, "offset": 2722}}, "$X": {"abstract_content": "sVar2", "end": {"col": 38, "line": 81, "offset": 2734}, "start": {"col": 33, "line": 81, "offset": 2729}}, "$Y": {"abstract_content": "2", "end": {"col": 42, "line": 81, "offset": 2738}, "start": {"col": 41, "line": 81, "offset": 2737}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 26, "line": 81, "offset": 2722}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 43, "line": 81, "offset": 2739}, "extra": {"engine_kind": "OSS", "fingerprint": "e91956c6c1f521bad518d75b416547f772597b1debd94f655b2d1f1e8948ae702ef854a95bba153b7dd74e3eb9f75dda7e4e7e4ca759355331b545eeec464670_3", "is_ignored": false, "lines": "        pcVar3 = (char *)malloc(sVar2 + 2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 81, "offset": 2728}, "start": {"col": 26, "line": 81, "offset": 2722}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 26, "line": 81, "offset": 2722}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 82, "offset": 2778}, "extra": {"engine_kind": "OSS", "fingerprint": "a2bf12f3ee0fd3620ad46f1d9c231237f554794d6c551817c40c980178c95fe571299816d91f3098ade4467f22ae94e7394f925aaf3f29ec60c3709b1b28a6ed_1", "is_ignored": false, "lines": "        memcpy(pcVar3,local_2c,sVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 15, "line": 82, "offset": 2755}, "start": {"col": 9, "line": 82, "offset": 2749}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c250_0040c250.c", "start": {"col": 9, "line": 82, "offset": 2749}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 45, "line": 74, "offset": 2202}, "extra": {"engine_kind": "OSS", "fingerprint": "919c7eb0c7a6407585175bcd58812d3d05b32dc8f1cea13cc0a045cb43b3d26285272eda895d762d14aed674bdbebbda2eee215e4309a90c4c6db8f6136d85f3_0", "is_ignored": false, "lines": "          pcVar4 = (char *)malloc(sVar3 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 27, "line": 74, "offset": 2184}, "start": {"col": 21, "line": 74, "offset": 2178}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 34, "line": 74, "offset": 2191}, "start": {"col": 28, "line": 74, "offset": 2185}}, "$RET": {"abstract_content": "pcVar4", "end": {"col": 17, "line": 74, "offset": 2174}, "start": {"col": 11, "line": 74, "offset": 2168}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c89c_0040c89c.c", "start": {"col": 11, "line": 74, "offset": 2168}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 45, "line": 74, "offset": 2202}, "extra": {"engine_kind": "OSS", "fingerprint": "30a63e3dbd90916252835ad21680fe68d74f769248238fd5f1027c43d631d8880a37b60a8d5662d24c55c5403bd55b5e6c8d07b71d0a19ac435e62138d2e8121_0", "is_ignored": false, "lines": "          pcVar4 = (char *)malloc(sVar3 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 34, "line": 74, "offset": 2191}, "start": {"col": 28, "line": 74, "offset": 2185}}, "$X": {"abstract_content": "sVar3", "end": {"col": 40, "line": 74, "offset": 2197}, "propagated_value": {"svalue_abstract_content": "strlen(param_4)", "svalue_end": {"col": 34, "line": 73, "offset": 2156}, "svalue_start": {"col": 19, "line": 73, "offset": 2141}}, "start": {"col": 35, "line": 74, "offset": 2192}}, "$Y": {"abstract_content": "1", "end": {"col": 44, "line": 74, "offset": 2201}, "start": {"col": 43, "line": 74, "offset": 2200}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c89c_0040c89c.c", "start": {"col": 28, "line": 74, "offset": 2185}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 45, "line": 74, "offset": 2202}, "extra": {"engine_kind": "OSS", "fingerprint": "fa45a2a13684cda73e5522bcf28784ff96fad79e5f2db63ce049496b7121de0683e38749348e4bfe3b3f7b776c7db701a0cabda71764a07d0861b829783bb12f_0", "is_ignored": false, "lines": "          pcVar4 = (char *)malloc(sVar3 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 34, "line": 74, "offset": 2191}, "start": {"col": 28, "line": 74, "offset": 2185}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c89c_0040c89c.c", "start": {"col": 28, "line": 74, "offset": 2185}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 33, "line": 75, "offset": 2236}, "extra": {"engine_kind": "OSS", "fingerprint": "c4b374454a6b2fe1d8c9e01540c162ce90c4e52e17e307d9a2e4c4b80ca8086ddf0b0eddac28307df5076f5e3fe0f81d0a8760646ea04c7217da22d2341bc009_0", "is_ignored": false, "lines": "          strcpy(pcVar4,param_4);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c89c_0040c89c.c", "start": {"col": 11, "line": 75, "offset": 2214}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 75, "offset": 2236}, "extra": {"engine_kind": "OSS", "fingerprint": "711ecbac40b42be15d69da358b0fbadb55a3f0946ff187e4cbf20f9dee32b2555a31de0f919eb25d5710a35fe000027af7113f966efb8ca46655315a38e7c614_0", "is_ignored": false, "lines": "          strcpy(pcVar4,param_4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 17, "line": 75, "offset": 2220}, "start": {"col": 11, "line": 75, "offset": 2214}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c89c_0040c89c.c", "start": {"col": 11, "line": 75, "offset": 2214}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 36, "line": 76, "offset": 2273}, "extra": {"engine_kind": "OSS", "fingerprint": "bbe1ee05c0f9f42fb2602b18f53d2a13e38fa6befa8ceaacc5bfa54329bb3a0308be6430eca2c2c844c3f0eae5edcccc507c9885166c2d3ca4d39b23836875d3_0", "is_ignored": false, "lines": "          piVar5 = (int *)malloc(8);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "int*", "end": {"col": 26, "line": 76, "offset": 2263}, "start": {"col": 21, "line": 76, "offset": 2258}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 33, "line": 76, "offset": 2270}, "start": {"col": 27, "line": 76, "offset": 2264}}, "$RET": {"abstract_content": "piVar5", "end": {"col": 17, "line": 76, "offset": 2254}, "start": {"col": 11, "line": 76, "offset": 2248}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c89c_0040c89c.c", "start": {"col": 11, "line": 76, "offset": 2248}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 76, "offset": 2273}, "extra": {"engine_kind": "OSS", "fingerprint": "fa45a2a13684cda73e5522bcf28784ff96fad79e5f2db63ce049496b7121de0683e38749348e4bfe3b3f7b776c7db701a0cabda71764a07d0861b829783bb12f_1", "is_ignored": false, "lines": "          piVar5 = (int *)malloc(8);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 33, "line": 76, "offset": 2270}, "start": {"col": 27, "line": 76, "offset": 2264}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c89c_0040c89c.c", "start": {"col": 27, "line": 76, "offset": 2264}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 76, "offset": 2273}, "extra": {"engine_kind": "OSS", "fingerprint": "3272cfcb26f6f4be9ab222b0c5be6d85ce78cf02ab27b6e3d0ddfcc2dd754442349858b5015c62e3ebe50331b938a1a5ba86e7716f34046acb9645edf8bc4df7_0", "is_ignored": false, "lines": "          piVar5 = (int *)malloc(8);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "8", "end": {"col": 35, "line": 76, "offset": 2272}, "start": {"col": 34, "line": 76, "offset": 2271}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040c89c_0040c89c.c", "start": {"col": 27, "line": 76, "offset": 2264}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 63, "line": 32, "offset": 640}, "extra": {"engine_kind": "OSS", "fingerprint": "c41834a9c310544c1e8b5e6c760d71eb4a94f393606e0679cbba8ed8259fac232aefb145a378a95ecd49f706cadfbfce50c8616d76e61e5e6962b93a0f9c8d74_0", "is_ignored": false, "lines": "      pvVar3 = realloc((void *)param_1[0x201],iVar2 + 0x1000U);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "realloc", "end": {"col": 23, "line": 32, "offset": 600}, "start": {"col": 16, "line": 32, "offset": 593}}, "$RET": {"abstract_content": "pvVar3", "end": {"col": 13, "line": 32, "offset": 590}, "start": {"col": 7, "line": 32, "offset": 584}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 7, "line": 32, "offset": 584}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 63, "line": 32, "offset": 640}, "extra": {"engine_kind": "OSS", "fingerprint": "c411900e41948ff4ce36829d60c2422febd32aed67b3df3f137c3c80843b4dfad66815227dc868da645d377112dcc32badbce737d886e9399cfe0df5b633fbe9_0", "is_ignored": false, "lines": "      pvVar3 = realloc((void *)param_1[0x201],iVar2 + 0x1000U);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$ARG1": {"abstract_content": "(void*param_1[0x201]", "end": {"col": 46, "line": 32, "offset": 623}, "start": {"col": 24, "line": 32, "offset": 601}}, "$FUN": {"abstract_content": "realloc", "end": {"col": 23, "line": 32, "offset": 600}, "start": {"col": 16, "line": 32, "offset": 593}}, "$X": {"abstract_content": "iVar2", "end": {"col": 52, "line": 32, "offset": 629}, "propagated_value": {"svalue_abstract_content": "param_1[0x206]", "svalue_end": {"col": 27, "line": 29, "offset": 501}, "svalue_start": {"col": 13, "line": 29, "offset": 487}}, "start": {"col": 47, "line": 32, "offset": 624}}, "$Y": {"abstract_content": "0x1000U", "end": {"col": 62, "line": 32, "offset": 639}, "start": {"col": 55, "line": 32, "offset": 632}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 16, "line": 32, "offset": 593}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 63, "line": 32, "offset": 640}, "extra": {"engine_kind": "OSS", "fingerprint": "270b583292611d5b0365705fa67eea85637893dc4a67eaa3175f31e575af875c40177b04de3f8c68c9e39fb670b85d0e10cd4f5f156775826fb52c0abf00afb1_0", "is_ignored": false, "lines": "      pvVar3 = realloc((void *)param_1[0x201],iVar2 + 0x1000U);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "realloc", "end": {"col": 23, "line": 32, "offset": 600}, "start": {"col": 16, "line": 32, "offset": 593}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 16, "line": 32, "offset": 593}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 63, "line": 32, "offset": 640}, "extra": {"engine_kind": "OSS", "fingerprint": "65c770100c7aea8216334e602fa3214bf3773db89d8ba6dbd457e40b3f8a0a5ed18793d43ec4a1c3c467c84331888a1a799d00aaf721a635b855c845e7b48e37_0", "is_ignored": false, "lines": "      pvVar3 = realloc((void *)param_1[0x201],iVar2 + 0x1000U);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "iVar2+0x1000U", "end": {"col": 62, "line": 32, "offset": 639}, "start": {"col": 47, "line": 32, "offset": 624}}, "$PTR": {"abstract_content": "(void*param_1[0x201]", "end": {"col": 46, "line": 32, "offset": 623}, "start": {"col": 24, "line": 32, "offset": 601}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 16, "line": 32, "offset": 593}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 91, "line": 36, "offset": 804}, "extra": {"engine_kind": "OSS", "fingerprint": "fedd284572b42fe16b138f489672ab95d511a56e040467f16e170c2c5786fbe844d998b297456014dc8e4dcdd6438bdd8bfdb470b1101a5163da8f298ca46975_0", "is_ignored": false, "lines": "    sVar1 = recv(param_1[0x209],(void *)(param_1[0x201] + iVar2),param_1[0x207] - iVar2,0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "recv", "end": {"col": 17, "line": 36, "offset": 730}, "start": {"col": 13, "line": 36, "offset": 726}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 13, "line": 36, "offset": 726}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 97, "line": 81, "offset": 2404}, "extra": {"engine_kind": "OSS", "fingerprint": "6e56fce02c4789dc92c795b89f4b5fe38e25c3939cf229a6936ff9638f1b6975d9db99f8425548fafcfdd2358ec0e97898d701f0965f9a2420ac9ef6225030de_0", "is_ignored": false, "lines": "      memcpy((void *)param_1[0x201],(void *)((int)(void *)param_1[0x201] + iVar5),iVar4 - iVar5);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 81, "offset": 2320}, "start": {"col": 7, "line": 81, "offset": 2314}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 7, "line": 81, "offset": 2314}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 97, "line": 81, "offset": 2404}, "extra": {"engine_kind": "OSS", "fingerprint": "87a7720a95c00b2db8b0807e9520b553c717ca990f5f737c712c2562df0e660dbf5d9cba1136168bd00d406eeebdbdf4eb6be4ea66cda1a46fbf63e980903c90_0", "is_ignored": false, "lines": "      memcpy((void *)param_1[0x201],(void *)((int)(void *)param_1[0x201] + iVar5),iVar4 - iVar5);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "(void*param_1[0x201]", "end": {"col": 36, "line": 81, "offset": 2343}, "start": {"col": 14, "line": 81, "offset": 2321}}, "$LEN": {"abstract_content": "iVar4-iVar5", "end": {"col": 96, "line": 81, "offset": 2403}, "start": {"col": 83, "line": 81, "offset": 2390}}, "$SRC": {"abstract_content": "(void*(int(void*param_1[0x201]+iVar5", "end": {"col": 81, "line": 81, "offset": 2388}, "start": {"col": 37, "line": 81, "offset": 2344}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 7, "line": 81, "offset": 2314}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 100, "line": 92, "offset": 2787}, "extra": {"engine_kind": "OSS", "fingerprint": "fedd284572b42fe16b138f489672ab95d511a56e040467f16e170c2c5786fbe844d998b297456014dc8e4dcdd6438bdd8bfdb470b1101a5163da8f298ca46975_1", "is_ignored": false, "lines": "  sVar1 = recv(param_1[0x209],(void *)((int)param_1 + param_1[0x203] + 4),0x800 - param_1[0x203],0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "recv", "end": {"col": 15, "line": 92, "offset": 2702}, "start": {"col": 11, "line": 92, "offset": 2698}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 11, "line": 92, "offset": 2698}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 152, "offset": 4500}, "extra": {"engine_kind": "OSS", "fingerprint": "a38d4a5fb0d9026a252622386eeb9c578926b6ed0030cfbb0f27b2672d9d3f96f99d5e27cda588c4e8fa57c56f403ea73e75068f6332a8110d39e67e80984578_0", "is_ignored": false, "lines": "        __nptr = (char *)malloc((size_t)(ppcVar9[3] + 1));", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 25, "line": 152, "offset": 4467}, "start": {"col": 19, "line": 152, "offset": 4461}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 152, "offset": 4474}, "start": {"col": 26, "line": 152, "offset": 4468}}, "$RET": {"abstract_content": "__nptr", "end": {"col": 15, "line": 152, "offset": 4457}, "start": {"col": 9, "line": 152, "offset": 4451}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 9, "line": 152, "offset": 4451}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 152, "offset": 4500}, "extra": {"engine_kind": "OSS", "fingerprint": "239f6d5abbd69ea32fae4a3a237f17e0559f8b5e3b993a3c974fc5c8c148f3e95491a79a54e958be980859087a09d45a1d05984aa42741588d4220a00f6fb912_0", "is_ignored": false, "lines": "        __nptr = (char *)malloc((size_t)(ppcVar9[3] + 1));", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 152, "offset": 4474}, "start": {"col": 26, "line": 152, "offset": 4468}}, "$X": {"abstract_content": "ppcVar9[3]", "end": {"col": 52, "line": 152, "offset": 4494}, "start": {"col": 42, "line": 152, "offset": 4484}}, "$Y": {"abstract_content": "1", "end": {"col": 56, "line": 152, "offset": 4498}, "start": {"col": 55, "line": 152, "offset": 4497}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 26, "line": 152, "offset": 4468}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 152, "offset": 4500}, "extra": {"engine_kind": "OSS", "fingerprint": "174fb5f279f13cbb311358fb902277a0948dce120d5a1675cd3ae481e902b026df572f3106eaf074f2ee9bf5442487b1fc8e8fe5a0ea7df29b5ac9034974c601_0", "is_ignored": false, "lines": "        __nptr = (char *)malloc((size_t)(ppcVar9[3] + 1));", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 152, "offset": 4474}, "start": {"col": 26, "line": 152, "offset": 4468}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 26, "line": 152, "offset": 4468}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 53, "line": 153, "offset": 4554}, "extra": {"engine_kind": "OSS", "fingerprint": "6e56fce02c4789dc92c795b89f4b5fe38e25c3939cf229a6936ff9638f1b6975d9db99f8425548fafcfdd2358ec0e97898d701f0965f9a2420ac9ef6225030de_1", "is_ignored": false, "lines": "        memcpy(__nptr,ppcVar9[2],(size_t)ppcVar9[3]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 15, "line": 153, "offset": 4516}, "start": {"col": 9, "line": 153, "offset": 4510}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 9, "line": 153, "offset": 4510}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 28, "line": 161, "offset": 4736}, "extra": {"engine_kind": "OSS", "fingerprint": "0a550694db7c2b1d9c88015b6b633002fdc81a528ecb724ac6e06084c3b5f46edb4744ab98e09edd822a128d1f47fc495399cbbc0f6455edbed629ea00b76a70_0", "is_ignored": false, "lines": "    __size = param_1[0x202];", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0x202", "end": {"col": 27, "line": 161, "offset": 4735}, "start": {"col": 22, "line": 161, "offset": 4730}}, "$UNSIGNED": {"abstract_content": "__size", "end": {"col": 11, "line": 161, "offset": 4719}, "start": {"col": 5, "line": 161, "offset": 4713}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 5, "line": 161, "offset": 4713}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 163, "offset": 4799}, "extra": {"engine_kind": "OSS", "fingerprint": "3d2bc0aa70c2a69da94b3f00a4bb1969663fa8eeb8f95b778c1acd1d69d3cd697f70885cc55805e1b6fb2c62fd9e1037356c4e6f479f1d7446b0a8eac1ee12af_0", "is_ignored": false, "lines": "      pvVar3 = malloc(0x1000);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 22, "line": 163, "offset": 4791}, "start": {"col": 16, "line": 163, "offset": 4785}}, "$RET": {"abstract_content": "pvVar3", "end": {"col": 13, "line": 163, "offset": 4782}, "start": {"col": 7, "line": 163, "offset": 4776}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 7, "line": 163, "offset": 4776}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 163, "offset": 4799}, "extra": {"engine_kind": "OSS", "fingerprint": "174fb5f279f13cbb311358fb902277a0948dce120d5a1675cd3ae481e902b026df572f3106eaf074f2ee9bf5442487b1fc8e8fe5a0ea7df29b5ac9034974c601_1", "is_ignored": false, "lines": "      pvVar3 = malloc(0x1000);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 22, "line": 163, "offset": 4791}, "start": {"col": 16, "line": 163, "offset": 4785}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 16, "line": 163, "offset": 4785}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 163, "offset": 4799}, "extra": {"engine_kind": "OSS", "fingerprint": "1285a636fb6f6a32d69d468c662b7fe1addeb716c79dce3c8060e7ae54be013ce0ad000578387cfea6a22b33e34a5d917b0d7bbf15217e427c5834148fd5b056_0", "is_ignored": false, "lines": "      pvVar3 = malloc(0x1000);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x1000", "end": {"col": 29, "line": 163, "offset": 4798}, "start": {"col": 23, "line": 163, "offset": 4792}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 16, "line": 163, "offset": 4785}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 172, "offset": 5000}, "extra": {"engine_kind": "OSS", "fingerprint": "3d2bc0aa70c2a69da94b3f00a4bb1969663fa8eeb8f95b778c1acd1d69d3cd697f70885cc55805e1b6fb2c62fd9e1037356c4e6f479f1d7446b0a8eac1ee12af_1", "is_ignored": false, "lines": "      pvVar3 = malloc(__size);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 22, "line": 172, "offset": 4992}, "start": {"col": 16, "line": 172, "offset": 4986}}, "$RET": {"abstract_content": "pvVar3", "end": {"col": 13, "line": 172, "offset": 4983}, "start": {"col": 7, "line": 172, "offset": 4977}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 7, "line": 172, "offset": 4977}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 172, "offset": 5000}, "extra": {"engine_kind": "OSS", "fingerprint": "174fb5f279f13cbb311358fb902277a0948dce120d5a1675cd3ae481e902b026df572f3106eaf074f2ee9bf5442487b1fc8e8fe5a0ea7df29b5ac9034974c601_2", "is_ignored": false, "lines": "      pvVar3 = malloc(__size);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 22, "line": 172, "offset": 4992}, "start": {"col": 16, "line": 172, "offset": 4986}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 16, "line": 172, "offset": 4986}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 100, "line": 195, "offset": 5771}, "extra": {"engine_kind": "OSS", "fingerprint": "6e56fce02c4789dc92c795b89f4b5fe38e25c3939cf229a6936ff9638f1b6975d9db99f8425548fafcfdd2358ec0e97898d701f0965f9a2420ac9ef6225030de_2", "is_ignored": false, "lines": "    memcpy((void *)param_1[0x201],(void *)((int)param_1 + iVar4 + 8),(-4 - iVar4) + param_1[0x203]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 195, "offset": 5682}, "start": {"col": 5, "line": 195, "offset": 5676}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 5, "line": 195, "offset": 5676}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 214, "offset": 6466}, "extra": {"engine_kind": "OSS", "fingerprint": "6e56fce02c4789dc92c795b89f4b5fe38e25c3939cf229a6936ff9638f1b6975d9db99f8425548fafcfdd2358ec0e97898d701f0965f9a2420ac9ef6225030de_3", "is_ignored": false, "lines": "        memcpy((void *)param_1[0x201],(void *)((int)(void *)param_1[0x201] + iVar2),\n               param_1[0x206] - iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 15, "line": 213, "offset": 6357}, "start": {"col": 9, "line": 213, "offset": 6351}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 9, "line": 213, "offset": 6351}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 236, "offset": 7228}, "extra": {"engine_kind": "OSS", "fingerprint": "6e56fce02c4789dc92c795b89f4b5fe38e25c3939cf229a6936ff9638f1b6975d9db99f8425548fafcfdd2358ec0e97898d701f0965f9a2420ac9ef6225030de_4", "is_ignored": false, "lines": "      memcpy((void *)param_1[0x201],(void *)((int)(void *)param_1[0x201] + iVar2),\n             param_1[0x206] - iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 235, "offset": 7121}, "start": {"col": 7, "line": 235, "offset": 7115}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040d47c_0040d47c.c", "start": {"col": 7, "line": 235, "offset": 7115}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 29, "line": 10, "offset": 133}, "extra": {"engine_kind": "OSS", "fingerprint": "c4f48d56d37cbe23348c48cc7323b9d4fe0edbe6727a5f82dee1b801eae9e34ba662722c43ea2404cc2dfadc8370c36baa6d22325326d773f99238a10135cff8_0", "is_ignored": false, "lines": "  __s = (char *)malloc(0x10);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 16, "line": 10, "offset": 120}, "start": {"col": 10, "line": 10, "offset": 114}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 23, "line": 10, "offset": 127}, "start": {"col": 17, "line": 10, "offset": 121}}, "$RET": {"abstract_content": "__s", "end": {"col": 6, "line": 10, "offset": 110}, "start": {"col": 3, "line": 10, "offset": 107}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040e7b8_0040e7b8.c", "start": {"col": 3, "line": 10, "offset": 107}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 29, "line": 10, "offset": 133}, "extra": {"engine_kind": "OSS", "fingerprint": "96d9f900a5d7bfc04fbf27b54c80af1c53af520183263222e4f124cf490c0027dd5cb088f38e13394e4101e841e3e2360aff3942eb32a94acb9e3205c22f8e63_0", "is_ignored": false, "lines": "  __s = (char *)malloc(0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 23, "line": 10, "offset": 127}, "start": {"col": 17, "line": 10, "offset": 121}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040e7b8_0040e7b8.c", "start": {"col": 17, "line": 10, "offset": 121}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 29, "line": 10, "offset": 133}, "extra": {"engine_kind": "OSS", "fingerprint": "ed1889cd50b8b71dc24ca4686363938a6cb029812b5938d963ec9b5f7b394f43e5071784fdcb0908f3ff23c31fedb3234f079ab0ac7a1083628cb358441eac92_0", "is_ignored": false, "lines": "  __s = (char *)malloc(0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x10", "end": {"col": 28, "line": 10, "offset": 132}, "start": {"col": 24, "line": 10, "offset": 128}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040e7b8_0040e7b8.c", "start": {"col": 17, "line": 10, "offset": 121}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 32, "line": 13, "offset": 295}, "extra": {"engine_kind": "OSS", "fingerprint": "d4553965194c6db4f32b16d2af4ec08d8743989b6ac3f7ec6f5ed6dd5d8cbfce596fff70d7cab83e75b69e9e6df2720880e9e0e94611ea4d766f8fcde67084b4_0", "is_ignored": false, "lines": "  sprintf(__s,\"%d.%d.%d.%d\",uVar1 & 0xff,(int)uVar1 >> 8 & 0xff,(int)uVar1 >> 0x10 & 0xff,\n          uVar1 >> 0x18,puVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 10, "line": 12, "offset": 182}, "start": {"col": 3, "line": 12, "offset": 175}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040e7b8_0040e7b8.c", "start": {"col": 3, "line": 12, "offset": 175}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 63, "line": 29, "offset": 584}, "extra": {"engine_kind": "OSS", "fingerprint": "0353c0750206b18a0ffb4e154a998ab831d081f2bf4f559ef9df63ee181ab93ed2ab9883ef757334ce80e85809bd622ec0c27f98e86095f3bcbac43d9095807d_0", "is_ignored": false, "lines": "      pvVar3 = realloc((void *)param_1[0x201],iVar2 + 0x1000U);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "realloc", "end": {"col": 23, "line": 29, "offset": 544}, "start": {"col": 16, "line": 29, "offset": 537}}, "$RET": {"abstract_content": "pvVar3", "end": {"col": 13, "line": 29, "offset": 534}, "start": {"col": 7, "line": 29, "offset": 528}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 7, "line": 29, "offset": 528}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 63, "line": 29, "offset": 584}, "extra": {"engine_kind": "OSS", "fingerprint": "56e3c1e00e8f75bd6214f067f01134e01f59cc0e753f42b3a63d86663135dde512bf85d65f22589b1621b73bc85936084870c7dae09fbeebec8df2f9439676fe_0", "is_ignored": false, "lines": "      pvVar3 = realloc((void *)param_1[0x201],iVar2 + 0x1000U);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$ARG1": {"abstract_content": "(void*param_1[0x201]", "end": {"col": 46, "line": 29, "offset": 567}, "start": {"col": 24, "line": 29, "offset": 545}}, "$FUN": {"abstract_content": "realloc", "end": {"col": 23, "line": 29, "offset": 544}, "start": {"col": 16, "line": 29, "offset": 537}}, "$X": {"abstract_content": "iVar2", "end": {"col": 52, "line": 29, "offset": 573}, "propagated_value": {"svalue_abstract_content": "param_1[0x206]", "svalue_end": {"col": 27, "line": 26, "offset": 445}, "svalue_start": {"col": 13, "line": 26, "offset": 431}}, "start": {"col": 47, "line": 29, "offset": 568}}, "$Y": {"abstract_content": "0x1000U", "end": {"col": 62, "line": 29, "offset": 583}, "start": {"col": 55, "line": 29, "offset": 576}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 16, "line": 29, "offset": 537}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 63, "line": 29, "offset": 584}, "extra": {"engine_kind": "OSS", "fingerprint": "6f6cb8ba26f3e38a8bfe9de757d5cfa6c2b8f279999291096ff8918256343acf6b8219cfed528d8b2432962bee29f0edc5e6a0c8d961b064aefd508b7fca258b_0", "is_ignored": false, "lines": "      pvVar3 = realloc((void *)param_1[0x201],iVar2 + 0x1000U);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "realloc", "end": {"col": 23, "line": 29, "offset": 544}, "start": {"col": 16, "line": 29, "offset": 537}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 16, "line": 29, "offset": 537}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 63, "line": 29, "offset": 584}, "extra": {"engine_kind": "OSS", "fingerprint": "7988bb1f90bf5b8d33eb8249dcf0f2657d9b9ba6de5fdc06f5e4b448c2fa81f7a3054c9a0451e3097ba1e451216fea1c48982e75f0ed1efec30b6625d0f4925c_0", "is_ignored": false, "lines": "      pvVar3 = realloc((void *)param_1[0x201],iVar2 + 0x1000U);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "iVar2+0x1000U", "end": {"col": 62, "line": 29, "offset": 583}, "start": {"col": 47, "line": 29, "offset": 568}}, "$PTR": {"abstract_content": "(void*param_1[0x201]", "end": {"col": 46, "line": 29, "offset": 567}, "start": {"col": 24, "line": 29, "offset": 545}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 16, "line": 29, "offset": 537}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 91, "line": 33, "offset": 748}, "extra": {"engine_kind": "OSS", "fingerprint": "8eb7fc2b6e34c06f967cdb4809499a783c1e44c4a0427d8cfd375c41ac5ad473c537c4ffc33d3608e0a2f851298ea69afe53576c0963425ae419c0382a1602dd_0", "is_ignored": false, "lines": "    sVar1 = recv(param_1[0x209],(void *)(param_1[0x201] + iVar2),param_1[0x207] - iVar2,0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "recv", "end": {"col": 17, "line": 33, "offset": 674}, "start": {"col": 13, "line": 33, "offset": 670}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 13, "line": 33, "offset": 670}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 97, "line": 80, "offset": 2278}, "extra": {"engine_kind": "OSS", "fingerprint": "99eea242d963599fd7b8e0cabf0bffa8628511b71b42c85389df64ba208a27ae0761764f6311b7f67f4aba206e190f5828ab079a49f5766a1bdd7d3896e710b4_0", "is_ignored": false, "lines": "      memcpy((void *)param_1[0x201],(void *)((int)(void *)param_1[0x201] + iVar5),iVar8 - iVar5);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 80, "offset": 2194}, "start": {"col": 7, "line": 80, "offset": 2188}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 7, "line": 80, "offset": 2188}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 97, "line": 80, "offset": 2278}, "extra": {"engine_kind": "OSS", "fingerprint": "014d4dc3e0497bc5c04532d201ada926313a72a588fa566d45dbfc8c2e510d0adcf0af7325a9e839ba2fa5f4c37195321b054cf79491b4e1196cf61bc0dee567_0", "is_ignored": false, "lines": "      memcpy((void *)param_1[0x201],(void *)((int)(void *)param_1[0x201] + iVar5),iVar8 - iVar5);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "(void*param_1[0x201]", "end": {"col": 36, "line": 80, "offset": 2217}, "start": {"col": 14, "line": 80, "offset": 2195}}, "$LEN": {"abstract_content": "iVar8-iVar5", "end": {"col": 96, "line": 80, "offset": 2277}, "start": {"col": 83, "line": 80, "offset": 2264}}, "$SRC": {"abstract_content": "(void*(int(void*param_1[0x201]+iVar5", "end": {"col": 81, "line": 80, "offset": 2262}, "start": {"col": 37, "line": 80, "offset": 2218}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 7, "line": 80, "offset": 2188}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 100, "line": 90, "offset": 2630}, "extra": {"engine_kind": "OSS", "fingerprint": "8eb7fc2b6e34c06f967cdb4809499a783c1e44c4a0427d8cfd375c41ac5ad473c537c4ffc33d3608e0a2f851298ea69afe53576c0963425ae419c0382a1602dd_1", "is_ignored": false, "lines": "  sVar1 = recv(param_1[0x209],(void *)((int)param_1 + param_1[0x203] + 4),0x800 - param_1[0x203],0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "recv", "end": {"col": 15, "line": 90, "offset": 2545}, "start": {"col": 11, "line": 90, "offset": 2541}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 11, "line": 90, "offset": 2541}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 117, "offset": 3556}, "extra": {"engine_kind": "OSS", "fingerprint": "b37c650673bfc46d56cc27ee5029e4d93e757ab6d10b49c406427c8881145d25807c9ba73d7cf25a31a704d594c983707d6e615e3407cdca61d18ac1e21b927a_0", "is_ignored": false, "lines": "        __nptr = (char *)malloc((size_t)(ppcVar7[3] + 1));", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 25, "line": 117, "offset": 3523}, "start": {"col": 19, "line": 117, "offset": 3517}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 117, "offset": 3530}, "start": {"col": 26, "line": 117, "offset": 3524}}, "$RET": {"abstract_content": "__nptr", "end": {"col": 15, "line": 117, "offset": 3513}, "start": {"col": 9, "line": 117, "offset": 3507}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 9, "line": 117, "offset": 3507}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 117, "offset": 3556}, "extra": {"engine_kind": "OSS", "fingerprint": "2c9da4d60f7941fa28d866d68361f872b0f3f904824d167655c608c002d574ce509ea996ecbf6a60b5c621a49e9c1936b5b157cc8b5c6655ba66a3ec2229e1bc_0", "is_ignored": false, "lines": "        __nptr = (char *)malloc((size_t)(ppcVar7[3] + 1));", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 117, "offset": 3530}, "start": {"col": 26, "line": 117, "offset": 3524}}, "$X": {"abstract_content": "ppcVar7[3]", "end": {"col": 52, "line": 117, "offset": 3550}, "start": {"col": 42, "line": 117, "offset": 3540}}, "$Y": {"abstract_content": "1", "end": {"col": 56, "line": 117, "offset": 3554}, "start": {"col": 55, "line": 117, "offset": 3553}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 26, "line": 117, "offset": 3524}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 117, "offset": 3556}, "extra": {"engine_kind": "OSS", "fingerprint": "c0eb17a071c30cbde2010dd3e4e18167d228636a5d02c8bbfbbe38d9c72e161a29e28780fc5cb0ea209222a122c6f4b5a05f51dc0acefbf23142fb20e1feecf6_0", "is_ignored": false, "lines": "        __nptr = (char *)malloc((size_t)(ppcVar7[3] + 1));", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 117, "offset": 3530}, "start": {"col": 26, "line": 117, "offset": 3524}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 26, "line": 117, "offset": 3524}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 53, "line": 118, "offset": 3610}, "extra": {"engine_kind": "OSS", "fingerprint": "99eea242d963599fd7b8e0cabf0bffa8628511b71b42c85389df64ba208a27ae0761764f6311b7f67f4aba206e190f5828ab079a49f5766a1bdd7d3896e710b4_1", "is_ignored": false, "lines": "        memcpy(__nptr,ppcVar7[2],(size_t)ppcVar7[3]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 15, "line": 118, "offset": 3572}, "start": {"col": 9, "line": 118, "offset": 3566}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 9, "line": 118, "offset": 3566}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 28, "line": 126, "offset": 3792}, "extra": {"engine_kind": "OSS", "fingerprint": "67205998897ba07777ed46c7cbf9e0a01234e025854c222e27fc6eb96e8f7fc9781f90ea387d6c53f5f4e919a3e0f463df095fb477669bfc50eb8ef48517a289_0", "is_ignored": false, "lines": "    __size = param_1[0x202];", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0x202", "end": {"col": 27, "line": 126, "offset": 3791}, "start": {"col": 22, "line": 126, "offset": 3786}}, "$UNSIGNED": {"abstract_content": "__size", "end": {"col": 11, "line": 126, "offset": 3775}, "start": {"col": 5, "line": 126, "offset": 3769}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 5, "line": 126, "offset": 3769}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 128, "offset": 3855}, "extra": {"engine_kind": "OSS", "fingerprint": "3610c0a0f9c6dce80274e4f0b168cb7a97df8f80a3d53336cb3e5fc75d2c271f20284d7b42d4dab877d1cf9759a86dc477a0cbd59cbf5c317ab359437e277dac_0", "is_ignored": false, "lines": "      pvVar3 = malloc(0x1000);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 22, "line": 128, "offset": 3847}, "start": {"col": 16, "line": 128, "offset": 3841}}, "$RET": {"abstract_content": "pvVar3", "end": {"col": 13, "line": 128, "offset": 3838}, "start": {"col": 7, "line": 128, "offset": 3832}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 7, "line": 128, "offset": 3832}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 128, "offset": 3855}, "extra": {"engine_kind": "OSS", "fingerprint": "c0eb17a071c30cbde2010dd3e4e18167d228636a5d02c8bbfbbe38d9c72e161a29e28780fc5cb0ea209222a122c6f4b5a05f51dc0acefbf23142fb20e1feecf6_1", "is_ignored": false, "lines": "      pvVar3 = malloc(0x1000);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 22, "line": 128, "offset": 3847}, "start": {"col": 16, "line": 128, "offset": 3841}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 16, "line": 128, "offset": 3841}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 128, "offset": 3855}, "extra": {"engine_kind": "OSS", "fingerprint": "a530a62efca89e0e0504c248cc56471e474ee71a9dda2c5f767924e52c831bd1d19d2d22f52225a86c112c8760ff6f146a0626e0b53ea182f29205af64b25c61_0", "is_ignored": false, "lines": "      pvVar3 = malloc(0x1000);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x1000", "end": {"col": 29, "line": 128, "offset": 3854}, "start": {"col": 23, "line": 128, "offset": 3848}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 16, "line": 128, "offset": 3841}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 137, "offset": 4056}, "extra": {"engine_kind": "OSS", "fingerprint": "3610c0a0f9c6dce80274e4f0b168cb7a97df8f80a3d53336cb3e5fc75d2c271f20284d7b42d4dab877d1cf9759a86dc477a0cbd59cbf5c317ab359437e277dac_1", "is_ignored": false, "lines": "      pvVar3 = malloc(__size);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 22, "line": 137, "offset": 4048}, "start": {"col": 16, "line": 137, "offset": 4042}}, "$RET": {"abstract_content": "pvVar3", "end": {"col": 13, "line": 137, "offset": 4039}, "start": {"col": 7, "line": 137, "offset": 4033}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 7, "line": 137, "offset": 4033}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 137, "offset": 4056}, "extra": {"engine_kind": "OSS", "fingerprint": "c0eb17a071c30cbde2010dd3e4e18167d228636a5d02c8bbfbbe38d9c72e161a29e28780fc5cb0ea209222a122c6f4b5a05f51dc0acefbf23142fb20e1feecf6_2", "is_ignored": false, "lines": "      pvVar3 = malloc(__size);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 22, "line": 137, "offset": 4048}, "start": {"col": 16, "line": 137, "offset": 4042}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 16, "line": 137, "offset": 4042}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 14, "line": 143, "offset": 4318}, "extra": {"engine_kind": "OSS", "fingerprint": "99eea242d963599fd7b8e0cabf0bffa8628511b71b42c85389df64ba208a27ae0761764f6311b7f67f4aba206e190f5828ab079a49f5766a1bdd7d3896e710b4_2", "is_ignored": false, "lines": "      memcpy((void *)param_1[0x201],(void *)((int)param_1 + iVar8 + 8),(-4 - iVar8) + param_1[0x203]\n            );", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 142, "offset": 4216}, "start": {"col": 7, "line": 142, "offset": 4210}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 7, "line": 142, "offset": 4210}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 161, "offset": 5009}, "extra": {"engine_kind": "OSS", "fingerprint": "99eea242d963599fd7b8e0cabf0bffa8628511b71b42c85389df64ba208a27ae0761764f6311b7f67f4aba206e190f5828ab079a49f5766a1bdd7d3896e710b4_3", "is_ignored": false, "lines": "          memcpy((void *)param_1[0x201],(void *)((int)(void *)param_1[0x201] + iVar2),\n                 param_1[0x206] - iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 17, "line": 160, "offset": 4898}, "start": {"col": 11, "line": 160, "offset": 4892}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 11, "line": 160, "offset": 4892}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 181, "offset": 5740}, "extra": {"engine_kind": "OSS", "fingerprint": "99eea242d963599fd7b8e0cabf0bffa8628511b71b42c85389df64ba208a27ae0761764f6311b7f67f4aba206e190f5828ab079a49f5766a1bdd7d3896e710b4_4", "is_ignored": false, "lines": "        memcpy((void *)param_1[0x201],(void *)((int)(void *)param_1[0x201] + iVar2),\n               param_1[0x206] - iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 15, "line": 180, "offset": 5631}, "start": {"col": 9, "line": 180, "offset": 5625}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040ec90_0040ec90.c", "start": {"col": 9, "line": 180, "offset": 5625}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 28, "line": 33, "offset": 540}, "extra": {"engine_kind": "OSS", "fingerprint": "4e1d7ed22343373d998c2be7925cf6ce4ebea60c123c2f982fd570076f41bfc39ecbb661eacb9869054b30f1fdb7dbc09998e0ad4be65d1c2cda1408ef266a57_0", "is_ignored": false, "lines": "  local_40 = malloc(0x1000);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 20, "line": 33, "offset": 532}, "start": {"col": 14, "line": 33, "offset": 526}}, "$RET": {"abstract_content": "local_40", "end": {"col": 11, "line": 33, "offset": 523}, "start": {"col": 3, "line": 33, "offset": 515}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040fc44_0040fc44.c", "start": {"col": 3, "line": 33, "offset": 515}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 28, "line": 33, "offset": 540}, "extra": {"engine_kind": "OSS", "fingerprint": "35bc8fd3770e9025930ebb1384927d54d03a9dcdfeebcbc002ca93ce9364518bd9b4b2408d089f73501d76049420b4f71a475acc0d3f76511386bab95ae9eb20_0", "is_ignored": false, "lines": "  local_40 = malloc(0x1000);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 20, "line": 33, "offset": 532}, "start": {"col": 14, "line": 33, "offset": 526}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040fc44_0040fc44.c", "start": {"col": 14, "line": 33, "offset": 526}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 28, "line": 33, "offset": 540}, "extra": {"engine_kind": "OSS", "fingerprint": "0557c2f47395ae2327d879c4d1a03d8f9718af0c43e73f549957dd61f881a83998127b43ff407db703b68b38f6fc515b6460ef42cd71c0af29db1eb3a63d6bbf_0", "is_ignored": false, "lines": "  local_40 = malloc(0x1000);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x1000", "end": {"col": 27, "line": 33, "offset": 539}, "start": {"col": 21, "line": 33, "offset": 533}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040fc44_0040fc44.c", "start": {"col": 14, "line": 33, "offset": 526}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 67, "line": 38, "offset": 683}, "extra": {"engine_kind": "OSS", "fingerprint": "ada052a01e584b027a2051bc123562d023d720dd0824c75fa2107611963e24e661b4587feed6161c3261dcbb2500aea196cca47ea4b7d3082dc02bad78695c6a_0", "is_ignored": false, "lines": "    sVar2 = recvfrom(param_1,local_40,0x1000,0,local_34,&local_5c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$3": {"abstract_content": "from", "end": {"col": 8, "line": 2, "offset": 8}, "start": {"col": 4, "line": 2, "offset": 4}}, "$FUN": {"abstract_content": "recvfrom", "end": {"col": 21, "line": 38, "offset": 637}, "start": {"col": 13, "line": 38, "offset": 629}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040fc44_0040fc44.c", "start": {"col": 13, "line": 38, "offset": 629}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 67, "line": 38, "offset": 683}, "extra": {"engine_kind": "OSS", "fingerprint": "90c121025bc142baf4fb5ef9706998988d1ed6cc34ce49f548bfd19f38ad36e119210a2efc1c2d64118e1b829b6df3d2fb4ebfb8bc796acaaff5cee1d2743306_0", "is_ignored": false, "lines": "    sVar2 = recvfrom(param_1,local_40,0x1000,0,local_34,&local_5c);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$BUF": {"abstract_content": "local_40", "end": {"col": 38, "line": 38, "offset": 654}, "propagated_value": {"svalue_abstract_content": "malloc(0x1000)", "svalue_end": {"col": 28, "line": 33, "offset": 540}, "svalue_start": {"col": 14, "line": 33, "offset": 526}}, "start": {"col": 30, "line": 38, "offset": 646}}, "$FL": {"abstract_content": "0", "end": {"col": 47, "line": 38, "offset": 663}, "start": {"col": 46, "line": 38, "offset": 662}}, "$LEN": {"abstract_content": "0x1000", "end": {"col": 45, "line": 38, "offset": 661}, "start": {"col": 39, "line": 38, "offset": 655}}, "$SD": {"abstract_content": "param_1", "end": {"col": 29, "line": 38, "offset": 645}, "start": {"col": 22, "line": 38, "offset": 638}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040fc44_0040fc44.c", "start": {"col": 13, "line": 38, "offset": 629}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 54, "line": 50, "offset": 1133}, "extra": {"engine_kind": "OSS", "fingerprint": "4e0adb9d1e3ac65e11c4418823b4d03db9be29a7cebb48bad0ed6213874c4b4a1d7dfcf870d8c538dde472b9af12f3e1d2e08f82b90715d4a3553603c0a9e5a8_0", "is_ignored": false, "lines": "            __dest = malloc((size_t)(ppcVar8[3] + 1));", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 50, "offset": 1107}, "start": {"col": 22, "line": 50, "offset": 1101}}, "$X": {"abstract_content": "ppcVar8[3]", "end": {"col": 48, "line": 50, "offset": 1127}, "start": {"col": 38, "line": 50, "offset": 1117}}, "$Y": {"abstract_content": "1", "end": {"col": 52, "line": 50, "offset": 1131}, "start": {"col": 51, "line": 50, "offset": 1130}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040fc44_0040fc44.c", "start": {"col": 22, "line": 50, "offset": 1101}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 54, "line": 50, "offset": 1133}, "extra": {"engine_kind": "OSS", "fingerprint": "35bc8fd3770e9025930ebb1384927d54d03a9dcdfeebcbc002ca93ce9364518bd9b4b2408d089f73501d76049420b4f71a475acc0d3f76511386bab95ae9eb20_1", "is_ignored": false, "lines": "            __dest = malloc((size_t)(ppcVar8[3] + 1));", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 50, "offset": 1107}, "start": {"col": 22, "line": 50, "offset": 1101}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040fc44_0040fc44.c", "start": {"col": 22, "line": 50, "offset": 1101}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 51, "offset": 1191}, "extra": {"engine_kind": "OSS", "fingerprint": "7cc75e6c08bef2a622ab95a4c3839e76d27ef9366da53680eb3bcb818de70fd8ef551e85582b6e81d36ed54de05a2468659dad3b7c03675a3f267f041a1e936a_0", "is_ignored": false, "lines": "            memcpy(__dest,ppcVar8[2],(size_t)ppcVar8[3]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 19, "line": 51, "offset": 1153}, "start": {"col": 13, "line": 51, "offset": 1147}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040fc44_0040fc44.c", "start": {"col": 13, "line": 51, "offset": 1147}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 54, "line": 124, "offset": 4011}, "extra": {"engine_kind": "OSS", "fingerprint": "4e0adb9d1e3ac65e11c4418823b4d03db9be29a7cebb48bad0ed6213874c4b4a1d7dfcf870d8c538dde472b9af12f3e1d2e08f82b90715d4a3553603c0a9e5a8_1", "is_ignored": false, "lines": "            __dest = malloc((size_t)(ppcVar8[3] + 1));", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 124, "offset": 3985}, "start": {"col": 22, "line": 124, "offset": 3979}}, "$X": {"abstract_content": "ppcVar8[3]", "end": {"col": 48, "line": 124, "offset": 4005}, "start": {"col": 38, "line": 124, "offset": 3995}}, "$Y": {"abstract_content": "1", "end": {"col": 52, "line": 124, "offset": 4009}, "start": {"col": 51, "line": 124, "offset": 4008}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040fc44_0040fc44.c", "start": {"col": 22, "line": 124, "offset": 3979}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 54, "line": 124, "offset": 4011}, "extra": {"engine_kind": "OSS", "fingerprint": "35bc8fd3770e9025930ebb1384927d54d03a9dcdfeebcbc002ca93ce9364518bd9b4b2408d089f73501d76049420b4f71a475acc0d3f76511386bab95ae9eb20_2", "is_ignored": false, "lines": "            __dest = malloc((size_t)(ppcVar8[3] + 1));", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 124, "offset": 3985}, "start": {"col": 22, "line": 124, "offset": 3979}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040fc44_0040fc44.c", "start": {"col": 22, "line": 124, "offset": 3979}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 125, "offset": 4069}, "extra": {"engine_kind": "OSS", "fingerprint": "7cc75e6c08bef2a622ab95a4c3839e76d27ef9366da53680eb3bcb818de70fd8ef551e85582b6e81d36ed54de05a2468659dad3b7c03675a3f267f041a1e936a_1", "is_ignored": false, "lines": "            memcpy(__dest,ppcVar8[2],(size_t)ppcVar8[3]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 19, "line": 125, "offset": 4031}, "start": {"col": 13, "line": 125, "offset": 4025}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0040fc44_0040fc44.c", "start": {"col": 13, "line": 125, "offset": 4025}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 53, "line": 21, "offset": 426}, "extra": {"engine_kind": "OSS", "fingerprint": "373dbb881f132dd7099b3176ea5cc6797d478364c38693cf2ea9d2d9b9340a4db3648fd08546bcb0d8fe47dac642ab04883f28319b00edbde2db7bb471448323_0", "is_ignored": false, "lines": "  local_30 = (undefined *)malloc((param_2 >> 2) + 4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "undefined*", "end": {"col": 26, "line": 21, "offset": 399}, "start": {"col": 15, "line": 21, "offset": 388}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 33, "line": 21, "offset": 406}, "start": {"col": 27, "line": 21, "offset": 400}}, "$RET": {"abstract_content": "local_30", "end": {"col": 11, "line": 21, "offset": 384}, "start": {"col": 3, "line": 21, "offset": 376}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410748_00410748.c", "start": {"col": 3, "line": 21, "offset": 376}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 53, "line": 21, "offset": 426}, "extra": {"engine_kind": "OSS", "fingerprint": "2f903344b7631f971f1bec90e3268859f3633c25917f844b6a921225a545b85ffd5d6880e00219a590d7c744f524fd2c5e76b6596860db055d7bb19303505bc8_0", "is_ignored": false, "lines": "  local_30 = (undefined *)malloc((param_2 >> 2) + 4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 33, "line": 21, "offset": 406}, "start": {"col": 27, "line": 21, "offset": 400}}, "$X": {"abstract_content": "param_2>>2", "end": {"col": 47, "line": 21, "offset": 420}, "start": {"col": 35, "line": 21, "offset": 408}}, "$Y": {"abstract_content": "4", "end": {"col": 52, "line": 21, "offset": 425}, "start": {"col": 51, "line": 21, "offset": 424}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410748_00410748.c", "start": {"col": 27, "line": 21, "offset": 400}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 53, "line": 21, "offset": 426}, "extra": {"engine_kind": "OSS", "fingerprint": "f831f3d03fdf45f46f94f54f4d68abcb6198f6fc07345c2e2f84af6cdbe06f51574a8ba41a6fa60e0c911a5c32b1ffb042f61127947c677fba4ca9ac3bf852b9_0", "is_ignored": false, "lines": "  local_30 = (undefined *)malloc((param_2 >> 2) + 4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 33, "line": 21, "offset": 406}, "start": {"col": 27, "line": 21, "offset": 400}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410748_00410748.c", "start": {"col": 27, "line": 21, "offset": 400}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-truncation", "end": {"col": 30, "line": 39, "offset": 858}, "extra": {"engine_kind": "OSS", "fingerprint": "e373328d711f9859c58c6c6cb7c8a69c558bd19f6d9a6f22cd36d4b51ae66c46c2165bd08a4c9a9d966cc6fb9f71bfce010cc4aba147ff023157a17ec9311ffb_0", "is_ignored": false, "lines": "        cVar2 = cVar2 + -0x3d;", "message": "Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/197", "https://cwe.mitre.org/data/definitions/681", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms"]}, "metavars": {"$LARGE": {"abstract_content": "0x3d", "end": {"col": 30, "line": 39, "offset": 858}, "start": {"col": 26, "line": 39, "offset": 854}}, "$NARROW": {"abstract_content": "cVar2", "end": {"col": 14, "line": 39, "offset": 842}, "start": {"col": 9, "line": 39, "offset": 837}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410748_00410748.c", "start": {"col": 9, "line": 39, "offset": 837}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 32, "line": 23, "offset": 386}, "extra": {"engine_kind": "OSS", "fingerprint": "cb571de4a42b54b1e18d4958f3d28dcf97f497810d26e11cd6f9f3baec611ec67809c90f220652880f50e7d9c898685c9b20272d96c7ad8fb67a6645c6895b29_0", "is_ignored": false, "lines": "  ppiVar4 = (int **)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "int**", "end": {"col": 20, "line": 23, "offset": 374}, "start": {"col": 14, "line": 23, "offset": 368}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 23, "offset": 381}, "start": {"col": 21, "line": 23, "offset": 375}}, "$RET": {"abstract_content": "ppiVar4", "end": {"col": 10, "line": 23, "offset": 364}, "start": {"col": 3, "line": 23, "offset": 357}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410b58_00410b58.c", "start": {"col": 3, "line": 23, "offset": 357}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 32, "line": 23, "offset": 386}, "extra": {"engine_kind": "OSS", "fingerprint": "a788a4ce5566a9006d565371b7652ab5e402c844ca3154913449a0ef5f4d00b434ebc21d4e79bec96a450894f80cf02b6f5d46f4dce99cfec27823ed4ae92e7d_0", "is_ignored": false, "lines": "  ppiVar4 = (int **)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 23, "offset": 381}, "start": {"col": 21, "line": 23, "offset": 375}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410b58_00410b58.c", "start": {"col": 21, "line": 23, "offset": 375}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 32, "line": 23, "offset": 386}, "extra": {"engine_kind": "OSS", "fingerprint": "001a21d5032bffe206f066e4c9d49cb068ef9b41b67bb2fed522d45bc2da9532bfc51e08231d7ffb7406ace1526ce7533a9abdae01d17fdafdcaa51cb60ce8c5_0", "is_ignored": false, "lines": "  ppiVar4 = (int **)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 31, "line": 23, "offset": 385}, "start": {"col": 28, "line": 23, "offset": 382}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410b58_00410b58.c", "start": {"col": 21, "line": 23, "offset": 375}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 34, "line": 30, "offset": 554}, "extra": {"engine_kind": "OSS", "fingerprint": "bd17af2d8d808f032ed7776fad9a3b75c428d609cdb5a0f981e7dbdee3da498bd4d4b9352c9be019a69d179939ddd76b048d1cd43e82d5ee7541a5ebf77c0c8e_0", "is_ignored": false, "lines": "      piVar6 = (int *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "int*", "end": {"col": 22, "line": 30, "offset": 542}, "start": {"col": 17, "line": 30, "offset": 537}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 29, "line": 30, "offset": 549}, "start": {"col": 23, "line": 30, "offset": 543}}, "$RET": {"abstract_content": "piVar6", "end": {"col": 13, "line": 30, "offset": 533}, "start": {"col": 7, "line": 30, "offset": 527}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410b58_00410b58.c", "start": {"col": 7, "line": 30, "offset": 527}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 34, "line": 30, "offset": 554}, "extra": {"engine_kind": "OSS", "fingerprint": "a788a4ce5566a9006d565371b7652ab5e402c844ca3154913449a0ef5f4d00b434ebc21d4e79bec96a450894f80cf02b6f5d46f4dce99cfec27823ed4ae92e7d_1", "is_ignored": false, "lines": "      piVar6 = (int *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 29, "line": 30, "offset": 549}, "start": {"col": 23, "line": 30, "offset": 543}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410b58_00410b58.c", "start": {"col": 23, "line": 30, "offset": 543}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 34, "line": 30, "offset": 554}, "extra": {"engine_kind": "OSS", "fingerprint": "001a21d5032bffe206f066e4c9d49cb068ef9b41b67bb2fed522d45bc2da9532bfc51e08231d7ffb7406ace1526ce7533a9abdae01d17fdafdcaa51cb60ce8c5_1", "is_ignored": false, "lines": "      piVar6 = (int *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 33, "line": 30, "offset": 553}, "start": {"col": 30, "line": 30, "offset": 550}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410b58_00410b58.c", "start": {"col": 23, "line": 30, "offset": 543}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-truncation", "end": {"col": 42, "line": 47, "offset": 981}, "extra": {"engine_kind": "OSS", "fingerprint": "feb63dbe6dd00dab7ae0e41d81ea118e126e7531437a954a0df4b9adfeedc325388b74b5be0d3fcb1b6d22ecc28e50254691d6981a19939be1e3e26960dd5006_0", "is_ignored": false, "lines": "      cVar1 = *(char *)(param_1 + param_2);", "message": "Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/197", "https://cwe.mitre.org/data/definitions/681", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms"]}, "metavars": {"$LARGE": {"abstract_content": "param_1", "end": {"col": 32, "line": 47, "offset": 971}, "start": {"col": 25, "line": 47, "offset": 964}}, "$NARROW": {"abstract_content": "cVar1", "end": {"col": 12, "line": 47, "offset": 951}, "start": {"col": 7, "line": 47, "offset": 946}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410b58_00410b58.c", "start": {"col": 7, "line": 47, "offset": 946}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-truncation", "end": {"col": 42, "line": 59, "offset": 1232}, "extra": {"engine_kind": "OSS", "fingerprint": "feb63dbe6dd00dab7ae0e41d81ea118e126e7531437a954a0df4b9adfeedc325388b74b5be0d3fcb1b6d22ecc28e50254691d6981a19939be1e3e26960dd5006_1", "is_ignored": false, "lines": "      cVar1 = *(char *)(param_1 + param_2);", "message": "Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/197", "https://cwe.mitre.org/data/definitions/681", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms"]}, "metavars": {"$LARGE": {"abstract_content": "param_1", "end": {"col": 32, "line": 59, "offset": 1222}, "start": {"col": 25, "line": 59, "offset": 1215}}, "$NARROW": {"abstract_content": "cVar1", "end": {"col": 12, "line": 59, "offset": 1202}, "start": {"col": 7, "line": 59, "offset": 1197}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410b58_00410b58.c", "start": {"col": 7, "line": 59, "offset": 1197}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 40, "line": 73, "offset": 1668}, "extra": {"engine_kind": "OSS", "fingerprint": "bd17af2d8d808f032ed7776fad9a3b75c428d609cdb5a0f981e7dbdee3da498bd4d4b9352c9be019a69d179939ddd76b048d1cd43e82d5ee7541a5ebf77c0c8e_1", "is_ignored": false, "lines": "            piVar6 = (int *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "int*", "end": {"col": 28, "line": 73, "offset": 1656}, "start": {"col": 23, "line": 73, "offset": 1651}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 35, "line": 73, "offset": 1663}, "start": {"col": 29, "line": 73, "offset": 1657}}, "$RET": {"abstract_content": "piVar6", "end": {"col": 19, "line": 73, "offset": 1647}, "start": {"col": 13, "line": 73, "offset": 1641}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410b58_00410b58.c", "start": {"col": 13, "line": 73, "offset": 1641}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 73, "offset": 1668}, "extra": {"engine_kind": "OSS", "fingerprint": "a788a4ce5566a9006d565371b7652ab5e402c844ca3154913449a0ef5f4d00b434ebc21d4e79bec96a450894f80cf02b6f5d46f4dce99cfec27823ed4ae92e7d_2", "is_ignored": false, "lines": "            piVar6 = (int *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 35, "line": 73, "offset": 1663}, "start": {"col": 29, "line": 73, "offset": 1657}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410b58_00410b58.c", "start": {"col": 29, "line": 73, "offset": 1657}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 40, "line": 73, "offset": 1668}, "extra": {"engine_kind": "OSS", "fingerprint": "001a21d5032bffe206f066e4c9d49cb068ef9b41b67bb2fed522d45bc2da9532bfc51e08231d7ffb7406ace1526ce7533a9abdae01d17fdafdcaa51cb60ce8c5_2", "is_ignored": false, "lines": "            piVar6 = (int *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 39, "line": 73, "offset": 1667}, "start": {"col": 36, "line": 73, "offset": 1664}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410b58_00410b58.c", "start": {"col": 29, "line": 73, "offset": 1657}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 35, "line": 8, "offset": 132}, "extra": {"engine_kind": "OSS", "fingerprint": "3f55e96cf89925cc6a0c578ef5c566f785126228c6cd0ed140d69f73098900a64249965719ff91537774a8eb806de9173cac9c88abb3db346ea5012de154e5ac_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(8);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "undefined4*", "end": {"col": 25, "line": 8, "offset": 122}, "start": {"col": 13, "line": 8, "offset": 110}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 8, "offset": 129}, "start": {"col": 26, "line": 8, "offset": 123}}, "$RET": {"abstract_content": "puVar1", "end": {"col": 9, "line": 8, "offset": 106}, "start": {"col": 3, "line": 8, "offset": 100}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410dc0_00410dc0.c", "start": {"col": 3, "line": 8, "offset": 100}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 8, "offset": 132}, "extra": {"engine_kind": "OSS", "fingerprint": "01ef2ae254b1db4f3a79e407156c854454c2d11d2891b0f2f2ea296c93afdfb07759a4327ddf775e9f2362210d91395366cc655f9e96aff3515ad034e480e70d_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(8);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 8, "offset": 129}, "start": {"col": 26, "line": 8, "offset": 123}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410dc0_00410dc0.c", "start": {"col": 26, "line": 8, "offset": 123}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 35, "line": 8, "offset": 132}, "extra": {"engine_kind": "OSS", "fingerprint": "81e94533b21591df8c82c9dc857a14c7ac5b45dfa28807348a52205141b9523005bdb8eb06dc19c3c511dd2d9c6c91d04e40ec17ba6768d52254e3a288403a25_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(8);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "8", "end": {"col": 34, "line": 8, "offset": 131}, "start": {"col": 33, "line": 8, "offset": 130}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410dc0_00410dc0.c", "start": {"col": 26, "line": 8, "offset": 123}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 35, "line": 8, "offset": 132}, "extra": {"engine_kind": "OSS", "fingerprint": "edff0aa634deb50a48c26653ee68b083ea68d2cb7549f19a489577f5b2dfde343af274c031f43e0ba0b16e5ae6962b3053e69c0a0071c3a290ece39a1c423ce7_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(8);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "undefined4*", "end": {"col": 25, "line": 8, "offset": 122}, "start": {"col": 13, "line": 8, "offset": 110}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 8, "offset": 129}, "start": {"col": 26, "line": 8, "offset": 123}}, "$RET": {"abstract_content": "puVar1", "end": {"col": 9, "line": 8, "offset": 106}, "start": {"col": 3, "line": 8, "offset": 100}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410e10_00410e10.c", "start": {"col": 3, "line": 8, "offset": 100}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 8, "offset": 132}, "extra": {"engine_kind": "OSS", "fingerprint": "00988115729b730d1c28ff6d704efa3a659de93577b7d235b4eec7dcc4804afac48987918f534217d8f964543f311498df5ee367a5e1b41cf5d0ad94a8a8520d_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(8);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 8, "offset": 129}, "start": {"col": 26, "line": 8, "offset": 123}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410e10_00410e10.c", "start": {"col": 26, "line": 8, "offset": 123}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 35, "line": 8, "offset": 132}, "extra": {"engine_kind": "OSS", "fingerprint": "adb3d02deae2570dd8827bff94e6f3eadd5f7ed38c9799c04c6a44728163801c8aca5914ef66ebbb8a0245f8d53085ba95ca807c8b87a5b97abde07e0b1c70aa_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(8);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "8", "end": {"col": 34, "line": 8, "offset": 131}, "start": {"col": 33, "line": 8, "offset": 130}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00410e10_00410e10.c", "start": {"col": 26, "line": 8, "offset": 123}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 42, "line": 36, "offset": 881}, "extra": {"engine_kind": "OSS", "fingerprint": "c245ac41b34aeb744b3017e6e39a8704c2e21bc2e6f49599315a357569fd3cec35ef6399c502aab5a6624ac49341793c06f2b9a06d482525aa8996f8c84da925_0", "is_ignored": false, "lines": "      puVar5 = (undefined4 *)malloc(0x1c);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "undefined4*", "end": {"col": 29, "line": 36, "offset": 868}, "start": {"col": 17, "line": 36, "offset": 856}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 36, "line": 36, "offset": 875}, "start": {"col": 30, "line": 36, "offset": 869}}, "$RET": {"abstract_content": "puVar5", "end": {"col": 13, "line": 36, "offset": 852}, "start": {"col": 7, "line": 36, "offset": 846}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004113e4_004113e4.c", "start": {"col": 7, "line": 36, "offset": 846}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 42, "line": 36, "offset": 881}, "extra": {"engine_kind": "OSS", "fingerprint": "5f054933e663bde9725f5f7e994f35f97598478dda6b34687710229c37126061a2e4c3f86f0089a0af5c54d46cb70f16b79e4aef06109dd5ff1b34ef74db4afb_0", "is_ignored": false, "lines": "      puVar5 = (undefined4 *)malloc(0x1c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 36, "line": 36, "offset": 875}, "start": {"col": 30, "line": 36, "offset": 869}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004113e4_004113e4.c", "start": {"col": 30, "line": 36, "offset": 869}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 42, "line": 36, "offset": 881}, "extra": {"engine_kind": "OSS", "fingerprint": "f01fb006fa5c8e2b137941678af03d4e0c6350c0d71ced03e1c97518cfe40905a465b2716c2c0e35cadec22ead23ff481925c79236dab027b2b525b8ea99d3b1_0", "is_ignored": false, "lines": "      puVar5 = (undefined4 *)malloc(0x1c);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x1c", "end": {"col": 41, "line": 36, "offset": 880}, "start": {"col": 37, "line": 36, "offset": 876}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004113e4_004113e4.c", "start": {"col": 30, "line": 36, "offset": 869}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 42, "line": 40, "offset": 962}, "extra": {"engine_kind": "OSS", "fingerprint": "c245ac41b34aeb744b3017e6e39a8704c2e21bc2e6f49599315a357569fd3cec35ef6399c502aab5a6624ac49341793c06f2b9a06d482525aa8996f8c84da925_1", "is_ignored": false, "lines": "      puVar5 = (undefined4 *)malloc(0x1c);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "undefined4*", "end": {"col": 29, "line": 40, "offset": 949}, "start": {"col": 17, "line": 40, "offset": 937}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 36, "line": 40, "offset": 956}, "start": {"col": 30, "line": 40, "offset": 950}}, "$RET": {"abstract_content": "puVar5", "end": {"col": 13, "line": 40, "offset": 933}, "start": {"col": 7, "line": 40, "offset": 927}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004113e4_004113e4.c", "start": {"col": 7, "line": 40, "offset": 927}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 42, "line": 40, "offset": 962}, "extra": {"engine_kind": "OSS", "fingerprint": "5f054933e663bde9725f5f7e994f35f97598478dda6b34687710229c37126061a2e4c3f86f0089a0af5c54d46cb70f16b79e4aef06109dd5ff1b34ef74db4afb_1", "is_ignored": false, "lines": "      puVar5 = (undefined4 *)malloc(0x1c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 36, "line": 40, "offset": 956}, "start": {"col": 30, "line": 40, "offset": 950}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004113e4_004113e4.c", "start": {"col": 30, "line": 40, "offset": 950}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 42, "line": 40, "offset": 962}, "extra": {"engine_kind": "OSS", "fingerprint": "f01fb006fa5c8e2b137941678af03d4e0c6350c0d71ced03e1c97518cfe40905a465b2716c2c0e35cadec22ead23ff481925c79236dab027b2b525b8ea99d3b1_1", "is_ignored": false, "lines": "      puVar5 = (undefined4 *)malloc(0x1c);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x1c", "end": {"col": 41, "line": 40, "offset": 961}, "start": {"col": 37, "line": 40, "offset": 957}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_004113e4_004113e4.c", "start": {"col": 30, "line": 40, "offset": 950}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-pointer-subtraction", "end": {"col": 42, "line": 20, "offset": 342}, "extra": {"engine_kind": "OSS", "fingerprint": "e168d4fcf936251aa9e9b8c5c12d6d948cfa051c757d5943e77638d8c3503614923ab99ddd7784eb5d7d0840efc9932495ee82c52841c7ef7c1b6af13c7e478d_0", "is_ignored": false, "lines": "        return (int)__dest - (int)param_1;", "message": "The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/469", "https://github.com/struct/mms"]}, "metavars": {"$PTR1": {"abstract_content": "__dest", "end": {"col": 27, "line": 20, "offset": 327}, "start": {"col": 21, "line": 20, "offset": 321}}, "$PTR2": {"abstract_content": "param_1", "end": {"col": 42, "line": 20, "offset": 342}, "start": {"col": 35, "line": 20, "offset": 335}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411aa0_00411aa0.c", "start": {"col": 16, "line": 20, "offset": 316}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-truncation", "end": {"col": 29, "line": 22, "offset": 380}, "extra": {"engine_kind": "OSS", "fingerprint": "689d5ae50ce91e403862203904ef17acd4df3a642b91b2cb3184e4661ae4e1676420859290d08776177ebd0b53b6d4b6792240934f3e83c82d877995942216de_0", "is_ignored": false, "lines": "      cVar1 = param_2[iVar4];", "message": "Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/197", "https://cwe.mitre.org/data/definitions/681", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms"]}, "metavars": {"$LARGE": {"abstract_content": "iVar4", "end": {"col": 28, "line": 22, "offset": 379}, "start": {"col": 23, "line": 22, "offset": 374}}, "$NARROW": {"abstract_content": "cVar1", "end": {"col": 12, "line": 22, "offset": 363}, "start": {"col": 7, "line": 22, "offset": 358}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411aa0_00411aa0.c", "start": {"col": 7, "line": 22, "offset": 358}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 14, "line": 26, "offset": 465}, "extra": {"engine_kind": "OSS", "fingerprint": "3aceef474d6d1db498c38a5d19f4ebfa7946a90e29e2fc39ea84533fbd839610f5d5167a8f81b3e39121a1b2fc2f945794d65c4a222450fda193cc9fa9c1a802_0", "is_ignored": false, "lines": "      __n = 6;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "6", "end": {"col": 14, "line": 26, "offset": 465}, "start": {"col": 13, "line": 26, "offset": 464}}, "$UNSIGNED": {"abstract_content": "__n", "end": {"col": 10, "line": 26, "offset": 461}, "start": {"col": 7, "line": 26, "offset": 458}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411aa0_00411aa0.c", "start": {"col": 7, "line": 26, "offset": 458}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 31, "line": 30, "offset": 563}, "extra": {"engine_kind": "OSS", "fingerprint": "651f913a0e8c9e23650a2152eaa3937b3a8848a9ed3a5f012b8828a67a97790dc2fd289dc061dc7d2848c80b2bcff902ec12d04123f1bd3d0c881df51dd47644_0", "is_ignored": false, "lines": "      memcpy(__dest,__src,__n);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 30, "offset": 545}, "start": {"col": 7, "line": 30, "offset": 539}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411aa0_00411aa0.c", "start": {"col": 7, "line": 30, "offset": 539}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 31, "line": 30, "offset": 563}, "extra": {"engine_kind": "OSS", "fingerprint": "acb7bf1411978558e1a0993c30c49f5beb54c561076c920673945b58d7b5939026d77f15400aab097f356a931889d5edc232ad8835bcdf2b7a79b1ea68db36c3_0", "is_ignored": false, "lines": "      memcpy(__dest,__src,__n);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "__dest", "end": {"col": 20, "line": 30, "offset": 552}, "start": {"col": 14, "line": 30, "offset": 546}}, "$LEN": {"abstract_content": "__n", "end": {"col": 30, "line": 30, "offset": 562}, "propagated_value": {"svalue_abstract_content": "6", "svalue_end": {"col": 14, "line": 26, "offset": 465}, "svalue_start": {"col": 13, "line": 26, "offset": 464}}, "start": {"col": 27, "line": 30, "offset": 559}}, "$SRC": {"abstract_content": "__src", "end": {"col": 26, "line": 30, "offset": 558}, "propagated_value": {"svalue_abstract_content": "\"&quot;\"", "svalue_end": {"col": 23, "line": 23, "offset": 404}, "svalue_start": {"col": 15, "line": 23, "offset": 396}}, "start": {"col": 21, "line": 30, "offset": 553}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411aa0_00411aa0.c", "start": {"col": 7, "line": 30, "offset": 539}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 14, "line": 40, "offset": 745}, "extra": {"engine_kind": "OSS", "fingerprint": "f46982bd4f1a49e4af5eb45dce0f0b49aff3ef2c1c7d0bddab2d968664f34a13621f7e38cf1b4a2e17d15897def477db2c4cc286133d93eaf8049b339a6141da_0", "is_ignored": false, "lines": "      __n = 4;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "4", "end": {"col": 14, "line": 40, "offset": 745}, "start": {"col": 13, "line": 40, "offset": 744}}, "$UNSIGNED": {"abstract_content": "__n", "end": {"col": 10, "line": 40, "offset": 741}, "start": {"col": 7, "line": 40, "offset": 738}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411aa0_00411aa0.c", "start": {"col": 7, "line": 40, "offset": 738}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 14, "line": 49, "offset": 919}, "extra": {"engine_kind": "OSS", "fingerprint": "be646ec76e99b566b1c922cd8a0f6e2f1faebb07fa9520ea72dd0aeceef8bcdff70bbd426ac8f259d1f808420eb16c399dc0b1241663989a6e396a53485d1b0e_0", "is_ignored": false, "lines": "      __n = 5;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "5", "end": {"col": 14, "line": 49, "offset": 919}, "start": {"col": 13, "line": 49, "offset": 918}}, "$UNSIGNED": {"abstract_content": "__n", "end": {"col": 10, "line": 49, "offset": 915}, "start": {"col": 7, "line": 49, "offset": 912}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411aa0_00411aa0.c", "start": {"col": 7, "line": 49, "offset": 912}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 31, "line": 11, "offset": 233}, "extra": {"engine_kind": "OSS", "fingerprint": "fd365a054879d9f92b2a2848b0db0cb7b6324900b876e8bd082550ebb7f9c6e035cf5c2848bae28a33e8d679fe4d5fd6b76bac05abf8a34562082dca22304eaa_0", "is_ignored": false, "lines": "  __dest = malloc(param_3 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 11, "offset": 220}, "start": {"col": 12, "line": 11, "offset": 214}}, "$RET": {"abstract_content": "__dest", "end": {"col": 9, "line": 11, "offset": 211}, "start": {"col": 3, "line": 11, "offset": 205}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411e70_00411e70.c", "start": {"col": 3, "line": 11, "offset": 205}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 31, "line": 11, "offset": 233}, "extra": {"engine_kind": "OSS", "fingerprint": "b6468baf8a9ad7505a735a78dc5d84207068b5d8b62fa921856befeb47bb26e61c1ba2bf31dd5aef1422f68ed909496346a710de9a98f39fa34f097c41b0449e_0", "is_ignored": false, "lines": "  __dest = malloc(param_3 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 11, "offset": 220}, "start": {"col": 12, "line": 11, "offset": 214}}, "$X": {"abstract_content": "param_3", "end": {"col": 26, "line": 11, "offset": 228}, "start": {"col": 19, "line": 11, "offset": 221}}, "$Y": {"abstract_content": "1", "end": {"col": 30, "line": 11, "offset": 232}, "start": {"col": 29, "line": 11, "offset": 231}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411e70_00411e70.c", "start": {"col": 12, "line": 11, "offset": 214}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 31, "line": 11, "offset": 233}, "extra": {"engine_kind": "OSS", "fingerprint": "e7e15a95e015fa4c1293acc9fe40d4ff3711f7813fd31d45eced159a7f15a459b5091106df39b1d3d42792bddc40e67e37d239859c76de6523c3d0a153f21b03_0", "is_ignored": false, "lines": "  __dest = malloc(param_3 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 11, "offset": 220}, "start": {"col": 12, "line": 11, "offset": 214}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411e70_00411e70.c", "start": {"col": 12, "line": 11, "offset": 214}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 13, "offset": 306}, "extra": {"engine_kind": "OSS", "fingerprint": "d293a9c765eaa17feabeb624016063a370443657b3308d4c6b0176b828bf1d990d4a74961aa287101460858f5ba3b13c1a972b0d285df3421f466fc1a64bc2aa_0", "is_ignored": false, "lines": "  memcpy(__dest,param_2,param_3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 13, "offset": 282}, "start": {"col": 3, "line": 13, "offset": 276}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411e70_00411e70.c", "start": {"col": 3, "line": 13, "offset": 276}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 44, "line": 11, "offset": 215}, "extra": {"engine_kind": "OSS", "fingerprint": "17f7669d378b2707a68ea2440a638f8e6df818707583fc663f43b9034421ad6ef15d5e19d914c47f4064c0d1f8ea1856ae8d7288a135a34975e869753b595255_0", "is_ignored": false, "lines": "  puVar1 = (undefined *)malloc(param_3 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "undefined*", "end": {"col": 24, "line": 11, "offset": 195}, "start": {"col": 13, "line": 11, "offset": 184}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 11, "offset": 202}, "start": {"col": 25, "line": 11, "offset": 196}}, "$RET": {"abstract_content": "puVar1", "end": {"col": 9, "line": 11, "offset": 180}, "start": {"col": 3, "line": 11, "offset": 174}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411f08_00411f08.c", "start": {"col": 3, "line": 11, "offset": 174}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 44, "line": 11, "offset": 215}, "extra": {"engine_kind": "OSS", "fingerprint": "6fd552df2a95e9fa46dd1fddde2d9151b5a105758f6d26d0ac5502fbe2ededb9fd76591aa530dbc7aae3a8570874b6a0328463b94a40e6b60cedb5b3d419a5fb_0", "is_ignored": false, "lines": "  puVar1 = (undefined *)malloc(param_3 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 11, "offset": 202}, "start": {"col": 25, "line": 11, "offset": 196}}, "$X": {"abstract_content": "param_3", "end": {"col": 39, "line": 11, "offset": 210}, "start": {"col": 32, "line": 11, "offset": 203}}, "$Y": {"abstract_content": "1", "end": {"col": 43, "line": 11, "offset": 214}, "start": {"col": 42, "line": 11, "offset": 213}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411f08_00411f08.c", "start": {"col": 25, "line": 11, "offset": 196}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 44, "line": 11, "offset": 215}, "extra": {"engine_kind": "OSS", "fingerprint": "08ecd3e8960cb50c3879633770bc60dc1a786841580ba1816e8218839c4b74e9761745b23d1ebb82e65296fd3f3e8c177e8209c19cb6e629d30eec1f680426b5_0", "is_ignored": false, "lines": "  puVar1 = (undefined *)malloc(param_3 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 11, "offset": 202}, "start": {"col": 25, "line": 11, "offset": 196}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411f08_00411f08.c", "start": {"col": 25, "line": 11, "offset": 196}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 44, "line": 11, "offset": 215}, "extra": {"engine_kind": "OSS", "fingerprint": "d277fd8ac7dbc9546ab3cbb97f80373060dd25d17e14b19dbb828fabc8679a58dff272c0a85319781c30abfda1c8f7394587cb84caaa48fff689a3a3b4baa40c_0", "is_ignored": false, "lines": "  puVar1 = (undefined *)malloc(param_3 + 1);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "param_3+1", "end": {"col": 43, "line": 11, "offset": 214}, "start": {"col": 32, "line": 11, "offset": 203}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411f08_00411f08.c", "start": {"col": 25, "line": 11, "offset": 196}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 49, "line": 14, "offset": 294}, "extra": {"engine_kind": "OSS", "fingerprint": "ae929d568a4ef31e72ff97baa7030c85b34adb28f5381cb3188b68ffabe83b23cd2a768b4016ccb59297300bea85edadd6018ba1b0337179eb331b21dcc31e80_0", "is_ignored": false, "lines": "    memcpy(__dest_00,param_1 + 1,(uint)*param_1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 14, "offset": 256}, "start": {"col": 5, "line": 14, "offset": 250}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411f08_00411f08.c", "start": {"col": 5, "line": 14, "offset": 250}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 78, "line": 20, "offset": 527}, "extra": {"engine_kind": "OSS", "fingerprint": "ae929d568a4ef31e72ff97baa7030c85b34adb28f5381cb3188b68ffabe83b23cd2a768b4016ccb59297300bea85edadd6018ba1b0337179eb331b21dcc31e80_1", "is_ignored": false, "lines": "    memcpy(__dest,__dest + -((uint)pbVar2[1] * 4 + (uint)(*pbVar2 >> 6)),__n);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 20, "offset": 460}, "start": {"col": 5, "line": 20, "offset": 454}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411f08_00411f08.c", "start": {"col": 5, "line": 20, "offset": 454}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 50, "line": 16, "offset": 323}, "extra": {"engine_kind": "OSS", "fingerprint": "fddfcea195710b5ec49e5f7027942114c325e2f8d5c28e3c9e99fe7cdc9b51998820d7b293c21ba0ba3b5d54d56314b46ef364316b7b692733cc923f7f33c75e_0", "is_ignored": false, "lines": "    iVar1 = strncasecmp(param_2,*ppcVar4,param_3);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar1", "end": {"col": 10, "line": 16, "offset": 283}, "start": {"col": 5, "line": 16, "offset": 278}}, "$UNSIGNED": {"abstract_content": "param_3", "end": {"col": 49, "line": 16, "offset": 322}, "start": {"col": 42, "line": 16, "offset": 315}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411fdc_00411fdc.c", "start": {"col": 5, "line": 16, "offset": 278}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 44, "line": 20, "offset": 434}, "extra": {"engine_kind": "OSS", "fingerprint": "20ed485115fddb6c5669347568b2f6cd97a2940030cadf485010d067cbd1bf7db7704d8e3e9e7664d18b2ba4aa6c8a0b405195bd50c44e1fd42d555c68ffbdd1_0", "is_ignored": false, "lines": "  __dest = malloc((size_t)(ppcVar4[3] + 1));", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 20, "offset": 408}, "start": {"col": 12, "line": 20, "offset": 402}}, "$RET": {"abstract_content": "__dest", "end": {"col": 9, "line": 20, "offset": 399}, "start": {"col": 3, "line": 20, "offset": 393}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411fdc_00411fdc.c", "start": {"col": 3, "line": 20, "offset": 393}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 44, "line": 20, "offset": 434}, "extra": {"engine_kind": "OSS", "fingerprint": "942b786706a5640f995d1f81839c5acb8a4e2650eeea1af8b00b60cb896418493f83f5759aad2f8adefed721cd348544b3bd1f85346d01b00b9ec21196877023_0", "is_ignored": false, "lines": "  __dest = malloc((size_t)(ppcVar4[3] + 1));", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 20, "offset": 408}, "start": {"col": 12, "line": 20, "offset": 402}}, "$X": {"abstract_content": "ppcVar4[3]", "end": {"col": 38, "line": 20, "offset": 428}, "start": {"col": 28, "line": 20, "offset": 418}}, "$Y": {"abstract_content": "1", "end": {"col": 42, "line": 20, "offset": 432}, "start": {"col": 41, "line": 20, "offset": 431}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411fdc_00411fdc.c", "start": {"col": 12, "line": 20, "offset": 402}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 44, "line": 20, "offset": 434}, "extra": {"engine_kind": "OSS", "fingerprint": "7a534012fae5e9bb6bd803a66b2e0a4e5de3b6f675b18568b165e4a3909a586e1901ae709126d0b0480aaaa3175c3b847aef75685315482f19bfdd706b6b5113_0", "is_ignored": false, "lines": "  __dest = malloc((size_t)(ppcVar4[3] + 1));", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 20, "offset": 408}, "start": {"col": 12, "line": 20, "offset": 402}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411fdc_00411fdc.c", "start": {"col": 12, "line": 20, "offset": 402}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 68, "line": 28, "offset": 714}, "extra": {"engine_kind": "OSS", "fingerprint": "660a7554c2cc636090e92919a3089c112d55441eac3166fde98a7fe80bbd6256aedd1eeae991f92df2e8dbea2517ed59dbe240670db7e1f9752d1cd955e04d63_0", "is_ignored": false, "lines": "  memcpy(__dest,ppcVar4[2] + (int)pcVar2,(int)pcVar3 - (int)pcVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 28, "offset": 655}, "start": {"col": 3, "line": 28, "offset": 649}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411fdc_00411fdc.c", "start": {"col": 3, "line": 28, "offset": 649}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 68, "line": 28, "offset": 714}, "extra": {"engine_kind": "OSS", "fingerprint": "88fa9378e27ca635eed3a9efd8dfa16bfdaa4ccf5e31ea26f2b7f51291bc6b1e5067edad78d03e13435833ccad12fd7929aac33c2d10b74261425275dad17a9c_0", "is_ignored": false, "lines": "  memcpy(__dest,ppcVar4[2] + (int)pcVar2,(int)pcVar3 - (int)pcVar2);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "__dest", "end": {"col": 16, "line": 28, "offset": 662}, "start": {"col": 10, "line": 28, "offset": 656}}, "$LEN": {"abstract_content": "(int pcVar3-(int pcVar2", "end": {"col": 67, "line": 28, "offset": 713}, "start": {"col": 42, "line": 28, "offset": 688}}, "$SRC": {"abstract_content": "ppcVar4[2]+(int pcVar2", "end": {"col": 41, "line": 28, "offset": 687}, "start": {"col": 17, "line": 28, "offset": 663}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411fdc_00411fdc.c", "start": {"col": 3, "line": 28, "offset": 649}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-pointer-subtraction", "end": {"col": 67, "line": 28, "offset": 713}, "extra": {"engine_kind": "OSS", "fingerprint": "0f5424ea35ac23ed949bd7780bae6f72dbb8121843d4c03b4502a4ed10cedf04036433b85d6a293a4995f3da8d718e97e902c22799259e62a5aa0a1e6c1151c8_0", "is_ignored": false, "lines": "  memcpy(__dest,ppcVar4[2] + (int)pcVar2,(int)pcVar3 - (int)pcVar2);", "message": "The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/469", "https://github.com/struct/mms"]}, "metavars": {"$PTR1": {"abstract_content": "pcVar2", "end": {"col": 67, "line": 28, "offset": 713}, "start": {"col": 61, "line": 28, "offset": 707}}, "$PTR2": {"abstract_content": "pcVar3", "end": {"col": 53, "line": 28, "offset": 699}, "start": {"col": 47, "line": 28, "offset": 693}}, "$TYPE": {"abstract_content": "char", "end": {"col": 7, "line": 7, "offset": 101}, "start": {"col": 3, "line": 7, "offset": 97}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00411fdc_00411fdc.c", "start": {"col": 42, "line": 28, "offset": 688}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 10, "offset": 173}, "extra": {"engine_kind": "OSS", "fingerprint": "1d95865506cf55a5d0484c9bc9b6cfe4a5d283797b2820102e7d5af40e7b27eeaf96517cb0f232261cfb4eafdca59b96746ad05ca2808b4e8f1b506af693727c_0", "is_ignored": false, "lines": "    memcpy(local_20,param_1,param_2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 10, "offset": 147}, "start": {"col": 5, "line": 10, "offset": 141}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00412208_00412208.c", "start": {"col": 5, "line": 10, "offset": 141}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 31, "line": 14, "offset": 243}, "extra": {"engine_kind": "OSS", "fingerprint": "1d95865506cf55a5d0484c9bc9b6cfe4a5d283797b2820102e7d5af40e7b27eeaf96517cb0f232261cfb4eafdca59b96746ad05ca2808b4e8f1b506af693727c_1", "is_ignored": false, "lines": "    memcpy(local_20,param_1,4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 14, "offset": 223}, "start": {"col": 5, "line": 14, "offset": 217}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00412208_00412208.c", "start": {"col": 5, "line": 14, "offset": 217}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 31, "line": 14, "offset": 243}, "extra": {"engine_kind": "OSS", "fingerprint": "43e3b3d043838769d15f334abe306405f4f063230b60be6a22d93c4b1a575efdb28989e6fc18eb54cab414f7d0c6c0cd0fe42a443b6bb330cac4a9e402256df2_0", "is_ignored": false, "lines": "    memcpy(local_20,param_1,4);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "local_20", "end": {"col": 20, "line": 14, "offset": 232}, "start": {"col": 12, "line": 14, "offset": 224}}, "$LEN": {"abstract_content": "4", "end": {"col": 30, "line": 14, "offset": 242}, "start": {"col": 29, "line": 14, "offset": 241}}, "$SRC": {"abstract_content": "param_1", "end": {"col": 28, "line": 14, "offset": 240}, "start": {"col": 21, "line": 14, "offset": 233}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00412208_00412208.c", "start": {"col": 5, "line": 14, "offset": 217}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 62, "line": 16, "offset": 331}, "extra": {"engine_kind": "OSS", "fingerprint": "1d95865506cf55a5d0484c9bc9b6cfe4a5d283797b2820102e7d5af40e7b27eeaf96517cb0f232261cfb4eafdca59b96746ad05ca2808b4e8f1b506af693727c_2", "is_ignored": false, "lines": "    memcpy(local_20,(void *)((int)param_1 + (param_2 - 4)),4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 16, "offset": 280}, "start": {"col": 5, "line": 16, "offset": 274}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00412208_00412208.c", "start": {"col": 5, "line": 16, "offset": 274}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 62, "line": 16, "offset": 331}, "extra": {"engine_kind": "OSS", "fingerprint": "50a63df5438cde153352cab69f5e5c83874c080cdbd55cde26c36240a862abf2faa08c9407eb7a8a9d07f34e188c3337dea2f23ffd01c7cbd1e33f0b087b476d_0", "is_ignored": false, "lines": "    memcpy(local_20,(void *)((int)param_1 + (param_2 - 4)),4);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "local_20", "end": {"col": 20, "line": 16, "offset": 289}, "start": {"col": 12, "line": 16, "offset": 281}}, "$LEN": {"abstract_content": "4", "end": {"col": 61, "line": 16, "offset": 330}, "start": {"col": 60, "line": 16, "offset": 329}}, "$SRC": {"abstract_content": "(void*(int param_1+param_2-4", "end": {"col": 57, "line": 16, "offset": 326}, "start": {"col": 21, "line": 16, "offset": 290}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00412208_00412208.c", "start": {"col": 5, "line": 16, "offset": 274}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 70, "line": 19, "offset": 463}, "extra": {"engine_kind": "OSS", "fingerprint": "1d95865506cf55a5d0484c9bc9b6cfe4a5d283797b2820102e7d5af40e7b27eeaf96517cb0f232261cfb4eafdca59b96746ad05ca2808b4e8f1b506af693727c_3", "is_ignored": false, "lines": "      memcpy(local_20,(void *)((int)param_1 + ((int)param_2 >> 1)),4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 19, "offset": 406}, "start": {"col": 7, "line": 19, "offset": 400}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00412208_00412208.c", "start": {"col": 7, "line": 19, "offset": 400}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 70, "line": 19, "offset": 463}, "extra": {"engine_kind": "OSS", "fingerprint": "b21b51311246ef9dd635e327d69c515727f0ac9f89a42242e5203df0857b9979b574bcf34d84400aa3e75fe1854bfc0068cc46d0738277e5900ed664018a5b1d_0", "is_ignored": false, "lines": "      memcpy(local_20,(void *)((int)param_1 + ((int)param_2 >> 1)),4);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "local_20", "end": {"col": 22, "line": 19, "offset": 415}, "start": {"col": 14, "line": 19, "offset": 407}}, "$LEN": {"abstract_content": "4", "end": {"col": 69, "line": 19, "offset": 462}, "start": {"col": 68, "line": 19, "offset": 461}}, "$SRC": {"abstract_content": "(void*(int param_1+(int param_2>>1", "end": {"col": 65, "line": 19, "offset": 458}, "start": {"col": 23, "line": 19, "offset": 416}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00412208_00412208.c", "start": {"col": 7, "line": 19, "offset": 400}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 38, "line": 7, "offset": 98}, "extra": {"engine_kind": "OSS", "fingerprint": "b54a3557a8a05297f4fd33d63408f0333cb9e485b08471734e4f7f571bf150063e80d9041ab4597ce414712f442dd434355e49617dc0b790e9d1cbb03ab2b04b_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(0x18);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "undefined4*", "end": {"col": 25, "line": 7, "offset": 85}, "start": {"col": 13, "line": 7, "offset": 73}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 7, "offset": 92}, "start": {"col": 26, "line": 7, "offset": 86}}, "$RET": {"abstract_content": "puVar1", "end": {"col": 9, "line": 7, "offset": 69}, "start": {"col": 3, "line": 7, "offset": 63}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00412368_00412368.c", "start": {"col": 3, "line": 7, "offset": 63}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 7, "offset": 98}, "extra": {"engine_kind": "OSS", "fingerprint": "564919cfa2d6d6a341d34af3fddae5bda7f80915562a6eda7ed8b2119b6848be5dee793abe8177de7fd3d6446ac68811eec9672e7d7c15c6978a7dad495b44aa_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(0x18);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 7, "offset": 92}, "start": {"col": 26, "line": 7, "offset": 86}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00412368_00412368.c", "start": {"col": 26, "line": 7, "offset": 86}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 7, "offset": 98}, "extra": {"engine_kind": "OSS", "fingerprint": "b0d2cb19b7738f84e7b94d8e51b075b49abcc18be071de8b41740efc5deb2dd069681129f6ee8926f2253fedbe798d37c3a856782cd7af4f9cb0781be0a4ee55_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(0x18);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x18", "end": {"col": 37, "line": 7, "offset": 97}, "start": {"col": 33, "line": 7, "offset": 93}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00412368_00412368.c", "start": {"col": 26, "line": 7, "offset": 86}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-format-string-bugs", "end": {"col": 55, "line": 42, "offset": 1057}, "extra": {"engine_kind": "OSS", "fingerprint": "b761158d1b61fb45b5093c5cba96ba596e574a8388551a1988c2cf60ddef16fd563e7aef1176aa2b10a4f67d12b27c8a9d864fa58896a3bf893e49be40f6a009_0", "is_ignored": false, "lines": "      sprintf(local_40,local_2c,uVar4,local_34,puVar6);", "message": "The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/134", "https://julianor.tripod.com/bc/formatstring-1.2.pdf", "http://phrack.org/issues/70/13.html#article", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041311c_0041311c.c", "start": {"col": 7, "line": 42, "offset": 1009}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 55, "line": 42, "offset": 1057}, "extra": {"engine_kind": "OSS", "fingerprint": "c82d5b7fb0353d80e3ca1b02c56c6731380529d1a378a3137636c456a3dab0eb8b919f46a7f60d0779fab8c4f320b9a9f366ca34e51138edb2527e6c76ee00a0_0", "is_ignored": false, "lines": "      sprintf(local_40,local_2c,uVar4,local_34,puVar6);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "local_2c", "end": {"col": 9, "line": 1, "offset": 8}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_40", "end": {"col": 23, "line": 42, "offset": 1025}, "start": {"col": 15, "line": 42, "offset": 1017}}, "$FMT": {"abstract_content": "local_2c", "end": {"col": 32, "line": 42, "offset": 1034}, "start": {"col": 24, "line": 42, "offset": 1026}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041311c_0041311c.c", "start": {"col": 7, "line": 42, "offset": 1009}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 55, "line": 42, "offset": 1057}, "extra": {"engine_kind": "OSS", "fingerprint": "fbfb59c7e90088b63c7fa747cde35ba34de368f77d2480a31674efef6a9a625b7515c3d640e02a5ae0b2350b57c9b917891d6b4c5e93f590b493a26aab20face_0", "is_ignored": false, "lines": "      sprintf(local_40,local_2c,uVar4,local_34,puVar6);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 14, "line": 42, "offset": 1016}, "start": {"col": 7, "line": 42, "offset": 1009}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041311c_0041311c.c", "start": {"col": 7, "line": 42, "offset": 1009}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 61, "line": 17, "offset": 426}, "extra": {"engine_kind": "OSS", "fingerprint": "bfcb4ebafe417c796ae071078db058134042a647e3d9627d058339407898422b69dd4e5fe916e807c16890914e2dfc2e5342d164a19674c601131fd582b2e275_0", "is_ignored": false, "lines": "         (iVar2 = memcmp(ppiVar5[3],param_2,(size_t)param_3), iVar2 == 0)) {", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar2", "end": {"col": 16, "line": 17, "offset": 381}, "start": {"col": 11, "line": 17, "offset": 376}}, "$UNSIGNED": {"abstract_content": "(size_t param_3", "end": {"col": 60, "line": 17, "offset": 425}, "start": {"col": 45, "line": 17, "offset": 410}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00413714_00413714.c", "start": {"col": 11, "line": 17, "offset": 376}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 35, "line": 23, "offset": 614}, "extra": {"engine_kind": "OSS", "fingerprint": "6b5d651d0c5a826b5de4445ad76157cc5131684639b77b246047710dd6f7f21feaaba36173e601bb6a62e432be5891788ff8a1fdc51ffe23890d7c931566cc3f_0", "is_ignored": false, "lines": "      piVar3 = (int *)malloc(0x18);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "int*", "end": {"col": 22, "line": 23, "offset": 601}, "start": {"col": 17, "line": 23, "offset": 596}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 29, "line": 23, "offset": 608}, "start": {"col": 23, "line": 23, "offset": 602}}, "$RET": {"abstract_content": "piVar3", "end": {"col": 13, "line": 23, "offset": 592}, "start": {"col": 7, "line": 23, "offset": 586}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00413714_00413714.c", "start": {"col": 7, "line": 23, "offset": 586}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 23, "offset": 614}, "extra": {"engine_kind": "OSS", "fingerprint": "b8e8a62a1b94e744b6d7983488921f9f8a74cfd5ac896dd6f882e408a557f907cc1f071c773d6eca937bc8723f123f305f2e80612ac1303797085607bcd37f74_0", "is_ignored": false, "lines": "      piVar3 = (int *)malloc(0x18);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 29, "line": 23, "offset": 608}, "start": {"col": 23, "line": 23, "offset": 602}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00413714_00413714.c", "start": {"col": 23, "line": 23, "offset": 602}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 35, "line": 23, "offset": 614}, "extra": {"engine_kind": "OSS", "fingerprint": "cd41dfb8bfbc2907b77de7336c5907196978a420c2606e63a0a1fea88f5be5668d37ba693caed37183b292f8d3d0c4da3405af21caea8d5d7ef68410c019e7ba_0", "is_ignored": false, "lines": "      piVar3 = (int *)malloc(0x18);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x18", "end": {"col": 34, "line": 23, "offset": 613}, "start": {"col": 30, "line": 23, "offset": 609}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00413714_00413714.c", "start": {"col": 23, "line": 23, "offset": 602}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 39, "line": 34, "offset": 899}, "extra": {"engine_kind": "OSS", "fingerprint": "5e71c7ef25ca2a3c329208ac907e4fa94fb43c4125226008e29c8834ecd795ca0aa96c9d939dd42ff70ba4060cdbd27136bc10b66a8b1e2d272601d799a2f0c7_0", "is_ignored": false, "lines": "      pvVar4 = malloc((size_t)param_3);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 22, "line": 34, "offset": 882}, "start": {"col": 16, "line": 34, "offset": 876}}, "$RET": {"abstract_content": "pvVar4", "end": {"col": 13, "line": 34, "offset": 873}, "start": {"col": 7, "line": 34, "offset": 867}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00413714_00413714.c", "start": {"col": 7, "line": 34, "offset": 867}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 34, "offset": 899}, "extra": {"engine_kind": "OSS", "fingerprint": "b8e8a62a1b94e744b6d7983488921f9f8a74cfd5ac896dd6f882e408a557f907cc1f071c773d6eca937bc8723f123f305f2e80612ac1303797085607bcd37f74_1", "is_ignored": false, "lines": "      pvVar4 = malloc((size_t)param_3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 22, "line": 34, "offset": 882}, "start": {"col": 16, "line": 34, "offset": 876}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00413714_00413714.c", "start": {"col": 16, "line": 34, "offset": 876}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 60, "line": 36, "offset": 991}, "extra": {"engine_kind": "OSS", "fingerprint": "21f9a22d2db8344ad82abcdd68f8f6a31f6b9cf6eed5eff88bdfb7253a1852a83fb6f21c121234a3708fc0356435712b8fdc22c7fe694d37c2ab817971dc4fa4_0", "is_ignored": false, "lines": "      memcpy((void *)(*ppiVar5)[3],param_2,(size_t)param_3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 36, "offset": 944}, "start": {"col": 7, "line": 36, "offset": 938}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00413714_00413714.c", "start": {"col": 7, "line": 36, "offset": 938}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-truncation", "end": {"col": 23, "line": 30, "offset": 490}, "extra": {"engine_kind": "OSS", "fingerprint": "596865e9a968c626797593fa4626cda11044ab8d955f41a30872fa779026030349b52174375ce0ddb47bf2d36b76236c3bf1f133e1de1b88667a9a8c8d896750_0", "is_ignored": false, "lines": "  local_27 = pcVar5[2];", "message": "Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/197", "https://cwe.mitre.org/data/definitions/681", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms"]}, "metavars": {"$LARGE": {"abstract_content": "2", "end": {"col": 22, "line": 30, "offset": 489}, "start": {"col": 21, "line": 30, "offset": 488}}, "$NARROW": {"abstract_content": "local_27", "end": {"col": 11, "line": 30, "offset": 478}, "start": {"col": 3, "line": 30, "offset": 470}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00413d30_00413d30.c", "start": {"col": 3, "line": 30, "offset": 470}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-truncation", "end": {"col": 23, "line": 31, "offset": 514}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8e54d3d81689182b6fdf3fe691cb3b662a5e26221bdc46247e28ab559101a32bdfd82b65dca263c0c3434791068bdc4654c5aa1b34a0ed74cddbe27c93902_0", "is_ignored": false, "lines": "  local_28 = pcVar5[1];", "message": "Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/197", "https://cwe.mitre.org/data/definitions/681", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms"]}, "metavars": {"$LARGE": {"abstract_content": "1", "end": {"col": 22, "line": 31, "offset": 513}, "start": {"col": 21, "line": 31, "offset": 512}}, "$NARROW": {"abstract_content": "local_28", "end": {"col": 11, "line": 31, "offset": 502}, "start": {"col": 3, "line": 31, "offset": 494}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00413d30_00413d30.c", "start": {"col": 3, "line": 31, "offset": 494}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 23, "line": 12, "offset": 199}, "extra": {"engine_kind": "OSS", "fingerprint": "d02479540b9591eaf926583051ce0fdc2f6346ddb0d7cd3fc51b03fb32ca949709b06321f329e1a5a8cbbea67970e616488bf640f3ad06632f947687019ecd89_0", "is_ignored": false, "lines": "  __ptr = malloc(0x14);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 17, "line": 12, "offset": 193}, "start": {"col": 11, "line": 12, "offset": 187}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 12, "offset": 184}, "start": {"col": 3, "line": 12, "offset": 179}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00413f60_00413f60.c", "start": {"col": 3, "line": 12, "offset": 179}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 23, "line": 12, "offset": 199}, "extra": {"engine_kind": "OSS", "fingerprint": "75964789adbf3681b347e1156f9698301a283565c1999bd2c7b2550095e10f96049834268ce1825daed2f699c1960fd7630abef726ced861ea793ff2c08d8f03_0", "is_ignored": false, "lines": "  __ptr = malloc(0x14);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 17, "line": 12, "offset": 193}, "start": {"col": 11, "line": 12, "offset": 187}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00413f60_00413f60.c", "start": {"col": 11, "line": 12, "offset": 187}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 23, "line": 12, "offset": 199}, "extra": {"engine_kind": "OSS", "fingerprint": "f8f15fe6b325c24a3b13c1859437ba5b42dd38ab760a6e1aef320868cc4b80d74a831316cc5c84ec6932bc1fcb2ce7a0c602abf01be12f350d7eb9cb4be82ca1_0", "is_ignored": false, "lines": "  __ptr = malloc(0x14);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x14", "end": {"col": 22, "line": 12, "offset": 198}, "start": {"col": 18, "line": 12, "offset": 194}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00413f60_00413f60.c", "start": {"col": 11, "line": 12, "offset": 187}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 39, "line": 13, "offset": 239}, "extra": {"engine_kind": "OSS", "fingerprint": "50435e779843498c02bffbe48cfb9cea085434bb342db2ecc0a2c2ee61b3e978261c8948e2c8fca4353a749c52066418defaa4cb0d57e908b2f3bed0fdec78bd_0", "is_ignored": false, "lines": "  __nptr = (char *)malloc(param_2 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 19, "line": 13, "offset": 219}, "start": {"col": 13, "line": 13, "offset": 213}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 13, "offset": 226}, "start": {"col": 20, "line": 13, "offset": 220}}, "$RET": {"abstract_content": "__nptr", "end": {"col": 9, "line": 13, "offset": 209}, "start": {"col": 3, "line": 13, "offset": 203}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00413f60_00413f60.c", "start": {"col": 3, "line": 13, "offset": 203}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 39, "line": 13, "offset": 239}, "extra": {"engine_kind": "OSS", "fingerprint": "91b98dd3ee45c724ec79cbc9e47f063dbfe5d214d6ac810a91b7e0c93251ce4a0cd25194af743aa069883f82cd217d36f97cff6df6cc925d0b272a37211d71b4_0", "is_ignored": false, "lines": "  __nptr = (char *)malloc(param_2 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 13, "offset": 226}, "start": {"col": 20, "line": 13, "offset": 220}}, "$X": {"abstract_content": "param_2", "end": {"col": 34, "line": 13, "offset": 234}, "start": {"col": 27, "line": 13, "offset": 227}}, "$Y": {"abstract_content": "1", "end": {"col": 38, "line": 13, "offset": 238}, "start": {"col": 37, "line": 13, "offset": 237}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00413f60_00413f60.c", "start": {"col": 20, "line": 13, "offset": 220}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 13, "offset": 239}, "extra": {"engine_kind": "OSS", "fingerprint": "75964789adbf3681b347e1156f9698301a283565c1999bd2c7b2550095e10f96049834268ce1825daed2f699c1960fd7630abef726ced861ea793ff2c08d8f03_1", "is_ignored": false, "lines": "  __nptr = (char *)malloc(param_2 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 13, "offset": 226}, "start": {"col": 20, "line": 13, "offset": 220}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00413f60_00413f60.c", "start": {"col": 20, "line": 13, "offset": 220}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 14, "offset": 273}, "extra": {"engine_kind": "OSS", "fingerprint": "33c30ef8445230dbd14bd3431d16eb853ca91aba5cf34701667ed7f36364302aa7d9a7482fcb21b2700bdfdcba29ec0235ab92ed961703dfae5e30b5eed105ec_0", "is_ignored": false, "lines": "  memcpy(__nptr,param_1,param_2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 14, "offset": 249}, "start": {"col": 3, "line": 14, "offset": 243}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00413f60_00413f60.c", "start": {"col": 3, "line": 14, "offset": 243}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 80, "line": 5, "offset": 121}, "extra": {"engine_kind": "OSS", "fingerprint": "98d330a7216037fc70dc5769499e132028c3dc5773bc47a57399691559b98382d06e3012e169c3bd3541c3f8dd55114f41a69892cfc10b08cc93dc4e8a806af9_0", "is_ignored": false, "lines": "  sprintf(WAN_Service,\"urn:schemas-upnp-org:service:WAN%sConnection:1\",param_1);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"urn:schemas-upnp-org:service:WAN%sConnection:1\"", "end": {"col": 49, "line": 1, "offset": 48}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "WAN_Service", "end": {"col": 22, "line": 5, "offset": 63}, "start": {"col": 11, "line": 5, "offset": 52}}, "$FMT": {"abstract_content": "\"urn:schemas-upnp-org:service:WAN%sConnection:1\"", "end": {"col": 71, "line": 5, "offset": 112}, "start": {"col": 23, "line": 5, "offset": 64}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00414b34_00414b34.c", "start": {"col": 3, "line": 5, "offset": 44}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 80, "line": 5, "offset": 121}, "extra": {"engine_kind": "OSS", "fingerprint": "1bfeef9be8f1819dacd79ef3a4e657ebc8bc58392d377a9f721369168001d928b32bfcf296a3fe5ce496d1ce20b2e1a0637841ee2af41ce45efe59de8c87def3_0", "is_ignored": false, "lines": "  sprintf(WAN_Service,\"urn:schemas-upnp-org:service:WAN%sConnection:1\",param_1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 10, "line": 5, "offset": 51}, "start": {"col": 3, "line": 5, "offset": 44}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00414b34_00414b34.c", "start": {"col": 3, "line": 5, "offset": 44}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 42, "line": 26, "offset": 570}, "extra": {"engine_kind": "OSS", "fingerprint": "b29205c85d00ada51102d9b5d101ff1ccb289666e546dc5bfc6a632d7d754d7807684f5a2d5d301be3aadda95380f2e690486fb3850e17eb998949353743327a_0", "is_ignored": false, "lines": "  __stream = fopen(\"/proc/net/route\",\"r\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "fopen", "end": {"col": 19, "line": 26, "offset": 547}, "start": {"col": 14, "line": 26, "offset": 542}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00414bc8_00414bc8.c", "start": {"col": 14, "line": 26, "offset": 542}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 29, "offset": 658}, "extra": {"engine_kind": "OSS", "fingerprint": "93c4d182f2de0059239d717c95d9d0f1ce56639d1cddfbf1592f17a16ab9f80f579d78bd2c2c1449a9bed2050ae423e823d78f7cdecf2ae9672d7a2318a68236_0", "is_ignored": false, "lines": "  fgets(acStack_144,0x100,__stream);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$1": {"abstract_content": "s", "end": {"col": 5, "line": 2, "offset": 5}, "start": {"col": 4, "line": 2, "offset": 4}}, "$FUN": {"abstract_content": "fgets", "end": {"col": 8, "line": 29, "offset": 630}, "start": {"col": 3, "line": 29, "offset": 625}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00414bc8_00414bc8.c", "start": {"col": 3, "line": 29, "offset": 625}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 35, "offset": 828}, "extra": {"engine_kind": "OSS", "fingerprint": "93c4d182f2de0059239d717c95d9d0f1ce56639d1cddfbf1592f17a16ab9f80f579d78bd2c2c1449a9bed2050ae423e823d78f7cdecf2ae9672d7a2318a68236_1", "is_ignored": false, "lines": "    pcVar1 = fgets(acStack_144,0x100,__stream);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$1": {"abstract_content": "s", "end": {"col": 5, "line": 2, "offset": 5}, "start": {"col": 4, "line": 2, "offset": 4}}, "$FUN": {"abstract_content": "fgets", "end": {"col": 19, "line": 35, "offset": 800}, "start": {"col": 14, "line": 35, "offset": 795}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00414bc8_00414bc8.c", "start": {"col": 14, "line": 35, "offset": 795}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-scanf-etc", "end": {"col": 84, "line": 38, "offset": 1044}, "extra": {"engine_kind": "OSS", "fingerprint": "0964897d2875dd83a1fcf63f21b409fc725e6dbbb2f9ba44f23ebe79ed370760b1502121be8b4421ce664b58b93a4df7d09f98510c6af205299768041870038e_0", "is_ignored": false, "lines": "    sscanf(acStack_144,\"%s%lx%lx%X%d%d%d%lx%d%d%d\",local_40,local_3c,&local_158,auStack_178,\n           auStack_174,auStack_170,auStack_16c,local_38,local_34,local_30,local_2c);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%s%lx%lx%X%d%d%d%lx%d%d%d\"", "end": {"col": 28, "line": 1, "offset": 27}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "acStack_144", "end": {"col": 23, "line": 37, "offset": 890}, "start": {"col": 12, "line": 37, "offset": 879}}, "$FMT": {"abstract_content": "\"%s%lx%lx%X%d%d%d%lx%d%d%d\"", "end": {"col": 51, "line": 37, "offset": 918}, "start": {"col": 24, "line": 37, "offset": 891}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00414bc8_00414bc8.c", "start": {"col": 5, "line": 37, "offset": 872}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 84, "line": 38, "offset": 1044}, "extra": {"engine_kind": "OSS", "fingerprint": "2c42b6da68825d48ee29e777e8a991f4ac0db15fd05fa1def129a5ed8f1771f543a57d2cd6008d368e632f5c1f96d14817fb2a24bb7454cb2c1efd10be56c1fc_0", "is_ignored": false, "lines": "    sscanf(acStack_144,\"%s%lx%lx%X%d%d%d%lx%d%d%d\",local_40,local_3c,&local_158,auStack_178,\n           auStack_174,auStack_170,auStack_16c,local_38,local_34,local_30,local_2c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 11, "line": 37, "offset": 878}, "start": {"col": 5, "line": 37, "offset": 872}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00414bc8_00414bc8.c", "start": {"col": 5, "line": 37, "offset": 872}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc", "end": {"col": 84, "line": 38, "offset": 1044}, "extra": {"engine_kind": "OSS", "fingerprint": "9bf178a6f8eb480952a769667569306c777aae955e963146cd97be3ffc3b4d695675859fc1e9a58593a81a6549f4e6119f4db28d7af35965a6062907c5fd6c1a_0", "is_ignored": false, "lines": "    sscanf(acStack_144,\"%s%lx%lx%X%d%d%d%lx%d%d%d\",local_40,local_3c,&local_158,auStack_178,\n           auStack_174,auStack_170,auStack_16c,local_38,local_34,local_30,local_2c);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 11, "line": 37, "offset": 878}, "start": {"col": 5, "line": 37, "offset": 872}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00414bc8_00414bc8.c", "start": {"col": 5, "line": 37, "offset": 872}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 41, "offset": 1205}, "extra": {"engine_kind": "OSS", "fingerprint": "0272ce129bae3510c52711e4df47cd933bcd8e2cedf6a8fdf564bd3a50d59d4a07a7fd7985202e448d7ec29d1cbf6df2e9ab2555b8c2040d9b336f5186aac549_0", "is_ignored": false, "lines": "      sprintf(param_1,\"%d.%d.%d.%d\",local_158 >> 0x18,local_158 >> 0x10 & 0xff,local_158 >> 8 & 0xff\n              ,local_158 & 0xff);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 14, "line": 40, "offset": 1085}, "start": {"col": 7, "line": 40, "offset": 1078}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_00414bc8_00414bc8.c", "start": {"col": 7, "line": 40, "offset": 1078}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 34, "line": 42, "offset": 900}, "extra": {"engine_kind": "OSS", "fingerprint": "ab72b6e629c75021698a62fb93f49ba6f22700fbb6eb78774e05d95aa5e36ec42e22cd5869dbdfcc45ebca018a835ed2ade94d1106d3470bc2ca175a90fa411c_0", "is_ignored": false, "lines": "  strcpy(ServiceType,WAN_Service);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041527c_0041527c.c", "start": {"col": 3, "line": 42, "offset": 869}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 34, "line": 42, "offset": 900}, "extra": {"engine_kind": "OSS", "fingerprint": "59d3d00e2a5b693fc1faa5b884b2fe7a125c361d37036fc30f3053e48ba42bba868c44bf5a332532ac17b0548c2decb04fc5b348dab38d07c6c28a2e51b102a5_0", "is_ignored": false, "lines": "  strcpy(ServiceType,WAN_Service);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 9, "line": 42, "offset": 875}, "start": {"col": 3, "line": 42, "offset": 869}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041527c_0041527c.c", "start": {"col": 3, "line": 42, "offset": 869}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 36, "line": 76, "offset": 2275}, "extra": {"engine_kind": "OSS", "fingerprint": "7d256cdc1c86ce7114f5e0f975ecc687077f6a7de388f880cac2f9cb3abe1e6b17b955dcacaf4f03b5b015d6300eb7a88e7da695a56016468ecef02ed6f42e95_0", "is_ignored": false, "lines": "        __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 24, "line": 76, "offset": 2263}, "start": {"col": 18, "line": 76, "offset": 2257}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 76, "offset": 2270}, "start": {"col": 25, "line": 76, "offset": 2264}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 14, "line": 76, "offset": 2253}, "start": {"col": 9, "line": 76, "offset": 2248}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041527c_0041527c.c", "start": {"col": 9, "line": 76, "offset": 2248}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 76, "offset": 2275}, "extra": {"engine_kind": "OSS", "fingerprint": "dbc641862c99cd592c2abd892bfea3c9cbaafd8d296765aa92a297469410c56df95c36bbda2e9b596f3699cc8563843c6e186a1fe90755e8d805823498238a1c_0", "is_ignored": false, "lines": "        __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 76, "offset": 2270}, "start": {"col": 25, "line": 76, "offset": 2264}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041527c_0041527c.c", "start": {"col": 25, "line": 76, "offset": 2264}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 76, "offset": 2275}, "extra": {"engine_kind": "OSS", "fingerprint": "4beb166dbb5b03391c567b5ab87d5398d9ea2a49baa2ae954eda016320311cf85d64673f57fc4da4b60ad32cdfce1abc26712c068af9c30cf0e30ea9332c5f49_0", "is_ignored": false, "lines": "        __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 35, "line": 76, "offset": 2274}, "start": {"col": 32, "line": 76, "offset": 2271}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041527c_0041527c.c", "start": {"col": 25, "line": 76, "offset": 2264}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 46, "line": 79, "offset": 2397}, "extra": {"engine_kind": "OSS", "fingerprint": "0aef183641b929b120c801010a1c35a879d6733d0ada856ea719ee9d2dd08daada827e3996714b862b4c009fb8d2cf71c2c43b016a7fd0560ccf3a317ebf5b9d_0", "is_ignored": false, "lines": "          __s = (char *)malloc(sVar2 + 0x110);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 24, "line": 79, "offset": 2375}, "start": {"col": 18, "line": 79, "offset": 2369}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 79, "offset": 2382}, "start": {"col": 25, "line": 79, "offset": 2376}}, "$RET": {"abstract_content": "__s", "end": {"col": 14, "line": 79, "offset": 2365}, "start": {"col": 11, "line": 79, "offset": 2362}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041527c_0041527c.c", "start": {"col": 11, "line": 79, "offset": 2362}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 46, "line": 79, "offset": 2397}, "extra": {"engine_kind": "OSS", "fingerprint": "67774a9e46d1ce5a65a423e178ce75f40558adc4fafb82c05e0fd52f26535ff113e4c1b5ade5e0ffb1dc19a4ced0011cd98b08e525d47fe1a5db9eab0220af44_0", "is_ignored": false, "lines": "          __s = (char *)malloc(sVar2 + 0x110);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 79, "offset": 2382}, "start": {"col": 25, "line": 79, "offset": 2376}}, "$X": {"abstract_content": "sVar2", "end": {"col": 37, "line": 79, "offset": 2388}, "start": {"col": 32, "line": 79, "offset": 2383}}, "$Y": {"abstract_content": "0x110", "end": {"col": 45, "line": 79, "offset": 2396}, "start": {"col": 40, "line": 79, "offset": 2391}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041527c_0041527c.c", "start": {"col": 25, "line": 79, "offset": 2376}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 46, "line": 79, "offset": 2397}, "extra": {"engine_kind": "OSS", "fingerprint": "dbc641862c99cd592c2abd892bfea3c9cbaafd8d296765aa92a297469410c56df95c36bbda2e9b596f3699cc8563843c6e186a1fe90755e8d805823498238a1c_1", "is_ignored": false, "lines": "          __s = (char *)malloc(sVar2 + 0x110);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 79, "offset": 2382}, "start": {"col": 25, "line": 79, "offset": 2376}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041527c_0041527c.c", "start": {"col": 25, "line": 79, "offset": 2376}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 63, "line": 82, "offset": 2769}, "extra": {"engine_kind": "OSS", "fingerprint": "7dc3e50bce7ec7065eb8e330e7cfbea311cac7bd06e3d07f96ea6ad6d9e6891fce334da372313f92bb8ee9ec3f1db77418f774c3f6801034c857e52b3b0562cb_0", "is_ignored": false, "lines": "          iVar5 = sprintf(__s,\"%sGetExternalIPAddress xmlns:u=\\\"%s\\\"></u:GetExternalIPAddress%s\",\n                          \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                          ,*ppcVar7,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sGetExternalIPAddress xmlns:u=\\\"%s\\\"></u:GetExternalIPAddress%s\"", "end": {"col": 67, "line": 1, "offset": 66}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 30, "line": 80, "offset": 2428}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar2+0x110)", "svalue_end": {"col": 46, "line": 79, "offset": 2397}, "svalue_start": {"col": 17, "line": 79, "offset": 2368}}, "start": {"col": 27, "line": 80, "offset": 2425}}, "$FMT": {"abstract_content": "\"%sGetExternalIPAddress xmlns:u=\\\"%s\\\"></u:GetExternalIPAddress%s\"", "end": {"col": 97, "line": 80, "offset": 2495}, "start": {"col": 31, "line": 80, "offset": 2429}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041527c_0041527c.c", "start": {"col": 19, "line": 80, "offset": 2417}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 63, "line": 82, "offset": 2769}, "extra": {"engine_kind": "OSS", "fingerprint": "b7a4a7598eb8d7ce275929519a96ee92b151f29ffa5d4402d198883430823e13d8898b90b6362d1a69986a5046ce80d539ac715e979a037f0b88848cf063b1bc_0", "is_ignored": false, "lines": "          iVar5 = sprintf(__s,\"%sGetExternalIPAddress xmlns:u=\\\"%s\\\"></u:GetExternalIPAddress%s\",\n                          \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                          ,*ppcVar7,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 26, "line": 80, "offset": 2424}, "start": {"col": 19, "line": 80, "offset": 2417}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041527c_0041527c.c", "start": {"col": 19, "line": 80, "offset": 2417}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 64, "line": 88, "offset": 3053}, "extra": {"engine_kind": "OSS", "fingerprint": "bb41c73d1500b55d501f3cfe26c378ac98bba19d0d9073afea5008ba3c5c491f02382ac2b06cc058b44ee6a3a805f278cb91aed5dd70ef0aa658641b69d4bb51_0", "is_ignored": false, "lines": "          __s_00 = (char *)malloc(sVar2 + sVar3 + 0xad + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 27, "line": 88, "offset": 3016}, "start": {"col": 21, "line": 88, "offset": 3010}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 34, "line": 88, "offset": 3023}, "start": {"col": 28, "line": 88, "offset": 3017}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 17, "line": 88, "offset": 3006}, "start": {"col": 11, "line": 88, "offset": 3000}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041527c_0041527c.c", "start": {"col": 11, "line": 88, "offset": 3000}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 64, "line": 88, "offset": 3053}, "extra": {"engine_kind": "OSS", "fingerprint": "d00a2366eec07eac2084d97ddf978c32bd397d1d62d63361060f329ce62d614e289000493794b8c39afc2f87468e9643b59ee84298d8ad3fc97442acb79696ad_0", "is_ignored": false, "lines": "          __s_00 = (char *)malloc(sVar2 + sVar3 + 0xad + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 34, "line": 88, "offset": 3023}, "start": {"col": 28, "line": 88, "offset": 3017}}, "$X": {"abstract_content": "sVar2+sVar3+0xad", "end": {"col": 55, "line": 88, "offset": 3044}, "start": {"col": 35, "line": 88, "offset": 3024}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 63, "line": 88, "offset": 3052}, "start": {"col": 58, "line": 88, "offset": 3047}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041527c_0041527c.c", "start": {"col": 28, "line": 88, "offset": 3017}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 64, "line": 88, "offset": 3053}, "extra": {"engine_kind": "OSS", "fingerprint": "dbc641862c99cd592c2abd892bfea3c9cbaafd8d296765aa92a297469410c56df95c36bbda2e9b596f3699cc8563843c6e186a1fe90755e8d805823498238a1c_2", "is_ignored": false, "lines": "          __s_00 = (char *)malloc(sVar2 + sVar3 + 0xad + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 34, "line": 88, "offset": 3023}, "start": {"col": 28, "line": 88, "offset": 3017}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041527c_0041527c.c", "start": {"col": 28, "line": 88, "offset": 3017}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 59, "line": 92, "offset": 3434}, "extra": {"engine_kind": "OSS", "fingerprint": "c7ec8e2551148d5e028ce0c6de3fe410ddd825428e9d811e908aa9dccd12f22724e9f7054b8295c291bb138fd1583f9f6b2b190a64b7592b245dfd472510a4af_0", "is_ignored": false, "lines": "          local_30 = sprintf(__s_00,\n                             \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                             ,pcStack_48,pcStack_4c,(uint)auStack_50[0],*ppcVar7,\n                             \"GetExternalIPAddress\",iVar5);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 36, "line": 89, "offset": 3090}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar2+sVar3+0xad+sVar4)", "svalue_end": {"col": 64, "line": 88, "offset": 3053}, "svalue_start": {"col": 20, "line": 88, "offset": 3009}}, "start": {"col": 30, "line": 89, "offset": 3084}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 202, "line": 90, "offset": 3293}, "start": {"col": 30, "line": 90, "offset": 3121}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041527c_0041527c.c", "start": {"col": 22, "line": 89, "offset": 3076}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 59, "line": 92, "offset": 3434}, "extra": {"engine_kind": "OSS", "fingerprint": "b7a4a7598eb8d7ce275929519a96ee92b151f29ffa5d4402d198883430823e13d8898b90b6362d1a69986a5046ce80d539ac715e979a037f0b88848cf063b1bc_1", "is_ignored": false, "lines": "          local_30 = sprintf(__s_00,\n                             \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                             ,pcStack_48,pcStack_4c,(uint)auStack_50[0],*ppcVar7,\n                             \"GetExternalIPAddress\",iVar5);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 29, "line": 89, "offset": 3083}, "start": {"col": 22, "line": 89, "offset": 3076}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/FUN_0041527c_0041527c.c", "start": {"col": 22, "line": 89, "offset": 3076}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 34, "line": 9, "offset": 179}, "extra": {"engine_kind": "OSS", "fingerprint": "d04c3c86a21f248fc65d199e01fe55c9725bafdb3c81e25501522cc628096a9378ca5364359233bb89a10d5d3420a1af2fa21ab38476aecbd808f225e4854096_0", "is_ignored": false, "lines": "  ppvVar1 = (void **)malloc(0x18);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "void**", "end": {"col": 21, "line": 9, "offset": 166}, "start": {"col": 14, "line": 9, "offset": 159}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 9, "offset": 173}, "start": {"col": 22, "line": 9, "offset": 167}}, "$RET": {"abstract_content": "ppvVar1", "end": {"col": 10, "line": 9, "offset": 155}, "start": {"col": 3, "line": 9, "offset": 148}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddHeaderLine_00411c28.c", "start": {"col": 3, "line": 9, "offset": 148}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 34, "line": 9, "offset": 179}, "extra": {"engine_kind": "OSS", "fingerprint": "c7a71d04b81b9daca9fc287cb5ca9051edee792d63e94b2add0b43f4b9c2e24b9c8ac1d4988575f7e31d2451da6fb52a420a7ada32cc4174a833cfbe4bceb625_0", "is_ignored": false, "lines": "  ppvVar1 = (void **)malloc(0x18);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 9, "offset": 173}, "start": {"col": 22, "line": 9, "offset": 167}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddHeaderLine_00411c28.c", "start": {"col": 22, "line": 9, "offset": 167}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 34, "line": 9, "offset": 179}, "extra": {"engine_kind": "OSS", "fingerprint": "f7067fe81ddaeb7935909c2bf03c5cd85f96dafc2deebb250cdcd3e94251a56f44a7fc475968dab949efae1e122a86ff8699ff18dfab9a13909e683ab6522fd5_0", "is_ignored": false, "lines": "  ppvVar1 = (void **)malloc(0x18);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x18", "end": {"col": 33, "line": 9, "offset": 178}, "start": {"col": 29, "line": 9, "offset": 174}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddHeaderLine_00411c28.c", "start": {"col": 22, "line": 9, "offset": 167}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 36, "line": 11, "offset": 251}, "extra": {"engine_kind": "OSS", "fingerprint": "43e34943a035237c37bbf0a0f14fadea35c42237d775af81ccf186bb55baad5c377f1bf026c83c955840384f3c8c73f7d12c45e01fc5b0bba0bfe6892b21df56_0", "is_ignored": false, "lines": "  pvVar2 = malloc((int)param_3 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 11, "offset": 233}, "start": {"col": 12, "line": 11, "offset": 227}}, "$RET": {"abstract_content": "pvVar2", "end": {"col": 9, "line": 11, "offset": 224}, "start": {"col": 3, "line": 11, "offset": 218}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddHeaderLine_00411c28.c", "start": {"col": 3, "line": 11, "offset": 218}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 36, "line": 11, "offset": 251}, "extra": {"engine_kind": "OSS", "fingerprint": "c65c6599f05657ad34c7faa3700070e6e58182dc69b138153e61328d414f7789cb61ded6b2aba92c6eecc4a3f5e84f1e71a57e83fe93dd07e2b27447b3c7c317_0", "is_ignored": false, "lines": "  pvVar2 = malloc((int)param_3 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 11, "offset": 233}, "start": {"col": 12, "line": 11, "offset": 227}}, "$X": {"abstract_content": "(int param_3", "end": {"col": 31, "line": 11, "offset": 246}, "start": {"col": 19, "line": 11, "offset": 234}}, "$Y": {"abstract_content": "1", "end": {"col": 35, "line": 11, "offset": 250}, "start": {"col": 34, "line": 11, "offset": 249}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddHeaderLine_00411c28.c", "start": {"col": 12, "line": 11, "offset": 227}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 11, "offset": 251}, "extra": {"engine_kind": "OSS", "fingerprint": "c7a71d04b81b9daca9fc287cb5ca9051edee792d63e94b2add0b43f4b9c2e24b9c8ac1d4988575f7e31d2451da6fb52a420a7ada32cc4174a833cfbe4bceb625_1", "is_ignored": false, "lines": "  pvVar2 = malloc((int)param_3 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 11, "offset": 233}, "start": {"col": 12, "line": 11, "offset": 227}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddHeaderLine_00411c28.c", "start": {"col": 12, "line": 11, "offset": 227}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 11, "offset": 251}, "extra": {"engine_kind": "OSS", "fingerprint": "b077a20d8fd1a2d8c02b78ab8a99282afb7734e8f14dbf47da35d53a60b6653eb8ec8cc836aa4d3bc96a7ddd234f726dd7343d819b72a0a5ce173fd7c02f9723_0", "is_ignored": false, "lines": "  pvVar2 = malloc((int)param_3 + 1);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "(int param_3+1", "end": {"col": 35, "line": 11, "offset": 250}, "start": {"col": 19, "line": 11, "offset": 234}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddHeaderLine_00411c28.c", "start": {"col": 12, "line": 11, "offset": 227}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 13, "offset": 314}, "extra": {"engine_kind": "OSS", "fingerprint": "fcdad514b4de7929e480b38e1b6d87137eba1ff716882b5e7be48fbcaa9a571bfcbefdf095afa91b251ca34d826f52462cef637660e75145cfada83a3d596968_0", "is_ignored": false, "lines": "  memcpy(pvVar2,param_2,(size_t)param_3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 13, "offset": 282}, "start": {"col": 3, "line": 13, "offset": 276}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddHeaderLine_00411c28.c", "start": {"col": 3, "line": 13, "offset": 276}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 36, "line": 16, "offset": 427}, "extra": {"engine_kind": "OSS", "fingerprint": "43e34943a035237c37bbf0a0f14fadea35c42237d775af81ccf186bb55baad5c377f1bf026c83c955840384f3c8c73f7d12c45e01fc5b0bba0bfe6892b21df56_1", "is_ignored": false, "lines": "  pvVar2 = malloc((int)param_5 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 16, "offset": 409}, "start": {"col": 12, "line": 16, "offset": 403}}, "$RET": {"abstract_content": "pvVar2", "end": {"col": 9, "line": 16, "offset": 400}, "start": {"col": 3, "line": 16, "offset": 394}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddHeaderLine_00411c28.c", "start": {"col": 3, "line": 16, "offset": 394}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 36, "line": 16, "offset": 427}, "extra": {"engine_kind": "OSS", "fingerprint": "601153c6b7b92fadf823f6b8e76bc57b0baddc8ff3090ad685560234fd3ba40c2044cc4b6d70972668a0493a86bfa5adfe9fbf29c810503576acd2ceb458e670_0", "is_ignored": false, "lines": "  pvVar2 = malloc((int)param_5 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 16, "offset": 409}, "start": {"col": 12, "line": 16, "offset": 403}}, "$X": {"abstract_content": "(int param_5", "end": {"col": 31, "line": 16, "offset": 422}, "start": {"col": 19, "line": 16, "offset": 410}}, "$Y": {"abstract_content": "1", "end": {"col": 35, "line": 16, "offset": 426}, "start": {"col": 34, "line": 16, "offset": 425}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddHeaderLine_00411c28.c", "start": {"col": 12, "line": 16, "offset": 403}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 16, "offset": 427}, "extra": {"engine_kind": "OSS", "fingerprint": "c7a71d04b81b9daca9fc287cb5ca9051edee792d63e94b2add0b43f4b9c2e24b9c8ac1d4988575f7e31d2451da6fb52a420a7ada32cc4174a833cfbe4bceb625_2", "is_ignored": false, "lines": "  pvVar2 = malloc((int)param_5 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 16, "offset": 409}, "start": {"col": 12, "line": 16, "offset": 403}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddHeaderLine_00411c28.c", "start": {"col": 12, "line": 16, "offset": 403}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 16, "offset": 427}, "extra": {"engine_kind": "OSS", "fingerprint": "b536901ed33cd42d4eacea36a30bd96c9e6649229327dcd809c339f1d34df2f4d8271ec7338e6d535daa847b86c8ea76295ab8bec104fd49160da2ec914f2913_0", "is_ignored": false, "lines": "  pvVar2 = malloc((int)param_5 + 1);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "(int param_5+1", "end": {"col": 35, "line": 16, "offset": 426}, "start": {"col": 19, "line": 16, "offset": 410}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddHeaderLine_00411c28.c", "start": {"col": 12, "line": 16, "offset": 403}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 18, "offset": 492}, "extra": {"engine_kind": "OSS", "fingerprint": "fcdad514b4de7929e480b38e1b6d87137eba1ff716882b5e7be48fbcaa9a571bfcbefdf095afa91b251ca34d826f52462cef637660e75145cfada83a3d596968_1", "is_ignored": false, "lines": "  memcpy(pvVar2,param_4,(size_t)param_5);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 18, "offset": 460}, "start": {"col": 3, "line": 18, "offset": 454}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddHeaderLine_00411c28.c", "start": {"col": 3, "line": 18, "offset": 454}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 38, "line": 16, "offset": 404}, "extra": {"engine_kind": "OSS", "fingerprint": "2452d50ca230fdf1eb2c6a863d48c724751924f706192b53044c22e2032205a3945454d00cd670fa361725d34647f9056be2428e0eb5a48e8d7b2d3067a6248c_0", "is_ignored": false, "lines": "  puVar2 = (undefined4 *)malloc(0x34);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "undefined4*", "end": {"col": 25, "line": 16, "offset": 391}, "start": {"col": 13, "line": 16, "offset": 379}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 16, "offset": 398}, "start": {"col": 26, "line": 16, "offset": 392}}, "$RET": {"abstract_content": "puVar2", "end": {"col": 9, "line": 16, "offset": 375}, "start": {"col": 3, "line": 16, "offset": 369}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddRequest_DirectEx_0040cfe4.c", "start": {"col": 3, "line": 16, "offset": 369}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 16, "offset": 404}, "extra": {"engine_kind": "OSS", "fingerprint": "d65b6d0e14f952ab1ee57b0ae334d8f972a6434cade33c36edcc99d8163a9a7209ce868baa1e144a7ed49f6fb5b3b3b1c1748b59136a9012cb1c6f8ea8457aee_0", "is_ignored": false, "lines": "  puVar2 = (undefined4 *)malloc(0x34);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 16, "offset": 398}, "start": {"col": 26, "line": 16, "offset": 392}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddRequest_DirectEx_0040cfe4.c", "start": {"col": 26, "line": 16, "offset": 392}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 16, "offset": 404}, "extra": {"engine_kind": "OSS", "fingerprint": "ba05af34dc8bf397b0b33ec115c625491c8b1d9d9e24dbde5e8e3ae272ea971f16c730db9ee2bdcce3738f7fcc05ba6d8b9703f52fd2ee4258eb0f14cd1086b7_0", "is_ignored": false, "lines": "  puVar2 = (undefined4 *)malloc(0x34);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x34", "end": {"col": 37, "line": 16, "offset": 403}, "start": {"col": 33, "line": 16, "offset": 399}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddRequest_DirectEx_0040cfe4.c", "start": {"col": 26, "line": 16, "offset": 392}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 26, "line": 14, "offset": 309}, "extra": {"engine_kind": "OSS", "fingerprint": "379ac1edc68b8ce16321a2af4380a1896d059674a6c5c253947e7aaf7d1a2c7c3cac29860ddd25ba55c8cd44b3346769f7ceec312a6c532d1f85fdb0ab587331_0", "is_ignored": false, "lines": "    pvVar1 = malloc(0x10);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 20, "line": 14, "offset": 303}, "start": {"col": 14, "line": 14, "offset": 297}}, "$RET": {"abstract_content": "pvVar1", "end": {"col": 11, "line": 14, "offset": 294}, "start": {"col": 5, "line": 14, "offset": 288}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddToChain_00410e78.c", "start": {"col": 5, "line": 14, "offset": 288}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 26, "line": 14, "offset": 309}, "extra": {"engine_kind": "OSS", "fingerprint": "c619ecd1e2af62e29a2af1b299b08aab8adb98cc3a1a787cb202f1df58f102303415e9ec5db923a16c8de724740e22f7cd81c4dd2238d9f2e2cb82df07741806_0", "is_ignored": false, "lines": "    pvVar1 = malloc(0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 20, "line": 14, "offset": 303}, "start": {"col": 14, "line": 14, "offset": 297}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddToChain_00410e78.c", "start": {"col": 14, "line": 14, "offset": 297}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 26, "line": 14, "offset": 309}, "extra": {"engine_kind": "OSS", "fingerprint": "5b9fb7485dcc07220d60b72fc795da884b8b4b063e4f5b8eaf434aa6344036dc56b6625bef692e4da88479497cfe8d97dc749c6a9fb6001df429347b2d86274d_0", "is_ignored": false, "lines": "    pvVar1 = malloc(0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x10", "end": {"col": 25, "line": 14, "offset": 308}, "start": {"col": 21, "line": 14, "offset": 304}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibAddToChain_00410e78.c", "start": {"col": 14, "line": 14, "offset": 297}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 38, "line": 10, "offset": 142}, "extra": {"engine_kind": "OSS", "fingerprint": "43575d25d2bccbe6a5921ff67e1d5752d4bab83b096f51cfa1ef8da2d953ea5bf399cf5a86b80cfb1dbf7c1919f3a8def0dce56f60091bb3db7710b9db1cefb2_0", "is_ignored": false, "lines": "  puVar2 = (undefined4 *)malloc(0x10);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "undefined4*", "end": {"col": 25, "line": 10, "offset": 129}, "start": {"col": 13, "line": 10, "offset": 117}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 10, "offset": 136}, "start": {"col": 26, "line": 10, "offset": 130}}, "$RET": {"abstract_content": "puVar2", "end": {"col": 9, "line": 10, "offset": 113}, "start": {"col": 3, "line": 10, "offset": 107}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateChain_004146a4.c", "start": {"col": 3, "line": 10, "offset": 107}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 10, "offset": 142}, "extra": {"engine_kind": "OSS", "fingerprint": "b861886a9af92f0f5a65c5340329df74a1063f9b1e15c5cfd76b00c73bb1ef5194e2722a7fa07855a1130cafd07a20081a467e7303e7141ed3691b19f267ca0c_0", "is_ignored": false, "lines": "  puVar2 = (undefined4 *)malloc(0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 10, "offset": 136}, "start": {"col": 26, "line": 10, "offset": 130}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateChain_004146a4.c", "start": {"col": 26, "line": 10, "offset": 130}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 10, "offset": 142}, "extra": {"engine_kind": "OSS", "fingerprint": "e67d3a6fac0d857a9345757b7ee8879676c8d36b855ec64e803a9e91546ee9d094399533067c891c6e8491d4fbd27726e6032394ef71e6189bbf6a337c58abc8_0", "is_ignored": false, "lines": "  puVar2 = (undefined4 *)malloc(0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x10", "end": {"col": 37, "line": 10, "offset": 141}, "start": {"col": 33, "line": 10, "offset": 137}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateChain_004146a4.c", "start": {"col": 26, "line": 10, "offset": 130}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-rand-srand", "end": {"col": 16, "line": 12, "offset": 191}, "extra": {"engine_kind": "OSS", "fingerprint": "fec198209b35a3f6e3a27dc2ffe192481f529c14a346dfeb0f0c4e16a1562815c0b40c6e410b9142310cdd91f618500b88f857ff9e6146a724b02f8d0ea9cf29_0", "is_ignored": false, "lines": "  srand(__seed);", "message": "The rand() PRNG should not be used in applications intended to be  portable when good randomness is needed. Instead, the use of random()  is recommended.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/338", "https://cwe.mitre.org/data/definitions/330", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateChain_004146a4.c", "start": {"col": 3, "line": 12, "offset": 178}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 16, "line": 12, "offset": 191}, "extra": {"engine_kind": "OSS", "fingerprint": "5a3cedf47d8be15e9a28d9db9d49aacd40125e84c31d1f080359e576ce509d055bdba252a30e5e9c0cf17466108c46d49a3ea9ec83313ced5d79ba2f95b13290_0", "is_ignored": false, "lines": "  srand(__seed);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "srand", "end": {"col": 8, "line": 12, "offset": 183}, "start": {"col": 3, "line": 12, "offset": 178}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateChain_004146a4.c", "start": {"col": 3, "line": 12, "offset": 178}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 21, "line": 7, "offset": 75}, "extra": {"engine_kind": "OSS", "fingerprint": "9cac4d1b256b43466fec3fb50606cb0be4ef7e99fad50399ad252a4ed598193fc25de9585507ae77fa12398569d00b0995ecaa3ab2348914cde4905f7e266046_0", "is_ignored": false, "lines": "  __s = malloc(0x44);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 15, "line": 7, "offset": 69}, "start": {"col": 9, "line": 7, "offset": 63}}, "$RET": {"abstract_content": "__s", "end": {"col": 6, "line": 7, "offset": 60}, "start": {"col": 3, "line": 7, "offset": 57}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateEmptyPacket_004120e8.c", "start": {"col": 3, "line": 7, "offset": 57}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 21, "line": 7, "offset": 75}, "extra": {"engine_kind": "OSS", "fingerprint": "4c0b14e9c12e1f8638409a5a5869e0cd2ebe899c7318957b837384aa7d1402e9c4a624581681f3104638b1dca85e4a07fd0d839dd359b3146f1ab5c4caf1efd1_0", "is_ignored": false, "lines": "  __s = malloc(0x44);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 15, "line": 7, "offset": 69}, "start": {"col": 9, "line": 7, "offset": 63}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateEmptyPacket_004120e8.c", "start": {"col": 9, "line": 7, "offset": 63}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 21, "line": 7, "offset": 75}, "extra": {"engine_kind": "OSS", "fingerprint": "0dfeb9c9aa0ed5f0accdba1923121f50813f97807b0ddb8ad495cae0b41e6fa341018472ad53a0b635a2b087d603d40fdb11b70ab4da2eb727c789bd654cb519_0", "is_ignored": false, "lines": "  __s = malloc(0x44);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x44", "end": {"col": 20, "line": 7, "offset": 74}, "start": {"col": 16, "line": 7, "offset": 70}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateEmptyPacket_004120e8.c", "start": {"col": 9, "line": 7, "offset": 63}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 21, "line": 8, "offset": 97}, "extra": {"engine_kind": "OSS", "fingerprint": "58358d30d9456e933ea91db502c95ed2b32d6dea1e769ea9f18138e6a0e3f305196a9452b6a11436037d7ac3cf22344893075726c15e7e9f91f89331fa1dd128_0", "is_ignored": false, "lines": "  memset(__s,0,0x44);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 15, "line": 8, "offset": 91}, "start": {"col": 14, "line": 8, "offset": 90}}, "$DST": {"abstract_content": "__s", "end": {"col": 13, "line": 8, "offset": 89}, "propagated_value": {"svalue_abstract_content": "malloc(0x44)", "svalue_end": {"col": 21, "line": 7, "offset": 75}, "svalue_start": {"col": 9, "line": 7, "offset": 63}}, "start": {"col": 10, "line": 8, "offset": 86}}, "$LEN": {"abstract_content": "0x44", "end": {"col": 20, "line": 8, "offset": 96}, "start": {"col": 16, "line": 8, "offset": 92}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateEmptyPacket_004120e8.c", "start": {"col": 3, "line": 8, "offset": 79}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 34, "line": 13, "offset": 217}, "extra": {"engine_kind": "OSS", "fingerprint": "acde37388bb692f8dcbc3b45ee81cc75cb402b69bd98910dc18cfed0348e677f38e476c6f68b6be1988a70cddf2050bdbdf26f3a40c4bed849890ec7e6ad3902_0", "is_ignored": false, "lines": "  ppcVar2 = (code **)malloc(0x4c);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "code**", "end": {"col": 21, "line": 13, "offset": 204}, "start": {"col": 14, "line": 13, "offset": 197}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 13, "offset": 211}, "start": {"col": 22, "line": 13, "offset": 205}}, "$RET": {"abstract_content": "ppcVar2", "end": {"col": 10, "line": 13, "offset": 193}, "start": {"col": 3, "line": 13, "offset": 186}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateHTTPClientModule_0040cd70.c", "start": {"col": 3, "line": 13, "offset": 186}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 34, "line": 13, "offset": 217}, "extra": {"engine_kind": "OSS", "fingerprint": "9b5ef9e8f2518fc3c963ec2d1238a00a559086aecfd798c6e37444eb73c7d313e129ea50e6a5e09d26cb2053c8fa9d744effef6f37179e9af51cf39ab92ee94c_0", "is_ignored": false, "lines": "  ppcVar2 = (code **)malloc(0x4c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 13, "offset": 211}, "start": {"col": 22, "line": 13, "offset": 205}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateHTTPClientModule_0040cd70.c", "start": {"col": 22, "line": 13, "offset": 205}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 34, "line": 13, "offset": 217}, "extra": {"engine_kind": "OSS", "fingerprint": "adee00ab604c5a7a19191a3e687b3e9108c9214e035b7015d28cef516ff9b51ba718e545e8ce969d8c2970c7765424ec658282041215df95a8fe8e83e2840180_0", "is_ignored": false, "lines": "  ppcVar2 = (code **)malloc(0x4c);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x4c", "end": {"col": 33, "line": 13, "offset": 216}, "start": {"col": 29, "line": 13, "offset": 212}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateHTTPClientModule_0040cd70.c", "start": {"col": 22, "line": 13, "offset": 205}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-rand-srand", "end": {"col": 25, "line": 15, "offset": 292}, "extra": {"engine_kind": "OSS", "fingerprint": "d1d81ef9201fc8d573f8289d0f77a3c4f3f22b1a5de296c994daa077d0dff9fb5ed6e877c2b378253b9b677c85b170a9afffcbec8d0ad57aa085903efc723ff8_0", "is_ignored": false, "lines": "  srand(local_20.tv_sec);", "message": "The rand() PRNG should not be used in applications intended to be  portable when good randomness is needed. Instead, the use of random()  is recommended.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/338", "https://cwe.mitre.org/data/definitions/330", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateHTTPClientModule_0040cd70.c", "start": {"col": 3, "line": 15, "offset": 270}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 25, "line": 15, "offset": 292}, "extra": {"engine_kind": "OSS", "fingerprint": "c91e501562383f315e2063d28dfb3c1f921f5e6688fe1f02d28c3e16a73e5a71100324db75dcc35e55a707eccda6d70dd1c765e294c816b343a0c551e675dbb3_0", "is_ignored": false, "lines": "  srand(local_20.tv_sec);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "srand", "end": {"col": 8, "line": 15, "offset": 275}, "start": {"col": 3, "line": 15, "offset": 270}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateHTTPClientModule_0040cd70.c", "start": {"col": 3, "line": 15, "offset": 270}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 34, "line": 16, "offset": 327}, "extra": {"engine_kind": "OSS", "fingerprint": "aba01adb7b937736c263f31237c506d4334587ddfbbfff045b9c358702c27ce49532e51c32d3bef29eb17772853fec5363f284d3717c47628ef52d4c08c23090_0", "is_ignored": false, "lines": "  local_18 = (int)param_2 * 0x850;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "(int param_2", "end": {"col": 26, "line": 16, "offset": 319}, "start": {"col": 14, "line": 16, "offset": 307}}, "$UNSIGNED": {"abstract_content": "local_18", "end": {"col": 11, "line": 16, "offset": 304}, "start": {"col": 3, "line": 16, "offset": 296}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateHTTPClientModule_0040cd70.c", "start": {"col": 3, "line": 16, "offset": 296}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 36, "line": 21, "offset": 481}, "extra": {"engine_kind": "OSS", "fingerprint": "80f3636196ee297f8d47810bfac4678ef096d002bd6b011e974d1de2a46581443e5a1c180cacbc82b51da96f279e8aeecb87784de15c3aab03174be6a784bc00_0", "is_ignored": false, "lines": "  pcVar3 = (code *)malloc(local_18);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "code*", "end": {"col": 19, "line": 21, "offset": 464}, "start": {"col": 13, "line": 21, "offset": 458}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 21, "offset": 471}, "start": {"col": 20, "line": 21, "offset": 465}}, "$RET": {"abstract_content": "pcVar3", "end": {"col": 9, "line": 21, "offset": 454}, "start": {"col": 3, "line": 21, "offset": 448}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateHTTPClientModule_0040cd70.c", "start": {"col": 3, "line": 21, "offset": 448}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 36, "line": 21, "offset": 481}, "extra": {"engine_kind": "OSS", "fingerprint": "1b78cd96b041db9fca3dc3b18ae38af290e7d52b282bbc245dc3cf8f2c94b345bd185fc46009ec90380938c095fc2f9adcc75a667e4018c191bd066fdaa77f04_0", "is_ignored": false, "lines": "  pcVar3 = (code *)malloc(local_18);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 21, "offset": 471}, "start": {"col": 20, "line": 21, "offset": 465}}, "$N": {"abstract_content": "local_18", "end": {"col": 35, "line": 21, "offset": 480}, "propagated_value": {"svalue_abstract_content": "(int param_2*0x850", "svalue_end": {"col": 34, "line": 16, "offset": 327}, "svalue_start": {"col": 14, "line": 16, "offset": 307}}, "start": {"col": 27, "line": 21, "offset": 472}}, "$X": {"abstract_content": "(int param_2", "end": {"col": 26, "line": 16, "offset": 319}, "start": {"col": 14, "line": 16, "offset": 307}}, "$Y": {"abstract_content": "0x850", "end": {"col": 34, "line": 16, "offset": 327}, "start": {"col": 29, "line": 16, "offset": 322}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateHTTPClientModule_0040cd70.c", "start": {"col": 20, "line": 21, "offset": 465}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 21, "offset": 481}, "extra": {"engine_kind": "OSS", "fingerprint": "9b5ef9e8f2518fc3c963ec2d1238a00a559086aecfd798c6e37444eb73c7d313e129ea50e6a5e09d26cb2053c8fa9d744effef6f37179e9af51cf39ab92ee94c_1", "is_ignored": false, "lines": "  pcVar3 = (code *)malloc(local_18);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 21, "offset": 471}, "start": {"col": 20, "line": 21, "offset": 465}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateHTTPClientModule_0040cd70.c", "start": {"col": 20, "line": 21, "offset": 465}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 34, "line": 7, "offset": 100}, "extra": {"engine_kind": "OSS", "fingerprint": "63921d8232ef1c54ac5b4f85067b9fa3892e04a6ff5680780e10c13bae319e9715a81c2246255035a1b20cddf2ef72a8ba7c0bc6bc75d4e68647488e62cbbe51_0", "is_ignored": false, "lines": "  ppcVar1 = (code **)malloc(0x28);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "code**", "end": {"col": 21, "line": 7, "offset": 87}, "start": {"col": 14, "line": 7, "offset": 80}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 7, "offset": 94}, "start": {"col": 22, "line": 7, "offset": 88}}, "$RET": {"abstract_content": "ppcVar1", "end": {"col": 10, "line": 7, "offset": 76}, "start": {"col": 3, "line": 7, "offset": 69}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateLifeTime_00410f08.c", "start": {"col": 3, "line": 7, "offset": 69}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 34, "line": 7, "offset": 100}, "extra": {"engine_kind": "OSS", "fingerprint": "30b78ae5b40bd8ab461496f262c45a9c56fd8d98760497fa29bd47bf8f0fa549c025f2fb024a2b2417a5386e88888076934cec3df517053bc15d6926847467ef_0", "is_ignored": false, "lines": "  ppcVar1 = (code **)malloc(0x28);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 7, "offset": 94}, "start": {"col": 22, "line": 7, "offset": 88}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateLifeTime_00410f08.c", "start": {"col": 22, "line": 7, "offset": 88}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 34, "line": 7, "offset": 100}, "extra": {"engine_kind": "OSS", "fingerprint": "526cce9ad16fd2f542b1b74e6f37d05ed8d3c0ddef47448e632dc935950a13e779aa04302ab28e472e147c136fa0345447ed00f7a0ae178e978e8d185d7fc1ef_0", "is_ignored": false, "lines": "  ppcVar1 = (code **)malloc(0x28);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x28", "end": {"col": 33, "line": 7, "offset": 99}, "start": {"col": 29, "line": 7, "offset": 95}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateLifeTime_00410f08.c", "start": {"col": 22, "line": 7, "offset": 88}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 34, "line": 12, "offset": 237}, "extra": {"engine_kind": "OSS", "fingerprint": "fe15a11c3166f19177a3e86a9d636dae67f334051ccea6b60d1f720ef2144b5012869a577a8a4fc9e5f65cb65647663279191bce0e6f1a4146c460b336f1e52a_0", "is_ignored": false, "lines": "  ppcVar2 = (code **)malloc(0x24);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "code**", "end": {"col": 21, "line": 12, "offset": 224}, "start": {"col": 14, "line": 12, "offset": 217}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 12, "offset": 231}, "start": {"col": 22, "line": 12, "offset": 225}}, "$RET": {"abstract_content": "ppcVar2", "end": {"col": 10, "line": 12, "offset": 213}, "start": {"col": 3, "line": 12, "offset": 206}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateMiniWebServer_0040e84c.c", "start": {"col": 3, "line": 12, "offset": 206}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 34, "line": 12, "offset": 237}, "extra": {"engine_kind": "OSS", "fingerprint": "fd3c582c19309ad25d93e14dd7ee3970de14c2651c499e37b2d42035f3589e51f2700d5459cf472d0169a89a466d7066c9320b5b0a053fb5ffcb2633911c1d41_0", "is_ignored": false, "lines": "  ppcVar2 = (code **)malloc(0x24);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 12, "offset": 231}, "start": {"col": 22, "line": 12, "offset": 225}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateMiniWebServer_0040e84c.c", "start": {"col": 22, "line": 12, "offset": 225}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 34, "line": 12, "offset": 237}, "extra": {"engine_kind": "OSS", "fingerprint": "f940475c655cef0c6887a443f6fa97a10d951a1fb13061c29c0451952c368bd27bc6a8db77c67b1298de6017b70716f4107e9dd53e93eb158feed201a709e435_0", "is_ignored": false, "lines": "  ppcVar2 = (code **)malloc(0x24);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x24", "end": {"col": 33, "line": 12, "offset": 236}, "start": {"col": 29, "line": 12, "offset": 232}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateMiniWebServer_0040e84c.c", "start": {"col": 22, "line": 12, "offset": 225}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 48, "line": 14, "offset": 310}, "extra": {"engine_kind": "OSS", "fingerprint": "c235cc4a4ddbed3c1eb25c04f8e01b216f3cd2f763d42b6930b63b4dd442de3c838616475d853276c2c037dec78743de0ea56d3053114b6f17458958d8c3a380_0", "is_ignored": false, "lines": "  pcVar3 = (code *)malloc((int)param_2 * 0x838);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "code*", "end": {"col": 19, "line": 14, "offset": 281}, "start": {"col": 13, "line": 14, "offset": 275}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 14, "offset": 288}, "start": {"col": 20, "line": 14, "offset": 282}}, "$RET": {"abstract_content": "pcVar3", "end": {"col": 9, "line": 14, "offset": 271}, "start": {"col": 3, "line": 14, "offset": 265}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateMiniWebServer_0040e84c.c", "start": {"col": 3, "line": 14, "offset": 265}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 48, "line": 14, "offset": 310}, "extra": {"engine_kind": "OSS", "fingerprint": "b6018a7be0fd6668d839831f188b5a6bf92ed9dca2eee3287171b17e7f0aec16e3bebbf03c215266ef6bd850a797f868ac59f6805b3a88a13bd1e6d696740891_0", "is_ignored": false, "lines": "  pcVar3 = (code *)malloc((int)param_2 * 0x838);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 14, "offset": 288}, "start": {"col": 20, "line": 14, "offset": 282}}, "$X": {"abstract_content": "(int param_2", "end": {"col": 39, "line": 14, "offset": 301}, "start": {"col": 27, "line": 14, "offset": 289}}, "$Y": {"abstract_content": "0x838", "end": {"col": 47, "line": 14, "offset": 309}, "start": {"col": 42, "line": 14, "offset": 304}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateMiniWebServer_0040e84c.c", "start": {"col": 20, "line": 14, "offset": 282}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 48, "line": 14, "offset": 310}, "extra": {"engine_kind": "OSS", "fingerprint": "fd3c582c19309ad25d93e14dd7ee3970de14c2651c499e37b2d42035f3589e51f2700d5459cf472d0169a89a466d7066c9320b5b0a053fb5ffcb2633911c1d41_1", "is_ignored": false, "lines": "  pcVar3 = (code *)malloc((int)param_2 * 0x838);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 14, "offset": 288}, "start": {"col": 20, "line": 14, "offset": 282}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateMiniWebServer_0040e84c.c", "start": {"col": 20, "line": 14, "offset": 282}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 38, "line": 25, "offset": 511}, "extra": {"engine_kind": "OSS", "fingerprint": "88e3815243f6235aa28c243150f7665da5659039db7b0669b619c6f09b5d15feee1366b9cc4ec1afbeeaec5ee55251fabc1f93b41c2e204fcbda1aeaa2d196d8_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(0x30);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "undefined4*", "end": {"col": 25, "line": 25, "offset": 498}, "start": {"col": 13, "line": 25, "offset": 486}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 25, "offset": 505}, "start": {"col": 26, "line": 25, "offset": 499}}, "$RET": {"abstract_content": "puVar1", "end": {"col": 9, "line": 25, "offset": 482}, "start": {"col": 3, "line": 25, "offset": 476}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "start": {"col": 3, "line": 25, "offset": 476}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 25, "offset": 511}, "extra": {"engine_kind": "OSS", "fingerprint": "1da3590cc25371afe9025ad7d4fb24392eeb4837edc1a0dd6fb3ff8b6293408711e9c9a47edb7825e6584d6ae72b401cc2062200fd86528cd5f4d49981125c12_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(0x30);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 25, "offset": 505}, "start": {"col": 26, "line": 25, "offset": 499}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "start": {"col": 26, "line": 25, "offset": 499}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 25, "offset": 511}, "extra": {"engine_kind": "OSS", "fingerprint": "9d42dcee23742ef5b4334f56d36e89b45c371663d9be17dd23118a2510c8e890fb0c1c13ee8fe68d89e9faf5419142ff9fb41bdb94d0c7b62edb541980924838_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(0x30);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x30", "end": {"col": 37, "line": 25, "offset": 510}, "start": {"col": 33, "line": 25, "offset": 506}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "start": {"col": 26, "line": 25, "offset": 499}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 31, "line": 44, "offset": 1032}, "extra": {"engine_kind": "OSS", "fingerprint": "5cadfe8ef074da9d5dacb17e05658675ebbfd9caa7ba4e58cc37ec2ac1908288be42c726435223dd9011566c81620a45fdf813c21df2b37e0cf52a0ad4193d05_0", "is_ignored": false, "lines": "  pvVar2 = malloc(param_3 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 44, "offset": 1019}, "start": {"col": 12, "line": 44, "offset": 1013}}, "$RET": {"abstract_content": "pvVar2", "end": {"col": 9, "line": 44, "offset": 1010}, "start": {"col": 3, "line": 44, "offset": 1004}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "start": {"col": 3, "line": 44, "offset": 1004}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 31, "line": 44, "offset": 1032}, "extra": {"engine_kind": "OSS", "fingerprint": "99289a284d4a541d7626b806bc881f2ee0073387173bd977b4df46f207083b8110a3f0454277bd29bb817e48e61e9764d5f1e6c33689912aae94d30ca0de0af4_0", "is_ignored": false, "lines": "  pvVar2 = malloc(param_3 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 44, "offset": 1019}, "start": {"col": 12, "line": 44, "offset": 1013}}, "$X": {"abstract_content": "param_3", "end": {"col": 26, "line": 44, "offset": 1027}, "start": {"col": 19, "line": 44, "offset": 1020}}, "$Y": {"abstract_content": "1", "end": {"col": 30, "line": 44, "offset": 1031}, "start": {"col": 29, "line": 44, "offset": 1030}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "start": {"col": 12, "line": 44, "offset": 1013}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 31, "line": 44, "offset": 1032}, "extra": {"engine_kind": "OSS", "fingerprint": "1da3590cc25371afe9025ad7d4fb24392eeb4837edc1a0dd6fb3ff8b6293408711e9c9a47edb7825e6584d6ae72b401cc2062200fd86528cd5f4d49981125c12_1", "is_ignored": false, "lines": "  pvVar2 = malloc(param_3 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 44, "offset": 1019}, "start": {"col": 12, "line": 44, "offset": 1013}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "start": {"col": 12, "line": 44, "offset": 1013}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 46, "offset": 1088}, "extra": {"engine_kind": "OSS", "fingerprint": "738bc3cd208b89f5fbf18a08c2051c6cba97fb12bce07fbfb608d1a3239b87c59150061bafe55fdb3f458680969de0e5b3c5aef6a9bcfd87e7c5f6c9e0960207_0", "is_ignored": false, "lines": "  memcpy(pvVar2,param_2,param_3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 46, "offset": 1064}, "start": {"col": 3, "line": 46, "offset": 1058}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "start": {"col": 3, "line": 46, "offset": 1058}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 35, "line": 71, "offset": 2007}, "extra": {"engine_kind": "OSS", "fingerprint": "5cadfe8ef074da9d5dacb17e05658675ebbfd9caa7ba4e58cc37ec2ac1908288be42c726435223dd9011566c81620a45fdf813c21df2b37e0cf52a0ad4193d05_1", "is_ignored": false, "lines": "      pvVar2 = malloc(param_3 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 22, "line": 71, "offset": 1994}, "start": {"col": 16, "line": 71, "offset": 1988}}, "$RET": {"abstract_content": "pvVar2", "end": {"col": 13, "line": 71, "offset": 1985}, "start": {"col": 7, "line": 71, "offset": 1979}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "start": {"col": 7, "line": 71, "offset": 1979}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 35, "line": 71, "offset": 2007}, "extra": {"engine_kind": "OSS", "fingerprint": "99289a284d4a541d7626b806bc881f2ee0073387173bd977b4df46f207083b8110a3f0454277bd29bb817e48e61e9764d5f1e6c33689912aae94d30ca0de0af4_1", "is_ignored": false, "lines": "      pvVar2 = malloc(param_3 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 22, "line": 71, "offset": 1994}, "start": {"col": 16, "line": 71, "offset": 1988}}, "$X": {"abstract_content": "param_3", "end": {"col": 30, "line": 71, "offset": 2002}, "start": {"col": 23, "line": 71, "offset": 1995}}, "$Y": {"abstract_content": "1", "end": {"col": 34, "line": 71, "offset": 2006}, "start": {"col": 33, "line": 71, "offset": 2005}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "start": {"col": 16, "line": 71, "offset": 1988}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 71, "offset": 2007}, "extra": {"engine_kind": "OSS", "fingerprint": "1da3590cc25371afe9025ad7d4fb24392eeb4837edc1a0dd6fb3ff8b6293408711e9c9a47edb7825e6584d6ae72b401cc2062200fd86528cd5f4d49981125c12_2", "is_ignored": false, "lines": "      pvVar2 = malloc(param_3 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 22, "line": 71, "offset": 1994}, "start": {"col": 16, "line": 71, "offset": 1988}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "start": {"col": 16, "line": 71, "offset": 1988}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 72, "offset": 2045}, "extra": {"engine_kind": "OSS", "fingerprint": "738bc3cd208b89f5fbf18a08c2051c6cba97fb12bce07fbfb608d1a3239b87c59150061bafe55fdb3f458680969de0e5b3c5aef6a9bcfd87e7c5f6c9e0960207_1", "is_ignored": false, "lines": "      memcpy(pvVar2,param_2,param_3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 72, "offset": 2021}, "start": {"col": 7, "line": 72, "offset": 2015}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "start": {"col": 7, "line": 72, "offset": 2015}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 43, "line": 74, "offset": 2138}, "extra": {"engine_kind": "OSS", "fingerprint": "6de2f7a8a0d911350ef689d29d7b372e561edd58f6f91ff2f5d17b812928941dc6f37efa679e1eaccea07bb95e93ae1bf5f73901bb3c0a65fd97480156785776_0", "is_ignored": false, "lines": "      __s = (char *)malloc(param_3 + 0x69);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 20, "line": 74, "offset": 2115}, "start": {"col": 14, "line": 74, "offset": 2109}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 74, "offset": 2122}, "start": {"col": 21, "line": 74, "offset": 2116}}, "$RET": {"abstract_content": "__s", "end": {"col": 10, "line": 74, "offset": 2105}, "start": {"col": 7, "line": 74, "offset": 2102}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "start": {"col": 7, "line": 74, "offset": 2102}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 43, "line": 74, "offset": 2138}, "extra": {"engine_kind": "OSS", "fingerprint": "a55f7eafc45659e6f85de47d208c1f50e8974fde9563d0f07b1ff7c5c994cf8f35711503d16b08596651ff6368d3389535dc571b7817ea142eec57aef242e380_0", "is_ignored": false, "lines": "      __s = (char *)malloc(param_3 + 0x69);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 74, "offset": 2122}, "start": {"col": 21, "line": 74, "offset": 2116}}, "$X": {"abstract_content": "param_3", "end": {"col": 35, "line": 74, "offset": 2130}, "start": {"col": 28, "line": 74, "offset": 2123}}, "$Y": {"abstract_content": "0x69", "end": {"col": 42, "line": 74, "offset": 2137}, "start": {"col": 38, "line": 74, "offset": 2133}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "start": {"col": 21, "line": 74, "offset": 2116}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 43, "line": 74, "offset": 2138}, "extra": {"engine_kind": "OSS", "fingerprint": "1da3590cc25371afe9025ad7d4fb24392eeb4837edc1a0dd6fb3ff8b6293408711e9c9a47edb7825e6584d6ae72b401cc2062200fd86528cd5f4d49981125c12_3", "is_ignored": false, "lines": "      __s = (char *)malloc(param_3 + 0x69);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 74, "offset": 2122}, "start": {"col": 21, "line": 74, "offset": 2116}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "start": {"col": 21, "line": 74, "offset": 2116}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 29, "line": 77, "offset": 2318}, "extra": {"engine_kind": "OSS", "fingerprint": "8277466424d52fd8fca68de3452d460670536c48c3af44c92d640fa07b6261d173b4e373d78f1878ff4cc4832247f0634d15511a95872cbe37f7393c35884054_0", "is_ignored": false, "lines": "      __n = sprintf(__s,\n                    \"M-SEARCH * HTTP/1.1\\r\\nMX: 3\\r\\nST: %s\\r\\nHOST: 239.255.255.250:1900\\r\\nMAN: \\\"ssdp:discover\\\"\\r\\n\\r\\n\"\n                    ,pvVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"M-SEARCH * HTTP/1.1\\r\\nMX: 3\\r\\nST: %s\\r\\nHOST: 239.255.255.250:1900\\r\\nMAN: \\\"ssdp:discover\\\"\\r\\n\\r\\n\"", "end": {"col": 105, "line": 1, "offset": 104}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 75, "offset": 2163}, "propagated_value": {"svalue_abstract_content": "(char*malloc(param_3+0x69)", "svalue_end": {"col": 43, "line": 74, "offset": 2138}, "svalue_start": {"col": 13, "line": 74, "offset": 2108}}, "start": {"col": 21, "line": 75, "offset": 2160}}, "$FMT": {"abstract_content": "\"M-SEARCH * HTTP/1.1\\r\\nMX: 3\\r\\nST: %s\\r\\nHOST: 239.255.255.250:1900\\r\\nMAN: \\\"ssdp:discover\\\"\\r\\n\\r\\n\"", "end": {"col": 125, "line": 76, "offset": 2289}, "start": {"col": 21, "line": 76, "offset": 2185}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "start": {"col": 13, "line": 75, "offset": 2152}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 29, "line": 77, "offset": 2318}, "extra": {"engine_kind": "OSS", "fingerprint": "372904d4ba7a61373b3542accd8c3a3a5343666a10bcce3c91d32d093b03ec6ee8b5369e1b2eb436237acfcd22b657c6310a449f62d15d88d1d95b1aae639275_0", "is_ignored": false, "lines": "      __n = sprintf(__s,\n                    \"M-SEARCH * HTTP/1.1\\r\\nMX: 3\\r\\nST: %s\\r\\nHOST: 239.255.255.250:1900\\r\\nMAN: \\\"ssdp:discover\\\"\\r\\n\\r\\n\"\n                    ,pvVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 75, "offset": 2159}, "start": {"col": 13, "line": 75, "offset": 2152}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibCreateSSDPClientModule_0040f5c8.c", "start": {"col": 13, "line": 75, "offset": 2152}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 36, "line": 89, "offset": 2394}, "extra": {"engine_kind": "OSS", "fingerprint": "a372982e26935c5f6fcdba2997ffe936f05f232e8337e451eb70a4a0be889ec76d5f7349879d7b84749b004d188734f7acdc1d651c00da8cc62373cf187244ec_0", "is_ignored": false, "lines": "    ppvVar2 = (void **)malloc(0x34);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "void**", "end": {"col": 23, "line": 89, "offset": 2381}, "start": {"col": 16, "line": 89, "offset": 2374}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 30, "line": 89, "offset": 2388}, "start": {"col": 24, "line": 89, "offset": 2382}}, "$RET": {"abstract_content": "ppvVar2", "end": {"col": 12, "line": 89, "offset": 2370}, "start": {"col": 5, "line": 89, "offset": 2363}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibDeleteRequests_0040d1e4.c", "start": {"col": 5, "line": 89, "offset": 2363}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 89, "offset": 2394}, "extra": {"engine_kind": "OSS", "fingerprint": "2515d2ab48552e3452f82af5075ea898843bed7b5582ac854d91e92545ac41111a62a3c540372cfd5f9fefe71f1175471ecc935943d5a0058263dbad90991c83_0", "is_ignored": false, "lines": "    ppvVar2 = (void **)malloc(0x34);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 30, "line": 89, "offset": 2388}, "start": {"col": 24, "line": 89, "offset": 2382}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibDeleteRequests_0040d1e4.c", "start": {"col": 24, "line": 89, "offset": 2382}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 89, "offset": 2394}, "extra": {"engine_kind": "OSS", "fingerprint": "4b0114462649e6b8534c7564f1db4cd61a9bbc9c399ae62835e802de1cce4fae74c1d0a7acc40ad8bba8a554d89f31cc3eed9e96b86a4b1b871afc6dbc8c53f9_0", "is_ignored": false, "lines": "    ppvVar2 = (void **)malloc(0x34);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x34", "end": {"col": 35, "line": 89, "offset": 2393}, "start": {"col": 31, "line": 89, "offset": 2389}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibDeleteRequests_0040d1e4.c", "start": {"col": 24, "line": 89, "offset": 2382}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 27, "line": 90, "offset": 2422}, "extra": {"engine_kind": "OSS", "fingerprint": "191dc24f75fba2eb738a9dce1578652c309a897eb48f6a9960c6189db658de6b37acbcc88fbec5d2747c64d69181d59ac64b22f89a6d631e22431feb4cfb9184_0", "is_ignored": false, "lines": "    memset(ppvVar2,0,0x34);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 21, "line": 90, "offset": 2416}, "start": {"col": 20, "line": 90, "offset": 2415}}, "$DST": {"abstract_content": "ppvVar2", "end": {"col": 19, "line": 90, "offset": 2414}, "propagated_value": {"svalue_abstract_content": "(void**malloc(0x34)", "svalue_end": {"col": 36, "line": 89, "offset": 2394}, "svalue_start": {"col": 15, "line": 89, "offset": 2373}}, "start": {"col": 12, "line": 90, "offset": 2407}}, "$LEN": {"abstract_content": "0x34", "end": {"col": 26, "line": 90, "offset": 2421}, "start": {"col": 22, "line": 90, "offset": 2417}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibDeleteRequests_0040d1e4.c", "start": {"col": 5, "line": 90, "offset": 2400}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-rand-srand", "end": {"col": 19, "line": 18, "offset": 367}, "extra": {"engine_kind": "OSS", "fingerprint": "7f0e2d36e2d3b49369337f1e1bd308999e2f07782909d9728e11ac8ab76ceb44d37a79564a40b26f1dc5134c2daacbc89793e9d0e9b150e1cb71b7bbf6912291_0", "is_ignored": false, "lines": "    uVar2 = rand();", "message": "The rand() PRNG should not be used in applications intended to be  portable when good randomness is needed. Instead, the use of random()  is recommended.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/338", "https://cwe.mitre.org/data/definitions/330", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetDGramSocket_00412c28.c", "start": {"col": 13, "line": 18, "offset": 361}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 19, "line": 18, "offset": 367}, "extra": {"engine_kind": "OSS", "fingerprint": "cbbf6b7e4a2f78337592a7ed61f9f3b54bd5292404c609b7cdade03a23a4b7ee9b1e3098b665a8b6a5c93958a34f3a09cfc3d78b51fbbc732ff8a6dfee593055_0", "is_ignored": false, "lines": "    uVar2 = rand();", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "rand", "end": {"col": 17, "line": 18, "offset": 365}, "start": {"col": 13, "line": 18, "offset": 361}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetDGramSocket_00412c28.c", "start": {"col": 13, "line": 18, "offset": 361}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 38, "line": 34, "offset": 688}, "extra": {"engine_kind": "OSS", "fingerprint": "76e9fa9f4ba88c2cdcd4d8852282e34a052d630463a06aa0e4b7419e5090ccb2993570cbe23ad70d46ab630106072c8aeb61f2cdb85adeee89ec2181e934637a_0", "is_ignored": false, "lines": "          __dest = malloc(iVar1 << 2);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 34, "offset": 676}, "start": {"col": 20, "line": 34, "offset": 670}}, "$RET": {"abstract_content": "__dest", "end": {"col": 17, "line": 34, "offset": 667}, "start": {"col": 11, "line": 34, "offset": 661}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetLocalIPAddressList_00414750.c", "start": {"col": 11, "line": 34, "offset": 661}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 34, "offset": 688}, "extra": {"engine_kind": "OSS", "fingerprint": "354f8246857c3496a129c1bae076a1746145e262d977e6649887ed0e8e766775e78ec74aad17783438cde2afb1c00692b1ca0bd3c16481ff8ee9995fd5aa62bf_0", "is_ignored": false, "lines": "          __dest = malloc(iVar1 << 2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 34, "offset": 676}, "start": {"col": 20, "line": 34, "offset": 670}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetLocalIPAddressList_00414750.c", "start": {"col": 20, "line": 34, "offset": 670}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 48, "line": 36, "offset": 766}, "extra": {"engine_kind": "OSS", "fingerprint": "454c8981313ab6a8ab7dbd134785a01108bd575f5f300b28c2cec6029f96de67f7384cd3c9e7b601065c7828c8bab91c065a368cc5be794454b249c2f4f904fc_0", "is_ignored": false, "lines": "          memcpy(__dest,auStack_270,iVar1 << 2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 17, "line": 36, "offset": 735}, "start": {"col": 11, "line": 36, "offset": 729}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetLocalIPAddressList_00414750.c", "start": {"col": 11, "line": 36, "offset": 729}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 35, "line": 43, "offset": 959}, "extra": {"engine_kind": "OSS", "fingerprint": "a663637197b4cc28e2016413f7fe34c320b2c51e3bf3fd81efa0f49f866131bb99d7f7f29baeb3daeb6c7f09968f03661f702fd2c3e623bb99efb5aef6991651_0", "is_ignored": false, "lines": "          strcpy(acStack_290,__s1);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetLocalIPAddressList_00414750.c", "start": {"col": 11, "line": 43, "offset": 935}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 43, "offset": 959}, "extra": {"engine_kind": "OSS", "fingerprint": "e3421df72146efa893e303a49be3cea1c09464e1001abd57b03424df1b5d064004431b593e923a77cd2dd57a6af524bddb90a9c2abe830d1ebb55e606f20572d_0", "is_ignored": false, "lines": "          strcpy(acStack_290,__s1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 17, "line": 43, "offset": 941}, "start": {"col": 11, "line": 43, "offset": 935}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetLocalIPAddressList_00414750.c", "start": {"col": 11, "line": 43, "offset": 935}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 49, "line": 47, "offset": 1165}, "extra": {"engine_kind": "OSS", "fingerprint": "454c8981313ab6a8ab7dbd134785a01108bd575f5f300b28c2cec6029f96de67f7384cd3c9e7b601065c7828c8bab91c065a368cc5be794454b249c2f4f904fc_1", "is_ignored": false, "lines": "            memcpy(auStack_2a0,__s1 + 0x10,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 19, "line": 47, "offset": 1135}, "start": {"col": 13, "line": 47, "offset": 1129}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetLocalIPAddressList_00414750.c", "start": {"col": 13, "line": 47, "offset": 1129}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 49, "line": 47, "offset": 1165}, "extra": {"engine_kind": "OSS", "fingerprint": "09f4ff1cbc4b2d0f044bd691e2fcd3c647dfbe2cc76dec56edd060b433a5e91dc57a8742921f7e7bf19c5a82dd2eaa7be80a62b53643b90f4262a30eaed214fe_0", "is_ignored": false, "lines": "            memcpy(auStack_2a0,__s1 + 0x10,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "auStack_2a0", "end": {"col": 31, "line": 47, "offset": 1147}, "start": {"col": 20, "line": 47, "offset": 1136}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 48, "line": 47, "offset": 1164}, "start": {"col": 44, "line": 47, "offset": 1160}}, "$SRC": {"abstract_content": "__s1+0x10", "end": {"col": 43, "line": 47, "offset": 1159}, "start": {"col": 32, "line": 47, "offset": 1148}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetLocalIPAddressList_00414750.c", "start": {"col": 13, "line": 47, "offset": 1129}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 48, "line": 24, "offset": 593}, "extra": {"engine_kind": "OSS", "fingerprint": "3421c45269b56d8e795c9da01e2fb61fc3ae905ba0416cce503181aca17db429dbd7aefd5b6f616cefe85e7b777988078229a06293216e9fda4aca56c08efc91_0", "is_ignored": false, "lines": "  pvVar1 = malloc((int)param_1[10] + iVar3 + 3);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 24, "offset": 563}, "start": {"col": 12, "line": 24, "offset": 557}}, "$RET": {"abstract_content": "pvVar1", "end": {"col": 9, "line": 24, "offset": 554}, "start": {"col": 3, "line": 24, "offset": 548}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 3, "line": 24, "offset": 548}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 48, "line": 24, "offset": 593}, "extra": {"engine_kind": "OSS", "fingerprint": "10cc62a0366f813b238c942a8c3068a67498ed7c1bce6e0ee273fe0a2add279d5e77f428e493fcace41a8e3357b9c8e0d490d3c784aa7ad11c92578ab47585dd_0", "is_ignored": false, "lines": "  pvVar1 = malloc((int)param_1[10] + iVar3 + 3);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 24, "offset": 563}, "start": {"col": 12, "line": 24, "offset": 557}}, "$X": {"abstract_content": "(int param_1[10]+iVar3", "end": {"col": 43, "line": 24, "offset": 588}, "start": {"col": 19, "line": 24, "offset": 564}}, "$Y": {"abstract_content": "3", "end": {"col": 47, "line": 24, "offset": 592}, "start": {"col": 46, "line": 24, "offset": 591}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 12, "line": 24, "offset": 557}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 48, "line": 24, "offset": 593}, "extra": {"engine_kind": "OSS", "fingerprint": "0194f37686ff60f61ba4bf512f56ccd8cb3597830661f0626eeea52e08772df15b9153b77d7904189d0d98aa7b6cf0b6a382bbb867d45431a2bbf549c5e495e7_0", "is_ignored": false, "lines": "  pvVar1 = malloc((int)param_1[10] + iVar3 + 3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 24, "offset": 563}, "start": {"col": 12, "line": 24, "offset": 557}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 12, "line": 24, "offset": 557}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 48, "line": 24, "offset": 593}, "extra": {"engine_kind": "OSS", "fingerprint": "1ec2d81d9dc2991f72c8f3283fbd012fa7f3c4d968052635f0afe296e343e3d7c6e83a12b957c652679f4ddd0ec8f38fe03253286ba12b797f9475db42d3ec14_0", "is_ignored": false, "lines": "  pvVar1 = malloc((int)param_1[10] + iVar3 + 3);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "(int param_1[10]+iVar3+3", "end": {"col": 47, "line": 24, "offset": 592}, "start": {"col": 19, "line": 24, "offset": 564}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 12, "line": 24, "offset": 557}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 27, "offset": 704}, "extra": {"engine_kind": "OSS", "fingerprint": "502577cbe3a1365a647dd963f288e9997f1d4a0985b30bc2bb0edf68508d6176b9eb65a01921054db33cc4769fd05e93fba06b033e72d54ba804f76d74c9d3ba_0", "is_ignored": false, "lines": "    memcpy(pvVar1,*param_1,(size_t)param_1[1]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 27, "offset": 668}, "start": {"col": 5, "line": 27, "offset": 662}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 5, "line": 27, "offset": 662}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 64, "line": 32, "offset": 910}, "extra": {"engine_kind": "OSS", "fingerprint": "502577cbe3a1365a647dd963f288e9997f1d4a0985b30bc2bb0edf68508d6176b9eb65a01921054db33cc4769fd05e93fba06b033e72d54ba804f76d74c9d3ba_1", "is_ignored": false, "lines": "    memcpy((void *)((int)pvVar1 + iVar7),pvVar6,(size_t)pvVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 32, "offset": 857}, "start": {"col": 5, "line": 32, "offset": 851}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 5, "line": 32, "offset": 851}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 53, "line": 35, "offset": 1024}, "extra": {"engine_kind": "OSS", "fingerprint": "502577cbe3a1365a647dd963f288e9997f1d4a0985b30bc2bb0edf68508d6176b9eb65a01921054db33cc4769fd05e93fba06b033e72d54ba804f76d74c9d3ba_2", "is_ignored": false, "lines": "    memcpy((void *)((int)pvVar1 + iVar7),\" HTTP/\",6);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 35, "offset": 982}, "start": {"col": 5, "line": 35, "offset": 976}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 5, "line": 35, "offset": 976}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 53, "line": 35, "offset": 1024}, "extra": {"engine_kind": "OSS", "fingerprint": "796d44190aafa55229349dce9091d9a3703c89491cfe42e41f2e531b1ae915fa7a05090157d57ebbe9babdc18f74e419fe959131b20eb0928029b928149aa69f_0", "is_ignored": false, "lines": "    memcpy((void *)((int)pvVar1 + iVar7),\" HTTP/\",6);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "(void*(int pvVar1+iVar7", "end": {"col": 40, "line": 35, "offset": 1011}, "start": {"col": 12, "line": 35, "offset": 983}}, "$LEN": {"abstract_content": "6", "end": {"col": 52, "line": 35, "offset": 1023}, "start": {"col": 51, "line": 35, "offset": 1022}}, "$SRC": {"abstract_content": "\" HTTP/\"", "end": {"col": 50, "line": 35, "offset": 1021}, "start": {"col": 42, "line": 35, "offset": 1013}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 5, "line": 35, "offset": 976}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 72, "line": 36, "offset": 1097}, "extra": {"engine_kind": "OSS", "fingerprint": "502577cbe3a1365a647dd963f288e9997f1d4a0985b30bc2bb0edf68508d6176b9eb65a01921054db33cc4769fd05e93fba06b033e72d54ba804f76d74c9d3ba_3", "is_ignored": false, "lines": "    memcpy((void *)((int)pvVar1 + iVar3),param_1[7],(size_t)param_1[8]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 36, "offset": 1036}, "start": {"col": 5, "line": 36, "offset": 1030}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 5, "line": 36, "offset": 1030}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 40, "offset": 1171}, "extra": {"engine_kind": "OSS", "fingerprint": "502577cbe3a1365a647dd963f288e9997f1d4a0985b30bc2bb0edf68508d6176b9eb65a01921054db33cc4769fd05e93fba06b033e72d54ba804f76d74c9d3ba_4", "is_ignored": false, "lines": "    memcpy(pvVar1,&DAT_00416d4c,5);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 40, "offset": 1147}, "start": {"col": 5, "line": 40, "offset": 1141}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 5, "line": 40, "offset": 1141}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 35, "line": 40, "offset": 1171}, "extra": {"engine_kind": "OSS", "fingerprint": "b5c88008ed9f9ba7082b33ac732807fe7f0176a05cd7347c51e88297fccd68a62c9128982a6f2573fb772bf4149079992c99d5079d6e274e96400dcead4ea692_0", "is_ignored": false, "lines": "    memcpy(pvVar1,&DAT_00416d4c,5);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "pvVar1", "end": {"col": 18, "line": 40, "offset": 1154}, "propagated_value": {"svalue_abstract_content": "malloc((int param_1[10]+iVar3+3)", "svalue_end": {"col": 48, "line": 24, "offset": 593}, "svalue_start": {"col": 12, "line": 24, "offset": 557}}, "start": {"col": 12, "line": 40, "offset": 1148}}, "$LEN": {"abstract_content": "5", "end": {"col": 34, "line": 40, "offset": 1170}, "start": {"col": 33, "line": 40, "offset": 1169}}, "$SRC": {"abstract_content": "&DAT_00416d4c", "end": {"col": 32, "line": 40, "offset": 1168}, "start": {"col": 19, "line": 40, "offset": 1155}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 5, "line": 40, "offset": 1141}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 68, "line": 41, "offset": 1240}, "extra": {"engine_kind": "OSS", "fingerprint": "502577cbe3a1365a647dd963f288e9997f1d4a0985b30bc2bb0edf68508d6176b9eb65a01921054db33cc4769fd05e93fba06b033e72d54ba804f76d74c9d3ba_5", "is_ignored": false, "lines": "    memcpy((void *)((int)pvVar1 + 5),param_1[7],(size_t)param_1[8]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 41, "offset": 1183}, "start": {"col": 5, "line": 41, "offset": 1177}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 5, "line": 41, "offset": 1177}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 79, "line": 43, "offset": 1345}, "extra": {"engine_kind": "OSS", "fingerprint": "d459e580cd09f0e7ed0367847025f83a9f007367a24522c4b7a115bd36570c44b4a2f718ab269d3942676c6536d295a6a879001ec42bc6ee738e136207e2d163_0", "is_ignored": false, "lines": "    iVar3 = sprintf((char *)((int)pvVar1 + (int)pvVar6 + 5),\" %d \",param_1[4]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 43, "offset": 1286}, "start": {"col": 13, "line": 43, "offset": 1279}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 13, "line": 43, "offset": 1279}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 72, "line": 45, "offset": 1455}, "extra": {"engine_kind": "OSS", "fingerprint": "502577cbe3a1365a647dd963f288e9997f1d4a0985b30bc2bb0edf68508d6176b9eb65a01921054db33cc4769fd05e93fba06b033e72d54ba804f76d74c9d3ba_6", "is_ignored": false, "lines": "    memcpy((void *)((int)pvVar1 + iVar3),param_1[5],(size_t)param_1[6]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 45, "offset": 1394}, "start": {"col": 5, "line": 45, "offset": 1388}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 5, "line": 45, "offset": 1388}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 55, "offset": 1790}, "extra": {"engine_kind": "OSS", "fingerprint": "502577cbe3a1365a647dd963f288e9997f1d4a0985b30bc2bb0edf68508d6176b9eb65a01921054db33cc4769fd05e93fba06b033e72d54ba804f76d74c9d3ba_7", "is_ignored": false, "lines": "    memcpy(__dest,*ppvVar5,(size_t)ppvVar5[1]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 55, "offset": 1754}, "start": {"col": 5, "line": 55, "offset": 1748}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 5, "line": 55, "offset": 1748}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 72, "line": 61, "offset": 2018}, "extra": {"engine_kind": "OSS", "fingerprint": "502577cbe3a1365a647dd963f288e9997f1d4a0985b30bc2bb0edf68508d6176b9eb65a01921054db33cc4769fd05e93fba06b033e72d54ba804f76d74c9d3ba_8", "is_ignored": false, "lines": "    memcpy((void *)((int)pvVar1 + iVar3),ppvVar5[2],(size_t)ppvVar5[3]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 61, "offset": 1957}, "start": {"col": 5, "line": 61, "offset": 1951}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 5, "line": 61, "offset": 1951}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 66, "line": 71, "offset": 2336}, "extra": {"engine_kind": "OSS", "fingerprint": "502577cbe3a1365a647dd963f288e9997f1d4a0985b30bc2bb0edf68508d6176b9eb65a01921054db33cc4769fd05e93fba06b033e72d54ba804f76d74c9d3ba_9", "is_ignored": false, "lines": "  memcpy((void *)((int)pvVar1 + iVar3 + 4),pvVar6,(size_t)pvVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 71, "offset": 2279}, "start": {"col": 3, "line": 71, "offset": 2273}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetRawPacket_00412e30.c", "start": {"col": 3, "line": 71, "offset": 2273}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-rand-srand", "end": {"col": 21, "line": 22, "offset": 476}, "extra": {"engine_kind": "OSS", "fingerprint": "1c4d2f956adcc06b00be40344fb3586dfc74cfd3f068e0460ebe6c141e1eb3ef7a16f0af35511f8655748169fc3bb84b98ee7cc2e004e7d0c96f84437fd5e703_0", "is_ignored": false, "lines": "      uVar2 = rand();", "message": "The rand() PRNG should not be used in applications intended to be  portable when good randomness is needed. Instead, the use of random()  is recommended.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/338", "https://cwe.mitre.org/data/definitions/330", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetStreamSocket_00412cfc.c", "start": {"col": 15, "line": 22, "offset": 470}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 21, "line": 22, "offset": 476}, "extra": {"engine_kind": "OSS", "fingerprint": "bcabe5f2856abff031c3005c51ee34698a798873aa4ddd8ee125c12f4e53d4de5c2c36ef15f91b5c026f02ab2c46e0194cef9e53163f44185f012c530c645dc2_0", "is_ignored": false, "lines": "      uVar2 = rand();", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "rand", "end": {"col": 19, "line": 22, "offset": 474}, "start": {"col": 15, "line": 22, "offset": 470}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetStreamSocket_00412cfc.c", "start": {"col": 15, "line": 22, "offset": 470}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 23, "line": 12, "offset": 201}, "extra": {"engine_kind": "OSS", "fingerprint": "e6430d787b84d66f926c7d6745530f2e172db8e6fdc91a586397e271f448a10936336980c6a52f128e534ad0cd77274711c99d5e3ebce80d64d6fac8bf2488e3_0", "is_ignored": false, "lines": "  __ptr = malloc(0x14);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 17, "line": 12, "offset": 195}, "start": {"col": 11, "line": 12, "offset": 189}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 12, "offset": 186}, "start": {"col": 3, "line": 12, "offset": 181}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetULong_00413e28.c", "start": {"col": 3, "line": 12, "offset": 181}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 23, "line": 12, "offset": 201}, "extra": {"engine_kind": "OSS", "fingerprint": "f059627760513e8d91bf07835e3f9f2326c3e5fabec45781ff5afc1e3d7b7595a50c39133bacf596eaf6a5d77b15e189048f8268edfdbb8dee958aa222b2f720_0", "is_ignored": false, "lines": "  __ptr = malloc(0x14);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 17, "line": 12, "offset": 195}, "start": {"col": 11, "line": 12, "offset": 189}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetULong_00413e28.c", "start": {"col": 11, "line": 12, "offset": 189}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 23, "line": 12, "offset": 201}, "extra": {"engine_kind": "OSS", "fingerprint": "7b376dc415d366c7b7123af76ec9cd2648dc0fd8cf009568be05ea20c2670cb5de915f389b7212831bd8b88b5a46bbfb150fa4e203a6e6bf095930714c9864ca_0", "is_ignored": false, "lines": "  __ptr = malloc(0x14);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x14", "end": {"col": 22, "line": 12, "offset": 200}, "start": {"col": 18, "line": 12, "offset": 196}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetULong_00413e28.c", "start": {"col": 11, "line": 12, "offset": 189}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 39, "line": 13, "offset": 241}, "extra": {"engine_kind": "OSS", "fingerprint": "a578421361e40b97de83b2258800a860ae5cefe7b083551abe7ec7afc51b679476acf3fcb88908958bbf42ded705ebe4e8eb6e71012450b7bccb2b806cb89fe9_0", "is_ignored": false, "lines": "  __nptr = (char *)malloc(param_2 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 19, "line": 13, "offset": 221}, "start": {"col": 13, "line": 13, "offset": 215}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 13, "offset": 228}, "start": {"col": 20, "line": 13, "offset": 222}}, "$RET": {"abstract_content": "__nptr", "end": {"col": 9, "line": 13, "offset": 211}, "start": {"col": 3, "line": 13, "offset": 205}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetULong_00413e28.c", "start": {"col": 3, "line": 13, "offset": 205}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 39, "line": 13, "offset": 241}, "extra": {"engine_kind": "OSS", "fingerprint": "509d9a89f69093e1a67510b77d42e8320d6d75b17dbe0b1e5a0c11fc2b6e7c1f67d299ea4daf9896d8d89230fa97ee14ddc9d266defd8047254b664bc26127f6_0", "is_ignored": false, "lines": "  __nptr = (char *)malloc(param_2 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 13, "offset": 228}, "start": {"col": 20, "line": 13, "offset": 222}}, "$X": {"abstract_content": "param_2", "end": {"col": 34, "line": 13, "offset": 236}, "start": {"col": 27, "line": 13, "offset": 229}}, "$Y": {"abstract_content": "1", "end": {"col": 38, "line": 13, "offset": 240}, "start": {"col": 37, "line": 13, "offset": 239}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetULong_00413e28.c", "start": {"col": 20, "line": 13, "offset": 222}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 13, "offset": 241}, "extra": {"engine_kind": "OSS", "fingerprint": "f059627760513e8d91bf07835e3f9f2326c3e5fabec45781ff5afc1e3d7b7595a50c39133bacf596eaf6a5d77b15e189048f8268edfdbb8dee958aa222b2f720_1", "is_ignored": false, "lines": "  __nptr = (char *)malloc(param_2 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 13, "offset": 228}, "start": {"col": 20, "line": 13, "offset": 222}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetULong_00413e28.c", "start": {"col": 20, "line": 13, "offset": 222}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 14, "offset": 275}, "extra": {"engine_kind": "OSS", "fingerprint": "30e46b648cddb6e3f6721125463037990fa129c6a849c9e4e204902dae8360dcc1f35c217484b399e916b0c9c94354a11757be900aaa331c54ca1322e4094c9d_0", "is_ignored": false, "lines": "  memcpy(__nptr,param_1,param_2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 14, "offset": 251}, "start": {"col": 3, "line": 14, "offset": 245}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibGetULong_00413e28.c", "start": {"col": 3, "line": 14, "offset": 245}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 38, "line": 8, "offset": 124}, "extra": {"engine_kind": "OSS", "fingerprint": "2b8bd976680ef76d8efa7289b38e5be8f87bd75cb9bf7be32854c3a488ab31fb41693123d7d691559f47414e992fdbbd20bdf16dc2bb95c0af7f390f6e5306b8_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(0x14);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "undefined4*", "end": {"col": 25, "line": 8, "offset": 111}, "start": {"col": 13, "line": 8, "offset": 99}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 8, "offset": 118}, "start": {"col": 26, "line": 8, "offset": 112}}, "$RET": {"abstract_content": "puVar1", "end": {"col": 9, "line": 8, "offset": 95}, "start": {"col": 3, "line": 8, "offset": 89}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibInitHashTree_004122e8.c", "start": {"col": 3, "line": 8, "offset": 89}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 8, "offset": 124}, "extra": {"engine_kind": "OSS", "fingerprint": "9df1577c13c064b70950f2b14a714bc7e713765447d20158bbd2aaca45333a446940525655b1bcb28845cf9609080752b784250a0eac4e8b19411884559ab74f_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(0x14);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 8, "offset": 118}, "start": {"col": 26, "line": 8, "offset": 112}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibInitHashTree_004122e8.c", "start": {"col": 26, "line": 8, "offset": 112}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 8, "offset": 124}, "extra": {"engine_kind": "OSS", "fingerprint": "1cb1a2a0ba56c40cb085323e992115d2ef24aa7e2380bb8ab874d8531f93f3472326a51ac01fc01527703f13eab3a703180450e2a7e6e7617584fb650bde8430_0", "is_ignored": false, "lines": "  puVar1 = (undefined4 *)malloc(0x14);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x14", "end": {"col": 37, "line": 8, "offset": 123}, "start": {"col": 33, "line": 8, "offset": 119}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibInitHashTree_004122e8.c", "start": {"col": 26, "line": 8, "offset": 112}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 38, "line": 9, "offset": 163}, "extra": {"engine_kind": "OSS", "fingerprint": "71eaae87c3b246b39b3cef9415a6d5f263e9357ef19a29951fca71716818cf505d932c15e95d47cd9f7f91e095409a333b50905f86cf913fc5e73fce83a7d54c_0", "is_ignored": false, "lines": "  puVar2 = (undefined4 *)malloc(0x18);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "undefined4*", "end": {"col": 25, "line": 9, "offset": 150}, "start": {"col": 13, "line": 9, "offset": 138}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 9, "offset": 157}, "start": {"col": 26, "line": 9, "offset": 151}}, "$RET": {"abstract_content": "puVar2", "end": {"col": 9, "line": 9, "offset": 134}, "start": {"col": 3, "line": 9, "offset": 128}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibInitHashTree_004122e8.c", "start": {"col": 3, "line": 9, "offset": 128}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 9, "offset": 163}, "extra": {"engine_kind": "OSS", "fingerprint": "9df1577c13c064b70950f2b14a714bc7e713765447d20158bbd2aaca45333a446940525655b1bcb28845cf9609080752b784250a0eac4e8b19411884559ab74f_1", "is_ignored": false, "lines": "  puVar2 = (undefined4 *)malloc(0x18);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 32, "line": 9, "offset": 157}, "start": {"col": 26, "line": 9, "offset": 151}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibInitHashTree_004122e8.c", "start": {"col": 26, "line": 9, "offset": 151}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 9, "offset": 163}, "extra": {"engine_kind": "OSS", "fingerprint": "f22d98d195e5288e0153b28a4abda6654112eedb1f0df8b37b25beef2f991075f216a8f8ad2b63d065d833f4dd6c70289c968a447275a9e9d3261b0b2d31d6cd_0", "is_ignored": false, "lines": "  puVar2 = (undefined4 *)malloc(0x18);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x18", "end": {"col": 37, "line": 9, "offset": 162}, "start": {"col": 33, "line": 9, "offset": 158}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibInitHashTree_004122e8.c", "start": {"col": 26, "line": 9, "offset": 151}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 32, "line": 16, "offset": 331}, "extra": {"engine_kind": "OSS", "fingerprint": "18dc64fc7fb3099b094628db22ab493d96c52f1dc8fe8eb87dbc3fcbbf3f630ef3a772325c148e15a19bc44acaa7538299a0438ef759798e226c21132e90b208_0", "is_ignored": false, "lines": "  puVar2 = (uint *)malloc(0x18);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 26, "line": 16, "offset": 325}, "start": {"col": 20, "line": 16, "offset": 319}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibLifeTime_AddEx_004140e8.c", "start": {"col": 20, "line": 16, "offset": 319}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 32, "line": 16, "offset": 331}, "extra": {"engine_kind": "OSS", "fingerprint": "a5d865587791fbec28c75f0edef42f069f56c4174965564acc90ba80446f3b5c416adbe1c210c46623d19b0b79b721a4b820b6e3afddc79d7bfa5e18ed33a9fb_0", "is_ignored": false, "lines": "  puVar2 = (uint *)malloc(0x18);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x18", "end": {"col": 31, "line": 16, "offset": 330}, "start": {"col": 27, "line": 16, "offset": 326}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibLifeTime_AddEx_004140e8.c", "start": {"col": 20, "line": 16, "offset": 319}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 20, "offset": 345}, "extra": {"engine_kind": "OSS", "fingerprint": "bb235f04a67e33f71a13db802706dfe81a426d3d770168cb535d7121a4c04176466282486a57e787ed2e45152651a255fc7174c755a6d1bb92be17351a3b0983_0", "is_ignored": false, "lines": "  __s = (void **)malloc(0x44);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "void**", "end": {"col": 17, "line": 20, "offset": 332}, "start": {"col": 10, "line": 20, "offset": 325}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 24, "line": 20, "offset": 339}, "start": {"col": 18, "line": 20, "offset": 333}}, "$RET": {"abstract_content": "__s", "end": {"col": 6, "line": 20, "offset": 321}, "start": {"col": 3, "line": 20, "offset": 318}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParsePacketHeader_004132d0.c", "start": {"col": 3, "line": 20, "offset": 318}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 20, "offset": 345}, "extra": {"engine_kind": "OSS", "fingerprint": "824f8f59d2ad3c96b77075cd88240ceb5ad534940b228366a3cdded33d08855e17284ce1f65256db76184aa8c25bd3c0240e819ab0a72669c5908d6a643f98c3_0", "is_ignored": false, "lines": "  __s = (void **)malloc(0x44);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 24, "line": 20, "offset": 339}, "start": {"col": 18, "line": 20, "offset": 333}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParsePacketHeader_004132d0.c", "start": {"col": 18, "line": 20, "offset": 333}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 20, "offset": 345}, "extra": {"engine_kind": "OSS", "fingerprint": "9b87e68b28fc57fed30a0a42c8f7370c0defc62d3895a653f5d2b31e76d9088aa45bb0b5a20543371468a7ff03dfab46c14792c36d44289be2e97eed1752d9f9_0", "is_ignored": false, "lines": "  __s = (void **)malloc(0x44);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x44", "end": {"col": 29, "line": 20, "offset": 344}, "start": {"col": 25, "line": 20, "offset": 340}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParsePacketHeader_004132d0.c", "start": {"col": 18, "line": 20, "offset": 333}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 21, "line": 21, "offset": 367}, "extra": {"engine_kind": "OSS", "fingerprint": "ea419acc1c1ec538d286bebfed8fc9e3cdf9dd43159d061db93e447fe04522842d190f780f6bb394771ed7ba3efe917b387c2b1ff2ba2734be816e713a49cd0e_0", "is_ignored": false, "lines": "  memset(__s,0,0x44);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 15, "line": 21, "offset": 361}, "start": {"col": 14, "line": 21, "offset": 360}}, "$DST": {"abstract_content": "__s", "end": {"col": 13, "line": 21, "offset": 359}, "propagated_value": {"svalue_abstract_content": "(void**malloc(0x44)", "svalue_end": {"col": 30, "line": 20, "offset": 345}, "svalue_start": {"col": 9, "line": 20, "offset": 324}}, "start": {"col": 10, "line": 21, "offset": 356}}, "$LEN": {"abstract_content": "0x44", "end": {"col": 20, "line": 21, "offset": 366}, "start": {"col": 16, "line": 21, "offset": 362}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParsePacketHeader_004132d0.c", "start": {"col": 3, "line": 21, "offset": 349}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 69, "line": 34, "offset": 960}, "extra": {"engine_kind": "OSS", "fingerprint": "8b9815d55839518d651e7422642424eeaea6aa8e3f17a0b0ccc0520bfc2fa3a7b37ca9ec3961b5836c455cdd64b51745c81f7f022a0e2c697df4f9545a392c48_0", "is_ignored": false, "lines": "    __nptr = (char *)malloc(*(int *)(*(int *)(*piVar2 + 8) + 4) + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 34, "offset": 912}, "start": {"col": 15, "line": 34, "offset": 906}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 34, "offset": 919}, "start": {"col": 22, "line": 34, "offset": 913}}, "$RET": {"abstract_content": "__nptr", "end": {"col": 11, "line": 34, "offset": 902}, "start": {"col": 5, "line": 34, "offset": 896}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParsePacketHeader_004132d0.c", "start": {"col": 5, "line": 34, "offset": 896}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 69, "line": 34, "offset": 960}, "extra": {"engine_kind": "OSS", "fingerprint": "f67a3574a3f8c1d3ad656cc96b04372417f9419785650d2f6898c344fa7e99f3bf64245c95f6ad8f7968e01ed1cd45c0025dfbac187499524cad77559cf59605_0", "is_ignored": false, "lines": "    __nptr = (char *)malloc(*(int *)(*(int *)(*piVar2 + 8) + 4) + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 34, "offset": 919}, "start": {"col": 22, "line": 34, "offset": 913}}, "$X": {"abstract_content": "*(int**(int**piVar2+8+4", "end": {"col": 63, "line": 34, "offset": 954}, "start": {"col": 29, "line": 34, "offset": 920}}, "$Y": {"abstract_content": "1", "end": {"col": 68, "line": 34, "offset": 959}, "start": {"col": 67, "line": 34, "offset": 958}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParsePacketHeader_004132d0.c", "start": {"col": 22, "line": 34, "offset": 913}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 69, "line": 34, "offset": 960}, "extra": {"engine_kind": "OSS", "fingerprint": "824f8f59d2ad3c96b77075cd88240ceb5ad534940b228366a3cdded33d08855e17284ce1f65256db76184aa8c25bd3c0240e819ab0a72669c5908d6a643f98c3_1", "is_ignored": false, "lines": "    __nptr = (char *)malloc(*(int *)(*(int *)(*piVar2 + 8) + 4) + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 34, "offset": 919}, "start": {"col": 22, "line": 34, "offset": 913}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParsePacketHeader_004132d0.c", "start": {"col": 22, "line": 34, "offset": 913}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 83, "line": 35, "offset": 1044}, "extra": {"engine_kind": "OSS", "fingerprint": "57f8a6ebb568b626674c5681d4d1f6f6460942fc1a309734fd2f432ce9c73996dd5854a13d1a5e7f1169ed57dcb72b0df690e8cedefa069dca6b473ba860f507_0", "is_ignored": false, "lines": "    memcpy(__nptr,**(void ***)(*piVar2 + 8),(size_t)(*(void ***)(*piVar2 + 8))[1]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 35, "offset": 972}, "start": {"col": 5, "line": 35, "offset": 966}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParsePacketHeader_004132d0.c", "start": {"col": 5, "line": 35, "offset": 966}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 61, "offset": 1986}, "extra": {"engine_kind": "OSS", "fingerprint": "824f8f59d2ad3c96b77075cd88240ceb5ad534940b228366a3cdded33d08855e17284ce1f65256db76184aa8c25bd3c0240e819ab0a72669c5908d6a643f98c3_2", "is_ignored": false, "lines": "    piVar4 = (int *)malloc(0x18);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 61, "offset": 1980}, "start": {"col": 21, "line": 61, "offset": 1974}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParsePacketHeader_004132d0.c", "start": {"col": 21, "line": 61, "offset": 1974}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 33, "line": 61, "offset": 1986}, "extra": {"engine_kind": "OSS", "fingerprint": "c6a7c9eacb291419df2d317fbd98b83947c9cd596b4f18f56f9fba2712a79913f8bb87048eb08a65f6f87d26b38930fd274908ae32b0fa07a263ddc70d0a5bd8_0", "is_ignored": false, "lines": "    piVar4 = (int *)malloc(0x18);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x18", "end": {"col": 32, "line": 61, "offset": 1985}, "start": {"col": 28, "line": 61, "offset": 1981}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParsePacketHeader_004132d0.c", "start": {"col": 21, "line": 61, "offset": 1974}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 32, "line": 18, "offset": 312}, "extra": {"engine_kind": "OSS", "fingerprint": "c7a432cf024c5a2044ddd7e36c489cf692c3d6857ecedacb813edffc56dff6b2b7a636f63ece3541908c7fbefee99d9201557a74ace76a960252d486b22acab1_0", "is_ignored": false, "lines": "  ppiVar3 = (int **)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "int**", "end": {"col": 20, "line": 18, "offset": 300}, "start": {"col": 14, "line": 18, "offset": 294}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 18, "offset": 307}, "start": {"col": 21, "line": 18, "offset": 301}}, "$RET": {"abstract_content": "ppiVar3", "end": {"col": 10, "line": 18, "offset": 290}, "start": {"col": 3, "line": 18, "offset": 283}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseString_004109c0.c", "start": {"col": 3, "line": 18, "offset": 283}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 32, "line": 18, "offset": 312}, "extra": {"engine_kind": "OSS", "fingerprint": "e50440a781a58895c6c6cef2b08c18b93da11c8b453bd7b8bf5b90b081b6ad859d9a830f5f312734eb7bf33705e64341aa66673485792d9b19e0954b0d612dc0_0", "is_ignored": false, "lines": "  ppiVar3 = (int **)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 27, "line": 18, "offset": 307}, "start": {"col": 21, "line": 18, "offset": 301}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseString_004109c0.c", "start": {"col": 21, "line": 18, "offset": 301}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 32, "line": 18, "offset": 312}, "extra": {"engine_kind": "OSS", "fingerprint": "83afbb3d9a808c85eb30d64dcea1d3d8a1e7e0d19271619140cb92082f185275b61b9d0b7742df6c3240ffdbdc3c5cff405c0a033c9f191b29c9a6e4bafd5f30_0", "is_ignored": false, "lines": "  ppiVar3 = (int **)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 31, "line": 18, "offset": 311}, "start": {"col": 28, "line": 18, "offset": 308}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseString_004109c0.c", "start": {"col": 21, "line": 18, "offset": 301}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 34, "line": 23, "offset": 436}, "extra": {"engine_kind": "OSS", "fingerprint": "b37a9d5c728666997815ef24848558d7d217d8d259fb60c1ce5435e0ab4047776b23e736c17bb897e28494af7c9e80eaf294789c92c5f571ae100e298353d0d0_0", "is_ignored": false, "lines": "      piVar5 = (int *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "int*", "end": {"col": 22, "line": 23, "offset": 424}, "start": {"col": 17, "line": 23, "offset": 419}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 29, "line": 23, "offset": 431}, "start": {"col": 23, "line": 23, "offset": 425}}, "$RET": {"abstract_content": "piVar5", "end": {"col": 13, "line": 23, "offset": 415}, "start": {"col": 7, "line": 23, "offset": 409}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseString_004109c0.c", "start": {"col": 7, "line": 23, "offset": 409}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 34, "line": 23, "offset": 436}, "extra": {"engine_kind": "OSS", "fingerprint": "e50440a781a58895c6c6cef2b08c18b93da11c8b453bd7b8bf5b90b081b6ad859d9a830f5f312734eb7bf33705e64341aa66673485792d9b19e0954b0d612dc0_1", "is_ignored": false, "lines": "      piVar5 = (int *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 29, "line": 23, "offset": 431}, "start": {"col": 23, "line": 23, "offset": 425}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseString_004109c0.c", "start": {"col": 23, "line": 23, "offset": 425}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 34, "line": 23, "offset": 436}, "extra": {"engine_kind": "OSS", "fingerprint": "83afbb3d9a808c85eb30d64dcea1d3d8a1e7e0d19271619140cb92082f185275b61b9d0b7742df6c3240ffdbdc3c5cff405c0a033c9f191b29c9a6e4bafd5f30_1", "is_ignored": false, "lines": "      piVar5 = (int *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 33, "line": 23, "offset": 435}, "start": {"col": 30, "line": 23, "offset": 432}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseString_004109c0.c", "start": {"col": 23, "line": 23, "offset": 425}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 38, "line": 47, "offset": 1068}, "extra": {"engine_kind": "OSS", "fingerprint": "b37a9d5c728666997815ef24848558d7d217d8d259fb60c1ce5435e0ab4047776b23e736c17bb897e28494af7c9e80eaf294789c92c5f571ae100e298353d0d0_1", "is_ignored": false, "lines": "          piVar5 = (int *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "int*", "end": {"col": 26, "line": 47, "offset": 1056}, "start": {"col": 21, "line": 47, "offset": 1051}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 33, "line": 47, "offset": 1063}, "start": {"col": 27, "line": 47, "offset": 1057}}, "$RET": {"abstract_content": "piVar5", "end": {"col": 17, "line": 47, "offset": 1047}, "start": {"col": 11, "line": 47, "offset": 1041}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseString_004109c0.c", "start": {"col": 11, "line": 47, "offset": 1041}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 47, "offset": 1068}, "extra": {"engine_kind": "OSS", "fingerprint": "e50440a781a58895c6c6cef2b08c18b93da11c8b453bd7b8bf5b90b081b6ad859d9a830f5f312734eb7bf33705e64341aa66673485792d9b19e0954b0d612dc0_2", "is_ignored": false, "lines": "          piVar5 = (int *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 33, "line": 47, "offset": 1063}, "start": {"col": 27, "line": 47, "offset": 1057}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseString_004109c0.c", "start": {"col": 27, "line": 47, "offset": 1057}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 47, "offset": 1068}, "extra": {"engine_kind": "OSS", "fingerprint": "83afbb3d9a808c85eb30d64dcea1d3d8a1e7e0d19271619140cb92082f185275b61b9d0b7742df6c3240ffdbdc3c5cff405c0a033c9f191b29c9a6e4bafd5f30_2", "is_ignored": false, "lines": "          piVar5 = (int *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 37, "line": 47, "offset": 1067}, "start": {"col": 34, "line": 47, "offset": 1064}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseString_004109c0.c", "start": {"col": 27, "line": 47, "offset": 1057}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 59, "line": 15, "offset": 292}, "extra": {"engine_kind": "OSS", "fingerprint": "be7a3a9c53abb7e40beeac21b49e89ded66d727093e327acfa96d964ab4c18cb598d14b2696018dac441a3552bf3caa89dcbd4b9329540a44efef1c8a52b17b6_0", "is_ignored": false, "lines": "  iVar2 = ILibParseString(param_1,0,sVar1,&DAT_00415bb4,3);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar2", "end": {"col": 8, "line": 15, "offset": 241}, "start": {"col": 3, "line": 15, "offset": 236}}, "$UNSIGNED": {"abstract_content": "sVar1", "end": {"col": 42, "line": 15, "offset": 275}, "propagated_value": {"svalue_abstract_content": "strlen(param_1)", "svalue_end": {"col": 26, "line": 14, "offset": 232}, "svalue_start": {"col": 11, "line": 14, "offset": 217}}, "start": {"col": 37, "line": 15, "offset": 270}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseUri_00412a10.c", "start": {"col": 3, "line": 15, "offset": 236}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 19, "offset": 468}, "extra": {"engine_kind": "OSS", "fingerprint": "ad2d5d8e0b3f59f930f3116357c1067efca2809522cb54d4037841849679e3f43c8d7eafde09aff2915a74d293292f20f4636fdd23a052653efd579a95550b63_0", "is_ignored": false, "lines": "  sVar1 = iVar6 - *(int *)(*piVar3 + 4);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar6", "end": {"col": 16, "line": 19, "offset": 445}, "start": {"col": 11, "line": 19, "offset": 440}}, "$UNSIGNED": {"abstract_content": "sVar1", "end": {"col": 8, "line": 19, "offset": 437}, "start": {"col": 3, "line": 19, "offset": 432}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseUri_00412a10.c", "start": {"col": 3, "line": 19, "offset": 432}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 29, "line": 20, "offset": 499}, "extra": {"engine_kind": "OSS", "fingerprint": "e6b0218de1dbd8507c3698f641f9e580947162dff0d2c68d52beb5a67b920d5531726bcccf9e1d08fcf614df8292e1c24b30ebf60ab4b589aeef372111e411d6_0", "is_ignored": false, "lines": "  pvVar4 = malloc(sVar1 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 20, "offset": 488}, "start": {"col": 12, "line": 20, "offset": 482}}, "$RET": {"abstract_content": "pvVar4", "end": {"col": 9, "line": 20, "offset": 479}, "start": {"col": 3, "line": 20, "offset": 473}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseUri_00412a10.c", "start": {"col": 3, "line": 20, "offset": 473}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 29, "line": 20, "offset": 499}, "extra": {"engine_kind": "OSS", "fingerprint": "023d18129b1bc641b35601a6aca260ea928fba206096abf097181b2f17ef1489c1537a11f62de78cace283642b00bf1e9c0592a3ed1a74ef29983774404075b6_0", "is_ignored": false, "lines": "  pvVar4 = malloc(sVar1 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 20, "offset": 488}, "start": {"col": 12, "line": 20, "offset": 482}}, "$X": {"abstract_content": "sVar1", "end": {"col": 24, "line": 20, "offset": 494}, "start": {"col": 19, "line": 20, "offset": 489}}, "$Y": {"abstract_content": "1", "end": {"col": 28, "line": 20, "offset": 498}, "start": {"col": 27, "line": 20, "offset": 497}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseUri_00412a10.c", "start": {"col": 12, "line": 20, "offset": 482}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 29, "line": 20, "offset": 499}, "extra": {"engine_kind": "OSS", "fingerprint": "4512b708d8f63a624186fd86a5ef747ff3970f951c930e14a5017b1334a280190f4e74e8aa195208ebfabf67cc303580a3226f85b4a6742dcd8924a8c4f00965_0", "is_ignored": false, "lines": "  pvVar4 = malloc(sVar1 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 20, "offset": 488}, "start": {"col": 12, "line": 20, "offset": 482}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseUri_00412a10.c", "start": {"col": 12, "line": 20, "offset": 482}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 63, "line": 22, "offset": 584}, "extra": {"engine_kind": "OSS", "fingerprint": "cd3b3309e0c9e442273c3288feb95d5f855f9d37dbb1ca01f89d2ce9c10e91abc5d3bca1384d933c91ddd32f0ee4574b1890ee9dcb222976f708949a5d59c2cd_0", "is_ignored": false, "lines": "  memcpy(pvVar4,(void *)(iVar7 + *(int *)(*piVar3 + 4)),sVar1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 22, "offset": 530}, "start": {"col": 3, "line": 22, "offset": 524}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseUri_00412a10.c", "start": {"col": 3, "line": 22, "offset": 524}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 57, "line": 30, "offset": 884}, "extra": {"engine_kind": "OSS", "fingerprint": "cf359ced22cfc6ceea557a81506ef3b54622bbab8a9c854c725c9fe04f9997ab16d1d8f85f860967d6f9c3a750744d00cc220d15721606a92918c91d3f1ac7e6_0", "is_ignored": false, "lines": "    __nptr = (char *)malloc(*(int *)(piVar5[1] + 4) + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 30, "offset": 848}, "start": {"col": 15, "line": 30, "offset": 842}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 30, "offset": 855}, "start": {"col": 22, "line": 30, "offset": 849}}, "$RET": {"abstract_content": "__nptr", "end": {"col": 11, "line": 30, "offset": 838}, "start": {"col": 5, "line": 30, "offset": 832}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseUri_00412a10.c", "start": {"col": 5, "line": 30, "offset": 832}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 57, "line": 30, "offset": 884}, "extra": {"engine_kind": "OSS", "fingerprint": "0982344fd414939bfb3f085395ef976f7a22d02438267c7e7b27a3576d7f57364ac3ef99835156aac357e6bee7877059235551726d32755007ed5e65fd905231_0", "is_ignored": false, "lines": "    __nptr = (char *)malloc(*(int *)(piVar5[1] + 4) + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 30, "offset": 855}, "start": {"col": 22, "line": 30, "offset": 849}}, "$X": {"abstract_content": "*(int*piVar5[1]+4", "end": {"col": 51, "line": 30, "offset": 878}, "start": {"col": 29, "line": 30, "offset": 856}}, "$Y": {"abstract_content": "1", "end": {"col": 56, "line": 30, "offset": 883}, "start": {"col": 55, "line": 30, "offset": 882}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseUri_00412a10.c", "start": {"col": 22, "line": 30, "offset": 849}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 30, "offset": 884}, "extra": {"engine_kind": "OSS", "fingerprint": "4512b708d8f63a624186fd86a5ef747ff3970f951c930e14a5017b1334a280190f4e74e8aa195208ebfabf67cc303580a3226f85b4a6742dcd8924a8c4f00965_1", "is_ignored": false, "lines": "    __nptr = (char *)malloc(*(int *)(piVar5[1] + 4) + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 30, "offset": 855}, "start": {"col": 22, "line": 30, "offset": 849}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseUri_00412a10.c", "start": {"col": 22, "line": 30, "offset": 849}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 71, "line": 31, "offset": 956}, "extra": {"engine_kind": "OSS", "fingerprint": "cd3b3309e0c9e442273c3288feb95d5f855f9d37dbb1ca01f89d2ce9c10e91abc5d3bca1384d933c91ddd32f0ee4574b1890ee9dcb222976f708949a5d59c2cd_1", "is_ignored": false, "lines": "    memcpy(__nptr,*(void **)piVar5[1],(size_t)((void **)piVar5[1])[1]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 31, "offset": 896}, "start": {"col": 5, "line": 31, "offset": 890}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseUri_00412a10.c", "start": {"col": 5, "line": 31, "offset": 890}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 34, "line": 37, "offset": 1112}, "extra": {"engine_kind": "OSS", "fingerprint": "61690d792a4264f70d4b236917a16d1f324209a9744bf2d0b6a121385e0fe27131d54948adfa60b3d9b42a2c54fbb42f452d888c485c9616c5a6514f93f44b52_0", "is_ignored": false, "lines": "  sVar1 = *(size_t *)(*piVar5 + 4);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "4", "end": {"col": 34, "line": 37, "offset": 1112}, "start": {"col": 33, "line": 37, "offset": 1111}}, "$UNSIGNED": {"abstract_content": "sVar1", "end": {"col": 8, "line": 37, "offset": 1086}, "start": {"col": 3, "line": 37, "offset": 1081}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseUri_00412a10.c", "start": {"col": 3, "line": 37, "offset": 1081}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 29, "line": 38, "offset": 1143}, "extra": {"engine_kind": "OSS", "fingerprint": "e6b0218de1dbd8507c3698f641f9e580947162dff0d2c68d52beb5a67b920d5531726bcccf9e1d08fcf614df8292e1c24b30ebf60ab4b589aeef372111e411d6_1", "is_ignored": false, "lines": "  pvVar4 = malloc(sVar1 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 38, "offset": 1132}, "start": {"col": 12, "line": 38, "offset": 1126}}, "$RET": {"abstract_content": "pvVar4", "end": {"col": 9, "line": 38, "offset": 1123}, "start": {"col": 3, "line": 38, "offset": 1117}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseUri_00412a10.c", "start": {"col": 3, "line": 38, "offset": 1117}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 29, "line": 38, "offset": 1143}, "extra": {"engine_kind": "OSS", "fingerprint": "023d18129b1bc641b35601a6aca260ea928fba206096abf097181b2f17ef1489c1537a11f62de78cace283642b00bf1e9c0592a3ed1a74ef29983774404075b6_1", "is_ignored": false, "lines": "  pvVar4 = malloc(sVar1 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 38, "offset": 1132}, "start": {"col": 12, "line": 38, "offset": 1126}}, "$X": {"abstract_content": "sVar1", "end": {"col": 24, "line": 38, "offset": 1138}, "start": {"col": 19, "line": 38, "offset": 1133}}, "$Y": {"abstract_content": "1", "end": {"col": 28, "line": 38, "offset": 1142}, "start": {"col": 27, "line": 38, "offset": 1141}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseUri_00412a10.c", "start": {"col": 12, "line": 38, "offset": 1126}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 29, "line": 38, "offset": 1143}, "extra": {"engine_kind": "OSS", "fingerprint": "4512b708d8f63a624186fd86a5ef747ff3970f951c930e14a5017b1334a280190f4e74e8aa195208ebfabf67cc303580a3226f85b4a6742dcd8924a8c4f00965_2", "is_ignored": false, "lines": "  pvVar4 = malloc(sVar1 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 38, "offset": 1132}, "start": {"col": 12, "line": 38, "offset": 1126}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseUri_00412a10.c", "start": {"col": 12, "line": 38, "offset": 1126}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 40, "offset": 1206}, "extra": {"engine_kind": "OSS", "fingerprint": "cd3b3309e0c9e442273c3288feb95d5f855f9d37dbb1ca01f89d2ce9c10e91abc5d3bca1384d933c91ddd32f0ee4574b1890ee9dcb222976f708949a5d59c2cd_2", "is_ignored": false, "lines": "  memcpy(pvVar4,*(void **)*piVar5,sVar1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 40, "offset": 1174}, "start": {"col": 3, "line": 40, "offset": 1168}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseUri_00412a10.c", "start": {"col": 3, "line": 40, "offset": 1168}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-truncation", "end": {"col": 43, "line": 78, "offset": 2125}, "extra": {"engine_kind": "OSS", "fingerprint": "e1aa2aee32e0183fde0742f4eae4dd0a9399c938101d546197d54da90826f3a1083eb57ab192905bf655cd5f2e4be324732c2d377e4d92fc7ff8961079b20412_0", "is_ignored": false, "lines": "        cVar1 = *(char *)(local_40 + iVar6);", "message": "Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/197", "https://cwe.mitre.org/data/definitions/681", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms"]}, "metavars": {"$LARGE": {"abstract_content": "local_40", "end": {"col": 35, "line": 78, "offset": 2117}, "start": {"col": 27, "line": 78, "offset": 2109}}, "$NARROW": {"abstract_content": "cVar1", "end": {"col": 14, "line": 78, "offset": 2096}, "start": {"col": 9, "line": 78, "offset": 2091}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseXML_00412664.c", "start": {"col": 9, "line": 78, "offset": 2091}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 37, "line": 90, "offset": 2479}, "extra": {"engine_kind": "OSS", "fingerprint": "b8a98a1b93282a6dc70f0576ab03e9492ec0d5144f38e4e7de1634073b0f615d0b567eae1e456ef5390a1b9e7822a0902bd99e3dfb348e522749be6d6bd5abea_0", "is_ignored": false, "lines": "        piVar7 = (int *)malloc(0x34);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "int*", "end": {"col": 24, "line": 90, "offset": 2466}, "start": {"col": 19, "line": 90, "offset": 2461}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 90, "offset": 2473}, "start": {"col": 25, "line": 90, "offset": 2467}}, "$RET": {"abstract_content": "piVar7", "end": {"col": 15, "line": 90, "offset": 2457}, "start": {"col": 9, "line": 90, "offset": 2451}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseXML_00412664.c", "start": {"col": 9, "line": 90, "offset": 2451}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 90, "offset": 2479}, "extra": {"engine_kind": "OSS", "fingerprint": "a8d150d8ef073dede92ad8a2953e0dd0cb4f67b002c8e746dc2058cacef532de3761bfd47191acd976f16307b2bb393aa1221d29797762404dc8a127b450aa54_0", "is_ignored": false, "lines": "        piVar7 = (int *)malloc(0x34);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 31, "line": 90, "offset": 2473}, "start": {"col": 25, "line": 90, "offset": 2467}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseXML_00412664.c", "start": {"col": 25, "line": 90, "offset": 2467}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 90, "offset": 2479}, "extra": {"engine_kind": "OSS", "fingerprint": "fc3f3a69ec80e76eed3c794c65b8b58c66bdbb22a5c7b403bf7e1f9e241a6887b910689721b6dacf7ed574bab1f773a92ead046f4d5ad3fccf74bc297979f35a_0", "is_ignored": false, "lines": "        piVar7 = (int *)malloc(0x34);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x34", "end": {"col": 36, "line": 90, "offset": 2478}, "start": {"col": 32, "line": 90, "offset": 2474}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseXML_00412664.c", "start": {"col": 25, "line": 90, "offset": 2467}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 91, "offset": 2510}, "extra": {"engine_kind": "OSS", "fingerprint": "7cdfd8effc5b51c459296ca7cd516d3f7c660c63828c4962af09660d28cf34cdf2bba6ccb1ce13f574d8c8c5dde1a7cb6255f5d80cd182c7cebecb118170753a_0", "is_ignored": false, "lines": "        memset(piVar7,0,0x34);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 24, "line": 91, "offset": 2504}, "start": {"col": 23, "line": 91, "offset": 2503}}, "$DST": {"abstract_content": "piVar7", "end": {"col": 22, "line": 91, "offset": 2502}, "propagated_value": {"svalue_abstract_content": "(int*malloc(0x34)", "svalue_end": {"col": 37, "line": 90, "offset": 2479}, "svalue_start": {"col": 18, "line": 90, "offset": 2460}}, "start": {"col": 16, "line": 91, "offset": 2496}}, "$LEN": {"abstract_content": "0x34", "end": {"col": 29, "line": 91, "offset": 2509}, "start": {"col": 25, "line": 91, "offset": 2505}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseXML_00412664.c", "start": {"col": 9, "line": 91, "offset": 2489}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 36, "line": 114, "offset": 3143}, "extra": {"engine_kind": "OSS", "fingerprint": "d28702670def68bb24e9c976965c25c216942618b87b04a5d7820d0e96866b2c97abfd636d7b05fbed7df58a79dee965c37502b548415d7bd79118ea963c16e9_0", "is_ignored": false, "lines": "          __s = (int *)malloc(0x34);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "int*", "end": {"col": 23, "line": 114, "offset": 3130}, "start": {"col": 18, "line": 114, "offset": 3125}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 30, "line": 114, "offset": 3137}, "start": {"col": 24, "line": 114, "offset": 3131}}, "$RET": {"abstract_content": "__s", "end": {"col": 14, "line": 114, "offset": 3121}, "start": {"col": 11, "line": 114, "offset": 3118}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseXML_00412664.c", "start": {"col": 11, "line": 114, "offset": 3118}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 114, "offset": 3143}, "extra": {"engine_kind": "OSS", "fingerprint": "a8d150d8ef073dede92ad8a2953e0dd0cb4f67b002c8e746dc2058cacef532de3761bfd47191acd976f16307b2bb393aa1221d29797762404dc8a127b450aa54_1", "is_ignored": false, "lines": "          __s = (int *)malloc(0x34);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 30, "line": 114, "offset": 3137}, "start": {"col": 24, "line": 114, "offset": 3131}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseXML_00412664.c", "start": {"col": 24, "line": 114, "offset": 3131}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 114, "offset": 3143}, "extra": {"engine_kind": "OSS", "fingerprint": "fc3f3a69ec80e76eed3c794c65b8b58c66bdbb22a5c7b403bf7e1f9e241a6887b910689721b6dacf7ed574bab1f773a92ead046f4d5ad3fccf74bc297979f35a_1", "is_ignored": false, "lines": "          __s = (int *)malloc(0x34);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x34", "end": {"col": 35, "line": 114, "offset": 3142}, "start": {"col": 31, "line": 114, "offset": 3138}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseXML_00412664.c", "start": {"col": 24, "line": 114, "offset": 3131}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 29, "line": 115, "offset": 3173}, "extra": {"engine_kind": "OSS", "fingerprint": "f655e280985e9b689a723cdddf08d0068e3105ed183ebc5463cd109a8c32b4503f614e90033304695f8ec055f92783f0b2754102c8e9d69c088fc4d3440c1eac_0", "is_ignored": false, "lines": "          memset(__s,0,0x34);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 23, "line": 115, "offset": 3167}, "start": {"col": 22, "line": 115, "offset": 3166}}, "$DST": {"abstract_content": "__s", "end": {"col": 21, "line": 115, "offset": 3165}, "propagated_value": {"svalue_abstract_content": "(int*malloc(0x34)", "svalue_end": {"col": 36, "line": 114, "offset": 3143}, "svalue_start": {"col": 17, "line": 114, "offset": 3124}}, "start": {"col": 18, "line": 115, "offset": 3162}}, "$LEN": {"abstract_content": "0x34", "end": {"col": 28, "line": 115, "offset": 3172}, "start": {"col": 24, "line": 115, "offset": 3168}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibParseXML_00412664.c", "start": {"col": 11, "line": 115, "offset": 3155}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 59, "line": 30, "offset": 708}, "extra": {"engine_kind": "OSS", "fingerprint": "0b7e6ac2a820ea00b49a8f91cc79c80b80e01e2bba178a277baaf8b30f8c16aa27a2f3d10444cd3224783ad283d9fa1174d13c16dcb0105889d0aadd08fc2a70_0", "is_ignored": false, "lines": "      iVar3 = memcmp(*ppvVar2,*param_1,(size_t)ppvVar2[1]);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar3", "end": {"col": 12, "line": 30, "offset": 661}, "start": {"col": 7, "line": 30, "offset": 656}}, "$UNSIGNED": {"abstract_content": "(size_t ppvVar2[1]", "end": {"col": 58, "line": 30, "offset": 707}, "start": {"col": 40, "line": 30, "offset": 689}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibProcessXMLNodeList_00413c24.c", "start": {"col": 7, "line": 30, "offset": 656}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 64, "line": 25, "offset": 609}, "extra": {"engine_kind": "OSS", "fingerprint": "5cabeed6d7ed658a263a9fc03159ec05e07d38c454eed0c454e056354c8521d8f11e0c83c414df6365625c0c4a051ec1c9d6affe594a4eff107b40e49bf67da3_0", "is_ignored": false, "lines": "          (iVar3 = memcmp(*ppvVar5,*param_1,(size_t)ppvVar5[1]), iVar3 != 0));", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar3", "end": {"col": 17, "line": 25, "offset": 562}, "start": {"col": 12, "line": 25, "offset": 557}}, "$UNSIGNED": {"abstract_content": "(size_t ppvVar5[1]", "end": {"col": 63, "line": 25, "offset": 608}, "start": {"col": 45, "line": 25, "offset": 590}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibReadInnerXML_00413a08.c", "start": {"col": 12, "line": 25, "offset": 557}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 56, "line": 25, "offset": 669}, "extra": {"engine_kind": "OSS", "fingerprint": "b268932ed105a86362424606db8dad9cdc02e1eacc7ea7aa558085f4ce6991c1452e98f86f90caa1c7ddf22a6ebcaf951ac0184b57a2d70d2243c757860b4d76_0", "is_ignored": false, "lines": "  __s = (char *)malloc(*(int *)(param_1 + 0x14) + 0x69);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 16, "line": 25, "offset": 629}, "start": {"col": 10, "line": 25, "offset": 623}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 23, "line": 25, "offset": 636}, "start": {"col": 17, "line": 25, "offset": 630}}, "$RET": {"abstract_content": "__s", "end": {"col": 6, "line": 25, "offset": 619}, "start": {"col": 3, "line": 25, "offset": 616}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSSDP_IPAddressListChanged_0040f9fc.c", "start": {"col": 3, "line": 25, "offset": 616}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 56, "line": 25, "offset": 669}, "extra": {"engine_kind": "OSS", "fingerprint": "75a13264c5c30f96b291f9f81fd3bf6c05be0ef9d6cde8279755cbe2a43fe9d8c4dbd5df4fa6448f8a17e4638639ddcca5e366a1fe991a7cd2dd2fe64e2b7b33_0", "is_ignored": false, "lines": "  __s = (char *)malloc(*(int *)(param_1 + 0x14) + 0x69);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 23, "line": 25, "offset": 636}, "start": {"col": 17, "line": 25, "offset": 630}}, "$X": {"abstract_content": "*(int*param_1+0x14", "end": {"col": 47, "line": 25, "offset": 660}, "start": {"col": 24, "line": 25, "offset": 637}}, "$Y": {"abstract_content": "0x69", "end": {"col": 55, "line": 25, "offset": 668}, "start": {"col": 51, "line": 25, "offset": 664}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSSDP_IPAddressListChanged_0040f9fc.c", "start": {"col": 17, "line": 25, "offset": 630}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 56, "line": 25, "offset": 669}, "extra": {"engine_kind": "OSS", "fingerprint": "6e0ff1c2fe89fb31a05a18d2ec65873513b8510aed5cc5f09bff39d8578cfa8a10e2578136afdf65f168facf9baa7ca1db335de720439d88f0c8a2975c04e71d_0", "is_ignored": false, "lines": "  __s = (char *)malloc(*(int *)(param_1 + 0x14) + 0x69);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 23, "line": 25, "offset": 636}, "start": {"col": 17, "line": 25, "offset": 630}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSSDP_IPAddressListChanged_0040f9fc.c", "start": {"col": 17, "line": 25, "offset": 630}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 50, "line": 28, "offset": 862}, "extra": {"engine_kind": "OSS", "fingerprint": "37317a081214619c6fc6f9bc51186bcc29d94a91f1c3e6a7cffdf89a2f423dad1d9b0461d6d1b3b5239f416d53de964f9ed4a5890210f4c646beb32f15be70ef_0", "is_ignored": false, "lines": "  __n = sprintf(__s,\n                \"M-SEARCH * HTTP/1.1\\r\\nMX: 3\\r\\nST: %s\\r\\nHOST: 239.255.255.250:1900\\r\\nMAN: \\\"ssdp:discover\\\"\\r\\n\\r\\n\"\n                ,*(undefined4 *)(param_1 + 0x10));", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "param_1", "end": {"col": 41, "line": 28, "offset": 853}, "start": {"col": 34, "line": 28, "offset": 846}}, "$UNSIGNED": {"abstract_content": "__n", "end": {"col": 6, "line": 26, "offset": 676}, "start": {"col": 3, "line": 26, "offset": 673}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSSDP_IPAddressListChanged_0040f9fc.c", "start": {"col": 3, "line": 26, "offset": 673}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 50, "line": 28, "offset": 862}, "extra": {"engine_kind": "OSS", "fingerprint": "2601fb170dd20e80317ea7fdbe745d55c98cbd2c1451d2d4b100b221eaffa2c5bd0e914196a2a7d0fa4a8f17f2b2f5ac324c0fdfe5bb79874236d34dffbb8ac0_0", "is_ignored": false, "lines": "  __n = sprintf(__s,\n                \"M-SEARCH * HTTP/1.1\\r\\nMX: 3\\r\\nST: %s\\r\\nHOST: 239.255.255.250:1900\\r\\nMAN: \\\"ssdp:discover\\\"\\r\\n\\r\\n\"\n                ,*(undefined4 *)(param_1 + 0x10));", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"M-SEARCH * HTTP/1.1\\r\\nMX: 3\\r\\nST: %s\\r\\nHOST: 239.255.255.250:1900\\r\\nMAN: \\\"ssdp:discover\\\"\\r\\n\\r\\n\"", "end": {"col": 105, "line": 1, "offset": 104}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 20, "line": 26, "offset": 690}, "start": {"col": 17, "line": 26, "offset": 687}}, "$FMT": {"abstract_content": "\"M-SEARCH * HTTP/1.1\\r\\nMX: 3\\r\\nST: %s\\r\\nHOST: 239.255.255.250:1900\\r\\nMAN: \\\"ssdp:discover\\\"\\r\\n\\r\\n\"", "end": {"col": 121, "line": 27, "offset": 812}, "start": {"col": 17, "line": 27, "offset": 708}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSSDP_IPAddressListChanged_0040f9fc.c", "start": {"col": 9, "line": 26, "offset": 679}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 50, "line": 28, "offset": 862}, "extra": {"engine_kind": "OSS", "fingerprint": "0485d59d27d5a60923bd547b2aa9187056715a322f644192aed8f515b6f027feaf4e5795170b6d2936201c14a904f2aed31e0263f1b41b00c2cbca98b24a9962_0", "is_ignored": false, "lines": "  __n = sprintf(__s,\n                \"M-SEARCH * HTTP/1.1\\r\\nMX: 3\\r\\nST: %s\\r\\nHOST: 239.255.255.250:1900\\r\\nMAN: \\\"ssdp:discover\\\"\\r\\n\\r\\n\"\n                ,*(undefined4 *)(param_1 + 0x10));", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 16, "line": 26, "offset": 686}, "start": {"col": 9, "line": 26, "offset": 679}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSSDP_IPAddressListChanged_0040f9fc.c", "start": {"col": 9, "line": 26, "offset": 679}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 36, "line": 7, "offset": 152}, "extra": {"engine_kind": "OSS", "fingerprint": "f620791918c0a7ad542a5c0985bb8ea39bdf2c1f51d25cdd6a08377ae23d3414c94821c49ca529e77fe9b5956aba65be6657429287748a00abc8799f9c8cc0b6_0", "is_ignored": false, "lines": "  pvVar1 = malloc((int)param_3 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 7, "offset": 134}, "start": {"col": 12, "line": 7, "offset": 128}}, "$RET": {"abstract_content": "pvVar1", "end": {"col": 9, "line": 7, "offset": 125}, "start": {"col": 3, "line": 7, "offset": 119}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSetDirective_00411d2c.c", "start": {"col": 3, "line": 7, "offset": 119}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 36, "line": 7, "offset": 152}, "extra": {"engine_kind": "OSS", "fingerprint": "dfe1b85f9c91242dd17c2d5447320e7d9da115c69bf6336d4dbb039cc041e12ece53a4512f3ea307c48d97a97a502724ce82d455b8d9bd5df0412454123b1d6b_0", "is_ignored": false, "lines": "  pvVar1 = malloc((int)param_3 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 7, "offset": 134}, "start": {"col": 12, "line": 7, "offset": 128}}, "$X": {"abstract_content": "(int param_3", "end": {"col": 31, "line": 7, "offset": 147}, "start": {"col": 19, "line": 7, "offset": 135}}, "$Y": {"abstract_content": "1", "end": {"col": 35, "line": 7, "offset": 151}, "start": {"col": 34, "line": 7, "offset": 150}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSetDirective_00411d2c.c", "start": {"col": 12, "line": 7, "offset": 128}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 7, "offset": 152}, "extra": {"engine_kind": "OSS", "fingerprint": "1048c8d577d8585d8929af93181ddc7b5c18808ee8a6e3d5d528d8c0d97de914f59bf8db8cb381a5df9ca10d4d87da49edbd1acd4c622e65b1f3897cbe9e63c3_0", "is_ignored": false, "lines": "  pvVar1 = malloc((int)param_3 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 7, "offset": 134}, "start": {"col": 12, "line": 7, "offset": 128}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSetDirective_00411d2c.c", "start": {"col": 12, "line": 7, "offset": 128}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 7, "offset": 152}, "extra": {"engine_kind": "OSS", "fingerprint": "484b52683fead861a7db92251301334f1e4ca0ad5e79dfd58b76fa4e6bd781fbf5bfa49bbcf220672620464817859e816d5e164c542883790444b4e9fe6616f6_0", "is_ignored": false, "lines": "  pvVar1 = malloc((int)param_3 + 1);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "(int param_3+1", "end": {"col": 35, "line": 7, "offset": 151}, "start": {"col": 19, "line": 7, "offset": 135}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSetDirective_00411d2c.c", "start": {"col": 12, "line": 7, "offset": 128}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 9, "offset": 215}, "extra": {"engine_kind": "OSS", "fingerprint": "ea1bc3ee86aece9d1caa4af85c9075ab7eca16efe54370963e7b166646d1f58a39ed9b759eb1da4f32ae9fcee94b3a6b0d15624c42dba5959943f4d01557bf40_0", "is_ignored": false, "lines": "  memcpy(pvVar1,param_2,(size_t)param_3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 9, "offset": 183}, "start": {"col": 3, "line": 9, "offset": 177}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSetDirective_00411d2c.c", "start": {"col": 3, "line": 9, "offset": 177}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 36, "line": 12, "offset": 328}, "extra": {"engine_kind": "OSS", "fingerprint": "f620791918c0a7ad542a5c0985bb8ea39bdf2c1f51d25cdd6a08377ae23d3414c94821c49ca529e77fe9b5956aba65be6657429287748a00abc8799f9c8cc0b6_1", "is_ignored": false, "lines": "  pvVar1 = malloc((int)param_5 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 12, "offset": 310}, "start": {"col": 12, "line": 12, "offset": 304}}, "$RET": {"abstract_content": "pvVar1", "end": {"col": 9, "line": 12, "offset": 301}, "start": {"col": 3, "line": 12, "offset": 295}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSetDirective_00411d2c.c", "start": {"col": 3, "line": 12, "offset": 295}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 36, "line": 12, "offset": 328}, "extra": {"engine_kind": "OSS", "fingerprint": "9ade795306c53df35bc4095634e231bf6a5b9ce219595d360b97142cc3886f544afd6a14cbfcf35f7ed2e4864d20d8cf4437755ecaaba88504bee5235891d018_0", "is_ignored": false, "lines": "  pvVar1 = malloc((int)param_5 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 12, "offset": 310}, "start": {"col": 12, "line": 12, "offset": 304}}, "$X": {"abstract_content": "(int param_5", "end": {"col": 31, "line": 12, "offset": 323}, "start": {"col": 19, "line": 12, "offset": 311}}, "$Y": {"abstract_content": "1", "end": {"col": 35, "line": 12, "offset": 327}, "start": {"col": 34, "line": 12, "offset": 326}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSetDirective_00411d2c.c", "start": {"col": 12, "line": 12, "offset": 304}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 12, "offset": 328}, "extra": {"engine_kind": "OSS", "fingerprint": "1048c8d577d8585d8929af93181ddc7b5c18808ee8a6e3d5d528d8c0d97de914f59bf8db8cb381a5df9ca10d4d87da49edbd1acd4c622e65b1f3897cbe9e63c3_1", "is_ignored": false, "lines": "  pvVar1 = malloc((int)param_5 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 12, "offset": 310}, "start": {"col": 12, "line": 12, "offset": 304}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSetDirective_00411d2c.c", "start": {"col": 12, "line": 12, "offset": 304}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 12, "offset": 328}, "extra": {"engine_kind": "OSS", "fingerprint": "7e9c0d27abe9bb910cf73a5e030d0727b04acd5368a59f2cdd971b176d90309e1a7721c59b612f2e443a2332beffc0bac94116b14ab46d41f670078f1b8bf050_0", "is_ignored": false, "lines": "  pvVar1 = malloc((int)param_5 + 1);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "(int param_5+1", "end": {"col": 35, "line": 12, "offset": 327}, "start": {"col": 19, "line": 12, "offset": 311}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSetDirective_00411d2c.c", "start": {"col": 12, "line": 12, "offset": 304}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 14, "offset": 393}, "extra": {"engine_kind": "OSS", "fingerprint": "ea1bc3ee86aece9d1caa4af85c9075ab7eca16efe54370963e7b166646d1f58a39ed9b759eb1da4f32ae9fcee94b3a6b0d15624c42dba5959943f4d01557bf40_1", "is_ignored": false, "lines": "  memcpy(pvVar1,param_4,(size_t)param_5);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 14, "offset": 361}, "start": {"col": 3, "line": 14, "offset": 355}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSetDirective_00411d2c.c", "start": {"col": 3, "line": 14, "offset": 355}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 31, "line": 8, "offset": 182}, "extra": {"engine_kind": "OSS", "fingerprint": "ebaf03bbfcd2cc6e726e714c6b95379dee9662b41c8af0dd6c23cfe351a7b22dd226e4695e28d66363a81b451bc2b9865788c15f99fc8363801b80fba70202bb_0", "is_ignored": false, "lines": "  __dest = malloc(param_4 + 1);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 8, "offset": 169}, "start": {"col": 12, "line": 8, "offset": 163}}, "$RET": {"abstract_content": "__dest", "end": {"col": 9, "line": 8, "offset": 160}, "start": {"col": 3, "line": 8, "offset": 154}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSetStatusCode_00411df8.c", "start": {"col": 3, "line": 8, "offset": 154}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 31, "line": 8, "offset": 182}, "extra": {"engine_kind": "OSS", "fingerprint": "bb9030c1e680068bb2ecab3d82f2f0d6d080cec6e565ba7ba9f0edf06a86d274b8b7a17d43333f732d002ac84309e2453957c22f3d4523e6c1ae8b7c73fa2b78_0", "is_ignored": false, "lines": "  __dest = malloc(param_4 + 1);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 8, "offset": 169}, "start": {"col": 12, "line": 8, "offset": 163}}, "$X": {"abstract_content": "param_4", "end": {"col": 26, "line": 8, "offset": 177}, "start": {"col": 19, "line": 8, "offset": 170}}, "$Y": {"abstract_content": "1", "end": {"col": 30, "line": 8, "offset": 181}, "start": {"col": 29, "line": 8, "offset": 180}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSetStatusCode_00411df8.c", "start": {"col": 12, "line": 8, "offset": 163}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 31, "line": 8, "offset": 182}, "extra": {"engine_kind": "OSS", "fingerprint": "d28b5d7537294ee5ddcc3e1d9dbae6d660ce626c67f9276eb6c96ecb8694b4329c701cbd0188d44ec6a159affe2c0060426fcbb16c38782bc7efcf6d83e4fd42_0", "is_ignored": false, "lines": "  __dest = malloc(param_4 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 8, "offset": 169}, "start": {"col": 12, "line": 8, "offset": 163}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSetStatusCode_00411df8.c", "start": {"col": 12, "line": 8, "offset": 163}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 10, "offset": 255}, "extra": {"engine_kind": "OSS", "fingerprint": "4eb281c0b2208e1c89dc05d5bfd5b845a26172982d49edce922dceb74109fbb9f68fb253b6591e5f4c73b22b85c67d93c7fbc23235549ac0c2d5c9ccac2c4468_0", "is_ignored": false, "lines": "  memcpy(__dest,param_3,param_4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 10, "offset": 231}, "start": {"col": 3, "line": 10, "offset": 225}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/ILibSetStatusCode_00411df8.c", "start": {"col": 3, "line": 10, "offset": 225}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 34, "line": 9, "offset": 164}, "extra": {"engine_kind": "OSS", "fingerprint": "de3de935a4b5405832a11e198298f73612a4d99fd76977a3a2386ccd4a14f1570ef1dd4b0e822af9d6f83af5b687c0ff1b4551e7b02b1d1101f3abe803e6e4a5_0", "is_ignored": false, "lines": "  ppcVar1 = (code **)malloc(0x5c);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "code**", "end": {"col": 21, "line": 9, "offset": 151}, "start": {"col": 14, "line": 9, "offset": 144}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 9, "offset": 158}, "start": {"col": 22, "line": 9, "offset": 152}}, "$RET": {"abstract_content": "ppcVar1", "end": {"col": 10, "line": 9, "offset": 140}, "start": {"col": 3, "line": 9, "offset": 133}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPCreateControlPoint_0040264c.c", "start": {"col": 3, "line": 9, "offset": 133}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 34, "line": 9, "offset": 164}, "extra": {"engine_kind": "OSS", "fingerprint": "16d8c58b0a6c4c59b23a0cd34082a2d39ca32ed0af824e88d8b9ec1a56318c6369a546c6823f6659f64c634a179f9734ac9e65c410e7003b5726627f9e725a29_0", "is_ignored": false, "lines": "  ppcVar1 = (code **)malloc(0x5c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 9, "offset": 158}, "start": {"col": 22, "line": 9, "offset": 152}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPCreateControlPoint_0040264c.c", "start": {"col": 22, "line": 9, "offset": 152}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 34, "line": 9, "offset": 164}, "extra": {"engine_kind": "OSS", "fingerprint": "8321e7619244aa38acfa657f7fb9bd0ee3ccb88f2155ba2260512a50d3df32930e1e5d56427ea7dea473e2dc8e021753725349c493d2598045e3500cd20c1f39_0", "is_ignored": false, "lines": "  ppcVar1 = (code **)malloc(0x5c);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x5c", "end": {"col": 33, "line": 9, "offset": 163}, "start": {"col": 29, "line": 9, "offset": 159}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPCreateControlPoint_0040264c.c", "start": {"col": 22, "line": 9, "offset": 152}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 68, "line": 18, "offset": 408}, "extra": {"engine_kind": "OSS", "fingerprint": "36b1cc9f69b9128b772c9c384d7d5fad81bbe661abb74c1a5baaafdcf0b5dc3f85b7de11c02ddc7ae1fa6dd8aea5b0a15567648ea0421b94853ced1102d65889_0", "is_ignored": false, "lines": "    if ((sVar1 == param_3) && (iVar2 = strncmp(__s,param_2,param_3), iVar2 == 0)) break;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar2", "end": {"col": 37, "line": 18, "offset": 377}, "start": {"col": 32, "line": 18, "offset": 372}}, "$UNSIGNED": {"abstract_content": "param_3", "end": {"col": 67, "line": 18, "offset": 407}, "start": {"col": 60, "line": 18, "offset": 400}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPGetService_00402cf8.c", "start": {"col": 32, "line": 18, "offset": 372}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 33, "offset": 785}, "extra": {"engine_kind": "OSS", "fingerprint": "69e1608225fdfa6953b60f5b299b0e70b7640c6b9ae91d56ffee6491d4589ea9f909bd7cd357f8f4d2e783283a8f250c3755c1a8fc4c72ec72976a0141281ec4_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 33, "offset": 773}, "start": {"col": 12, "line": 33, "offset": 767}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 33, "offset": 780}, "start": {"col": 19, "line": 33, "offset": 774}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 33, "offset": 763}, "start": {"col": 3, "line": 33, "offset": 758}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_AddPortMapping_00407a4c.c", "start": {"col": 3, "line": 33, "offset": 758}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 33, "offset": 785}, "extra": {"engine_kind": "OSS", "fingerprint": "9d5fa27d57187c543689b53aac5da2f8553c92fa7b6e06452f95e25ff6e77f728f10d2e5b06a45da3a83055c1160d7953764c398ee9cb8754350e9a1f7a3db07_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 33, "offset": 780}, "start": {"col": 19, "line": 33, "offset": 774}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_AddPortMapping_00407a4c.c", "start": {"col": 19, "line": 33, "offset": 774}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 33, "offset": 785}, "extra": {"engine_kind": "OSS", "fingerprint": "8cfa7168f300e3cabcdd56b645330d75b8424a2e59588393cd757bc80379abe910c94fcff01b018b1aae34870c91045ea214a5b9aff39e9cf5c60478e0c4c8fd_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 33, "offset": 784}, "start": {"col": 26, "line": 33, "offset": 781}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_AddPortMapping_00407a4c.c", "start": {"col": 19, "line": 33, "offset": 774}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 81, "line": 40, "offset": 1056}, "extra": {"engine_kind": "OSS", "fingerprint": "02ba8a6d1f5a6632247eeb8c4ddf8143340766bca0a3eb5bd49acbc689be9c0627c8e28c6b627248d08dc99614849ec94eebadb50e56571762e5eef3d80c4430_0", "is_ignored": false, "lines": "    __s = (char *)malloc(local_30 + local_34 + 0x239 + local_38 + sVar1 + sVar2);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 40, "offset": 993}, "start": {"col": 12, "line": 40, "offset": 987}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 40, "offset": 1000}, "start": {"col": 19, "line": 40, "offset": 994}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 40, "offset": 983}, "start": {"col": 5, "line": 40, "offset": 980}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_AddPortMapping_00407a4c.c", "start": {"col": 5, "line": 40, "offset": 980}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 81, "line": 40, "offset": 1056}, "extra": {"engine_kind": "OSS", "fingerprint": "c30e4485c3eebbe445963cfe00bbd0610b54199b45d24a14666534eea5d0a5b0aa95aca475c36a5df83c6badbae6c5115b29ec88ab084ea544dd68c38bd4148b_0", "is_ignored": false, "lines": "    __s = (char *)malloc(local_30 + local_34 + 0x239 + local_38 + sVar1 + sVar2);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 40, "offset": 1000}, "start": {"col": 19, "line": 40, "offset": 994}}, "$X": {"abstract_content": "local_30+local_34+0x239+local_38+sVar1", "end": {"col": 72, "line": 40, "offset": 1047}, "start": {"col": 26, "line": 40, "offset": 1001}}, "$Y": {"abstract_content": "sVar2", "end": {"col": 80, "line": 40, "offset": 1055}, "propagated_value": {"svalue_abstract_content": "strlen(param_10)", "svalue_end": {"col": 29, "line": 39, "offset": 974}, "svalue_start": {"col": 13, "line": 39, "offset": 958}}, "start": {"col": 75, "line": 40, "offset": 1050}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_AddPortMapping_00407a4c.c", "start": {"col": 19, "line": 40, "offset": 994}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 81, "line": 40, "offset": 1056}, "extra": {"engine_kind": "OSS", "fingerprint": "9d5fa27d57187c543689b53aac5da2f8553c92fa7b6e06452f95e25ff6e77f728f10d2e5b06a45da3a83055c1160d7953764c398ee9cb8754350e9a1f7a3db07_1", "is_ignored": false, "lines": "    __s = (char *)malloc(local_30 + local_34 + 0x239 + local_38 + sVar1 + sVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 40, "offset": 1000}, "start": {"col": 19, "line": 40, "offset": 994}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_AddPortMapping_00407a4c.c", "start": {"col": 19, "line": 40, "offset": 994}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 47, "line": 46, "offset": 1829}, "extra": {"engine_kind": "OSS", "fingerprint": "6314a38227076a63860659ff2c596470c725233ae75c43fe737c3b696364078a0d67090e669b2b4ac617b1e49c3a3886f5c06c207d1ddde3656c2ac419669a4a_0", "is_ignored": false, "lines": "    iVar3 = sprintf(__s,\n                    \"%sAddPortMapping xmlns:u=\\\"%s\\\"><NewRemoteHost>%s</NewRemoteHost><NewExternalPort>%u</NewExternalPort><NewProtocol>%s</NewProtocol><NewInternalPort>%u</NewInternalPort><NewInternalClient>%s</NewInternalClient><NewEnabled>%d</NewEnabled><NewPortMappingDescription>%s</NewPortMappingDescription><NewLeaseDuration>%u</NewLeaseDuration></u:AddPortMapping%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,param_4,local_40,param_6,local_3c,param_8,param_9,param_10,param_11,\n                    \"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sAddPortMapping xmlns:u=\\\"%s\\\"><NewRemoteHost>%s</NewRemoteHost><NewExternalPort>%u</NewExternalPort><NewProtocol>%s</NewProtocol><NewInternalPort>%u</NewInternalPort><NewInternalClient>%s</NewInternalClient><NewEnabled>%d</NewEnabled><NewPortMappingDescription>%s</NewPortMappingDescription><NewLeaseDuration>%u</NewLeaseDuration></u:AddPortMapping%s\"", "end": {"col": 355, "line": 1, "offset": 354}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 41, "offset": 1081}, "propagated_value": {"svalue_abstract_content": "(char*malloc(local_30+local_34+0x239+local_38+sVar1+sVar2)", "svalue_end": {"col": 81, "line": 40, "offset": 1056}, "svalue_start": {"col": 11, "line": 40, "offset": 986}}, "start": {"col": 21, "line": 41, "offset": 1078}}, "$FMT": {"abstract_content": "\"%sAddPortMapping xmlns:u=\\\"%s\\\"><NewRemoteHost>%s</NewRemoteHost><NewExternalPort>%u</NewExternalPort><NewProtocol>%s</NewProtocol><NewInternalPort>%u</NewInternalPort><NewInternalClient>%s</NewInternalClient><NewEnabled>%d</NewEnabled><NewPortMappingDescription>%s</NewPortMappingDescription><NewLeaseDuration>%u</NewLeaseDuration></u:AddPortMapping%s\"", "end": {"col": 375, "line": 42, "offset": 1457}, "start": {"col": 21, "line": 42, "offset": 1103}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_AddPortMapping_00407a4c.c", "start": {"col": 13, "line": 41, "offset": 1070}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 46, "offset": 1829}, "extra": {"engine_kind": "OSS", "fingerprint": "7155367fcd5876c47d508141a7f30b6339d51b313677428f7c3eb7e3405ffcda174fb3b997452c658310fdfa0fbd91c2f18c92c3b8fbbcc9d2da251c95ac95a6_0", "is_ignored": false, "lines": "    iVar3 = sprintf(__s,\n                    \"%sAddPortMapping xmlns:u=\\\"%s\\\"><NewRemoteHost>%s</NewRemoteHost><NewExternalPort>%u</NewExternalPort><NewProtocol>%s</NewProtocol><NewInternalPort>%u</NewInternalPort><NewInternalClient>%s</NewInternalClient><NewEnabled>%d</NewEnabled><NewPortMappingDescription>%s</NewPortMappingDescription><NewLeaseDuration>%u</NewLeaseDuration></u:AddPortMapping%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,param_4,local_40,param_6,local_3c,param_8,param_9,param_10,param_11,\n                    \"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 41, "offset": 1077}, "start": {"col": 13, "line": 41, "offset": 1070}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_AddPortMapping_00407a4c.c", "start": {"col": 13, "line": 41, "offset": 1070}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 52, "offset": 2067}, "extra": {"engine_kind": "OSS", "fingerprint": "db25720351e4c75c3b9897e9089f4e914e7ac6d99e6653e8ecb06cb3247bc56182bfbf4de232d76c9e6bd141b4066cf9c014801da3a059291503261164ea3263_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xa7 + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 52, "offset": 2030}, "start": {"col": 15, "line": 52, "offset": 2024}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 52, "offset": 2037}, "start": {"col": 22, "line": 52, "offset": 2031}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 52, "offset": 2020}, "start": {"col": 5, "line": 52, "offset": 2014}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_AddPortMapping_00407a4c.c", "start": {"col": 5, "line": 52, "offset": 2014}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 52, "offset": 2067}, "extra": {"engine_kind": "OSS", "fingerprint": "9c9776c5287b999ae9c50a8ed46889d1f6a9805cdf3d187981e0fe8a55b779357520ab08271363fcc881b15967c267c33f99191ab3468d6894c432609aea9df1_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xa7 + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 52, "offset": 2037}, "start": {"col": 22, "line": 52, "offset": 2031}}, "$X": {"abstract_content": "sVar1+sVar2+0xa7", "end": {"col": 49, "line": 52, "offset": 2058}, "start": {"col": 29, "line": 52, "offset": 2038}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 52, "offset": 2066}, "start": {"col": 52, "line": 52, "offset": 2061}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_AddPortMapping_00407a4c.c", "start": {"col": 22, "line": 52, "offset": 2031}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 52, "offset": 2067}, "extra": {"engine_kind": "OSS", "fingerprint": "9d5fa27d57187c543689b53aac5da2f8553c92fa7b6e06452f95e25ff6e77f728f10d2e5b06a45da3a83055c1160d7953764c398ee9cb8754350e9a1f7a3db07_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xa7 + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 52, "offset": 2037}, "start": {"col": 22, "line": 52, "offset": 2031}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_AddPortMapping_00407a4c.c", "start": {"col": 22, "line": 52, "offset": 2031}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 93, "line": 55, "offset": 2388}, "extra": {"engine_kind": "OSS", "fingerprint": "9e6f728f78dc0c87f2f6468164f97d5a55279557a88d016c6535c0f3623773c78e30bd1cd92fb86de28c1d05c6dfe4f506ef8421c25e3a17b0a15c12fbff16dd_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_58,local_5c,(uint)local_60[0],*param_1,\"AddPortMapping\",iVar3);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0", "end": {"col": 59, "line": 55, "offset": 2354}, "start": {"col": 58, "line": 55, "offset": 2353}}, "$UNSIGNED": {"abstract_content": "local_30", "end": {"col": 13, "line": 53, "offset": 2081}, "start": {"col": 5, "line": 53, "offset": 2073}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_AddPortMapping_00407a4c.c", "start": {"col": 5, "line": 53, "offset": 2073}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 93, "line": 55, "offset": 2388}, "extra": {"engine_kind": "OSS", "fingerprint": "57586bfb4a1bb5c40f514aaf9da42a37294cf7d6011c48ed34423f7c6453e441515cac644545b8633e0275a9834f2f261a4412c08b5727a07de5dee20a9a0d34_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_58,local_5c,(uint)local_60[0],*param_1,\"AddPortMapping\",iVar3);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 53, "offset": 2098}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar2+0xa7+sVar4)", "svalue_end": {"col": 58, "line": 52, "offset": 2067}, "svalue_start": {"col": 14, "line": 52, "offset": 2023}}, "start": {"col": 24, "line": 53, "offset": 2092}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 54, "offset": 2295}, "start": {"col": 24, "line": 54, "offset": 2123}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_AddPortMapping_00407a4c.c", "start": {"col": 16, "line": 53, "offset": 2084}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 93, "line": 55, "offset": 2388}, "extra": {"engine_kind": "OSS", "fingerprint": "7155367fcd5876c47d508141a7f30b6339d51b313677428f7c3eb7e3405ffcda174fb3b997452c658310fdfa0fbd91c2f18c92c3b8fbbcc9d2da251c95ac95a6_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_58,local_5c,(uint)local_60[0],*param_1,\"AddPortMapping\",iVar3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 53, "offset": 2091}, "start": {"col": 16, "line": 53, "offset": 2084}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_AddPortMapping_00407a4c.c", "start": {"col": 16, "line": 53, "offset": 2084}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 26, "offset": 561}, "extra": {"engine_kind": "OSS", "fingerprint": "c803b8e3717a08db65919abfc95eb8e51c504ff6be6fdfcbbd9911fdf103acb0854ec01b110065c58629c9bb557fa0ab302494b68677e23445b76f373d8dbfaf_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 26, "offset": 549}, "start": {"col": 12, "line": 26, "offset": 543}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 26, "offset": 556}, "start": {"col": 19, "line": 26, "offset": 550}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 26, "offset": 539}, "start": {"col": 3, "line": 26, "offset": 534}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_DeletePortMapping_004077a8.c", "start": {"col": 3, "line": 26, "offset": 534}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 26, "offset": 561}, "extra": {"engine_kind": "OSS", "fingerprint": "7b48c5381ee3aac54bc97deb023f8d6e866392ef31352b75c5ed7eeb2bd51766db55169f891b2bd968c17845f3813abcd103ad559f143ff88976709a9bf08ed4_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 26, "offset": 556}, "start": {"col": 19, "line": 26, "offset": 550}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_DeletePortMapping_004077a8.c", "start": {"col": 19, "line": 26, "offset": 550}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 26, "offset": 561}, "extra": {"engine_kind": "OSS", "fingerprint": "199f2fa9bdfef475949a498def7096f29891d3b64a23c585032a74491173fc41464707b4381660d8713dab2d872f69058fe534f78be689ea69c71f73e150a24e_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 26, "offset": 560}, "start": {"col": 26, "line": 26, "offset": 557}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_DeletePortMapping_004077a8.c", "start": {"col": 19, "line": 26, "offset": 550}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 59, "line": 31, "offset": 745}, "extra": {"engine_kind": "OSS", "fingerprint": "e943b8c9f6a6b8b9e6951deb338d87233d9837bea1bc52f6b0d4de1b40640ca8adadc5baa1791fc18f148c8c970ad27df462f25360c03083b2c24de1a08f86a5_0", "is_ignored": false, "lines": "    __s = (char *)malloc(local_30 + sVar1 + 0x16c + sVar2);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 31, "offset": 704}, "start": {"col": 12, "line": 31, "offset": 698}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 31, "offset": 711}, "start": {"col": 19, "line": 31, "offset": 705}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 31, "offset": 694}, "start": {"col": 5, "line": 31, "offset": 691}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_DeletePortMapping_004077a8.c", "start": {"col": 5, "line": 31, "offset": 691}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 59, "line": 31, "offset": 745}, "extra": {"engine_kind": "OSS", "fingerprint": "3839fd6bc9a13edb48d72edb9f86233b6e93bd61ebc5e118e2368a4cad8e1fb26b4b7044c909020ba626286739db813ff0e5b0c47dba10335fb6332c0cf2b950_0", "is_ignored": false, "lines": "    __s = (char *)malloc(local_30 + sVar1 + 0x16c + sVar2);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 31, "offset": 711}, "start": {"col": 19, "line": 31, "offset": 705}}, "$X": {"abstract_content": "local_30+sVar1+0x16c", "end": {"col": 50, "line": 31, "offset": 736}, "start": {"col": 26, "line": 31, "offset": 712}}, "$Y": {"abstract_content": "sVar2", "end": {"col": 58, "line": 31, "offset": 744}, "propagated_value": {"svalue_abstract_content": "strlen(param_6)", "svalue_end": {"col": 28, "line": 30, "offset": 685}, "svalue_start": {"col": 13, "line": 30, "offset": 670}}, "start": {"col": 53, "line": 31, "offset": 739}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_DeletePortMapping_004077a8.c", "start": {"col": 19, "line": 31, "offset": 705}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 59, "line": 31, "offset": 745}, "extra": {"engine_kind": "OSS", "fingerprint": "7b48c5381ee3aac54bc97deb023f8d6e866392ef31352b75c5ed7eeb2bd51766db55169f891b2bd968c17845f3813abcd103ad559f143ff88976709a9bf08ed4_1", "is_ignored": false, "lines": "    __s = (char *)malloc(local_30 + sVar1 + 0x16c + sVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 31, "offset": 711}, "start": {"col": 19, "line": 31, "offset": 705}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_DeletePortMapping_004077a8.c", "start": {"col": 19, "line": 31, "offset": 705}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 87, "line": 36, "offset": 1264}, "extra": {"engine_kind": "OSS", "fingerprint": "e7e7abc4987909da93f1d6c11efcdf9403140995d8bdd4bf77137838694e58dc2d5b570e0846e1c6dce7dcc9ea17d1184d9a3eaab492d043aeee3ff3c0e4a0f4_0", "is_ignored": false, "lines": "    iVar3 = sprintf(__s,\n                    \"%sDeletePortMapping xmlns:u=\\\"%s\\\"><NewRemoteHost>%s</NewRemoteHost><NewExternalPort>%u</NewExternalPort><NewProtocol>%s</NewProtocol></u:DeletePortMapping%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,param_4,(uint)param_5,param_6,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sDeletePortMapping xmlns:u=\\\"%s\\\"><NewRemoteHost>%s</NewRemoteHost><NewExternalPort>%u</NewExternalPort><NewProtocol>%s</NewProtocol></u:DeletePortMapping%s\"", "end": {"col": 160, "line": 1, "offset": 159}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 32, "offset": 770}, "propagated_value": {"svalue_abstract_content": "(char*malloc(local_30+sVar1+0x16c+sVar2)", "svalue_end": {"col": 59, "line": 31, "offset": 745}, "svalue_start": {"col": 11, "line": 31, "offset": 697}}, "start": {"col": 21, "line": 32, "offset": 767}}, "$FMT": {"abstract_content": "\"%sDeletePortMapping xmlns:u=\\\"%s\\\"><NewRemoteHost>%s</NewRemoteHost><NewExternalPort>%u</NewExternalPort><NewProtocol>%s</NewProtocol></u:DeletePortMapping%s\"", "end": {"col": 180, "line": 33, "offset": 951}, "start": {"col": 21, "line": 33, "offset": 792}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_DeletePortMapping_004077a8.c", "start": {"col": 13, "line": 32, "offset": 759}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 87, "line": 36, "offset": 1264}, "extra": {"engine_kind": "OSS", "fingerprint": "ff53ea28aac838046d83993ab469db7c6efb2d0689351662224d6db1985861d6098f18d7b7abb12c43a38a3ed6336049c6fca50aa515645fe91c500262f1f2cd_0", "is_ignored": false, "lines": "    iVar3 = sprintf(__s,\n                    \"%sDeletePortMapping xmlns:u=\\\"%s\\\"><NewRemoteHost>%s</NewRemoteHost><NewExternalPort>%u</NewExternalPort><NewProtocol>%s</NewProtocol></u:DeletePortMapping%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,param_4,(uint)param_5,param_6,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 32, "offset": 766}, "start": {"col": 13, "line": 32, "offset": 759}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_DeletePortMapping_004077a8.c", "start": {"col": 13, "line": 32, "offset": 759}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 42, "offset": 1502}, "extra": {"engine_kind": "OSS", "fingerprint": "4f3e7cb2f81c523b0e363e83a726ebbf168439ee8d04efe65ac924dbedf4e475bf464531840165202439529e4e9aa1ec864f7bed27fd0b02e5e7903daec2fc62_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xaa + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 42, "offset": 1465}, "start": {"col": 15, "line": 42, "offset": 1459}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 42, "offset": 1472}, "start": {"col": 22, "line": 42, "offset": 1466}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 42, "offset": 1455}, "start": {"col": 5, "line": 42, "offset": 1449}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_DeletePortMapping_004077a8.c", "start": {"col": 5, "line": 42, "offset": 1449}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 42, "offset": 1502}, "extra": {"engine_kind": "OSS", "fingerprint": "d0f761770fb7b886782eb981a90fe1c44669aabbc5c7f65ce63a798c2845629c9f02dca668cafe50a8d6b7672742719ee71e876d64fea1829b0ab341ff73873c_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xaa + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 42, "offset": 1472}, "start": {"col": 22, "line": 42, "offset": 1466}}, "$X": {"abstract_content": "sVar1+sVar2+0xaa", "end": {"col": 49, "line": 42, "offset": 1493}, "start": {"col": 29, "line": 42, "offset": 1473}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 42, "offset": 1501}, "start": {"col": 52, "line": 42, "offset": 1496}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_DeletePortMapping_004077a8.c", "start": {"col": 22, "line": 42, "offset": 1466}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 42, "offset": 1502}, "extra": {"engine_kind": "OSS", "fingerprint": "7b48c5381ee3aac54bc97deb023f8d6e866392ef31352b75c5ed7eeb2bd51766db55169f891b2bd968c17845f3813abcd103ad559f143ff88976709a9bf08ed4_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xaa + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 42, "offset": 1472}, "start": {"col": 22, "line": 42, "offset": 1466}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_DeletePortMapping_004077a8.c", "start": {"col": 22, "line": 42, "offset": 1466}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 96, "line": 45, "offset": 1826}, "extra": {"engine_kind": "OSS", "fingerprint": "8caffa91d0e16238f6cc6e154b4482c8acff306638dd80d602544992a8352e8c75ffc7101c90e186a76460e372f49099e75474e96694bf909de54825a1f5c1c7_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"DeletePortMapping\",iVar3);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0", "end": {"col": 59, "line": 45, "offset": 1789}, "start": {"col": 58, "line": 45, "offset": 1788}}, "$UNSIGNED": {"abstract_content": "local_30", "end": {"col": 13, "line": 43, "offset": 1516}, "start": {"col": 5, "line": 43, "offset": 1508}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_DeletePortMapping_004077a8.c", "start": {"col": 5, "line": 43, "offset": 1508}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 96, "line": 45, "offset": 1826}, "extra": {"engine_kind": "OSS", "fingerprint": "ff2b118de1dc1183757e51763c1a3e2b5bfa00a311840741803997fdfe2ba117163b0afa37ec647cdaf733133ebec09e5f633288bf70c10bea60b37d021eacac_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"DeletePortMapping\",iVar3);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 43, "offset": 1533}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar2+0xaa+sVar4)", "svalue_end": {"col": 58, "line": 42, "offset": 1502}, "svalue_start": {"col": 14, "line": 42, "offset": 1458}}, "start": {"col": 24, "line": 43, "offset": 1527}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 44, "offset": 1730}, "start": {"col": 24, "line": 44, "offset": 1558}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_DeletePortMapping_004077a8.c", "start": {"col": 16, "line": 43, "offset": 1519}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 96, "line": 45, "offset": 1826}, "extra": {"engine_kind": "OSS", "fingerprint": "ff53ea28aac838046d83993ab469db7c6efb2d0689351662224d6db1985861d6098f18d7b7abb12c43a38a3ed6336049c6fca50aa515645fe91c500262f1f2cd_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"DeletePortMapping\",iVar3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 43, "offset": 1526}, "start": {"col": 16, "line": 43, "offset": 1519}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_DeletePortMapping_004077a8.c", "start": {"col": 16, "line": 43, "offset": 1519}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 25, "offset": 502}, "extra": {"engine_kind": "OSS", "fingerprint": "75c3da897e72f5a3ef730014f4a484a7e1dfd31c9cefe31472f81ed2dfc61a2e20b3d71636b3a45aac82a3c68b95381dde97511e9ae9f01adbb0dc30e9d06b64_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 25, "offset": 490}, "start": {"col": 12, "line": 25, "offset": 484}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 25, "offset": 497}, "start": {"col": 19, "line": 25, "offset": 491}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 25, "offset": 480}, "start": {"col": 3, "line": 25, "offset": 475}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetExternalIPAddress_00408234.c", "start": {"col": 3, "line": 25, "offset": 475}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 25, "offset": 502}, "extra": {"engine_kind": "OSS", "fingerprint": "014b41b40ea18db3e811e85a32add0367a953e7d6346ef2adf90c84e685c6682bfd126e99f142bc18ad470fb620aba9bdb2deceae2690e4ed45245b691aeaabd_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 25, "offset": 497}, "start": {"col": 19, "line": 25, "offset": 491}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetExternalIPAddress_00408234.c", "start": {"col": 19, "line": 25, "offset": 491}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 25, "offset": 502}, "extra": {"engine_kind": "OSS", "fingerprint": "3ab97d9e1673088fccb5f44d75eb46e4e442645e4b9096678291f5ef205855f4b3b5e2988d72ed1b5f2639acbe2ff170a9d88b269b5cbbd190fe85e6a59a87dc_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 25, "offset": 501}, "start": {"col": 26, "line": 25, "offset": 498}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetExternalIPAddress_00408234.c", "start": {"col": 19, "line": 25, "offset": 491}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 40, "line": 28, "offset": 606}, "extra": {"engine_kind": "OSS", "fingerprint": "02b1c4fa818ddb2952e41dc9e942fd279a77f99555dbe30a65910e090be86f1e978acbc71bec208642c3be5018433ab60ca4adcccf79e40c16e5062eb20f7682_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x110);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 28, "offset": 584}, "start": {"col": 12, "line": 28, "offset": 578}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 28, "offset": 591}, "start": {"col": 19, "line": 28, "offset": 585}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 28, "offset": 574}, "start": {"col": 5, "line": 28, "offset": 571}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetExternalIPAddress_00408234.c", "start": {"col": 5, "line": 28, "offset": 571}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 40, "line": 28, "offset": 606}, "extra": {"engine_kind": "OSS", "fingerprint": "8406594ebf0eda2f54de1c131cb87e612e798846714aec70f554b2a47d4426fd26005674dfa873cccb960818f32cb443b1d553675029c28cf2727cbd3ada7d55_0", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x110);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 28, "offset": 591}, "start": {"col": 19, "line": 28, "offset": 585}}, "$X": {"abstract_content": "sVar1", "end": {"col": 31, "line": 28, "offset": 597}, "start": {"col": 26, "line": 28, "offset": 592}}, "$Y": {"abstract_content": "0x110", "end": {"col": 39, "line": 28, "offset": 605}, "start": {"col": 34, "line": 28, "offset": 600}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetExternalIPAddress_00408234.c", "start": {"col": 19, "line": 28, "offset": 585}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 28, "offset": 606}, "extra": {"engine_kind": "OSS", "fingerprint": "014b41b40ea18db3e811e85a32add0367a953e7d6346ef2adf90c84e685c6682bfd126e99f142bc18ad470fb620aba9bdb2deceae2690e4ed45245b691aeaabd_1", "is_ignored": false, "lines": "    __s = (char *)malloc(sVar1 + 0x110);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 28, "offset": 591}, "start": {"col": 19, "line": 28, "offset": 585}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetExternalIPAddress_00408234.c", "start": {"col": 19, "line": 28, "offset": 585}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 57, "line": 31, "offset": 960}, "extra": {"engine_kind": "OSS", "fingerprint": "b2e47bfd0c5a88baabfd8a7da0369d4422d7e6e3360459249f8ecbb1c4817ad149d167f35663253ea068cde3641eef41c152ebe0c735a8616dd795cf73a03709_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetExternalIPAddress xmlns:u=\\\"%s\\\"></u:GetExternalIPAddress%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sGetExternalIPAddress xmlns:u=\\\"%s\\\"></u:GetExternalIPAddress%s\"", "end": {"col": 67, "line": 1, "offset": 66}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 29, "offset": 631}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+0x110)", "svalue_end": {"col": 40, "line": 28, "offset": 606}, "svalue_start": {"col": 11, "line": 28, "offset": 577}}, "start": {"col": 21, "line": 29, "offset": 628}}, "$FMT": {"abstract_content": "\"%sGetExternalIPAddress xmlns:u=\\\"%s\\\"></u:GetExternalIPAddress%s\"", "end": {"col": 91, "line": 29, "offset": 698}, "start": {"col": 25, "line": 29, "offset": 632}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetExternalIPAddress_00408234.c", "start": {"col": 13, "line": 29, "offset": 620}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 31, "offset": 960}, "extra": {"engine_kind": "OSS", "fingerprint": "a8b3c25ce75bc1deb393754d87aeed7b18a4b6416b8b2ec4cae58d9ad703c64e4d608aa5bb98abcef6dd44864463c78b7569aeee4bca51798337a697b2cdcc84_0", "is_ignored": false, "lines": "    iVar2 = sprintf(__s,\"%sGetExternalIPAddress xmlns:u=\\\"%s\\\"></u:GetExternalIPAddress%s\",\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 29, "offset": 627}, "start": {"col": 13, "line": 29, "offset": 620}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetExternalIPAddress_00408234.c", "start": {"col": 13, "line": 29, "offset": 620}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 37, "offset": 1198}, "extra": {"engine_kind": "OSS", "fingerprint": "ef506acb0b2301cccdc165fca7c4c7933e24d3ec1449229e94cdf72fe8c72b6d6e5070899a5f687186a678d351b7434882f46e1416d38b9cdf479ad1f8057b93_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xad + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 37, "offset": 1161}, "start": {"col": 15, "line": 37, "offset": 1155}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 37, "offset": 1168}, "start": {"col": 22, "line": 37, "offset": 1162}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 37, "offset": 1151}, "start": {"col": 5, "line": 37, "offset": 1145}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetExternalIPAddress_00408234.c", "start": {"col": 5, "line": 37, "offset": 1145}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 37, "offset": 1198}, "extra": {"engine_kind": "OSS", "fingerprint": "8f197ba98f7cebdb40b610fccd570e99fbaadb1ceac95cbcf42166d3cf447d44678e0b2b3a029a27771d170ffaf395c9aecb234a0956596fc9c5085e1684f324_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xad + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 37, "offset": 1168}, "start": {"col": 22, "line": 37, "offset": 1162}}, "$X": {"abstract_content": "sVar1+sVar3+0xad", "end": {"col": 49, "line": 37, "offset": 1189}, "start": {"col": 29, "line": 37, "offset": 1169}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 37, "offset": 1197}, "start": {"col": 52, "line": 37, "offset": 1192}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetExternalIPAddress_00408234.c", "start": {"col": 22, "line": 37, "offset": 1162}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 37, "offset": 1198}, "extra": {"engine_kind": "OSS", "fingerprint": "014b41b40ea18db3e811e85a32add0367a953e7d6346ef2adf90c84e685c6682bfd126e99f142bc18ad470fb620aba9bdb2deceae2690e4ed45245b691aeaabd_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar3 + 0xad + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 37, "offset": 1168}, "start": {"col": 22, "line": 37, "offset": 1162}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetExternalIPAddress_00408234.c", "start": {"col": 22, "line": 37, "offset": 1162}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 99, "line": 40, "offset": 1525}, "extra": {"engine_kind": "OSS", "fingerprint": "b93962a5aa4e53ad80134f7cc572338159ee12c7ec0e11c8f376108a68d11b5a3403d98443f7031a40266a071fc54f93c4781cb0472904abf33986157fc2df8d_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetExternalIPAddress\",iVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 38, "offset": 1229}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar3+0xad+sVar4)", "svalue_end": {"col": 58, "line": 37, "offset": 1198}, "svalue_start": {"col": 14, "line": 37, "offset": 1154}}, "start": {"col": 24, "line": 38, "offset": 1223}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 39, "offset": 1426}, "start": {"col": 24, "line": 39, "offset": 1254}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetExternalIPAddress_00408234.c", "start": {"col": 16, "line": 38, "offset": 1215}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 99, "line": 40, "offset": 1525}, "extra": {"engine_kind": "OSS", "fingerprint": "a8b3c25ce75bc1deb393754d87aeed7b18a4b6416b8b2ec4cae58d9ad703c64e4d608aa5bb98abcef6dd44864463c78b7569aeee4bca51798337a697b2cdcc84_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetExternalIPAddress\",iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 38, "offset": 1222}, "start": {"col": 16, "line": 38, "offset": 1215}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetExternalIPAddress_00408234.c", "start": {"col": 16, "line": 38, "offset": 1215}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 30, "line": 26, "offset": 571}, "extra": {"engine_kind": "OSS", "fingerprint": "e6a1add33eaf1bc467d34ff3ce978be8797ffb8d73d85a8e42d09f2988e4088ec1ff2958b26cd27722f5d5ad810765e1c329a13296d9476fdd398b66003ee56b_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 26, "offset": 559}, "start": {"col": 12, "line": 26, "offset": 553}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 26, "offset": 566}, "start": {"col": 19, "line": 26, "offset": 560}}, "$RET": {"abstract_content": "__ptr", "end": {"col": 8, "line": 26, "offset": 549}, "start": {"col": 3, "line": 26, "offset": 544}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetSpecificPortMappingEntry_00406410.c", "start": {"col": 3, "line": 26, "offset": 544}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 26, "offset": 571}, "extra": {"engine_kind": "OSS", "fingerprint": "5bef683c4cd047f08afbef8a79a904a98a57c96b88ca0d1d0946cad0872cd30181e2a022183bdb7794808da5a36a829e4164b2655d20b384c10d02b17500f803_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 26, "offset": 566}, "start": {"col": 19, "line": 26, "offset": 560}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetSpecificPortMappingEntry_00406410.c", "start": {"col": 19, "line": 26, "offset": 560}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 26, "offset": 571}, "extra": {"engine_kind": "OSS", "fingerprint": "990f6525aceae988c7d7901b6794f0949a6bc11a111707c856e61d9860a7dd40d9e93f9898a3a8f5b2c0dda401daaa500c0589d250d7a6a0e76ec99dd8b53e90_0", "is_ignored": false, "lines": "  __ptr = (char *)malloc(0xc);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0xc", "end": {"col": 29, "line": 26, "offset": 570}, "start": {"col": 26, "line": 26, "offset": 567}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetSpecificPortMappingEntry_00406410.c", "start": {"col": 19, "line": 26, "offset": 560}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 59, "line": 31, "offset": 755}, "extra": {"engine_kind": "OSS", "fingerprint": "df0be7ac2f305b8dd587103b549cf06701380d8bc7bcd12e4194c89780a40f3f9e1edccd8be46b6cb977873316c884ba62d4e3dd2d45e30a8d739f8e40b68c0f_0", "is_ignored": false, "lines": "    __s = (char *)malloc(local_30 + sVar1 + 0x180 + sVar2);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 18, "line": 31, "offset": 714}, "start": {"col": 12, "line": 31, "offset": 708}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 31, "offset": 721}, "start": {"col": 19, "line": 31, "offset": 715}}, "$RET": {"abstract_content": "__s", "end": {"col": 8, "line": 31, "offset": 704}, "start": {"col": 5, "line": 31, "offset": 701}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetSpecificPortMappingEntry_00406410.c", "start": {"col": 5, "line": 31, "offset": 701}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 59, "line": 31, "offset": 755}, "extra": {"engine_kind": "OSS", "fingerprint": "5b433a52170ec592b37559fea78d80733447018ced4b7a14e2f8a13e79e1599c6d8ef64c1384de95b73f754cb29bf52ff72b01bd013b7e19a5117375b4cfe51f_0", "is_ignored": false, "lines": "    __s = (char *)malloc(local_30 + sVar1 + 0x180 + sVar2);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 31, "offset": 721}, "start": {"col": 19, "line": 31, "offset": 715}}, "$X": {"abstract_content": "local_30+sVar1+0x180", "end": {"col": 50, "line": 31, "offset": 746}, "start": {"col": 26, "line": 31, "offset": 722}}, "$Y": {"abstract_content": "sVar2", "end": {"col": 58, "line": 31, "offset": 754}, "propagated_value": {"svalue_abstract_content": "strlen(param_6)", "svalue_end": {"col": 28, "line": 30, "offset": 695}, "svalue_start": {"col": 13, "line": 30, "offset": 680}}, "start": {"col": 53, "line": 31, "offset": 749}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetSpecificPortMappingEntry_00406410.c", "start": {"col": 19, "line": 31, "offset": 715}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 59, "line": 31, "offset": 755}, "extra": {"engine_kind": "OSS", "fingerprint": "5bef683c4cd047f08afbef8a79a904a98a57c96b88ca0d1d0946cad0872cd30181e2a022183bdb7794808da5a36a829e4164b2655d20b384c10d02b17500f803_1", "is_ignored": false, "lines": "    __s = (char *)malloc(local_30 + sVar1 + 0x180 + sVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 25, "line": 31, "offset": 721}, "start": {"col": 19, "line": 31, "offset": 715}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetSpecificPortMappingEntry_00406410.c", "start": {"col": 19, "line": 31, "offset": 715}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 87, "line": 36, "offset": 1294}, "extra": {"engine_kind": "OSS", "fingerprint": "06cc56a1b743872da7511f8e0df2e65c4215aa19c42c310a33a83da30315194bbabfd5052c705b773619868a70499bdea8c66f4de8aeb3b2d9e9a66380dc8a48_0", "is_ignored": false, "lines": "    iVar3 = sprintf(__s,\n                    \"%sGetSpecificPortMappingEntry xmlns:u=\\\"%s\\\"><NewRemoteHost>%s</NewRemoteHost><NewExternalPort>%u</NewExternalPort><NewProtocol>%s</NewProtocol></u:GetSpecificPortMappingEntry%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,param_4,(uint)param_5,param_6,\"></s:Body></s:Envelope>\");", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"%sGetSpecificPortMappingEntry xmlns:u=\\\"%s\\\"><NewRemoteHost>%s</NewRemoteHost><NewExternalPort>%u</NewExternalPort><NewProtocol>%s</NewProtocol></u:GetSpecificPortMappingEntry%s\"", "end": {"col": 180, "line": 1, "offset": 179}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s", "end": {"col": 24, "line": 32, "offset": 780}, "propagated_value": {"svalue_abstract_content": "(char*malloc(local_30+sVar1+0x180+sVar2)", "svalue_end": {"col": 59, "line": 31, "offset": 755}, "svalue_start": {"col": 11, "line": 31, "offset": 707}}, "start": {"col": 21, "line": 32, "offset": 777}}, "$FMT": {"abstract_content": "\"%sGetSpecificPortMappingEntry xmlns:u=\\\"%s\\\"><NewRemoteHost>%s</NewRemoteHost><NewExternalPort>%u</NewExternalPort><NewProtocol>%s</NewProtocol></u:GetSpecificPortMappingEntry%s\"", "end": {"col": 200, "line": 33, "offset": 981}, "start": {"col": 21, "line": 33, "offset": 802}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetSpecificPortMappingEntry_00406410.c", "start": {"col": 13, "line": 32, "offset": 769}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 87, "line": 36, "offset": 1294}, "extra": {"engine_kind": "OSS", "fingerprint": "8c177ba2905a65fff687b04cf387a7dc4813447e803d4b59de3d63d3d6470f470d97d3c8a85b45c4165e084dab94abdbf751a92b495a9b644cfe55b90d7f2d34_0", "is_ignored": false, "lines": "    iVar3 = sprintf(__s,\n                    \"%sGetSpecificPortMappingEntry xmlns:u=\\\"%s\\\"><NewRemoteHost>%s</NewRemoteHost><NewExternalPort>%u</NewExternalPort><NewProtocol>%s</NewProtocol></u:GetSpecificPortMappingEntry%s\"\n                    ,\n                    \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><s:Envelope s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><s:Body><u:\"\n                    ,*param_1,param_4,(uint)param_5,param_6,\"></s:Body></s:Envelope>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 32, "offset": 776}, "start": {"col": 13, "line": 32, "offset": 769}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetSpecificPortMappingEntry_00406410.c", "start": {"col": 13, "line": 32, "offset": 769}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 58, "line": 42, "offset": 1532}, "extra": {"engine_kind": "OSS", "fingerprint": "cbf3788482507bcf3a5c2200e8003b8293cae4d6f4624d09a89a07a4e08e30921d3ec366b863914128d928b7404ffdcdd542ca45ae433447893b08090ff6e34d_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xb4 + sVar4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$CAST": {"abstract_content": "char*", "end": {"col": 21, "line": 42, "offset": 1495}, "start": {"col": 15, "line": 42, "offset": 1489}}, "$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 42, "offset": 1502}, "start": {"col": 22, "line": 42, "offset": 1496}}, "$RET": {"abstract_content": "__s_00", "end": {"col": 11, "line": 42, "offset": 1485}, "start": {"col": 5, "line": 42, "offset": 1479}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetSpecificPortMappingEntry_00406410.c", "start": {"col": 5, "line": 42, "offset": 1479}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 58, "line": 42, "offset": 1532}, "extra": {"engine_kind": "OSS", "fingerprint": "d03685d4636dbb945584700b8f553c2e3e8cad536e51d26b465cd645d869ea4855078ce61dcb43ba794e72e2efe60da6a5bddc8fb17d8ba009d659740b48bc8a_0", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xb4 + sVar4);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 42, "offset": 1502}, "start": {"col": 22, "line": 42, "offset": 1496}}, "$X": {"abstract_content": "sVar1+sVar2+0xb4", "end": {"col": 49, "line": 42, "offset": 1523}, "start": {"col": 29, "line": 42, "offset": 1503}}, "$Y": {"abstract_content": "sVar4", "end": {"col": 57, "line": 42, "offset": 1531}, "start": {"col": 52, "line": 42, "offset": 1526}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetSpecificPortMappingEntry_00406410.c", "start": {"col": 22, "line": 42, "offset": 1496}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 42, "offset": 1532}, "extra": {"engine_kind": "OSS", "fingerprint": "5bef683c4cd047f08afbef8a79a904a98a57c96b88ca0d1d0946cad0872cd30181e2a022183bdb7794808da5a36a829e4164b2655d20b384c10d02b17500f803_2", "is_ignored": false, "lines": "    __s_00 = (char *)malloc(sVar1 + sVar2 + 0xb4 + sVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 42, "offset": 1502}, "start": {"col": 22, "line": 42, "offset": 1496}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetSpecificPortMappingEntry_00406410.c", "start": {"col": 22, "line": 42, "offset": 1496}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 46, "offset": 1890}, "extra": {"engine_kind": "OSS", "fingerprint": "8b867f86ee06c0ecfea30fa2aa5b4e7686961d2d89e16276f8ed84f98efff1a5bb568b8d1c6e962aa9ad88b9c857d54827a544dbe7344013b0f1268b16c5a3d1_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetSpecificPortMappingEntry\",\n                       iVar3);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0", "end": {"col": 59, "line": 45, "offset": 1819}, "start": {"col": 58, "line": 45, "offset": 1818}}, "$UNSIGNED": {"abstract_content": "local_30", "end": {"col": 13, "line": 43, "offset": 1546}, "start": {"col": 5, "line": 43, "offset": 1538}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetSpecificPortMappingEntry_00406410.c", "start": {"col": 5, "line": 43, "offset": 1538}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 30, "line": 46, "offset": 1890}, "extra": {"engine_kind": "OSS", "fingerprint": "fb1055fc7520aeacd5cfd059a73e999b92c9f057c63d5a9933ccd36af1e486a0ee7716653be1f9015d9315572ef0c8a6c4855df0f696d91c857899ddba2a1af4_0", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetSpecificPortMappingEntry\",\n                       iVar3);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 173, "line": 1, "offset": 172}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "__s_00", "end": {"col": 30, "line": 43, "offset": 1563}, "propagated_value": {"svalue_abstract_content": "(char*malloc(sVar1+sVar2+0xb4+sVar4)", "svalue_end": {"col": 58, "line": 42, "offset": 1532}, "svalue_start": {"col": 14, "line": 42, "offset": 1488}}, "start": {"col": 24, "line": 43, "offset": 1557}}, "$FMT": {"abstract_content": "\"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"", "end": {"col": 196, "line": 44, "offset": 1760}, "start": {"col": 24, "line": 44, "offset": 1588}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetSpecificPortMappingEntry_00406410.c", "start": {"col": 16, "line": 43, "offset": 1549}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 30, "line": 46, "offset": 1890}, "extra": {"engine_kind": "OSS", "fingerprint": "8c177ba2905a65fff687b04cf387a7dc4813447e803d4b59de3d63d3d6470f470d97d3c8a85b45c4165e084dab94abdbf751a92b495a9b644cfe55b90d7f2d34_1", "is_ignored": false, "lines": "    local_30 = sprintf(__s_00,\n                       \"POST %s HTTP/1.0\\r\\nHost: %s:%d\\r\\nUser-Agent: POSIX, UPnP/1.0, Intel MicroStack/1.0.1423\\r\\nSOAPACTION: \\\"%s#%s\\\"\\r\\nContent-Type: text/xml\\r\\nContent-Length: %d\\r\\n\\r\\n\"\n                       ,local_48,local_4c,(uint)local_50[0],*param_1,\"GetSpecificPortMappingEntry\",\n                       iVar3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 23, "line": 43, "offset": 1556}, "start": {"col": 16, "line": 43, "offset": 1549}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/UPnPInvoke_WANConnection_GetSpecificPortMappingEntry_00406410.c", "start": {"col": 16, "line": 43, "offset": 1549}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-signal", "end": {"col": 25, "line": 9, "offset": 125}, "extra": {"engine_kind": "OSS", "fingerprint": "e5569d58b3a2ab13211c698e90b141ac426887dec11b88d3db352380bd64a69b5a9b231406a5c79816d6371872f640bf3abff1d7fa010efd96097e37c8793385_0", "is_ignored": false, "lines": "  signal(2,FUN_00415084);", "message": "The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/364", "https://cwe.mitre.org/data/definitions/479", "https://cwe.mitre.org/data/definitions/828"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 3, "line": 9, "offset": 103}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-signal", "end": {"col": 25, "line": 10, "offset": 151}, "extra": {"engine_kind": "OSS", "fingerprint": "e5569d58b3a2ab13211c698e90b141ac426887dec11b88d3db352380bd64a69b5a9b231406a5c79816d6371872f640bf3abff1d7fa010efd96097e37c8793385_1", "is_ignored": false, "lines": "  signal(9,FUN_00415084);", "message": "The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/364", "https://cwe.mitre.org/data/definitions/479", "https://cwe.mitre.org/data/definitions/828"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 3, "line": 10, "offset": 129}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-signal", "end": {"col": 27, "line": 11, "offset": 179}, "extra": {"engine_kind": "OSS", "fingerprint": "e5569d58b3a2ab13211c698e90b141ac426887dec11b88d3db352380bd64a69b5a9b231406a5c79816d6371872f640bf3abff1d7fa010efd96097e37c8793385_2", "is_ignored": false, "lines": "  signal(0xf,FUN_00415084);", "message": "The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/364", "https://cwe.mitre.org/data/definitions/479", "https://cwe.mitre.org/data/definitions/828"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 3, "line": 11, "offset": 155}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "end": {"col": 28, "line": 13, "offset": 251}, "extra": {"engine_kind": "OSS", "fingerprint": "a05628a035565c020f6f7d9ea22180aa186f1c026ec3d0427a9d89a360e7717ff46442f3fab2acf2682da2f780852e76e7a7e1ba189ad775a719f83d64deef8e_0", "is_ignored": false, "lines": "  IFaceName = strdup(\"br0\");", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://cwe.mitre.org/data/definitions/690", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strdup", "end": {"col": 21, "line": 13, "offset": 244}, "start": {"col": 15, "line": 13, "offset": 238}}, "$RET": {"abstract_content": "IFaceName", "end": {"col": 12, "line": 13, "offset": 235}, "start": {"col": 3, "line": 13, "offset": 226}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 3, "line": 13, "offset": 226}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 53, "line": 19, "offset": 572}, "extra": {"engine_kind": "OSS", "fingerprint": "854100c2428e0b3fd98201691a104f4e5a641d3ac567392e054aa3c6eb2a7b0206c90fbd9fe3540d675e0ee3c56098084a7205ad495569529b44039e5f817e93_0", "is_ignored": false, "lines": "  sscanf(*(char **)(param_2 + 8),\"%d\",&DAT_004276a4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 9, "line": 19, "offset": 528}, "start": {"col": 3, "line": 19, "offset": 522}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 3, "line": 19, "offset": 522}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc", "end": {"col": 53, "line": 19, "offset": 572}, "extra": {"engine_kind": "OSS", "fingerprint": "8aa7b1c507e05faddbac64239097e335d8e3d2f6a2e40eb6e6253d590ec48f71dd3ef86b79059d1b51ac41734e4209899a2a46b7f36cf7cf2f8b617542003146_0", "is_ignored": false, "lines": "  sscanf(*(char **)(param_2 + 8),\"%d\",&DAT_004276a4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 9, "line": 19, "offset": 528}, "start": {"col": 3, "line": 19, "offset": 522}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 3, "line": 19, "offset": 522}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 51, "line": 37, "offset": 948}, "extra": {"engine_kind": "OSS", "fingerprint": "854100c2428e0b3fd98201691a104f4e5a641d3ac567392e054aa3c6eb2a7b0206c90fbd9fe3540d675e0ee3c56098084a7205ad495569529b44039e5f817e93_1", "is_ignored": false, "lines": "  sscanf(*(char **)(param_2 + 0xc),\"%d\",&Ext_Port);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 9, "line": 37, "offset": 906}, "start": {"col": 3, "line": 37, "offset": 900}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 3, "line": 37, "offset": 900}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc", "end": {"col": 51, "line": 37, "offset": 948}, "extra": {"engine_kind": "OSS", "fingerprint": "8aa7b1c507e05faddbac64239097e335d8e3d2f6a2e40eb6e6253d590ec48f71dd3ef86b79059d1b51ac41734e4209899a2a46b7f36cf7cf2f8b617542003146_1", "is_ignored": false, "lines": "  sscanf(*(char **)(param_2 + 0xc),\"%d\",&Ext_Port);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 9, "line": 37, "offset": 906}, "start": {"col": 3, "line": 37, "offset": 900}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 3, "line": 37, "offset": 900}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 46, "line": 38, "offset": 995}, "extra": {"engine_kind": "OSS", "fingerprint": "815ed4cdaf53be3dcb8d801e7f1de29627589acddd1e4e3a453e30029e7635fbe432c7d099f10803db402832aa5fc18def481fad4df5b5980305673626769832_0", "is_ignored": false, "lines": "  strcpy(Protocol,*(char **)(param_2 + 0x10));", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 3, "line": 38, "offset": 952}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 46, "line": 38, "offset": 995}, "extra": {"engine_kind": "OSS", "fingerprint": "5af20bb0a325c31b20d67d51ef834bc97d048949b8c8902cb79c4f0ed3b4218c39e4af649a2fc69ddbab1d2e1a6919e150d6b86da16dffb6bf4a1f86791652e5_0", "is_ignored": false, "lines": "  strcpy(Protocol,*(char **)(param_2 + 0x10));", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 9, "line": 38, "offset": 958}, "start": {"col": 3, "line": 38, "offset": 952}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 3, "line": 38, "offset": 952}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 47, "line": 40, "offset": 1070}, "extra": {"engine_kind": "OSS", "fingerprint": "815ed4cdaf53be3dcb8d801e7f1de29627589acddd1e4e3a453e30029e7635fbe432c7d099f10803db402832aa5fc18def481fad4df5b5980305673626769832_1", "is_ignored": false, "lines": "    strcpy(Service,*(char **)(param_2 + 0x14));", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 5, "line": 40, "offset": 1028}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 40, "offset": 1070}, "extra": {"engine_kind": "OSS", "fingerprint": "5af20bb0a325c31b20d67d51ef834bc97d048949b8c8902cb79c4f0ed3b4218c39e4af649a2fc69ddbab1d2e1a6919e150d6b86da16dffb6bf4a1f86791652e5_1", "is_ignored": false, "lines": "    strcpy(Service,*(char **)(param_2 + 0x14));", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 11, "line": 40, "offset": 1034}, "start": {"col": 5, "line": 40, "offset": 1028}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 5, "line": 40, "offset": 1028}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 54, "line": 41, "offset": 1125}, "extra": {"engine_kind": "OSS", "fingerprint": "854100c2428e0b3fd98201691a104f4e5a641d3ac567392e054aa3c6eb2a7b0206c90fbd9fe3540d675e0ee3c56098084a7205ad495569529b44039e5f817e93_2", "is_ignored": false, "lines": "    sscanf(*(char **)(param_2 + 0x18),\"%d\",&Int_Port);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 11, "line": 41, "offset": 1082}, "start": {"col": 5, "line": 41, "offset": 1076}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 5, "line": 41, "offset": 1076}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc", "end": {"col": 54, "line": 41, "offset": 1125}, "extra": {"engine_kind": "OSS", "fingerprint": "8aa7b1c507e05faddbac64239097e335d8e3d2f6a2e40eb6e6253d590ec48f71dd3ef86b79059d1b51ac41734e4209899a2a46b7f36cf7cf2f8b617542003146_2", "is_ignored": false, "lines": "    sscanf(*(char **)(param_2 + 0x18),\"%d\",&Int_Port);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 11, "line": 41, "offset": 1082}, "start": {"col": 5, "line": 41, "offset": 1076}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 5, "line": 41, "offset": 1076}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 25, "line": 51, "offset": 1342}, "extra": {"engine_kind": "OSS", "fingerprint": "815ed4cdaf53be3dcb8d801e7f1de29627589acddd1e4e3a453e30029e7635fbe432c7d099f10803db402832aa5fc18def481fad4df5b5980305673626769832_2", "is_ignored": false, "lines": "  strcpy(LocalIP,pcVar2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 3, "line": 51, "offset": 1320}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 25, "line": 51, "offset": 1342}, "extra": {"engine_kind": "OSS", "fingerprint": "5af20bb0a325c31b20d67d51ef834bc97d048949b8c8902cb79c4f0ed3b4218c39e4af649a2fc69ddbab1d2e1a6919e150d6b86da16dffb6bf4a1f86791652e5_2", "is_ignored": false, "lines": "  strcpy(LocalIP,pcVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 9, "line": 51, "offset": 1326}, "start": {"col": 3, "line": 51, "offset": 1320}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 3, "line": 51, "offset": 1320}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 73, "line": 52, "offset": 1416}, "extra": {"engine_kind": "OSS", "fingerprint": "5af20bb0a325c31b20d67d51ef834bc97d048949b8c8902cb79c4f0ed3b4218c39e4af649a2fc69ddbab1d2e1a6919e150d6b86da16dffb6bf4a1f86791652e5_3", "is_ignored": false, "lines": "  strcpy(DeviceType,\"urn:schemas-upnp-org:device:WANConnectionDevice:1\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 9, "line": 52, "offset": 1352}, "start": {"col": 3, "line": 52, "offset": 1346}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_upnp_igd/main_00414d84.c", "start": {"col": 3, "line": 52, "offset": 1346}}], "skipped_rules": [], "version": "1.89.0"}
