[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004051e4_004051e4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004051e4_004051e4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m54[0m - [0;33mlocal_30 = sf_read(g_devname,*(undefined4 *)(param_1 + 0xc),*(undefined2 *)(param_1 + 0x10));[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_open_device_00406138.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_open_device_00406138.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m5[0m - [0;33muvc_open(param_1,2,param_3,param_4,&_gp);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004078e4_004078e4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004078e4_004078e4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m13[0m - [0;33m__fd = open(param_1,2,param_3,param_4,puVar1);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_write_to_flash_0040726c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_write_to_flash_0040726c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m17[0m - [0;33mlocal_10 = malloc(param_4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_write_to_flash_0040726c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_write_to_flash_0040726c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m50[0m - [0;33m);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_download_fm_0040686c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_download_fm_0040686c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m18[0m - [0;33mlocal_54 = malloc(param_3);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_download_fm_0040686c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_download_fm_0040686c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m72[0m - [0;33miVar1 = uvc_spi_sf_read(param_1,local_58,uVar2 & 0xffff,(int)local_54 + local_58);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_download_fm_0040686c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_download_fm_0040686c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m98[0m - [0;33miVar1 = memcmp(param_2,local_54,param_3);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/read_mem_00408c28.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/read_mem_00408c28.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m15[0m - [0;33mlocal_18 = malloc((uint)param_3);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/erase_fw_004083ac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/erase_fw_004083ac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m34[0m - [0;33miVar1 = uvc_spi_sf_read(__fd,0,0x20,&local_48);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/erase_fw_004083ac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/erase_fw_004083ac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m39[0m - [0;33mmemset(auStack_28,0xff,0x20);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_00407860_00407860.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_00407860_00407860.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m7[0m - [0;33mmemset(&sStack_a0,0,0x98);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_00407860_00407860.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_00407860_00407860.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat[0m
        Issue description:
    The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.

        [0;32m8[0m - [0;33mstat(param_1,&sStack_a0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_00407860_00407860.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_00407860_00407860.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m8[0m - [0;33mstat(param_1,&sStack_a0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/check_erase_result_00406624.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/check_erase_result_00406624.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m13[0m - [0;33mmemset(auStack_118,0,0x80);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/check_erase_result_00406624.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/check_erase_result_00406624.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m14[0m - [0;33mmemset(auStack_98,0,0x80);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/check_erase_result_00406624.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/check_erase_result_00406624.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m16[0m - [0;33mmemset(auStack_98,0xff,0x80);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/check_erase_result_00406624.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/check_erase_result_00406624.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m18[0m - [0;33miVar1 = uvc_spi_sf_read(param_1,param_2,0x80,auStack_118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/sf_read_004097a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/sf_read_004097a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m15[0m - [0;33mlocal_18 = malloc((uint)param_3);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/sf_read_004097a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/sf_read_004097a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m21[0m - [0;33mlocal_10 = uvc_spi_sf_read(__fd,param_2,param_3,local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m33[0m - [0;33mlocal_24 = malloc(__size);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m34[0m - [0;33mif ((local_24 != (void *)0x0) && (local_28 = fopen(param_2,"rb"), local_28 != (FILE *)0x0)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m35[0m - [0;33mfread(local_24,1,__size,local_28);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m35[0m - [0;33mfread(local_24,1,__size,local_28);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m51[0m - [0;33mlocal_18 = uvc_download_fm(local_1c,local_24,__size);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/UVC_ReadI2CGeneric_0040b988.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/UVC_ReadI2CGeneric_0040b988.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m5[0m - [0;33muvc_i2c_normal_read(param_1,param_2,param_3,param_4,&_gp);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_0040a9ac_0040a9ac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_0040a9ac_0040a9ac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-integer-truncation[0m
        Issue description:
    Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.

        [0;32m8[0m - [0;33mlocal_10 = 3;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_0040a9ac_0040a9ac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_0040a9ac_0040a9ac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-integer-truncation[0m
        Issue description:
    Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.

        [0;32m10[0m - [0;33mlocal_10 = 0;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_0040a9ac_0040a9ac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_0040a9ac_0040a9ac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-integer-truncation[0m
        Issue description:
    Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.

        [0;32m14[0m - [0;33mlocal_10 = *(short *)(param_1 + local_14 * 0xc + 4) * 3 + local_10 + 3;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m27[0m - [0;33mmemset(auStack_9c,0,0x80);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m47[0m - [0;33m(uint)local_4f,(uint)local_4e,(uint)local_4d);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m47[0m - [0;33m(uint)local_4f,(uint)local_4e,(uint)local_4d);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m51[0m - [0;33m(uint)local_57,(uint)local_56,(uint)local_55);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m51[0m - [0;33m(uint)local_57,(uint)local_56,(uint)local_55);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-integer-wraparound[0m
        Issue description:
    The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.

        [0;32m21[0m - [0;33m__s = malloc(local_38 * 0x400);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m21[0m - [0;33m__s = malloc(local_38 * 0x400);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m27[0m - [0;33mmemcpy(acStack_2c,"rscam_fw.bin",0xd);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m27[0m - [0;33mmemcpy(acStack_2c,"rscam_fw.bin",0xd);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m35[0m - [0;33mlocal_48 = fopen(acStack_2c,"wb");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m38[0m - [0;33mlocal_34 = uvc_spi_sf_read(__fd,iVar1,0x400,(void *)((int)__s + iVar1));[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_open_0040e3c8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_open_0040e3c8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m8[0m - [0;33m__fd = open(param_1,param_2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_xu_id_0040ea00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_xu_id_0040ea00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m13[0m - [0;33mmemcpy(auStack_3c,&DAT_00418918,0x28);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_xu_id_0040ea00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_xu_id_0040ea00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m13[0m - [0;33mmemcpy(auStack_3c,&DAT_00418918,0x28);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_write_i2c_reg16_0040f87c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_write_i2c_reg16_0040f87c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m8[0m - [0;33mmemset(&local_10,0,2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m21[0m - [0;33mmemset(auStack_16c,0,0x40);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m22[0m - [0;33mmemset(acStack_12c,0,0x100);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m28[0m - [0;33mmemset(&local_2c,0,0x14);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat[0m
        Issue description:
    The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.

        [0;32m34[0m - [0;33miVar2 = access(param_1,0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m34[0m - [0;33miVar2 = access(param_1,0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m38[0m - [0;33mmemset(auStack_16c,0,0x40);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-scanf-etc[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m39[0m - [0;33msscanf(param_1,"/dev/%s",auStack_16c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m39[0m - [0;33msscanf(param_1,"/dev/%s",auStack_16c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m39[0m - [0;33msscanf(param_1,"/dev/%s",auStack_16c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m42[0m - [0;33msnprintf(acStack_12c,0x100,"/sys/class/video4linux/%s/device/modalias",auStack_16c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m42[0m - [0;33msnprintf(acStack_12c,0x100,"/sys/class/video4linux/%s/device/modalias",auStack_16c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m49[0m - [0;33m__stream = fopen(acStack_12c,"rb");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m55[0m - [0;33mfread(&local_2c,1,0x13,__stream);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m55[0m - [0;33mfread(&local_2c,1,0x13,__stream);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m57[0m - [0;33msscanf((char *)&local_2c,"usb:v%04xp%04xd%04x",&local_18,&local_14,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m57[0m - [0;33msscanf((char *)&local_2c,"usb:v%04xp%04xd%04x",&local_18,&local_14,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/add_xu_ctrls_004163e0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/add_xu_ctrls_004163e0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m18[0m - [0;33mmemset(local_58,0,0x44);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_set_cmnd_00416670.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_set_cmnd_00416670.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m12[0m - [0;33mmemset(&local_14,0,0xc);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_get_status_00416730.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_get_status_00416730.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m18[0m - [0;33mmemset(&local_1c,0,0xc);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_set_data_00416848.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_set_data_00416848.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m11[0m - [0;33mmemset(&local_18,0,0xc);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_get_data_004168fc.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_get_data_004168fc.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m11[0m - [0;33mmemset(&local_18,0,0xc);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_write_data_004169b0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_write_data_004169b0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m31[0m - [0;33m__n = param_3 & 0x80000007;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_write_data_004169b0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_write_data_004169b0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-incorrect-unsigned-comparison[0m
        Issue description:
    Checking if an unsigned variable is negative makes no sense and is usually a good indication that something is probably wrong with the code.

        [0;32m32[0m - [0;33mif ((int)__n < 0) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_write_data_004169b0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_write_data_004169b0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m33[0m - [0;33m__n = (__n - 1 | 0xfffffff8) + 1;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_write_data_004169b0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_write_data_004169b0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m35[0m - [0;33mmemcpy(&local_14,local_20,__n);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_read_data_00416b30.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_read_data_00416b30.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m35[0m - [0;33m__n = param_3 & 0x80000007;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_read_data_00416b30.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_read_data_00416b30.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-incorrect-unsigned-comparison[0m
        Issue description:
    Checking if an unsigned variable is negative makes no sense and is usually a good indication that something is probably wrong with the code.

        [0;32m36[0m - [0;33mif ((int)__n < 0) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_read_data_00416b30.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_read_data_00416b30.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m37[0m - [0;33m__n = (__n - 1 | 0xfffffff8) + 1;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_read_data_00416b30.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_read_data_00416b30.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m39[0m - [0;33mmemcpy(local_20,&local_14,__n);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m13[0m - [0;33msnprintf(g_devname,0x100,"/dev/video0");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m13[0m - [0;33msnprintf(g_devname,0x100,"/dev/video0");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m16[0m - [0;33miVar6 = getopt_long(param_1,param_2,&DAT_004173e0,longopts,0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m24[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m24[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m24[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m25[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m33[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m33[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m33[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m34[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m56[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m56[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m56[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m57[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m59[0m - [0;33msnprintf((char *)((int)pvVar2 + 0x18),0x100,"%s",optarg);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m59[0m - [0;33msnprintf((char *)((int)pvVar2 + 0x18),0x100,"%s",optarg);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m64[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m64[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m64[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m65[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m81[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m81[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m81[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m82[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m98[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m98[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m98[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m99[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m110[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m110[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m110[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m111[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m124[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m124[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m125[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m137[0m - [0;33mpvVar4 = malloc((uint)*(ushort *)((int)pvVar2 + 0x10));[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-integer-wraparound[0m
        Issue description:
    The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.

        [0;32m137[0m - [0;33mpvVar4 = malloc((uint)*(ushort *)((int)pvVar2 + 0x10));[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m137[0m - [0;33mpvVar4 = malloc((uint)*(ushort *)((int)pvVar2 + 0x10));[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m157[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m157[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m157[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m158[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m166[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m166[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m166[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m167[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m174[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m174[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m174[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m175[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m181[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m181[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m181[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m182[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m193[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m193[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m193[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m194[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m203[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m203[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m203[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m204[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m234[0m - [0;33msnprintf(g_devname,0x100,"%s",optarg);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m234[0m - [0;33msnprintf(g_devname,0x100,"%s",optarg);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m13[0m - [0;33msnprintf(g_devname,0x100,"/dev/video0");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m13[0m - [0;33msnprintf(g_devname,0x100,"/dev/video0");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m16[0m - [0;33miVar6 = getopt_long(param_1,param_2,&DAT_004173e0,longopts,0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m24[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m24[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m24[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m25[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m33[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m33[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m33[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m34[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m56[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m56[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m56[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m57[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m59[0m - [0;33msnprintf((char *)((int)pvVar2 + 0x18),0x100,"%s",optarg);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m59[0m - [0;33msnprintf((char *)((int)pvVar2 + 0x18),0x100,"%s",optarg);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m64[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m64[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m64[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m65[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m81[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m81[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m81[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m82[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m98[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m98[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m98[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m99[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m110[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m110[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m110[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m111[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m124[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m124[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m125[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m137[0m - [0;33mpvVar4 = malloc((uint)*(ushort *)((int)pvVar2 + 0x10));[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-integer-wraparound[0m
        Issue description:
    The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.

        [0;32m137[0m - [0;33mpvVar4 = malloc((uint)*(ushort *)((int)pvVar2 + 0x10));[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m137[0m - [0;33mpvVar4 = malloc((uint)*(ushort *)((int)pvVar2 + 0x10));[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m157[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m157[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m157[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m158[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m166[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m166[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m166[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m167[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m174[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m174[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m174[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m175[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m181[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m181[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m181[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m182[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m193[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m193[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m193[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m194[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m203[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m203[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m203[0m - [0;33mpvVar2 = malloc(0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m204[0m - [0;33mmemset(pvVar2,0,0x118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m234[0m - [0;33msnprintf(g_devname,0x100,"%s",optarg);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004040ec_004040ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m234[0m - [0;33msnprintf(g_devname,0x100,"%s",optarg);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004051e4_004051e4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004051e4_004051e4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m54[0m - [0;33mlocal_30 = sf_read(g_devname,*(undefined4 *)(param_1 + 0xc),*(undefined2 *)(param_1 + 0x10));[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_00407860_00407860.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_00407860_00407860.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m7[0m - [0;33mmemset(&sStack_a0,0,0x98);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_00407860_00407860.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_00407860_00407860.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat[0m
        Issue description:
    The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.

        [0;32m8[0m - [0;33mstat(param_1,&sStack_a0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_00407860_00407860.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_00407860_00407860.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m8[0m - [0;33mstat(param_1,&sStack_a0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004078e4_004078e4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_004078e4_004078e4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m13[0m - [0;33m__fd = open(param_1,2,param_3,param_4,puVar1);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_0040a9ac_0040a9ac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_0040a9ac_0040a9ac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-integer-truncation[0m
        Issue description:
    Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.

        [0;32m8[0m - [0;33mlocal_10 = 3;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_0040a9ac_0040a9ac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_0040a9ac_0040a9ac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-integer-truncation[0m
        Issue description:
    Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.

        [0;32m10[0m - [0;33mlocal_10 = 0;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_0040a9ac_0040a9ac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/FUN_0040a9ac_0040a9ac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-integer-truncation[0m
        Issue description:
    Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.

        [0;32m14[0m - [0;33mlocal_10 = *(short *)(param_1 + local_14 * 0xc + 4) * 3 + local_10 + 3;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/UVC_ReadI2CGeneric_0040b988.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/UVC_ReadI2CGeneric_0040b988.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m5[0m - [0;33muvc_i2c_normal_read(param_1,param_2,param_3,param_4,&_gp);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/add_xu_ctrls_004163e0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/add_xu_ctrls_004163e0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m18[0m - [0;33mmemset(local_58,0,0x44);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/check_erase_result_00406624.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/check_erase_result_00406624.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m13[0m - [0;33mmemset(auStack_118,0,0x80);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/check_erase_result_00406624.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/check_erase_result_00406624.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m14[0m - [0;33mmemset(auStack_98,0,0x80);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/check_erase_result_00406624.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/check_erase_result_00406624.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m16[0m - [0;33mmemset(auStack_98,0xff,0x80);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/check_erase_result_00406624.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/check_erase_result_00406624.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m18[0m - [0;33miVar1 = uvc_spi_sf_read(param_1,param_2,0x80,auStack_118);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m33[0m - [0;33mlocal_24 = malloc(__size);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m34[0m - [0;33mif ((local_24 != (void *)0x0) && (local_28 = fopen(param_2,"rb"), local_28 != (FILE *)0x0)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m35[0m - [0;33mfread(local_24,1,__size,local_28);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m35[0m - [0;33mfread(local_24,1,__size,local_28);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/download_fw_00407b24.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m51[0m - [0;33mlocal_18 = uvc_download_fm(local_1c,local_24,__size);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/erase_fw_004083ac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/erase_fw_004083ac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m34[0m - [0;33miVar1 = uvc_spi_sf_read(__fd,0,0x20,&local_48);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/erase_fw_004083ac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/erase_fw_004083ac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m39[0m - [0;33mmemset(auStack_28,0xff,0x20);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m21[0m - [0;33mmemset(auStack_16c,0,0x40);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m22[0m - [0;33mmemset(acStack_12c,0,0x100);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m28[0m - [0;33mmemset(&local_2c,0,0x14);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat[0m
        Issue description:
    The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.

        [0;32m34[0m - [0;33miVar2 = access(param_1,0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m34[0m - [0;33miVar2 = access(param_1,0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m38[0m - [0;33mmemset(auStack_16c,0,0x40);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-scanf-etc[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m39[0m - [0;33msscanf(param_1,"/dev/%s",auStack_16c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m39[0m - [0;33msscanf(param_1,"/dev/%s",auStack_16c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m39[0m - [0;33msscanf(param_1,"/dev/%s",auStack_16c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m42[0m - [0;33msnprintf(acStack_12c,0x100,"/sys/class/video4linux/%s/device/modalias",auStack_16c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m42[0m - [0;33msnprintf(acStack_12c,0x100,"/sys/class/video4linux/%s/device/modalias",auStack_16c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m49[0m - [0;33m__stream = fopen(acStack_12c,"rb");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m55[0m - [0;33mfread(&local_2c,1,0x13,__stream);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m55[0m - [0;33mfread(&local_2c,1,0x13,__stream);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m57[0m - [0;33msscanf((char *)&local_2c,"usb:v%04xp%04xd%04x",&local_18,&local_14,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_device_modalias_0040a134.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m57[0m - [0;33msscanf((char *)&local_2c,"usb:v%04xp%04xd%04x",&local_18,&local_14,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m27[0m - [0;33mmemset(auStack_9c,0,0x80);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m47[0m - [0;33m(uint)local_4f,(uint)local_4e,(uint)local_4d);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m47[0m - [0;33m(uint)local_4f,(uint)local_4e,(uint)local_4d);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m51[0m - [0;33m(uint)local_57,(uint)local_56,(uint)local_55);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_fw_version_00409e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m51[0m - [0;33m(uint)local_57,(uint)local_56,(uint)local_55);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_xu_id_0040ea00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_xu_id_0040ea00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m13[0m - [0;33mmemcpy(auStack_3c,&DAT_00418918,0x28);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_xu_id_0040ea00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/get_xu_id_0040ea00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m13[0m - [0;33mmemcpy(auStack_3c,&DAT_00418918,0x28);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/read_mem_00408c28.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/read_mem_00408c28.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m15[0m - [0;33mlocal_18 = malloc((uint)param_3);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-integer-wraparound[0m
        Issue description:
    The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.

        [0;32m21[0m - [0;33m__s = malloc(local_38 * 0x400);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m21[0m - [0;33m__s = malloc(local_38 * 0x400);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m27[0m - [0;33mmemcpy(acStack_2c,"rscam_fw.bin",0xd);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m27[0m - [0;33mmemcpy(acStack_2c,"rscam_fw.bin",0xd);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m35[0m - [0;33mlocal_48 = fopen(acStack_2c,"wb");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/rts_dump_fw_uvc_0040b5ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m38[0m - [0;33mlocal_34 = uvc_spi_sf_read(__fd,iVar1,0x400,(void *)((int)__s + iVar1));[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/sf_read_004097a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/sf_read_004097a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m15[0m - [0;33mlocal_18 = malloc((uint)param_3);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/sf_read_004097a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/sf_read_004097a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m21[0m - [0;33mlocal_10 = uvc_spi_sf_read(__fd,param_2,param_3,local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_download_fm_0040686c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_download_fm_0040686c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m18[0m - [0;33mlocal_54 = malloc(param_3);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_download_fm_0040686c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_download_fm_0040686c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m72[0m - [0;33miVar1 = uvc_spi_sf_read(param_1,local_58,uVar2 & 0xffff,(int)local_54 + local_58);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_download_fm_0040686c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_download_fm_0040686c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m98[0m - [0;33miVar1 = memcmp(param_2,local_54,param_3);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_open_0040e3c8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_open_0040e3c8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m8[0m - [0;33m__fd = open(param_1,param_2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_open_device_00406138.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_open_device_00406138.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m5[0m - [0;33muvc_open(param_1,2,param_3,param_4,&_gp);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_write_i2c_reg16_0040f87c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_write_i2c_reg16_0040f87c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m8[0m - [0;33mmemset(&local_10,0,2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_write_to_flash_0040726c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_write_to_flash_0040726c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m17[0m - [0;33mlocal_10 = malloc(param_4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_write_to_flash_0040726c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/uvc_write_to_flash_0040726c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m50[0m - [0;33m);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_get_data_004168fc.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_get_data_004168fc.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m11[0m - [0;33mmemset(&local_18,0,0xc);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_get_status_00416730.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_get_status_00416730.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m18[0m - [0;33mmemset(&local_1c,0,0xc);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_read_data_00416b30.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_read_data_00416b30.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m35[0m - [0;33m__n = param_3 & 0x80000007;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_read_data_00416b30.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_read_data_00416b30.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-incorrect-unsigned-comparison[0m
        Issue description:
    Checking if an unsigned variable is negative makes no sense and is usually a good indication that something is probably wrong with the code.

        [0;32m36[0m - [0;33mif ((int)__n < 0) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_read_data_00416b30.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_read_data_00416b30.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m37[0m - [0;33m__n = (__n - 1 | 0xfffffff8) + 1;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_read_data_00416b30.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_read_data_00416b30.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m39[0m - [0;33mmemcpy(local_20,&local_14,__n);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_set_cmnd_00416670.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_set_cmnd_00416670.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m12[0m - [0;33mmemset(&local_14,0,0xc);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_set_data_00416848.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_set_data_00416848.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m11[0m - [0;33mmemset(&local_18,0,0xc);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_write_data_004169b0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_write_data_004169b0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m31[0m - [0;33m__n = param_3 & 0x80000007;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_write_data_004169b0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_write_data_004169b0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-incorrect-unsigned-comparison[0m
        Issue description:
    Checking if an unsigned variable is negative makes no sense and is usually a good indication that something is probably wrong with the code.

        [0;32m32[0m - [0;33mif ((int)__n < 0) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_write_data_004169b0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_write_data_004169b0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m33[0m - [0;33m__n = (__n - 1 | 0xfffffff8) + 1;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_write_data_004169b0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_rscam_uvc/xu_write_data_004169b0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m35[0m - [0;33mmemcpy(&local_14,local_20,__n);[0m

-----------------------------------------------------------------

