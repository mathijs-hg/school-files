/tmp/haruspex_hnap_push_service/AESDecrypt_0041326c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,17,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/AESEncrypt_0041313c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,27,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/AESEncrypt_0041313c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,39,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00402e94_00402e94.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,21,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00402e94_00402e94.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,23,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00402e94_00402e94.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,34,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00404d40_00404d40.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,27,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,25,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,27,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,34,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,43,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,45,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,47,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,54,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,56,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,59,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,59,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,78,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,78,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,86,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,86,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c,external.semgrep-rules-0xdea.c.raptor-format-string-bugs,113,The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.
/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,113,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,113,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c,external.semgrep-rules-0xdea.c.raptor-format-string-bugs,121,The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.
/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,121,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,121,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c,external.semgrep-rules-0xdea.c.raptor-format-string-bugs,128,The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.
/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,128,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,128,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_004058a8_004058a8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,28,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_004058a8_004058a8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,42,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_004058a8_004058a8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,50,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_004058a8_004058a8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,69,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_004058a8_004058a8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,77,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_004058a8_004058a8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,84,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_0040710c_0040710c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,35,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_0040710c_0040710c.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,36,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/FUN_0040710c_0040710c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,36,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_0040710c_0040710c.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,37,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/FUN_0040710c_0040710c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,37,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_0040710c_0040710c.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,39,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/FUN_0040710c_0040710c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,39,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00410640_00410640.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,11,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00410864_00410864.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,11,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00410864_00410864.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,15,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00410ae0_00410ae0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,28,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00410ae0_00410ae0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,29,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00410ae0_00410ae0.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,33,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/FUN_00410ae0_00410ae0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,33,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00410ae0_00410ae0.c,external.semgrep-rules-0xdea.c.raptor-integer-truncation,56,Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.
/tmp/haruspex_hnap_push_service/FUN_00410ae0_00410ae0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,67,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00411588_00411588.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,16,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/FUN_00411588_00411588.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,16,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_0041161c_0041161c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,14,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00411860_00411860.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,14,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00411860_00411860.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,32,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/FUN_00411860_00411860.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,32,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00411860_00411860.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,37,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/FUN_00411860_00411860.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,37,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00411860_00411860.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,52,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00411af8_00411af8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,30,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00411af8_00411af8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,30,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,21,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,23,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,35,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,38,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc,38,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,47,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc,47,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,51,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,53,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,63,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,75,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,75,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,78,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,78,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,80,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_004126e4_004126e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,7,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_004126e4_004126e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,8,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00412afc_00412afc.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-rand-srand,11,The rand() PRNG should not be used in applications intended to be  portable when good randomness is needed. Instead, the use of random()  is recommended.
/tmp/haruspex_hnap_push_service/FUN_00412afc_00412afc.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,11,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00412bd8_00412bd8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,18,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_00412bd8_00412bd8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,27,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00412bd8_00412bd8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,28,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00412eb4_00412eb4.c,external.semgrep-rules-0xdea.c.raptor-integer-truncation,16,Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.
/tmp/haruspex_hnap_push_service/FUN_00412eb4_00412eb4.c,external.semgrep-rules-0xdea.c.raptor-integer-truncation,17,Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.
/tmp/haruspex_hnap_push_service/FUN_00412eb4_00412eb4.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,19,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/FUN_00412eb4_00412eb4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,19,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_00412f7c_00412f7c.c,external.semgrep-rules-0xdea.c.raptor-integer-truncation,26,Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.
/tmp/haruspex_hnap_push_service/FUN_004133d0_004133d0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,33,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_004133d0_004133d0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,47,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_004133d0_004133d0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,102,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_004133d0_004133d0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,103,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_004133d0_004133d0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,103,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/FUN_004133d0_004133d0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,103,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/FUN_004133d0_004133d0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,105,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,89,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,103,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,107,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,109,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,111,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,113,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,121,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,121,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,130,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,130,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,135,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,139,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,139,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c,external.semgrep-rules-0xdea.c.raptor-command-injection,141,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,141,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,94,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,98,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,100,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,108,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,113,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,130,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,139,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,153,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,156,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,156,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,161,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,164,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,164,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,169,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,198,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,201,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,201,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,206,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,215,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,218,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,218,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,223,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,226,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,226,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,231,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,240,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,243,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,243,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,274,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,277,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,277,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,282,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,291,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,294,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,294,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,299,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,302,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,302,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,307,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,316,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,319,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,319,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,324,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,344,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,347,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,347,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,378,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,430,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,435,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,435,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,436,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,436,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,456,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,461,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,461,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,462,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,462,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,482,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,488,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,488,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,489,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,489,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,509,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,515,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,515,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,516,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,516,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,537,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,543,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,543,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,544,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,544,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,565,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,571,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,571,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,572,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,572,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,593,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,616,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,616,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,637,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,655,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,655,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,676,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,685,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,685,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,692,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,692,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,695,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,695,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,728,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,737,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,737,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,744,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,744,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,747,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,747,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,796,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,798,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,800,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,806,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,806,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,807,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,807,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,814,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,816,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,818,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,824,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,824,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,825,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,825,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,873,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,875,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,877,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,883,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,883,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,884,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,884,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,892,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,894,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,896,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,902,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,902,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,903,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,903,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,952,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,954,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,956,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,962,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,962,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,963,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,963,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,972,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,974,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,976,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,982,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,982,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,983,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,983,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,1034,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,1036,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,1038,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,1044,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,1044,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,1045,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,1045,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,1054,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,1056,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,1058,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,1064,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,1064,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-command-injection,1065,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,1065,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,1105,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,1113,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,1175,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,1182,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,58,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,67,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,77,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,91,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,100,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,114,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,117,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,117,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,122,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,125,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,125,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,130,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,159,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,162,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,162,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,167,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,176,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,179,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,179,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,184,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,187,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,187,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,192,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,201,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,204,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,204,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,235,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,238,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,238,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,243,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,252,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,255,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,255,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,260,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,263,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,263,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,268,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,277,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,280,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,280,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,285,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,305,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,308,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,308,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,522,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,526,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,529,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,532,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,535,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,538,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,17,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,19,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,20,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,24,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,24,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,25,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,25,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,29,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,29,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/encrypt_00412d44.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,20,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/encrypt_00412d44.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,29,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/encrypt_00412d44.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,29,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/encrypt_00412d44.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,30,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c,external.semgrep-rules-0xdea.c.raptor-incorrect-unsigned-comparison,45,Checking if an unsigned variable is negative makes no sense and is usually a good indication that something is probably wrong with the code.
/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,55,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,72,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,77,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,84,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,95,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,112,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,114,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,30,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,36,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,36,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,79,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,81,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,83,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,90,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,90,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/initEventMsg_00414014.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,7,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/initEventMsg_00414014.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,7,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/initEventMsg_00414014.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,12,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/ixmlGetElementValueByTag_s_00402ab4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,23,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/main_00401c74.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-signal,21,The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.
/tmp/haruspex_hnap_push_service/main_00401c74.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-signal,22,The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.
/tmp/haruspex_hnap_push_service/main_00401c74.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-signal,23,The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.
/tmp/haruspex_hnap_push_service/main_00401c74.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-signal,24,The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.
/tmp/haruspex_hnap_push_service/main_00401c74.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-signal,25,The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.
/tmp/haruspex_hnap_push_service/main_00401c74.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,38,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/main_00401c74.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,38,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/random_hash_004024f0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,12,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/random_hash_004024f0.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,12,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_hnap_push_service/random_hash_004024f0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,14,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/random_hash_004024f0.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-rand-srand,17,The rand() PRNG should not be used in applications intended to be  portable when good randomness is needed. Instead, the use of random()  is recommended.
/tmp/haruspex_hnap_push_service/random_hash_004024f0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,17,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_hnap_push_service/sendEventMsg_00413d34.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,26,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/sendEventMsg_00413d34.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,28,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/sendEventMsg_00413d34.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,36,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_hnap_push_service/sendEventMsg_00413d34.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,47,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
