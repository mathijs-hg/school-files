[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401174_00401174.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401174_00401174.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m10[0m - [0;33miVar1 = open(param_2,1,0,param_4,puVar2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401f94_00401f94.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401f94_00401f94.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m7[0m - [0;33miVar1 = sockets_open();[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405cf8_00405cf8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405cf8_00405cf8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-integer-truncation[0m
        Issue description:
    Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.

        [0;32m27[0m - [0;33mcVar2 = param_1[1];[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/iw_message_004058fc.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/iw_message_004058fc.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-format-string-bugs[0m
        Issue description:
    The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.

        [0;32m10[0m - [0;33mvsnprintf(&DAT_00418d20,0x1ff,param_2,&local_res8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/iw_message_004058fc.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/iw_message_004058fc.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m10[0m - [0;33mvsnprintf(&DAT_00418d20,0x1ff,param_2,&local_res8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/iw_message_004058fc.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/iw_message_004058fc.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m10[0m - [0;33mvsnprintf(&DAT_00418d20,0x1ff,param_2,&local_res8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405c6c_00405c6c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405c6c_00405c6c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m14[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405c6c_00405c6c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405c6c_00405c6c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m14[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405c6c_00405c6c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405c6c_00405c6c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m14[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/pr_ether_004060fc.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/pr_ether_004060fc.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m6[0m - [0;33m(uint)param_1[2],(uint)param_1[3],(uint)param_1[4],(uint)param_1[5],&_gp);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m10[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m10[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m10[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m17[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m17[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m17[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m27[0m - [0;33mmemcpy(param_2 + 2,*phVar3->h_addr_list,phVar3->h_length);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m28[0m - [0;33mstrcpy(param_1,phVar3->h_name);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m28[0m - [0;33mstrcpy(param_1,phVar3->h_name);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m32[0m - [0;33mstrcpy(param_1,pnVar2->n_name);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m32[0m - [0;33mstrcpy(param_1,pnVar2->n_name);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-scanf-etc[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m24[0m - [0;33msscanf(__s1,"auth-%s.pid",param_1 + DAT_00418314 * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m24[0m - [0;33msscanf(__s1,"auth-%s.pid",param_1 + DAT_00418314 * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m24[0m - [0;33msscanf(__s1,"auth-%s.pid",param_1 + DAT_00418314 * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-scanf-etc[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m46[0m - [0;33msscanf(pdVar3->d_name,"autoconf-%s.pid",param_2 + DAT_0041831c * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m46[0m - [0;33msscanf(pdVar3->d_name,"autoconf-%s.pid",param_2 + DAT_0041831c * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m46[0m - [0;33msscanf(pdVar3->d_name,"autoconf-%s.pid",param_2 + DAT_0041831c * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m60[0m - [0;33mstrcpy((char *)(param_3 + iVar1 + 8),"wlan0");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m63[0m - [0;33mstrcpy((char *)(param_3 + iVar1 + 8),"wlan1");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-scanf-etc[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m66[0m - [0;33msscanf(pdVar3->d_name,"wscd-%s.pid",param_3 + DAT_00418320 * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m66[0m - [0;33msscanf(pdVar3->d_name,"wscd-%s.pid",param_3 + DAT_00418320 * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m66[0m - [0;33msscanf(pdVar3->d_name,"wscd-%s.pid",param_3 + DAT_00418320 * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RegisterPID_00406810.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RegisterPID_00406810.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m22[0m - [0;33mstrncpy((char *)&local_34,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RegisterPID_00406810.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RegisterPID_00406810.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m22[0m - [0;33mstrncpy((char *)&local_34,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RegisterPID_00406810.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RegisterPID_00406810.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m22[0m - [0;33mstrncpy((char *)&local_34,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m22[0m - [0;33mmemcpy(auStack_68,auStack_78,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m22[0m - [0;33mmemcpy(auStack_68,auStack_78,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m25[0m - [0;33mstrncpy(acStack_34,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m25[0m - [0;33mstrncpy(acStack_34,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m25[0m - [0;33mstrncpy(acStack_34,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m28[0m - [0;33mmemcpy(param_4,local_58,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m28[0m - [0;33mmemcpy(param_4,local_58,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m14[0m - [0;33mstrncpy(acStack_4a8,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m14[0m - [0;33mstrncpy(acStack_4a8,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m14[0m - [0;33mstrncpy(acStack_4a8,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m21[0m - [0;33mmemcpy(param_3,local_488,0x238);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m21[0m - [0;33mmemcpy(param_3,local_488,0x238);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m27[0m - [0;33mmemset(acStack_6c,0,0x40);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m36[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m36[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m43[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m43[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m61[0m - [0;33msprintf(acStack_6c,"Receive Invalid or Unhandled Event %d");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m74[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m74[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m108[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m108[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m167[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m167[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m175[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m175[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m20[0m - [0;33mstrncpy((char *)&local_38,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m20[0m - [0;33mstrncpy((char *)&local_38,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m20[0m - [0;33mstrncpy((char *)&local_38,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m21[0m - [0;33m__ptr = (undefined *)malloc(0x618);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m21[0m - [0;33m__ptr = (undefined *)malloc(0x618);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m21[0m - [0;33m__ptr = (undefined *)malloc(0x618);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m33[0m - [0;33mmemcpy(param_3,local_28,(uint)local_24);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m33[0m - [0;33mmemcpy(param_3,local_28,(uint)local_24);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m28[0m - [0;33mpFVar6 = fopen("/var/run/iwcontrol.pid","r");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m30[0m - [0;33mfgets(acStack_6c,0x14,pFVar6);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m31[0m - [0;33miVar7 = sscanf(acStack_6c,"%d",&local_70);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m52[0m - [0;33mstrcpy(&DAT_00418a6c + DAT_00418310 * 0x14,(char *)puVar15[1]);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m52[0m - [0;33mstrcpy(&DAT_00418a6c + DAT_00418310 * 0x14,(char *)puVar15[1]);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m72[0m - [0;33miVar7 = open("/var/run/iwcontrol.pid",0x101,0x1a4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m86[0m - [0;33mpFVar6 = fdopen(iVar7,"w");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m101[0m - [0;33msprintf(acStack_58,"/var/auth-%s.fifo",&DAT_00418324 + (iVar7 * 3 + 1) * 2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m101[0m - [0;33msprintf(acStack_58,"/var/auth-%s.fifo",&DAT_00418324 + (iVar7 * 3 + 1) * 2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m116[0m - [0;33msprintf(acStack_58,"/var/autoconf-%s.fifo",&DAT_00418b34 + (iVar7 * 3 + 1) * 2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m116[0m - [0;33msprintf(acStack_58,"/var/autoconf-%s.fifo",&DAT_00418b34 + (iVar7 * 3 + 1) * 2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m125[0m - [0;33msprintf(acStack_58,"/var/wscd-%s.fifo",&DAT_00418c24 + (iVar7 * 3 + 1) * 2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m125[0m - [0;33msprintf(acStack_58,"/var/wscd-%s.fifo",&DAT_00418c24 + (iVar7 * 3 + 1) * 2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m171[0m - [0;33msprintf(local_34,"/dev/wl_chr%d",iVar7);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m172[0m - [0;33mDAT_00418d14 = (undefined *)open(local_34,2,0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-signal[0m
        Issue description:
    The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.

        [0;32m188[0m - [0;33msignal(0x16,FUN_00401f2c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-signal[0m
        Issue description:
    The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.

        [0;32m192[0m - [0;33msignal(0x16,FUN_00401f2c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m34[0m - [0;33miVar2 = sockets_open();[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m52[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m52[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m52[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m91[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m91[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m91[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m95[0m - [0;33miVar4 = sscanf(pcVar11,"%lX",&local_90);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m141[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m141[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m141[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m150[0m - [0;33msVar7 = strlen(pcVar11 + 2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m156[0m - [0;33mstrncpy((char *)local_30._4_4_,*local_40 + 2,(uint)local_8c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m156[0m - [0;33mstrncpy((char *)local_30._4_4_,*local_40 + 2,(uint)local_8c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-integer-wraparound[0m
        Issue description:
    The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.

        [0;32m164[0m - [0;33mlocal_3c = (char *)malloc(sVar7 + 1);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m164[0m - [0;33mlocal_3c = (char *)malloc(sVar7 + 1);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m172[0m - [0;33mstrcpy(local_3c,pcVar11);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m172[0m - [0;33mstrcpy(local_3c,pcVar11);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m174[0m - [0;33mpcVar11 = strtok(local_3c,"-:;.,");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m177[0m - [0;33miVar6 = sscanf(pcVar11,"%2X",local_38);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m186[0m - [0;33mpcVar12 = strtok((char *)0x0,"-:;.,");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m200[0m - [0;33miVar3 = sscanf(*(char **)(param_2 + iVar4 * 4),"[%d]",&local_a8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m285[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m285[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m285[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m297[0m - [0;33mstrcpy((char *)local_80,pcVar11);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m297[0m - [0;33mstrcpy((char *)local_80,pcVar11);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m299[0m - [0;33miVar6 = sscanf(*(char **)(param_2 + iVar3 * 4),"[%d]",&local_a8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m403[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m403[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m403[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m410[0m - [0;33miVar6 = sscanf((char *)local_30._4_4_,"%lg",&local_a8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m493[0m - [0;33mstrncpy((char *)local_30._4_4_,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m493[0m - [0;33mstrncpy((char *)local_30._4_4_,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m493[0m - [0;33mstrncpy((char *)local_30._4_4_,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m497[0m - [0;33miVar4 = sscanf((char *)local_40,"%ld",&local_90);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m544[0m - [0;33mstrncpy((char *)local_30._4_4_,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m544[0m - [0;33mstrncpy((char *)local_30._4_4_,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m544[0m - [0;33mstrncpy((char *)local_30._4_4_,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m548[0m - [0;33miVar4 = sscanf((char *)local_40,"%ld",&local_90);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m572[0m - [0;33miVar4 = sscanf(*local_40,"%d",&local_a8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m625[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m625[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m625[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m668[0m - [0;33miVar3 = sscanf(*ppcVar13,"%lg",&local_a8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m743[0m - [0;33miVar4 = sscanf(*(char **)(param_2 + (iVar3 + 1) * 4),"%d",&local_90);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m75[0m - [0;33mmemset(acStack_7bc,0,0x79c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m76[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m76[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m76[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m82[0m - [0;33mstrcpy(acStack_7bc,(char *)&local_8cc);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m82[0m - [0;33mstrcpy(acStack_7bc,(char *)&local_8cc);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m87[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m87[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m87[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m94[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m94[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m94[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m101[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m101[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m101[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m110[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m110[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m110[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m118[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m118[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m118[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m122[0m - [0;33mmemcpy(auStack_6e8,&local_8cc,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m122[0m - [0;33mmemcpy(auStack_6e8,&local_8cc,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m124[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m124[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m124[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m131[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m131[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m131[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m138[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m138[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m138[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m145[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m145[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m145[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m152[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m152[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m152[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m160[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m160[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m160[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m168[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m168[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m168[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m175[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m175[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m175[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m182[0m - [0;33m__stream = fopen("/proc/net/wireless","r");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m185[0m - [0;33mpcVar5 = fgets(local_8bc,0xff,__stream);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m197[0m - [0;33miVar1 = strncmp(pcVar5,param_2,__n);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m200[0m - [0;33mpcVar4 = strtok(pcVar4 + 1," ");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m201[0m - [0;33msscanf(pcVar4,"%X",&local_8e0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m201[0m - [0;33msscanf(pcVar4,"%X",&local_8e0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m203[0m - [0;33mpcVar4 = strtok((char *)0x0," ");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m208[0m - [0;33msscanf(pcVar4,"%d",&local_8e0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m208[0m - [0;33msscanf(pcVar4,"%d",&local_8e0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m210[0m - [0;33mpcVar4 = strtok((char *)0x0," ");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m215[0m - [0;33msscanf(pcVar4,"%d",&local_8e0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m215[0m - [0;33msscanf(pcVar4,"%d",&local_8e0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m217[0m - [0;33mpcVar4 = strtok((char *)0x0," ");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m222[0m - [0;33msscanf(pcVar4,"%d",&local_8e0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m222[0m - [0;33msscanf(pcVar4,"%d",&local_8e0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m224[0m - [0;33mpcVar4 = strtok((char *)0x0," ");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m225[0m - [0;33msscanf(pcVar4,"%d",&local_278);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m225[0m - [0;33msscanf(pcVar4,"%d",&local_278);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m226[0m - [0;33mpcVar4 = strtok((char *)0x0," ");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m227[0m - [0;33msscanf(pcVar4,"%d",local_274);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m227[0m - [0;33msscanf(pcVar4,"%d",local_274);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m228[0m - [0;33mpcVar4 = strtok((char *)0x0," ");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m229[0m - [0;33msscanf(pcVar4,"%d",local_268);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m229[0m - [0;33msscanf(pcVar4,"%d",local_268);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401174_00401174.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401174_00401174.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m10[0m - [0;33miVar1 = open(param_2,1,0,param_4,puVar2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-scanf-etc[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m24[0m - [0;33msscanf(__s1,"auth-%s.pid",param_1 + DAT_00418314 * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m24[0m - [0;33msscanf(__s1,"auth-%s.pid",param_1 + DAT_00418314 * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m24[0m - [0;33msscanf(__s1,"auth-%s.pid",param_1 + DAT_00418314 * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-scanf-etc[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m46[0m - [0;33msscanf(pdVar3->d_name,"autoconf-%s.pid",param_2 + DAT_0041831c * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m46[0m - [0;33msscanf(pdVar3->d_name,"autoconf-%s.pid",param_2 + DAT_0041831c * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m46[0m - [0;33msscanf(pdVar3->d_name,"autoconf-%s.pid",param_2 + DAT_0041831c * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m60[0m - [0;33mstrcpy((char *)(param_3 + iVar1 + 8),"wlan0");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m63[0m - [0;33mstrcpy((char *)(param_3 + iVar1 + 8),"wlan1");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-scanf-etc[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m66[0m - [0;33msscanf(pdVar3->d_name,"wscd-%s.pid",param_3 + DAT_00418320 * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m66[0m - [0;33msscanf(pdVar3->d_name,"wscd-%s.pid",param_3 + DAT_00418320 * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401210_00401210.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m66[0m - [0;33msscanf(pdVar3->d_name,"wscd-%s.pid",param_3 + DAT_00418320 * 0x18 + 8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m27[0m - [0;33mmemset(acStack_6c,0,0x40);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m36[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m36[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m43[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m43[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m61[0m - [0;33msprintf(acStack_6c,"Receive Invalid or Unhandled Event %d");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m74[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m74[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m108[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m108[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m167[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m167[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m175[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401650_00401650.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m175[0m - [0;33msprintf(acStack_6c,"Receive Event %s",pcVar9);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401f94_00401f94.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00401f94_00401f94.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m7[0m - [0;33miVar1 = sockets_open();[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m75[0m - [0;33mmemset(acStack_7bc,0,0x79c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m76[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m76[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m76[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m82[0m - [0;33mstrcpy(acStack_7bc,(char *)&local_8cc);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m82[0m - [0;33mstrcpy(acStack_7bc,(char *)&local_8cc);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m87[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m87[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m87[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m94[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m94[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m94[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m101[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m101[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m101[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m110[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m110[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m110[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m118[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m118[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m118[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m122[0m - [0;33mmemcpy(auStack_6e8,&local_8cc,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m122[0m - [0;33mmemcpy(auStack_6e8,&local_8cc,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m124[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m124[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m124[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m131[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m131[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m131[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m138[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m138[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m138[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m145[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m145[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m145[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m152[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m152[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m152[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m160[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m160[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m160[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m168[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m168[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m168[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m175[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m175[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m175[0m - [0;33mstrncpy(acStack_8dc,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m182[0m - [0;33m__stream = fopen("/proc/net/wireless","r");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m185[0m - [0;33mpcVar5 = fgets(local_8bc,0xff,__stream);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m197[0m - [0;33miVar1 = strncmp(pcVar5,param_2,__n);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m200[0m - [0;33mpcVar4 = strtok(pcVar4 + 1," ");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m201[0m - [0;33msscanf(pcVar4,"%X",&local_8e0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m201[0m - [0;33msscanf(pcVar4,"%X",&local_8e0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m203[0m - [0;33mpcVar4 = strtok((char *)0x0," ");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m208[0m - [0;33msscanf(pcVar4,"%d",&local_8e0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m208[0m - [0;33msscanf(pcVar4,"%d",&local_8e0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m210[0m - [0;33mpcVar4 = strtok((char *)0x0," ");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m215[0m - [0;33msscanf(pcVar4,"%d",&local_8e0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m215[0m - [0;33msscanf(pcVar4,"%d",&local_8e0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m217[0m - [0;33mpcVar4 = strtok((char *)0x0," ");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m222[0m - [0;33msscanf(pcVar4,"%d",&local_8e0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m222[0m - [0;33msscanf(pcVar4,"%d",&local_8e0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m224[0m - [0;33mpcVar4 = strtok((char *)0x0," ");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m225[0m - [0;33msscanf(pcVar4,"%d",&local_278);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m225[0m - [0;33msscanf(pcVar4,"%d",&local_278);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m226[0m - [0;33mpcVar4 = strtok((char *)0x0," ");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m227[0m - [0;33msscanf(pcVar4,"%d",local_274);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m227[0m - [0;33msscanf(pcVar4,"%d",local_274);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m228[0m - [0;33mpcVar4 = strtok((char *)0x0," ");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m229[0m - [0;33msscanf(pcVar4,"%d",local_268);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00402978_00402978.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m229[0m - [0;33msscanf(pcVar4,"%d",local_268);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m34[0m - [0;33miVar2 = sockets_open();[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m52[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m52[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m52[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m91[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m91[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m91[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m95[0m - [0;33miVar4 = sscanf(pcVar11,"%lX",&local_90);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m141[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m141[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m141[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m150[0m - [0;33msVar7 = strlen(pcVar11 + 2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m156[0m - [0;33mstrncpy((char *)local_30._4_4_,*local_40 + 2,(uint)local_8c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m156[0m - [0;33mstrncpy((char *)local_30._4_4_,*local_40 + 2,(uint)local_8c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-integer-wraparound[0m
        Issue description:
    The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.

        [0;32m164[0m - [0;33mlocal_3c = (char *)malloc(sVar7 + 1);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m164[0m - [0;33mlocal_3c = (char *)malloc(sVar7 + 1);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m172[0m - [0;33mstrcpy(local_3c,pcVar11);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m172[0m - [0;33mstrcpy(local_3c,pcVar11);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m174[0m - [0;33mpcVar11 = strtok(local_3c,"-:;.,");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m177[0m - [0;33miVar6 = sscanf(pcVar11,"%2X",local_38);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m186[0m - [0;33mpcVar12 = strtok((char *)0x0,"-:;.,");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m200[0m - [0;33miVar3 = sscanf(*(char **)(param_2 + iVar4 * 4),"[%d]",&local_a8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m285[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m285[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m285[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m297[0m - [0;33mstrcpy((char *)local_80,pcVar11);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m297[0m - [0;33mstrcpy((char *)local_80,pcVar11);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m299[0m - [0;33miVar6 = sscanf(*(char **)(param_2 + iVar3 * 4),"[%d]",&local_a8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m403[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m403[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m403[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m410[0m - [0;33miVar6 = sscanf((char *)local_30._4_4_,"%lg",&local_a8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m493[0m - [0;33mstrncpy((char *)local_30._4_4_,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m493[0m - [0;33mstrncpy((char *)local_30._4_4_,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m493[0m - [0;33mstrncpy((char *)local_30._4_4_,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m497[0m - [0;33miVar4 = sscanf((char *)local_40,"%ld",&local_90);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m544[0m - [0;33mstrncpy((char *)local_30._4_4_,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m544[0m - [0;33mstrncpy((char *)local_30._4_4_,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m544[0m - [0;33mstrncpy((char *)local_30._4_4_,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m548[0m - [0;33miVar4 = sscanf((char *)local_40,"%ld",&local_90);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m572[0m - [0;33miVar4 = sscanf(*local_40,"%d",&local_a8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m625[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m625[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m625[0m - [0;33mstrncpy((char *)apcStack_a0,pcVar10,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m668[0m - [0;33miVar3 = sscanf(*ppcVar13,"%lg",&local_a8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00403bb8_00403bb8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m743[0m - [0;33miVar4 = sscanf(*(char **)(param_2 + (iVar3 + 1) * 4),"%d",&local_90);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405c6c_00405c6c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405c6c_00405c6c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m14[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405c6c_00405c6c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405c6c_00405c6c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m14[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405c6c_00405c6c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405c6c_00405c6c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m14[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405cf8_00405cf8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405cf8_00405cf8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-integer-truncation[0m
        Issue description:
    Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.

        [0;32m27[0m - [0;33mcVar2 = param_1[1];[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m27[0m - [0;33mmemcpy(param_2 + 2,*phVar3->h_addr_list,phVar3->h_length);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m28[0m - [0;33mstrcpy(param_1,phVar3->h_name);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m28[0m - [0;33mstrcpy(param_1,phVar3->h_name);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m32[0m - [0;33mstrcpy(param_1,pnVar2->n_name);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/FUN_00405e2c_00405e2c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m32[0m - [0;33mstrcpy(param_1,pnVar2->n_name);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RegisterPID_00406810.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RegisterPID_00406810.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m22[0m - [0;33mstrncpy((char *)&local_34,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RegisterPID_00406810.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RegisterPID_00406810.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m22[0m - [0;33mstrncpy((char *)&local_34,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RegisterPID_00406810.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RegisterPID_00406810.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m22[0m - [0;33mstrncpy((char *)&local_34,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m20[0m - [0;33mstrncpy((char *)&local_38,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m20[0m - [0;33mstrncpy((char *)&local_38,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m20[0m - [0;33mstrncpy((char *)&local_38,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc[0m
        Issue description:
    The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.

        [0;32m21[0m - [0;33m__ptr = (undefined *)malloc(0x618);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m21[0m - [0;33m__ptr = (undefined *)malloc(0x618);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m21[0m - [0;33m__ptr = (undefined *)malloc(0x618);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m33[0m - [0;33mmemcpy(param_3,local_28,(uint)local_24);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/RequestIndication_004068d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m33[0m - [0;33mmemcpy(param_3,local_28,(uint)local_24);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m10[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m10[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m10[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m17[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m17[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/check_addr_type_00405b60.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m17[0m - [0;33mstrncpy(acStack_30,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m14[0m - [0;33mstrncpy(acStack_4a8,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m14[0m - [0;33mstrncpy(acStack_4a8,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m14[0m - [0;33mstrncpy(acStack_4a8,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m21[0m - [0;33mmemcpy(param_3,local_488,0x238);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/get_range_info_004065d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m21[0m - [0;33mmemcpy(param_3,local_488,0x238);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m22[0m - [0;33mmemcpy(auStack_68,auStack_78,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m22[0m - [0;33mmemcpy(auStack_68,auStack_78,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m25[0m - [0;33mstrncpy(acStack_34,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m25[0m - [0;33mstrncpy(acStack_34,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m25[0m - [0;33mstrncpy(acStack_34,param_2,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m28[0m - [0;33mmemcpy(param_4,local_58,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/in_addr_00405f4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m28[0m - [0;33mmemcpy(param_4,local_58,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/iw_message_004058fc.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/iw_message_004058fc.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-format-string-bugs[0m
        Issue description:
    The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.

        [0;32m10[0m - [0;33mvsnprintf(&DAT_00418d20,0x1ff,param_2,&local_res8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/iw_message_004058fc.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/iw_message_004058fc.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m10[0m - [0;33mvsnprintf(&DAT_00418d20,0x1ff,param_2,&local_res8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/iw_message_004058fc.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/iw_message_004058fc.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m10[0m - [0;33mvsnprintf(&DAT_00418d20,0x1ff,param_2,&local_res8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m28[0m - [0;33mpFVar6 = fopen("/var/run/iwcontrol.pid","r");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m30[0m - [0;33mfgets(acStack_6c,0x14,pFVar6);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m31[0m - [0;33miVar7 = sscanf(acStack_6c,"%d",&local_70);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m52[0m - [0;33mstrcpy(&DAT_00418a6c + DAT_00418310 * 0x14,(char *)puVar15[1]);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m52[0m - [0;33mstrcpy(&DAT_00418a6c + DAT_00418310 * 0x14,(char *)puVar15[1]);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m72[0m - [0;33miVar7 = open("/var/run/iwcontrol.pid",0x101,0x1a4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m86[0m - [0;33mpFVar6 = fdopen(iVar7,"w");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m101[0m - [0;33msprintf(acStack_58,"/var/auth-%s.fifo",&DAT_00418324 + (iVar7 * 3 + 1) * 2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m101[0m - [0;33msprintf(acStack_58,"/var/auth-%s.fifo",&DAT_00418324 + (iVar7 * 3 + 1) * 2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m116[0m - [0;33msprintf(acStack_58,"/var/autoconf-%s.fifo",&DAT_00418b34 + (iVar7 * 3 + 1) * 2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m116[0m - [0;33msprintf(acStack_58,"/var/autoconf-%s.fifo",&DAT_00418b34 + (iVar7 * 3 + 1) * 2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m125[0m - [0;33msprintf(acStack_58,"/var/wscd-%s.fifo",&DAT_00418c24 + (iVar7 * 3 + 1) * 2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m125[0m - [0;33msprintf(acStack_58,"/var/wscd-%s.fifo",&DAT_00418c24 + (iVar7 * 3 + 1) * 2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m171[0m - [0;33msprintf(local_34,"/dev/wl_chr%d",iVar7);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m172[0m - [0;33mDAT_00418d14 = (undefined *)open(local_34,2,0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-signal[0m
        Issue description:
    The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.

        [0;32m188[0m - [0;33msignal(0x16,FUN_00401f2c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/main_00401fe8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-signal[0m
        Issue description:
    The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.

        [0;32m192[0m - [0;33msignal(0x16,FUN_00401f2c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/pr_ether_004060fc.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_iwcontrol/pr_ether_004060fc.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m6[0m - [0;33m(uint)param_1[2],(uint)param_1[3],(uint)param_1[4],(uint)param_1[5],&_gp);[0m

-----------------------------------------------------------------

