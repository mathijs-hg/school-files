{"errors": [{"code": 3, "level": "warn", "message": "Syntax error at line /tmp/haruspex_makeBonjourFile/FUN_00400ad8_00400ad8.c:79:\n `)` was unexpected", "path": "/tmp/haruspex_makeBonjourFile/FUN_00400ad8_00400ad8.c", "spans": [{"end": {"col": 82, "line": 79, "offset": 1}, "file": "/tmp/haruspex_makeBonjourFile/FUN_00400ad8_00400ad8.c", "start": {"col": 81, "line": 79, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 82, "line": 79, "offset": 1}, "path": "/tmp/haruspex_makeBonjourFile/FUN_00400ad8_00400ad8.c", "start": {"col": 81, "line": 79, "offset": 0}}]]}], "interfile_languages_used": [], "paths": {"scanned": ["/tmp/haruspex_makeBonjourFile/FUN_00400810_00400810.c", "/tmp/haruspex_makeBonjourFile/FUN_004008e4_004008e4.c", "/tmp/haruspex_makeBonjourFile/FUN_00400950_00400950.c", "/tmp/haruspex_makeBonjourFile/FUN_00400ad8_00400ad8.c", "/tmp/haruspex_makeBonjourFile/FUN_004010c0_004010c0.c", "/tmp/haruspex_makeBonjourFile/_fini_004011e0.c", "/tmp/haruspex_makeBonjourFile/_ftext_004007b0.c", "/tmp/haruspex_makeBonjourFile/_init_00400730.c", "/tmp/haruspex_makeBonjourFile/main_00401060.c"]}, "results": [{"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 29, "line": 16, "offset": 285}, "extra": {"engine_kind": "OSS", "fingerprint": "e74aae6788baa970df703ad0bd2332c20993e32666d18d68e5349d34fca94bbe67cca7e8673ea72cf6d4b10781462087308ea521fee984c0f34a355c371e253e_0", "is_ignored": false, "lines": "  memset(auStack_20f,0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 23, "line": 16, "offset": 279}, "start": {"col": 22, "line": 16, "offset": 278}}, "$DST": {"abstract_content": "auStack_20f", "end": {"col": 21, "line": 16, "offset": 277}, "start": {"col": 10, "line": 16, "offset": 266}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 28, "line": 16, "offset": 284}, "start": {"col": 24, "line": 16, "offset": 280}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_makeBonjourFile/FUN_00400950_00400950.c", "start": {"col": 3, "line": 16, "offset": 259}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 29, "line": 18, "offset": 332}, "extra": {"engine_kind": "OSS", "fingerprint": "4a845670103a042a8f5f1a486ff0a0d7dada529d6004a962e9f620de199ea4af381eb051f4b0a23db3a903ea865b49f0a3db10dc320de30b6fced4d877f52276_0", "is_ignored": false, "lines": "  memset(auStack_10f,0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 23, "line": 18, "offset": 326}, "start": {"col": 22, "line": 18, "offset": 325}}, "$DST": {"abstract_content": "auStack_10f", "end": {"col": 21, "line": 18, "offset": 324}, "start": {"col": 10, "line": 18, "offset": 313}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 28, "line": 18, "offset": 331}, "start": {"col": 24, "line": 18, "offset": 327}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_makeBonjourFile/FUN_00400950_00400950.c", "start": {"col": 3, "line": 18, "offset": 306}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 56, "line": 23, "offset": 568}, "extra": {"engine_kind": "OSS", "fingerprint": "2770397829737dee600b169cf679d35b9d3a9f16ac5904a99fddb07fe9bb1d61f0821ab021bd58c99772e8ab723fa3587fb4414d5640c14789b5f356b8006188_0", "is_ignored": false, "lines": "  __stream = fopen(\"/var/bonjour-http_service.txt\",\"w\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "fopen", "end": {"col": 19, "line": 23, "offset": 531}, "start": {"col": 14, "line": 23, "offset": 526}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_makeBonjourFile/FUN_00400950_00400950.c", "start": {"col": 14, "line": 23, "offset": 526}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 29, "line": 25, "offset": 498}, "extra": {"engine_kind": "OSS", "fingerprint": "5df3ec3acd9e4fe139bda9901ff27f347586fd82168d44a5768206a94b0be75fcac4e488bd7fecfe482a75c0a950959076e307289903d1e06a1183a578e9b68f_0", "is_ignored": false, "lines": "  memset(auStack_277,0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 23, "line": 25, "offset": 492}, "start": {"col": 22, "line": 25, "offset": 491}}, "$DST": {"abstract_content": "auStack_277", "end": {"col": 21, "line": 25, "offset": 490}, "start": {"col": 10, "line": 25, "offset": 479}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 28, "line": 25, "offset": 497}, "start": {"col": 24, "line": 25, "offset": 493}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_makeBonjourFile/FUN_00400ad8_00400ad8.c", "start": {"col": 3, "line": 25, "offset": 472}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 29, "line": 28, "offset": 562}, "extra": {"engine_kind": "OSS", "fingerprint": "8b3a837654bd1a586ee7d12690e05e3b99eca593a6da006ce3f88fd0689f0bcf79b380d42adcf402bdc6178cf3f0b1cde51d9de349b7ea3a0069dc3adf59609e_0", "is_ignored": false, "lines": "  memset(auStack_173,0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 23, "line": 28, "offset": 556}, "start": {"col": 22, "line": 28, "offset": 555}}, "$DST": {"abstract_content": "auStack_173", "end": {"col": 21, "line": 28, "offset": 554}, "start": {"col": 10, "line": 28, "offset": 543}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 28, "line": 28, "offset": 561}, "start": {"col": 24, "line": 28, "offset": 557}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_makeBonjourFile/FUN_00400ad8_00400ad8.c", "start": {"col": 3, "line": 28, "offset": 536}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 28, "line": 30, "offset": 607}, "extra": {"engine_kind": "OSS", "fingerprint": "9b87f5447eaa4f5300147dab32cb879cd0b20ee535b1a6064d136521886133a5ab5b2deb9d0637db81a3f861bb8e9305ea3910ae65f5b7f290fc7ebf4143e730_0", "is_ignored": false, "lines": "  memset(auStack_73,0,0x3f);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 22, "line": 30, "offset": 601}, "start": {"col": 21, "line": 30, "offset": 600}}, "$DST": {"abstract_content": "auStack_73", "end": {"col": 20, "line": 30, "offset": 599}, "start": {"col": 10, "line": 30, "offset": 589}}, "$LEN": {"abstract_content": "0x3f", "end": {"col": 27, "line": 30, "offset": 606}, "start": {"col": 23, "line": 30, "offset": 602}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_makeBonjourFile/FUN_00400ad8_00400ad8.c", "start": {"col": 3, "line": 30, "offset": 582}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 36, "offset": 760}, "extra": {"engine_kind": "OSS", "fingerprint": "d4a8038be9e04aacc65b9d9b65bc3525f0b037c99dec81398a42128eed8c1494a2ca83560977b88ecf85fe28ed8692f750d32cb7e6e80acf40e75ecf8d939ca2_0", "is_ignored": false, "lines": "  __stream = fopen(\"/var/bonjour-dhnap_service.txt\",\"w\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "fopen", "end": {"col": 19, "line": 36, "offset": 722}, "start": {"col": 14, "line": 36, "offset": 717}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_makeBonjourFile/FUN_00400ad8_00400ad8.c", "start": {"col": 14, "line": 36, "offset": 717}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 73, "line": 5, "offset": 98}, "extra": {"engine_kind": "OSS", "fingerprint": "1615c65798e93468f26185052567a52d68759e3cb1c3f1979e332262017eb1bed92b5d781942d2ebf06ada28edc523b6fdaec6ba82371aad26ed0c4828c7caed_0", "is_ignored": false, "lines": "  system(\"rm -f /var/bonjour-dhnap_service.txt 2>/dev/null 1>/dev/null\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 9, "line": 5, "offset": 34}, "start": {"col": 3, "line": 5, "offset": 28}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_makeBonjourFile/main_00401060.c", "start": {"col": 3, "line": 5, "offset": 28}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 72, "line": 6, "offset": 171}, "extra": {"engine_kind": "OSS", "fingerprint": "1615c65798e93468f26185052567a52d68759e3cb1c3f1979e332262017eb1bed92b5d781942d2ebf06ada28edc523b6fdaec6ba82371aad26ed0c4828c7caed_1", "is_ignored": false, "lines": "  system(\"rm -f /var/bonjour-http_service.txt 2>/dev/null 1>/dev/null\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 9, "line": 6, "offset": 108}, "start": {"col": 3, "line": 6, "offset": 102}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_makeBonjourFile/main_00401060.c", "start": {"col": 3, "line": 6, "offset": 102}}], "skipped_rules": [], "version": "1.89.0"}
