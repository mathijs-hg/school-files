{"errors": [], "interfile_languages_used": [], "paths": {"scanned": ["/tmp/haruspex_ated_iwpriv/OpenSocket_0040164c.c", "/tmp/haruspex_ated_iwpriv/ProcessCmd_00401998.c", "/tmp/haruspex_ated_iwpriv/SendReply_00401920.c", "/tmp/haruspex_ated_iwpriv/SplitString_00404840.c", "/tmp/haruspex_ated_iwpriv/WaitForCmd_00401230.c", "/tmp/haruspex_ated_iwpriv/__adddf3_0040d304.c", "/tmp/haruspex_ated_iwpriv/__ashldi3_0040dd50.c", "/tmp/haruspex_ated_iwpriv/__clzsi2_0040dda0.c", "/tmp/haruspex_ated_iwpriv/__divdf3_0040d760.c", "/tmp/haruspex_ated_iwpriv/__do_global_ctors_aux_0040e250.c", "/tmp/haruspex_ated_iwpriv/__do_global_dtors_aux_004010e0.c", "/tmp/haruspex_ated_iwpriv/__eqdf2_0040d980.c", "/tmp/haruspex_ated_iwpriv/__fixdfsi_0040dc40.c", "/tmp/haruspex_ated_iwpriv/__floatsidf_0040db60.c", "/tmp/haruspex_ated_iwpriv/__fpcmp_parts_d_0040e130.c", "/tmp/haruspex_ated_iwpriv/__gedf2_0040da20.c", "/tmp/haruspex_ated_iwpriv/__lshrdi3_0040dd10.c", "/tmp/haruspex_ated_iwpriv/__ltdf2_0040dac0.c", "/tmp/haruspex_ated_iwpriv/__muldf3_0040d440.c", "/tmp/haruspex_ated_iwpriv/__pack_d_0040de00.c", "/tmp/haruspex_ated_iwpriv/__start_00401080.c", "/tmp/haruspex_ated_iwpriv/__subdf3_0040d39c.c", "/tmp/haruspex_ated_iwpriv/__unpack_d_0040e040.c", "/tmp/haruspex_ated_iwpriv/_fini_0040e670.c", "/tmp/haruspex_ated_iwpriv/_fpadd_parts_0040cf60.c", "/tmp/haruspex_ated_iwpriv/_init_00401008.c", "/tmp/haruspex_ated_iwpriv/frame_dummy_004011ac.c", "/tmp/haruspex_ated_iwpriv/getCmdResults_00404948.c", "/tmp/haruspex_ated_iwpriv/get_option_00401e8c.c", "/tmp/haruspex_ated_iwpriv/init_debug_0040236c.c", "/tmp/haruspex_ated_iwpriv/init_iwpriv_00404818.c", "/tmp/haruspex_ated_iwpriv/iw_channel_to_freq_00407b30.c", "/tmp/haruspex_ated_iwpriv/iw_check_if_addr_type_0040abf8.c", "/tmp/haruspex_ated_iwpriv/iw_check_mac_addr_type_0040aafc.c", "/tmp/haruspex_ated_iwpriv/iw_dbm2mwatt_00407ea4.c", "/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c", "/tmp/haruspex_ated_iwpriv/iw_ether_aton_0040b398.c", "/tmp/haruspex_ated_iwpriv/iw_ether_ntop_0040ae30.c", "/tmp/haruspex_ated_iwpriv/iw_extract_event_stream_0040bb48.c", "/tmp/haruspex_ated_iwpriv/iw_float2freq_004072dc.c", "/tmp/haruspex_ated_iwpriv/iw_freq2float_004074fc.c", "/tmp/haruspex_ated_iwpriv/iw_freq_to_channel_004079cc.c", "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "/tmp/haruspex_ated_iwpriv/iw_get_kernel_we_version_004050a4.c", "/tmp/haruspex_ated_iwpriv/iw_get_priv_info_00405e20.c", "/tmp/haruspex_ated_iwpriv/iw_get_priv_size_0040ba44.c", "/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c", "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "/tmp/haruspex_ated_iwpriv/iw_in_addr_0040b690.c", "/tmp/haruspex_ated_iwpriv/iw_in_inet_0040b43c.c", "/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c", "/tmp/haruspex_ated_iwpriv/iw_in_key_full_0040977c.c", "/tmp/haruspex_ated_iwpriv/iw_init_event_stream_0040bab8.c", "/tmp/haruspex_ated_iwpriv/iw_mac_aton_0040b1b8.c", "/tmp/haruspex_ated_iwpriv/iw_mac_ntop_0040ace4.c", "/tmp/haruspex_ated_iwpriv/iw_mwatt2dbm_00407f88.c", "/tmp/haruspex_ated_iwpriv/iw_pass_key_004093d0.c", "/tmp/haruspex_ated_iwpriv/iw_print_bitrate_00407ce4.c", "/tmp/haruspex_ated_iwpriv/iw_print_freq_00407810.c", "/tmp/haruspex_ated_iwpriv/iw_print_freq_value_004075e8.c", "/tmp/haruspex_ated_iwpriv/iw_print_key_004090b0.c", "/tmp/haruspex_ated_iwpriv/iw_print_pm_mode_00409fa4.c", "/tmp/haruspex_ated_iwpriv/iw_print_pm_value_00409ae0.c", "/tmp/haruspex_ated_iwpriv/iw_print_retry_value_0040a430.c", "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "/tmp/haruspex_ated_iwpriv/iw_print_timeval_0040a948.c", "/tmp/haruspex_ated_iwpriv/iw_print_txpower_00408060.c", "/tmp/haruspex_ated_iwpriv/iw_print_version_info_00405604.c", "/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c", "/tmp/haruspex_ated_iwpriv/iw_protocol_compare_00406f40.c", "/tmp/haruspex_ated_iwpriv/iw_sawap_ntop_0040af10.c", "/tmp/haruspex_ated_iwpriv/iw_scan_0040ce84.c", "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "/tmp/haruspex_ated_iwpriv/iw_sockets_open_00404b80.c", "/tmp/haruspex_ated_iwpriv/main_00402440.c", "/tmp/haruspex_ated_iwpriv/print_iface_version_info_00405358.c", "/tmp/haruspex_ated_iwpriv/process_iwpriv_cmd_00404430.c", "/tmp/haruspex_ated_iwpriv/register_sig_00402290.c", "/tmp/haruspex_ated_iwpriv/set_private_004024f0.c", "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "/tmp/haruspex_ated_iwpriv/sigterm_handler_004021a4.c", "/tmp/haruspex_ated_iwpriv/start_socket_00402090.c", "/tmp/haruspex_ated_iwpriv/usage_00401e38.c"]}, "results": [{"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 16, "line": 16, "offset": 264}, "extra": {"engine_kind": "OSS", "fingerprint": "26adfae7a6a069c2790fb96b128ae03e3f94783c243f60e0df901c7d25a5fd4ca3ddb64384d89c6d795402069f77e972422ed60ffe5d803d60a43b0e3381cc9e_0", "is_ignored": false, "lines": "  local_62c = 0;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0", "end": {"col": 16, "line": 16, "offset": 264}, "start": {"col": 15, "line": 16, "offset": 263}}, "$UNSIGNED": {"abstract_content": "local_62c", "end": {"col": 12, "line": 16, "offset": 260}, "start": {"col": 3, "line": 16, "offset": 251}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/ProcessCmd_00401998.c", "start": {"col": 3, "line": 16, "offset": 251}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 33, "offset": 866}, "extra": {"engine_kind": "OSS", "fingerprint": "aba85b9e8246e2c238044846e9f98cf7e536a3f73dccf4546e23bfbb651f4fdd64d859d814b4a4bd2403f3920bb3f95e16cbcf72542c8e8733deb0b87fdaeb1a_0", "is_ignored": false, "lines": "        memset(acStack_614,0,0x5b4);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 29, "line": 33, "offset": 859}, "start": {"col": 28, "line": 33, "offset": 858}}, "$DST": {"abstract_content": "acStack_614", "end": {"col": 27, "line": 33, "offset": 857}, "start": {"col": 16, "line": 33, "offset": 846}}, "$LEN": {"abstract_content": "0x5b4", "end": {"col": 35, "line": 33, "offset": 865}, "start": {"col": 30, "line": 33, "offset": 860}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/ProcessCmd_00401998.c", "start": {"col": 9, "line": 33, "offset": 839}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 59, "line": 38, "offset": 1089}, "extra": {"engine_kind": "OSS", "fingerprint": "649b58ae59f56bbb5bfdf3528f8c4e522bde75eac27d5524b4a46a13cae879caa24f1befc957171163b4ff945797b1478e4780c0593708547dc8cab4ea3fd65c_0", "is_ignored": false, "lines": "          snprintf(acStack_614 + sVar5,0x5b3 - sVar4,\"# \");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 19, "line": 38, "offset": 1049}, "start": {"col": 11, "line": 38, "offset": 1041}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/ProcessCmd_00401998.c", "start": {"col": 11, "line": 38, "offset": 1041}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 64, "line": 44, "offset": 1294}, "extra": {"engine_kind": "OSS", "fingerprint": "649b58ae59f56bbb5bfdf3528f8c4e522bde75eac27d5524b4a46a13cae879caa24f1befc957171163b4ff945797b1478e4780c0593708547dc8cab4ea3fd65c_1", "is_ignored": false, "lines": "          snprintf(acStack_614 + sVar5,0x5b3 - sVar4,\"# error\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 19, "line": 44, "offset": 1249}, "start": {"col": 11, "line": 44, "offset": 1241}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/ProcessCmd_00401998.c", "start": {"col": 11, "line": 44, "offset": 1241}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 34, "line": 47, "offset": 1302}, "extra": {"engine_kind": "OSS", "fingerprint": "b72211e6378192ad16d38752fc555f26accb3abece30e4c28c64a1249e951450d6e6357104b1631c25a10ab335855a51d17e7dd455ed7e4fb40c8dc5b83dc6ad_0", "is_ignored": false, "lines": "      memset(auStack_5c0,0,0x5b4);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 27, "line": 47, "offset": 1295}, "start": {"col": 26, "line": 47, "offset": 1294}}, "$DST": {"abstract_content": "auStack_5c0", "end": {"col": 25, "line": 47, "offset": 1293}, "start": {"col": 14, "line": 47, "offset": 1282}}, "$LEN": {"abstract_content": "0x5b4", "end": {"col": 33, "line": 47, "offset": 1301}, "start": {"col": 28, "line": 47, "offset": 1296}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/WaitForCmd_00401230.c", "start": {"col": 7, "line": 47, "offset": 1275}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 88, "line": 48, "offset": 1391}, "extra": {"engine_kind": "OSS", "fingerprint": "3ebbef1039276cedbad2496d5beee4efba1a9402a335116611730a63151a95b0152216558505eb8b8fd24a9dc0b6e9898bf4c406f888bdbeb212ded888b48fdd_0", "is_ignored": false, "lines": "      sVar3 = recvfrom(l_connSock,auStack_5c0,0x5b4,0,(sockaddr *)0x0,(socklen_t *)0x0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$3": {"abstract_content": "from", "end": {"col": 8, "line": 2, "offset": 8}, "start": {"col": 4, "line": 2, "offset": 4}}, "$FUN": {"abstract_content": "recvfrom", "end": {"col": 23, "line": 48, "offset": 1326}, "start": {"col": 15, "line": 48, "offset": 1318}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/WaitForCmd_00401230.c", "start": {"col": 15, "line": 48, "offset": 1318}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 88, "line": 48, "offset": 1391}, "extra": {"engine_kind": "OSS", "fingerprint": "860ccf4fd7f23f790961339d730b159e9b22fa06b52b23a7415fbec6484550fe68c45b1946d67b0735135d6380714a21a1986b5046aac20306e97c3fbfb6b86b_0", "is_ignored": false, "lines": "      sVar3 = recvfrom(l_connSock,auStack_5c0,0x5b4,0,(sockaddr *)0x0,(socklen_t *)0x0);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$BUF": {"abstract_content": "auStack_5c0", "end": {"col": 46, "line": 48, "offset": 1349}, "start": {"col": 35, "line": 48, "offset": 1338}}, "$FL": {"abstract_content": "0", "end": {"col": 54, "line": 48, "offset": 1357}, "start": {"col": 53, "line": 48, "offset": 1356}}, "$LEN": {"abstract_content": "0x5b4", "end": {"col": 52, "line": 48, "offset": 1355}, "start": {"col": 47, "line": 48, "offset": 1350}}, "$SD": {"abstract_content": "l_connSock", "end": {"col": 34, "line": 48, "offset": 1337}, "start": {"col": 24, "line": 48, "offset": 1327}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/WaitForCmd_00401230.c", "start": {"col": 15, "line": 48, "offset": 1318}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 31, "line": 40, "offset": 907}, "extra": {"engine_kind": "OSS", "fingerprint": "02dfda445157a85df71b8dd0f8183680368c369bba45ad8372eb78afe7463fb7787610948909a89232545998cc42fb0767f59d81c87cb3e8b810fa2afe3690c9_0", "is_ignored": false, "lines": "            memcpy(tmp,a,0x18);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 19, "line": 40, "offset": 895}, "start": {"col": 13, "line": 40, "offset": 889}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/_fpadd_parts_0040cf60.c", "start": {"col": 13, "line": 40, "offset": 889}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 31, "line": 40, "offset": 907}, "extra": {"engine_kind": "OSS", "fingerprint": "cca8871ae09b2500c18174728460dfcd58f396d77547c30a7e7e5cdf5bc4092f23572aa4e727aacdb0b493ec41701be6b254146a7e4a3f532b7df531c0441b1f_0", "is_ignored": false, "lines": "            memcpy(tmp,a,0x18);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "tmp", "end": {"col": 23, "line": 40, "offset": 899}, "start": {"col": 20, "line": 40, "offset": 896}}, "$LEN": {"abstract_content": "0x18", "end": {"col": 30, "line": 40, "offset": 906}, "start": {"col": 26, "line": 40, "offset": 902}}, "$SRC": {"abstract_content": "a", "end": {"col": 25, "line": 40, "offset": 901}, "start": {"col": 24, "line": 40, "offset": 900}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/_fpadd_parts_0040cf60.c", "start": {"col": 13, "line": 40, "offset": 889}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 12, "offset": 236}, "extra": {"engine_kind": "OSS", "fingerprint": "62f721eff4369f617d89b328428bbeaaffd639fb9b46b3d0f12c04eec4daa9d2f1ad14aeb626f0ca9ee7537a76b45ddf73a9166edfcf5556d22821cb08afaeb9_0", "is_ignored": false, "lines": "  memset(acStack_410,0,0x400);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 23, "line": 12, "offset": 229}, "start": {"col": 22, "line": 12, "offset": 228}}, "$DST": {"abstract_content": "acStack_410", "end": {"col": 21, "line": 12, "offset": 227}, "start": {"col": 10, "line": 12, "offset": 216}}, "$LEN": {"abstract_content": "0x400", "end": {"col": 29, "line": 12, "offset": 235}, "start": {"col": 24, "line": 12, "offset": 230}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/getCmdResults_00404948.c", "start": {"col": 3, "line": 12, "offset": 209}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 32, "line": 15, "offset": 315}, "extra": {"engine_kind": "OSS", "fingerprint": "3a8c03414775378cb96fa5dae58b18937ecc46106d17725eaded00f620024817bbe567b3c627ca2282e1792c4758898466327913533bb74e18871f611069c7e0_0", "is_ignored": false, "lines": "  __stream = popen(param_1,\"r\");", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/getCmdResults_00404948.c", "start": {"col": 14, "line": 15, "offset": 297}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 32, "line": 15, "offset": 315}, "extra": {"engine_kind": "OSS", "fingerprint": "043cbd5735cd58b1a1a7492a2db7cc7a52a86c954aa050692551406654ee2eab5309e5983fe6393ead5a0fdf884c2df025cc02e8894e0f2f002bd6be5e9f4c60_0", "is_ignored": false, "lines": "  __stream = popen(param_1,\"r\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "popen", "end": {"col": 19, "line": 15, "offset": 302}, "start": {"col": 14, "line": 15, "offset": 297}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/getCmdResults_00404948.c", "start": {"col": 14, "line": 15, "offset": 297}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 51, "line": 22, "offset": 472}, "extra": {"engine_kind": "OSS", "fingerprint": "e55ee954513bf541c8303e8592e8567bbbd1f076076ea271b445034f066e2b27a228c44cddee2c419545b485902276aca0feaa51356451b4cc6343e56d98c900_0", "is_ignored": false, "lines": "        pcVar3 = fgets(acStack_410,0x400,__stream);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$1": {"abstract_content": "s", "end": {"col": 5, "line": 2, "offset": 5}, "start": {"col": 4, "line": 2, "offset": 4}}, "$FUN": {"abstract_content": "fgets", "end": {"col": 23, "line": 22, "offset": 444}, "start": {"col": 18, "line": 22, "offset": 439}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/getCmdResults_00404948.c", "start": {"col": 18, "line": 22, "offset": 439}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 61, "line": 27, "offset": 697}, "extra": {"engine_kind": "OSS", "fingerprint": "c5af7116221ca9c3e5551915176b21fe2cbfbe6960b725fc60bcac07bd35e3fe1fef08da9bc2db1755e131094a0d541fab272e31783e82b9beb2aa5b91250194_0", "is_ignored": false, "lines": "        strlcpy(param_3 + sVar1,acStack_410,param_4 - sVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strlcpy", "end": {"col": 16, "line": 27, "offset": 652}, "start": {"col": 9, "line": 27, "offset": 645}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/getCmdResults_00404948.c", "start": {"col": 9, "line": 27, "offset": 645}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 31, "offset": 828}, "extra": {"engine_kind": "OSS", "fingerprint": "c5af7116221ca9c3e5551915176b21fe2cbfbe6960b725fc60bcac07bd35e3fe1fef08da9bc2db1755e131094a0d541fab272e31783e82b9beb2aa5b91250194_1", "is_ignored": false, "lines": "    strlcpy(param_3,acStack_410,param_4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strlcpy", "end": {"col": 12, "line": 31, "offset": 799}, "start": {"col": 5, "line": 31, "offset": 792}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/getCmdResults_00404948.c", "start": {"col": 5, "line": 31, "offset": 792}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 83, "line": 12, "offset": 245}, "extra": {"engine_kind": "OSS", "fingerprint": "ddbccada56d06347ccfc9a6ff0a00814d006179dc0bfe53f43d13b93c6fcb43311b5908e6cefbf510700a0974a54a31191cfb9759df09b41407c55323a3cfbc8_0", "is_ignored": false, "lines": "      iVar1 = getopt_long(param_1,param_2,&DAT_0040e8a8,arg_options_4160,&local_c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$1": {"abstract_content": "opt_long", "end": {"col": 11, "line": 2, "offset": 11}, "start": {"col": 3, "line": 2, "offset": 3}}, "$FUN": {"abstract_content": "getopt_long", "end": {"col": 26, "line": 12, "offset": 188}, "start": {"col": 15, "line": 12, "offset": 177}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/get_option_00401e8c.c", "start": {"col": 15, "line": 12, "offset": 177}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 29, "offset": 679}, "extra": {"engine_kind": "OSS", "fingerprint": "14927b0ce2eb45c1049e0be7ff9ae3460e8aae8226476395823873e918009cd10dcbf6e2d3ce33c20e657cc4e3858875bf6689d5683e943eb12ae1bde7b47bc6_0", "is_ignored": false, "lines": "    iVar1 = sscanf(optarg,\"%hd\",&l_port);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 19, "line": 29, "offset": 657}, "start": {"col": 13, "line": 29, "offset": 651}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/get_option_00401e8c.c", "start": {"col": 13, "line": 29, "offset": 651}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 46, "line": 6, "offset": 99}, "extra": {"engine_kind": "OSS", "fingerprint": "41a537a41de73526318c98b8ead276eacbc28bc54a985480f1ca00d327c4e6f483c993f200889f842f6ddb10854bbbe38747bf4c14eabb7606990cebe0660da1_0", "is_ignored": false, "lines": "    l_debugStream = fopen(\"/dev/console\",\"a\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "fopen", "end": {"col": 26, "line": 6, "offset": 79}, "start": {"col": 21, "line": 6, "offset": 74}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/init_debug_0040236c.c", "start": {"col": 21, "line": 6, "offset": 74}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 10, "offset": 176}, "extra": {"engine_kind": "OSS", "fingerprint": "058c4c070902805c6f21820e3ac575359f79372f159374fb3198cb7fee553e71cb751743dbde0209b161f9faa0a08ee37aecbda7d358b0c57d2cf5fd8dd0b833_0", "is_ignored": false, "lines": "  strncpy(acStack_28,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 10, "line": 10, "offset": 151}, "start": {"col": 3, "line": 10, "offset": 144}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_check_if_addr_type_0040abf8.c", "start": {"col": 3, "line": 10, "offset": 144}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 35, "line": 10, "offset": 176}, "extra": {"engine_kind": "OSS", "fingerprint": "da482f0ac6357d35a9795be3a83c15f4adaa7d929fbad44c0c82d271f14ec08ccb0befb83a9f5cbdd284259eedfdcc34641684b1ee983c1765c24a6e4517679c_0", "is_ignored": false, "lines": "  strncpy(acStack_28,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_28", "end": {"col": 21, "line": 10, "offset": 162}, "start": {"col": 11, "line": 10, "offset": 152}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 34, "line": 10, "offset": 175}, "start": {"col": 30, "line": 10, "offset": 171}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 29, "line": 10, "offset": 170}, "start": {"col": 22, "line": 10, "offset": 163}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_check_if_addr_type_0040abf8.c", "start": {"col": 3, "line": 10, "offset": 144}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 35, "line": 10, "offset": 176}, "extra": {"engine_kind": "OSS", "fingerprint": "c333925dd413f6806a3fb58cf688e9cd49f1a7273277713bc56798fe30996543d72b58d951eda69c24bf5164f9ded16e177c2146c7960ddd0bb94f0205f5e3fa_0", "is_ignored": false, "lines": "  strncpy(acStack_28,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 10, "line": 10, "offset": 151}, "start": {"col": 3, "line": 10, "offset": 144}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_check_if_addr_type_0040abf8.c", "start": {"col": 3, "line": 10, "offset": 144}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 10, "offset": 177}, "extra": {"engine_kind": "OSS", "fingerprint": "1214bb21a0e922033efe52bd9fc4506d50631bdaded07859bce750026bc0df8ea3f43c0df8469422efd98b3929d45ad3c2737eb5293071da468d6e34bd728943_0", "is_ignored": false, "lines": "  strncpy(acStack_28,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 10, "line": 10, "offset": 152}, "start": {"col": 3, "line": 10, "offset": 145}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_check_mac_addr_type_0040aafc.c", "start": {"col": 3, "line": 10, "offset": 145}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 35, "line": 10, "offset": 177}, "extra": {"engine_kind": "OSS", "fingerprint": "128b4783807e74ad2e3f7b3aa5305a8e7ccbee9290c019c03880b80a0bce31ecbc1ffa9841f6f3fac493a28e0ed13c152ea5e2f8839e0e2d09348d67a143ed7e_0", "is_ignored": false, "lines": "  strncpy(acStack_28,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_28", "end": {"col": 21, "line": 10, "offset": 163}, "start": {"col": 11, "line": 10, "offset": 153}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 34, "line": 10, "offset": 176}, "start": {"col": 30, "line": 10, "offset": 172}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 29, "line": 10, "offset": 171}, "start": {"col": 22, "line": 10, "offset": 164}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_check_mac_addr_type_0040aafc.c", "start": {"col": 3, "line": 10, "offset": 145}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 35, "line": 10, "offset": 177}, "extra": {"engine_kind": "OSS", "fingerprint": "38cb855e27acac6e383364a58c2f4e791296daec3d20e1ffb42a38638848f687995308eb761dd494770d8f55c26293cf91a8a5f234e6e23b530c15a0cbdc43af_0", "is_ignored": false, "lines": "  strncpy(acStack_28,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 10, "line": 10, "offset": 152}, "start": {"col": 3, "line": 10, "offset": 145}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_check_mac_addr_type_0040aafc.c", "start": {"col": 3, "line": 10, "offset": 145}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 18, "offset": 346}, "extra": {"engine_kind": "OSS", "fingerprint": "0037a97619df8664169a04f4721dc164ea855b4b190015b72303823bb89ada3861f8688d6318734420356ac66f343b9d8d191e9f12c8b40ee1048d40c078205b_0", "is_ignored": false, "lines": "  pFVar1 = fopen(\"/proc/net/dev\",\"r\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "fopen", "end": {"col": 17, "line": 18, "offset": 325}, "start": {"col": 12, "line": 18, "offset": 320}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c", "start": {"col": 12, "line": 18, "offset": 320}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 39, "offset": 929}, "extra": {"engine_kind": "OSS", "fingerprint": "800ba504baa5f3c4c3ae8fd169eb11b27239d9723982eaec1ab32a3896b1446d335d571a8a33a5ea6a26e47f25025ecde91ade728df758636f24c6731615f16a_0", "is_ignored": false, "lines": "    fgets(&local_430,0x400,pFVar1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$1": {"abstract_content": "s", "end": {"col": 5, "line": 2, "offset": 5}, "start": {"col": 4, "line": 2, "offset": 4}}, "$FUN": {"abstract_content": "fgets", "end": {"col": 10, "line": 39, "offset": 904}, "start": {"col": 5, "line": 39, "offset": 899}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c", "start": {"col": 5, "line": 39, "offset": 899}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 40, "offset": 965}, "extra": {"engine_kind": "OSS", "fingerprint": "800ba504baa5f3c4c3ae8fd169eb11b27239d9723982eaec1ab32a3896b1446d335d571a8a33a5ea6a26e47f25025ecde91ade728df758636f24c6731615f16a_1", "is_ignored": false, "lines": "    fgets(&local_430,0x400,pFVar1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$1": {"abstract_content": "s", "end": {"col": 5, "line": 2, "offset": 5}, "start": {"col": 4, "line": 2, "offset": 4}}, "$FUN": {"abstract_content": "fgets", "end": {"col": 10, "line": 40, "offset": 940}, "start": {"col": 5, "line": 40, "offset": 935}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c", "start": {"col": 5, "line": 40, "offset": 935}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 46, "line": 42, "offset": 1032}, "extra": {"engine_kind": "OSS", "fingerprint": "800ba504baa5f3c4c3ae8fd169eb11b27239d9723982eaec1ab32a3896b1446d335d571a8a33a5ea6a26e47f25025ecde91ade728df758636f24c6731615f16a_2", "is_ignored": false, "lines": "      pcVar2 = fgets(&local_430,0x400,pFVar1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$1": {"abstract_content": "s", "end": {"col": 5, "line": 2, "offset": 5}, "start": {"col": 4, "line": 2, "offset": 4}}, "$FUN": {"abstract_content": "fgets", "end": {"col": 21, "line": 42, "offset": 1007}, "start": {"col": 16, "line": 42, "offset": 1002}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c", "start": {"col": 16, "line": 42, "offset": 1002}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 68, "line": 54, "offset": 1535}, "extra": {"engine_kind": "OSS", "fingerprint": "42d29b58182e4379a59176ad67a01551830ccfd308a341883973983b171db99ce229d09fecadfe693e17178a8cc8a36720294fd7e6e7c566de6aee9c7983825f_0", "is_ignored": false, "lines": "          memcpy(auStack_28,local_438,(int)pcVar2 - (int)local_438);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 17, "line": 54, "offset": 1484}, "start": {"col": 11, "line": 54, "offset": 1478}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c", "start": {"col": 11, "line": 54, "offset": 1478}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 68, "line": 54, "offset": 1535}, "extra": {"engine_kind": "OSS", "fingerprint": "5889e9f84195dc310d6c5413e7622b1aad025e3d01a13775b45e5efc889f78300e5f7ed008d5caaaf62b75a42b40216729a4a2807755b2dba57ebc86588169b5_0", "is_ignored": false, "lines": "          memcpy(auStack_28,local_438,(int)pcVar2 - (int)local_438);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "auStack_28", "end": {"col": 28, "line": 54, "offset": 1495}, "start": {"col": 18, "line": 54, "offset": 1485}}, "$LEN": {"abstract_content": "int pcVar2-int local_438", "end": {"col": 67, "line": 54, "offset": 1534}, "start": {"col": 40, "line": 54, "offset": 1507}}, "$SRC": {"abstract_content": "local_438", "end": {"col": 38, "line": 54, "offset": 1505}, "start": {"col": 29, "line": 54, "offset": 1496}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c", "start": {"col": 11, "line": 54, "offset": 1478}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-pointer-subtraction", "end": {"col": 67, "line": 54, "offset": 1534}, "extra": {"engine_kind": "OSS", "fingerprint": "70424882770cf5edd13834bf2590cc3a76fecf0f387a07a0a75b06e9747fe054e5aa8286f345b556b6d183d739f9bb12fa1706607c23877640e55ce7caa9e52d_0", "is_ignored": false, "lines": "          memcpy(auStack_28,local_438,(int)pcVar2 - (int)local_438);", "message": "The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/469", "https://github.com/struct/mms"]}, "metavars": {"$PTR1": {"abstract_content": "pcVar2", "end": {"col": 50, "line": 54, "offset": 1517}, "propagated_value": {"svalue_abstract_content": "strrchr(local_438 0x3a)", "svalue_end": {"col": 41, "line": 49, "offset": 1321}, "svalue_start": {"col": 18, "line": 49, "offset": 1298}}, "start": {"col": 44, "line": 54, "offset": 1511}}, "$PTR2": {"abstract_content": "local_438", "end": {"col": 67, "line": 54, "offset": 1534}, "start": {"col": 58, "line": 54, "offset": 1525}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c", "start": {"col": 40, "line": 54, "offset": 1507}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-pointer-subtraction", "end": {"col": 50, "line": 55, "offset": 1586}, "extra": {"engine_kind": "OSS", "fingerprint": "70424882770cf5edd13834bf2590cc3a76fecf0f387a07a0a75b06e9747fe054e5aa8286f345b556b6d183d739f9bb12fa1706607c23877640e55ce7caa9e52d_1", "is_ignored": false, "lines": "          auStack_28[(int)pcVar2 - (int)local_438] = 0;", "message": "The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/469", "https://github.com/struct/mms"]}, "metavars": {"$PTR1": {"abstract_content": "pcVar2", "end": {"col": 33, "line": 55, "offset": 1569}, "propagated_value": {"svalue_abstract_content": "strrchr(local_438 0x3a)", "svalue_end": {"col": 41, "line": 49, "offset": 1321}, "svalue_start": {"col": 18, "line": 49, "offset": 1298}}, "start": {"col": 27, "line": 55, "offset": 1563}}, "$PTR2": {"abstract_content": "local_438", "end": {"col": 50, "line": 55, "offset": 1586}, "start": {"col": 41, "line": 55, "offset": 1577}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c", "start": {"col": 23, "line": 55, "offset": 1559}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 67, "line": 6, "offset": 218}, "extra": {"engine_kind": "OSS", "fingerprint": "7d1e2fc2ac5fcf063d1e3808ec91a981338aa4e3332c89acd142bd1c3d7da6593d56aa6ee74f5da7f549673cad7ea26d1b639c25411d8e2b70d46ff06cb877f4_0", "is_ignored": false, "lines": "  sprintf(param_2,\"%02X:%02X:%02X:%02X:%02X:%02X\",(uint)*param_1,(uint)param_1[1],(uint)param_1[2],\n          (uint)param_1[3],(uint)param_1[4],(uint)param_1[5],&_gp);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 10, "line": 5, "offset": 61}, "start": {"col": 3, "line": 5, "offset": 54}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_ether_ntop_0040ae30.c", "start": {"col": 3, "line": 5, "offset": 54}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 65, "offset": 1688}, "extra": {"engine_kind": "OSS", "fingerprint": "3bc5ba8582417202d9074f661f84aa6dc9819aff3a271c03583e0f67f059ac1868e0bf777c16c70463dd72d4b269141d352c5f82e007ed37b17ac074704722ae_0", "is_ignored": false, "lines": "            memcpy(param_2 + 1,local_24,uVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 19, "line": 65, "offset": 1660}, "start": {"col": 13, "line": 65, "offset": 1654}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_extract_event_stream_0040bb48.c", "start": {"col": 13, "line": 65, "offset": 1654}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 68, "offset": 1765}, "extra": {"engine_kind": "OSS", "fingerprint": "3bc5ba8582417202d9074f661f84aa6dc9819aff3a271c03583e0f67f059ac1868e0bf777c16c70463dd72d4b269141d352c5f82e007ed37b17ac074704722ae_1", "is_ignored": false, "lines": "            memcpy(param_2 + 2,local_24,uVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 19, "line": 68, "offset": 1737}, "start": {"col": 13, "line": 68, "offset": 1731}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_extract_event_stream_0040bb48.c", "start": {"col": 13, "line": 68, "offset": 1731}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 53, "line": 88, "offset": 2610}, "extra": {"engine_kind": "OSS", "fingerprint": "3bc5ba8582417202d9074f661f84aa6dc9819aff3a271c03583e0f67f059ac1868e0bf777c16c70463dd72d4b269141d352c5f82e007ed37b17ac074704722ae_2", "is_ignored": false, "lines": "                    memcpy(param_2 + 2,pvVar6,uVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 27, "line": 88, "offset": 2584}, "start": {"col": 21, "line": 88, "offset": 2578}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_extract_event_stream_0040bb48.c", "start": {"col": 21, "line": 88, "offset": 2578}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 49, "line": 115, "offset": 3674}, "extra": {"engine_kind": "OSS", "fingerprint": "3bc5ba8582417202d9074f661f84aa6dc9819aff3a271c03583e0f67f059ac1868e0bf777c16c70463dd72d4b269141d352c5f82e007ed37b17ac074704722ae_3", "is_ignored": false, "lines": "                memcpy(param_2 + 1,pvVar6,uVar4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 23, "line": 115, "offset": 3648}, "start": {"col": 17, "line": 115, "offset": 3642}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_extract_event_stream_0040bb48.c", "start": {"col": 17, "line": 115, "offset": 3642}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 25, "line": 16, "offset": 337}, "extra": {"engine_kind": "OSS", "fingerprint": "5aa22efb18f8e6e1414a3e7a7ec5417156150ba11a898d1423c72aa0fad547d9cbefbcface60ae77619c95f9259817e0841d5b6622c9921511d25144f8de3cf3_0", "is_ignored": false, "lines": "  memset(param_3,0,0xb8);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 19, "line": 16, "offset": 331}, "start": {"col": 18, "line": 16, "offset": 330}}, "$DST": {"abstract_content": "param_3", "end": {"col": 17, "line": 16, "offset": 329}, "start": {"col": 10, "line": 16, "offset": 322}}, "$LEN": {"abstract_content": "0xb8", "end": {"col": 24, "line": 16, "offset": 336}, "start": {"col": 20, "line": 16, "offset": 332}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 3, "line": 16, "offset": 315}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 17, "offset": 373}, "extra": {"engine_kind": "OSS", "fingerprint": "a91090ea67b948c6065ed093cf777f7632b479333acf421981015ff479ea973f38ac88fb1de36bc30586426696077d5e113550d68a0ea649a2c63cf340aa875f_0", "is_ignored": false, "lines": "  strncpy(acStack_28,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 10, "line": 17, "offset": 348}, "start": {"col": 3, "line": 17, "offset": 341}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 3, "line": 17, "offset": 341}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 35, "line": 17, "offset": 373}, "extra": {"engine_kind": "OSS", "fingerprint": "2902a1e2afa381880ea0e6577c4d1621245794262ca71fb30a307b7b0b4681cd4c2291f62039622efccf6b674a619a4d8bfcf8c6cab920454995fe6e19a9e20b_0", "is_ignored": false, "lines": "  strncpy(acStack_28,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_28", "end": {"col": 21, "line": 17, "offset": 359}, "start": {"col": 11, "line": 17, "offset": 349}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 34, "line": 17, "offset": 372}, "start": {"col": 30, "line": 17, "offset": 368}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 29, "line": 17, "offset": 367}, "start": {"col": 22, "line": 17, "offset": 360}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 3, "line": 17, "offset": 341}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 35, "line": 17, "offset": 373}, "extra": {"engine_kind": "OSS", "fingerprint": "931d788050befe6575a93c0ab75e01a113e820d29fbdddfdce5094ddccf50214de2064eccebc5b1bcdc32d9726176f2f7157f5aba752f60511a3b431a347432a_0", "is_ignored": false, "lines": "  strncpy(acStack_28,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 10, "line": 17, "offset": 348}, "start": {"col": 3, "line": 17, "offset": 341}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 3, "line": 17, "offset": 341}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 44, "line": 23, "offset": 533}, "extra": {"engine_kind": "OSS", "fingerprint": "a91090ea67b948c6065ed093cf777f7632b479333acf421981015ff479ea973f38ac88fb1de36bc30586426696077d5e113550d68a0ea649a2c63cf340aa875f_1", "is_ignored": false, "lines": "    strncpy(param_3,(char *)&local_18,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 23, "offset": 501}, "start": {"col": 5, "line": 23, "offset": 494}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 23, "offset": 494}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 44, "line": 23, "offset": 533}, "extra": {"engine_kind": "OSS", "fingerprint": "3eb28c1dd8492a8cbfeaf6c69b3e8906922b40396b1fa5f7083508d7e0544b939ad1effd93b9ef17c0f16593a053283946bfceb648d1c2950ad5db95ecc99101_0", "is_ignored": false, "lines": "    strncpy(param_3,(char *)&local_18,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "param_3", "end": {"col": 20, "line": 23, "offset": 509}, "start": {"col": 13, "line": 23, "offset": 502}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 43, "line": 23, "offset": 532}, "start": {"col": 39, "line": 23, "offset": 528}}, "$SRC": {"abstract_content": "char*&local_18", "end": {"col": 38, "line": 23, "offset": 527}, "start": {"col": 22, "line": 23, "offset": 511}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 23, "offset": 494}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 25, "offset": 597}, "extra": {"engine_kind": "OSS", "fingerprint": "a91090ea67b948c6065ed093cf777f7632b479333acf421981015ff479ea973f38ac88fb1de36bc30586426696077d5e113550d68a0ea649a2c63cf340aa875f_2", "is_ignored": false, "lines": "    strncpy(acStack_28,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 25, "offset": 572}, "start": {"col": 5, "line": 25, "offset": 565}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 25, "offset": 565}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 25, "offset": 597}, "extra": {"engine_kind": "OSS", "fingerprint": "2902a1e2afa381880ea0e6577c4d1621245794262ca71fb30a307b7b0b4681cd4c2291f62039622efccf6b674a619a4d8bfcf8c6cab920454995fe6e19a9e20b_1", "is_ignored": false, "lines": "    strncpy(acStack_28,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_28", "end": {"col": 23, "line": 25, "offset": 583}, "start": {"col": 13, "line": 25, "offset": 573}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 36, "line": 25, "offset": 596}, "start": {"col": 32, "line": 25, "offset": 592}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 31, "line": 25, "offset": 591}, "start": {"col": 24, "line": 25, "offset": 584}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 25, "offset": 565}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 37, "line": 25, "offset": 597}, "extra": {"engine_kind": "OSS", "fingerprint": "931d788050befe6575a93c0ab75e01a113e820d29fbdddfdce5094ddccf50214de2064eccebc5b1bcdc32d9726176f2f7157f5aba752f60511a3b431a347432a_1", "is_ignored": false, "lines": "    strncpy(acStack_28,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 25, "offset": 572}, "start": {"col": 5, "line": 25, "offset": 565}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 25, "offset": 565}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 32, "offset": 841}, "extra": {"engine_kind": "OSS", "fingerprint": "a91090ea67b948c6065ed093cf777f7632b479333acf421981015ff479ea973f38ac88fb1de36bc30586426696077d5e113550d68a0ea649a2c63cf340aa875f_3", "is_ignored": false, "lines": "    strncpy(acStack_28,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 32, "offset": 816}, "start": {"col": 5, "line": 32, "offset": 809}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 32, "offset": 809}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 32, "offset": 841}, "extra": {"engine_kind": "OSS", "fingerprint": "2902a1e2afa381880ea0e6577c4d1621245794262ca71fb30a307b7b0b4681cd4c2291f62039622efccf6b674a619a4d8bfcf8c6cab920454995fe6e19a9e20b_2", "is_ignored": false, "lines": "    strncpy(acStack_28,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_28", "end": {"col": 23, "line": 32, "offset": 827}, "start": {"col": 13, "line": 32, "offset": 817}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 36, "line": 32, "offset": 840}, "start": {"col": 32, "line": 32, "offset": 836}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 31, "line": 32, "offset": 835}, "start": {"col": 24, "line": 32, "offset": 828}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 32, "offset": 809}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 37, "line": 32, "offset": 841}, "extra": {"engine_kind": "OSS", "fingerprint": "931d788050befe6575a93c0ab75e01a113e820d29fbdddfdce5094ddccf50214de2064eccebc5b1bcdc32d9726176f2f7157f5aba752f60511a3b431a347432a_2", "is_ignored": false, "lines": "    strncpy(acStack_28,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 32, "offset": 816}, "start": {"col": 5, "line": 32, "offset": 809}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 32, "offset": 809}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 42, "offset": 1191}, "extra": {"engine_kind": "OSS", "fingerprint": "a91090ea67b948c6065ed093cf777f7632b479333acf421981015ff479ea973f38ac88fb1de36bc30586426696077d5e113550d68a0ea649a2c63cf340aa875f_4", "is_ignored": false, "lines": "    strncpy(acStack_28,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 42, "offset": 1166}, "start": {"col": 5, "line": 42, "offset": 1159}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 42, "offset": 1159}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 42, "offset": 1191}, "extra": {"engine_kind": "OSS", "fingerprint": "2902a1e2afa381880ea0e6577c4d1621245794262ca71fb30a307b7b0b4681cd4c2291f62039622efccf6b674a619a4d8bfcf8c6cab920454995fe6e19a9e20b_3", "is_ignored": false, "lines": "    strncpy(acStack_28,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_28", "end": {"col": 23, "line": 42, "offset": 1177}, "start": {"col": 13, "line": 42, "offset": 1167}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 36, "line": 42, "offset": 1190}, "start": {"col": 32, "line": 42, "offset": 1186}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 31, "line": 42, "offset": 1185}, "start": {"col": 24, "line": 42, "offset": 1178}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 42, "offset": 1159}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 37, "line": 42, "offset": 1191}, "extra": {"engine_kind": "OSS", "fingerprint": "931d788050befe6575a93c0ab75e01a113e820d29fbdddfdce5094ddccf50214de2064eccebc5b1bcdc32d9726176f2f7157f5aba752f60511a3b431a347432a_3", "is_ignored": false, "lines": "    strncpy(acStack_28,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 42, "offset": 1166}, "start": {"col": 5, "line": 42, "offset": 1159}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 42, "offset": 1159}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 51, "offset": 1503}, "extra": {"engine_kind": "OSS", "fingerprint": "a91090ea67b948c6065ed093cf777f7632b479333acf421981015ff479ea973f38ac88fb1de36bc30586426696077d5e113550d68a0ea649a2c63cf340aa875f_5", "is_ignored": false, "lines": "    strncpy(acStack_28,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 51, "offset": 1478}, "start": {"col": 5, "line": 51, "offset": 1471}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 51, "offset": 1471}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 51, "offset": 1503}, "extra": {"engine_kind": "OSS", "fingerprint": "2902a1e2afa381880ea0e6577c4d1621245794262ca71fb30a307b7b0b4681cd4c2291f62039622efccf6b674a619a4d8bfcf8c6cab920454995fe6e19a9e20b_4", "is_ignored": false, "lines": "    strncpy(acStack_28,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_28", "end": {"col": 23, "line": 51, "offset": 1489}, "start": {"col": 13, "line": 51, "offset": 1479}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 36, "line": 51, "offset": 1502}, "start": {"col": 32, "line": 51, "offset": 1498}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 31, "line": 51, "offset": 1497}, "start": {"col": 24, "line": 51, "offset": 1490}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 51, "offset": 1471}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 37, "line": 51, "offset": 1503}, "extra": {"engine_kind": "OSS", "fingerprint": "931d788050befe6575a93c0ab75e01a113e820d29fbdddfdce5094ddccf50214de2064eccebc5b1bcdc32d9726176f2f7157f5aba752f60511a3b431a347432a_4", "is_ignored": false, "lines": "    strncpy(acStack_28,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 51, "offset": 1478}, "start": {"col": 5, "line": 51, "offset": 1471}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 51, "offset": 1471}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 57, "offset": 1710}, "extra": {"engine_kind": "OSS", "fingerprint": "a91090ea67b948c6065ed093cf777f7632b479333acf421981015ff479ea973f38ac88fb1de36bc30586426696077d5e113550d68a0ea649a2c63cf340aa875f_6", "is_ignored": false, "lines": "    strncpy(acStack_28,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 57, "offset": 1685}, "start": {"col": 5, "line": 57, "offset": 1678}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 57, "offset": 1678}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 57, "offset": 1710}, "extra": {"engine_kind": "OSS", "fingerprint": "2902a1e2afa381880ea0e6577c4d1621245794262ca71fb30a307b7b0b4681cd4c2291f62039622efccf6b674a619a4d8bfcf8c6cab920454995fe6e19a9e20b_5", "is_ignored": false, "lines": "    strncpy(acStack_28,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_28", "end": {"col": 23, "line": 57, "offset": 1696}, "start": {"col": 13, "line": 57, "offset": 1686}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 36, "line": 57, "offset": 1709}, "start": {"col": 32, "line": 57, "offset": 1705}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 31, "line": 57, "offset": 1704}, "start": {"col": 24, "line": 57, "offset": 1697}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 57, "offset": 1678}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 37, "line": 57, "offset": 1710}, "extra": {"engine_kind": "OSS", "fingerprint": "931d788050befe6575a93c0ab75e01a113e820d29fbdddfdce5094ddccf50214de2064eccebc5b1bcdc32d9726176f2f7157f5aba752f60511a3b431a347432a_5", "is_ignored": false, "lines": "    strncpy(acStack_28,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 57, "offset": 1685}, "start": {"col": 5, "line": 57, "offset": 1678}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c", "start": {"col": 5, "line": 57, "offset": 1678}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 45, "line": 11, "offset": 194}, "extra": {"engine_kind": "OSS", "fingerprint": "8d403053fc4d49af489fbe1111a616bb8e9d07c9a1a64d2649bb2c3e616adc257a91fcce5bf9e620d3411a67ef64040c06d3e91f2f44df8859ce230169dd362f_0", "is_ignored": false, "lines": "  __stream = fopen(\"/proc/net/wireless\",\"r\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "fopen", "end": {"col": 19, "line": 11, "offset": 168}, "start": {"col": 14, "line": 11, "offset": 163}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_kernel_we_version_004050a4.c", "start": {"col": 14, "line": 11, "offset": 163}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 17, "offset": 371}, "extra": {"engine_kind": "OSS", "fingerprint": "cb175972f4757c10620edf11cdba702609a7e37a224b8bf8ce2e9c9750d47abbe14e31c173093228c71bbf0646f93f28d90ea16e4ccd53a85db81899dd374bd5_0", "is_ignored": false, "lines": "    fgets(acStack_410,0x400,__stream);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$1": {"abstract_content": "s", "end": {"col": 5, "line": 2, "offset": 5}, "start": {"col": 4, "line": 2, "offset": 4}}, "$FUN": {"abstract_content": "fgets", "end": {"col": 10, "line": 17, "offset": 343}, "start": {"col": 5, "line": 17, "offset": 338}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_kernel_we_version_004050a4.c", "start": {"col": 5, "line": 17, "offset": 338}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 30, "offset": 692}, "extra": {"engine_kind": "OSS", "fingerprint": "cb175972f4757c10620edf11cdba702609a7e37a224b8bf8ce2e9c9750d47abbe14e31c173093228c71bbf0646f93f28d90ea16e4ccd53a85db81899dd374bd5_1", "is_ignored": false, "lines": "      fgets(acStack_410,0x400,__stream);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$1": {"abstract_content": "s", "end": {"col": 5, "line": 2, "offset": 5}, "start": {"col": 4, "line": 2, "offset": 4}}, "$FUN": {"abstract_content": "fgets", "end": {"col": 12, "line": 30, "offset": 664}, "start": {"col": 7, "line": 30, "offset": 659}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_kernel_we_version_004050a4.c", "start": {"col": 7, "line": 30, "offset": 659}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 79, "line": 32, "offset": 814}, "extra": {"engine_kind": "OSS", "fingerprint": "b678692a073e572db55debb5578da744df1e1311e7a9d9fde7535e8ff212bc466b60e2ba1513aaed7ef5b959a2166f38676b2486da8adf370e590b4701f91c83_0", "is_ignored": false, "lines": "      if ((pcVar1 != (char *)0x0) && (iVar2 = sscanf(pcVar1 + 1,\"%d\",local_10), iVar2 == 1)) {", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 53, "line": 32, "offset": 788}, "start": {"col": 47, "line": 32, "offset": 782}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_kernel_we_version_004050a4.c", "start": {"col": 47, "line": 32, "offset": 782}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-wraparound", "end": {"col": 47, "line": 18, "offset": 332}, "extra": {"engine_kind": "OSS", "fingerprint": "dd7139c75bddb6824a26635d80784ce821c79a9202ca1461fb04cd8bc8634e04d6fc68c34b523516b6210ff02be7647341bffefb9dea2f25963f7b482672e865_0", "is_ignored": false, "lines": "    pvVar1 = realloc(local_48,local_44 * 0x18);", "message": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/190", "https://cwe.mitre.org/data/definitions/128", "https://cwe.mitre.org/data/definitions/131", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$ARG1": {"abstract_content": "local_48", "end": {"col": 30, "line": 18, "offset": 315}, "propagated_value": {"svalue_abstract_content": "void*0x0", "svalue_end": {"col": 25, "line": 15, "offset": 258}, "svalue_start": {"col": 15, "line": 15, "offset": 248}}, "start": {"col": 22, "line": 18, "offset": 307}}, "$FUN": {"abstract_content": "realloc", "end": {"col": 21, "line": 18, "offset": 306}, "start": {"col": 14, "line": 18, "offset": 299}}, "$X": {"abstract_content": "local_44", "end": {"col": 39, "line": 18, "offset": 324}, "propagated_value": {"svalue_abstract_content": "0x10", "svalue_end": {"col": 18, "line": 16, "offset": 277}, "svalue_start": {"col": 14, "line": 16, "offset": 273}}, "start": {"col": 31, "line": 18, "offset": 316}}, "$Y": {"abstract_content": "0x18", "end": {"col": 46, "line": 18, "offset": 331}, "start": {"col": 42, "line": 18, "offset": 327}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_priv_info_00405e20.c", "start": {"col": 14, "line": 18, "offset": 299}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 18, "offset": 332}, "extra": {"engine_kind": "OSS", "fingerprint": "4770b32be30f148a3f59715516f32ff32f853c2c63fb57546249befbf85b79896f62deec554d25ba0d85eef1edd409a472db9ae714937dbae75497a796c96c00_0", "is_ignored": false, "lines": "    pvVar1 = realloc(local_48,local_44 * 0x18);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "realloc", "end": {"col": 21, "line": 18, "offset": 306}, "start": {"col": 14, "line": 18, "offset": 299}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_priv_info_00405e20.c", "start": {"col": 14, "line": 18, "offset": 299}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 26, "offset": 564}, "extra": {"engine_kind": "OSS", "fingerprint": "56aae7429cb63e75ad33f8aaf46d55fe47f516c1029220d37b1486beb5491d529f26d2a0504f606a2988422fd5fd7ee196487fe3add9c2fef235000e92fb9faf_0", "is_ignored": false, "lines": "    strncpy(acStack_2c,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 26, "offset": 539}, "start": {"col": 5, "line": 26, "offset": 532}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_priv_info_00405e20.c", "start": {"col": 5, "line": 26, "offset": 532}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 26, "offset": 564}, "extra": {"engine_kind": "OSS", "fingerprint": "905d5094dca4b400ec4eb0dc98c83b081043b7283ef2aba7450715464dd090625e47a43591a3f239d19abbdc9c61615e27df79104cd02f09c8e4331e28a54318_0", "is_ignored": false, "lines": "    strncpy(acStack_2c,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_2c", "end": {"col": 23, "line": 26, "offset": 550}, "start": {"col": 13, "line": 26, "offset": 540}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 36, "line": 26, "offset": 563}, "start": {"col": 32, "line": 26, "offset": 559}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 31, "line": 26, "offset": 558}, "start": {"col": 24, "line": 26, "offset": 551}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_priv_info_00405e20.c", "start": {"col": 5, "line": 26, "offset": 532}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 37, "line": 26, "offset": 564}, "extra": {"engine_kind": "OSS", "fingerprint": "cf0d1e88dfb46dcd46b402d06e5dfefdb74aaf651d91c1b0fdf4347601ce7e57186478d7ff37dc52c214bdc8e1f2434b16fadbe3bd81b0e873179ae323688aab_0", "is_ignored": false, "lines": "    strncpy(acStack_2c,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 26, "offset": 539}, "start": {"col": 5, "line": 26, "offset": 532}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_priv_info_00405e20.c", "start": {"col": 5, "line": 26, "offset": 532}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 29, "line": 27, "offset": 706}, "extra": {"engine_kind": "OSS", "fingerprint": "d4c9282a3ca8c7c528d9355bb440d969675a0275274d99783b2168d39e5ec47012cf958cd2db7207fdf478eb3ff24b7e86b040881cd1284084cf00dfbbcdc28d_0", "is_ignored": false, "lines": "  memset(&local_4a4,0,0x498);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 22, "line": 27, "offset": 699}, "start": {"col": 21, "line": 27, "offset": 698}}, "$DST": {"abstract_content": "&local_4a4", "end": {"col": 20, "line": 27, "offset": 697}, "start": {"col": 10, "line": 27, "offset": 687}}, "$LEN": {"abstract_content": "0x498", "end": {"col": 28, "line": 27, "offset": 705}, "start": {"col": 23, "line": 27, "offset": 700}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c", "start": {"col": 3, "line": 27, "offset": 680}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 31, "offset": 807}, "extra": {"engine_kind": "OSS", "fingerprint": "747ec77207ddd5dd976961896af81034972ca68a7b55ba7dc26c51fd1fa1837cd56e9b0b7aea5f0fb95b5a83722e8bc30c2b56a41bccac0e33b66e2445c6d4ab_0", "is_ignored": false, "lines": "  strncpy(acStack_4c4,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 10, "line": 31, "offset": 781}, "start": {"col": 3, "line": 31, "offset": 774}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c", "start": {"col": 3, "line": 31, "offset": 774}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 31, "offset": 807}, "extra": {"engine_kind": "OSS", "fingerprint": "444cdea7703fa29525432cd2ced1edb2b09ae0f24e8e5c59435d82e44028ddc9255a7d945a6889375708ffadfc6229718468f9c6b9c088555d840b6269d04a1c_0", "is_ignored": false, "lines": "  strncpy(acStack_4c4,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_4c4", "end": {"col": 22, "line": 31, "offset": 793}, "start": {"col": 11, "line": 31, "offset": 782}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 35, "line": 31, "offset": 806}, "start": {"col": 31, "line": 31, "offset": 802}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 30, "line": 31, "offset": 801}, "start": {"col": 23, "line": 31, "offset": 794}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c", "start": {"col": 3, "line": 31, "offset": 774}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 36, "line": 31, "offset": 807}, "extra": {"engine_kind": "OSS", "fingerprint": "cd4d0e5f332c247225d3c40e67cb2889fc8c38328287ee12abeb850224d828cc738184a8704623f9e9e2b5aa2d32c480a8e240c6ed0a7c91ec7429e640221f29_0", "is_ignored": false, "lines": "  strncpy(acStack_4c4,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 10, "line": 31, "offset": 781}, "start": {"col": 3, "line": 31, "offset": 774}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c", "start": {"col": 3, "line": 31, "offset": 774}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 41, "offset": 1023}, "extra": {"engine_kind": "OSS", "fingerprint": "223621bb8a2345db8060049c15c6d115a4451f025504729f494542cd7beb1251ace88a1808f75e1e4ac92eeca602ded48da2b0eccaf12bed0ede42cc69a1b4bc_0", "is_ignored": false, "lines": "      memset(param_3,0,0x24c);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 23, "line": 41, "offset": 1016}, "start": {"col": 22, "line": 41, "offset": 1015}}, "$DST": {"abstract_content": "param_3", "end": {"col": 21, "line": 41, "offset": 1014}, "start": {"col": 14, "line": 41, "offset": 1007}}, "$LEN": {"abstract_content": "0x24c", "end": {"col": 29, "line": 41, "offset": 1022}, "start": {"col": 24, "line": 41, "offset": 1017}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c", "start": {"col": 7, "line": 41, "offset": 1000}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 46, "line": 45, "offset": 1158}, "extra": {"engine_kind": "OSS", "fingerprint": "999b8fa4dd84b5397aea44039f17ace2fc5dd0829b7a220364397de08b0751a6f84b8c2038eb2037c5116c623e0474aaf99050d9db468be750671e951511406b_0", "is_ignored": false, "lines": "      memcpy(param_3 + 0x4c,auStack_498,0x84);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 45, "offset": 1125}, "start": {"col": 7, "line": 45, "offset": 1119}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c", "start": {"col": 7, "line": 45, "offset": 1119}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 46, "line": 45, "offset": 1158}, "extra": {"engine_kind": "OSS", "fingerprint": "97c252bc3beaa8ec190362e7ea6c190f28b8df8774a779434642f5124156bb2ed26db6aa7a03c2ddcaaba2c0daca9a930b85d934839211ecf39bbd35c8fb7823_0", "is_ignored": false, "lines": "      memcpy(param_3 + 0x4c,auStack_498,0x84);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "param_3+0x4c", "end": {"col": 28, "line": 45, "offset": 1140}, "start": {"col": 14, "line": 45, "offset": 1126}}, "$LEN": {"abstract_content": "0x84", "end": {"col": 45, "line": 45, "offset": 1157}, "start": {"col": 41, "line": 45, "offset": 1153}}, "$SRC": {"abstract_content": "auStack_498", "end": {"col": 40, "line": 45, "offset": 1152}, "start": {"col": 29, "line": 45, "offset": 1141}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c", "start": {"col": 7, "line": 45, "offset": 1119}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 45, "line": 48, "offset": 1267}, "extra": {"engine_kind": "OSS", "fingerprint": "999b8fa4dd84b5397aea44039f17ace2fc5dd0829b7a220364397de08b0751a6f84b8c2038eb2037c5116c623e0474aaf99050d9db468be750671e951511406b_1", "is_ignored": false, "lines": "      memcpy(param_3 + 0xd,auStack_40c,0x24);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 48, "offset": 1235}, "start": {"col": 7, "line": 48, "offset": 1229}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c", "start": {"col": 7, "line": 48, "offset": 1229}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 45, "line": 48, "offset": 1267}, "extra": {"engine_kind": "OSS", "fingerprint": "ea0f0b559a90f0a8fa19c986fecd2d212082fe2648a6c4ec2db046ec43498c903cd136fc2c166f30b6fbb2c9f51e36d2cc60945b48da650b9c1c3c7f5c3973f9_0", "is_ignored": false, "lines": "      memcpy(param_3 + 0xd,auStack_40c,0x24);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "param_3+0xd", "end": {"col": 27, "line": 48, "offset": 1249}, "start": {"col": 14, "line": 48, "offset": 1236}}, "$LEN": {"abstract_content": "0x24", "end": {"col": 44, "line": 48, "offset": 1266}, "start": {"col": 40, "line": 48, "offset": 1262}}, "$SRC": {"abstract_content": "auStack_40c", "end": {"col": 39, "line": 48, "offset": 1261}, "start": {"col": 28, "line": 48, "offset": 1250}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c", "start": {"col": 7, "line": 48, "offset": 1229}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 46, "line": 49, "offset": 1314}, "extra": {"engine_kind": "OSS", "fingerprint": "999b8fa4dd84b5397aea44039f17ace2fc5dd0829b7a220364397de08b0751a6f84b8c2038eb2037c5116c623e0474aaf99050d9db468be750671e951511406b_2", "is_ignored": false, "lines": "      memcpy(param_3 + 0x2e,auStack_3e8,0x38);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 49, "offset": 1281}, "start": {"col": 7, "line": 49, "offset": 1275}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c", "start": {"col": 7, "line": 49, "offset": 1275}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 46, "line": 49, "offset": 1314}, "extra": {"engine_kind": "OSS", "fingerprint": "9dc0eb1d9a1f7488c30b7af2f0f51aebbf942d6645902b4be3ec8a0f385f4f96fc60c0c8ecd897b997929ec651741408366c39f1894ca167e3e0a47141d1ea02_0", "is_ignored": false, "lines": "      memcpy(param_3 + 0x2e,auStack_3e8,0x38);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "param_3+0x2e", "end": {"col": 28, "line": 49, "offset": 1296}, "start": {"col": 14, "line": 49, "offset": 1282}}, "$LEN": {"abstract_content": "0x38", "end": {"col": 45, "line": 49, "offset": 1313}, "start": {"col": 41, "line": 49, "offset": 1309}}, "$SRC": {"abstract_content": "auStack_3e8", "end": {"col": 40, "line": 49, "offset": 1308}, "start": {"col": 29, "line": 49, "offset": 1297}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c", "start": {"col": 7, "line": 49, "offset": 1275}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 46, "line": 51, "offset": 1417}, "extra": {"engine_kind": "OSS", "fingerprint": "999b8fa4dd84b5397aea44039f17ace2fc5dd0829b7a220364397de08b0751a6f84b8c2038eb2037c5116c623e0474aaf99050d9db468be750671e951511406b_3", "is_ignored": false, "lines": "      memcpy(param_3 + 0x3e,auStack_3ac,0x38);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 51, "offset": 1384}, "start": {"col": 7, "line": 51, "offset": 1378}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c", "start": {"col": 7, "line": 51, "offset": 1378}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 46, "line": 51, "offset": 1417}, "extra": {"engine_kind": "OSS", "fingerprint": "00638d01a09fa6afd86eb0279aab4fdb579cea8d210837aa0166f913b2484a180c53e5188cc2575afd80f0185f63855baf8e4d330a4fe1eba9097bb54d7f40d0_0", "is_ignored": false, "lines": "      memcpy(param_3 + 0x3e,auStack_3ac,0x38);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "param_3+0x3e", "end": {"col": 28, "line": 51, "offset": 1399}, "start": {"col": 14, "line": 51, "offset": 1385}}, "$LEN": {"abstract_content": "0x38", "end": {"col": 45, "line": 51, "offset": 1416}, "start": {"col": 41, "line": 51, "offset": 1412}}, "$SRC": {"abstract_content": "auStack_3ac", "end": {"col": 40, "line": 51, "offset": 1411}, "start": {"col": 29, "line": 51, "offset": 1400}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c", "start": {"col": 7, "line": 51, "offset": 1378}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 55, "offset": 1506}, "extra": {"engine_kind": "OSS", "fingerprint": "999b8fa4dd84b5397aea44039f17ace2fc5dd0829b7a220364397de08b0751a6f84b8c2038eb2037c5116c623e0474aaf99050d9db468be750671e951511406b_4", "is_ignored": false, "lines": "      memcpy(param_3,&local_4a4,0x24c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 55, "offset": 1480}, "start": {"col": 7, "line": 55, "offset": 1474}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c", "start": {"col": 7, "line": 55, "offset": 1474}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 55, "offset": 1506}, "extra": {"engine_kind": "OSS", "fingerprint": "0107279d733110e23c1df3f8c0e1fd57d9ce31b52a48b678a9bd0932001869b91d6ad67db67982d6782956acbc03a2a3892629d05b86b4be2580e77d254f8d76_0", "is_ignored": false, "lines": "      memcpy(param_3,&local_4a4,0x24c);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "param_3", "end": {"col": 21, "line": 55, "offset": 1488}, "start": {"col": 14, "line": 55, "offset": 1481}}, "$LEN": {"abstract_content": "0x24c", "end": {"col": 38, "line": 55, "offset": 1505}, "start": {"col": 33, "line": 55, "offset": 1500}}, "$SRC": {"abstract_content": "&local_4a4", "end": {"col": 32, "line": 55, "offset": 1499}, "start": {"col": 22, "line": 55, "offset": 1489}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c", "start": {"col": 7, "line": 55, "offset": 1474}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 21, "offset": 506}, "extra": {"engine_kind": "OSS", "fingerprint": "c764b36c4231bb215a7f95cdd3946199a0b6aa02f41e2d7b6616da85972c02d772a2e18503afd50af57465fd8d53427191f80815f1e48ba076a99e540cc24616_0", "is_ignored": false, "lines": "    __stream = fopen(\"/proc/net/wireless\",\"r\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "fopen", "end": {"col": 21, "line": 21, "offset": 480}, "start": {"col": 16, "line": 21, "offset": 475}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 16, "line": 21, "offset": 475}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 50, "line": 27, "offset": 646}, "extra": {"engine_kind": "OSS", "fingerprint": "16e179d3d9d3830300688b5414d1d98cf49f8cc6b6f735bdf03beac03790e01640a06a148ef601cfcad50c9b3bbae9ac6508e8602065c05c9838a61caa5edead_0", "is_ignored": false, "lines": "        pcVar5 = fgets(acStack_10c,0xff,__stream);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$1": {"abstract_content": "s", "end": {"col": 5, "line": 2, "offset": 5}, "start": {"col": 4, "line": 2, "offset": 4}}, "$FUN": {"abstract_content": "fgets", "end": {"col": 23, "line": 27, "offset": 619}, "start": {"col": 18, "line": 27, "offset": 614}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 18, "line": 27, "offset": 614}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 49, "line": 37, "offset": 1011}, "extra": {"engine_kind": "OSS", "fingerprint": "2b6c8feb32b186965b33f4618360f12e027a797865a93b22b531c174c54e1f3e09fa123a5ab99253a2dfab250ce0dfeb2744cfba8676bf439aa1a8fb9c83713f_0", "is_ignored": false, "lines": "        iVar1 = strncmp(local_128,param_2,sVar3);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar1", "end": {"col": 14, "line": 37, "offset": 976}, "start": {"col": 9, "line": 37, "offset": 971}}, "$UNSIGNED": {"abstract_content": "sVar3", "end": {"col": 48, "line": 37, "offset": 1010}, "propagated_value": {"svalue_abstract_content": "strlen(param_2)", "svalue_end": {"col": 32, "line": 36, "offset": 961}, "svalue_start": {"col": 17, "line": 36, "offset": 946}}, "start": {"col": 43, "line": 37, "offset": 1005}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 9, "line": 37, "offset": 971}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 40, "offset": 1173}, "extra": {"engine_kind": "OSS", "fingerprint": "7dba8f87da35fab6d4847e18937c643aa8b8f02ce5c33e43a45ceff435037bdc5babc703e567cb62c40386fe5a1b0b46effc92d40f67c0dd3425ea512e1787ef_0", "is_ignored": false, "lines": "      pcVar5 = strtok(pcVar5 + 1,\" \");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strtok", "end": {"col": 22, "line": 40, "offset": 1157}, "start": {"col": 16, "line": 40, "offset": 1151}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 16, "line": 40, "offset": 1151}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 41, "offset": 1211}, "extra": {"engine_kind": "OSS", "fingerprint": "8480e78a2eeb0fff50b68c3fdd3a18afad5070b964181f7d2f0a27b63e4a29e7766a7cdd833a07e99eaa766e270398528ae9b22bc11b107dc9b22f7c98db017b_0", "is_ignored": false, "lines": "      sscanf(pcVar5,\"%X\",&local_110);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 13, "line": 41, "offset": 1187}, "start": {"col": 7, "line": 41, "offset": 1181}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 7, "line": 41, "offset": 1181}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc", "end": {"col": 37, "line": 41, "offset": 1211}, "extra": {"engine_kind": "OSS", "fingerprint": "7b4d1fbfbc3798810fc15ae260586d0d4c622846c18015c2473fa08b3056075606737f896f6f6fc08cc0ab70f574fe892092587704697e4e315c9e34bc9e4c7e_0", "is_ignored": false, "lines": "      sscanf(pcVar5,\"%X\",&local_110);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 13, "line": 41, "offset": 1187}, "start": {"col": 7, "line": 41, "offset": 1181}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 7, "line": 41, "offset": 1181}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 43, "offset": 1286}, "extra": {"engine_kind": "OSS", "fingerprint": "7dba8f87da35fab6d4847e18937c643aa8b8f02ce5c33e43a45ceff435037bdc5babc703e567cb62c40386fe5a1b0b46effc92d40f67c0dd3425ea512e1787ef_1", "is_ignored": false, "lines": "      pcVar5 = strtok((char *)0x0,\" \");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strtok", "end": {"col": 22, "line": 43, "offset": 1269}, "start": {"col": 16, "line": 43, "offset": 1263}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 16, "line": 43, "offset": 1263}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 48, "offset": 1474}, "extra": {"engine_kind": "OSS", "fingerprint": "8480e78a2eeb0fff50b68c3fdd3a18afad5070b964181f7d2f0a27b63e4a29e7766a7cdd833a07e99eaa766e270398528ae9b22bc11b107dc9b22f7c98db017b_1", "is_ignored": false, "lines": "      sscanf(pcVar5,\"%d\",&local_110);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 13, "line": 48, "offset": 1450}, "start": {"col": 7, "line": 48, "offset": 1444}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 7, "line": 48, "offset": 1444}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc", "end": {"col": 37, "line": 48, "offset": 1474}, "extra": {"engine_kind": "OSS", "fingerprint": "7b4d1fbfbc3798810fc15ae260586d0d4c622846c18015c2473fa08b3056075606737f896f6f6fc08cc0ab70f574fe892092587704697e4e315c9e34bc9e4c7e_1", "is_ignored": false, "lines": "      sscanf(pcVar5,\"%d\",&local_110);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 13, "line": 48, "offset": 1450}, "start": {"col": 7, "line": 48, "offset": 1444}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 7, "line": 48, "offset": 1444}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 50, "offset": 1572}, "extra": {"engine_kind": "OSS", "fingerprint": "7dba8f87da35fab6d4847e18937c643aa8b8f02ce5c33e43a45ceff435037bdc5babc703e567cb62c40386fe5a1b0b46effc92d40f67c0dd3425ea512e1787ef_2", "is_ignored": false, "lines": "      pcVar5 = strtok((char *)0x0,\" \");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strtok", "end": {"col": 22, "line": 50, "offset": 1555}, "start": {"col": 16, "line": 50, "offset": 1549}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 16, "line": 50, "offset": 1549}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 55, "offset": 1760}, "extra": {"engine_kind": "OSS", "fingerprint": "8480e78a2eeb0fff50b68c3fdd3a18afad5070b964181f7d2f0a27b63e4a29e7766a7cdd833a07e99eaa766e270398528ae9b22bc11b107dc9b22f7c98db017b_2", "is_ignored": false, "lines": "      sscanf(pcVar5,\"%d\",&local_110);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 13, "line": 55, "offset": 1736}, "start": {"col": 7, "line": 55, "offset": 1730}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 7, "line": 55, "offset": 1730}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc", "end": {"col": 37, "line": 55, "offset": 1760}, "extra": {"engine_kind": "OSS", "fingerprint": "7b4d1fbfbc3798810fc15ae260586d0d4c622846c18015c2473fa08b3056075606737f896f6f6fc08cc0ab70f574fe892092587704697e4e315c9e34bc9e4c7e_2", "is_ignored": false, "lines": "      sscanf(pcVar5,\"%d\",&local_110);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 13, "line": 55, "offset": 1736}, "start": {"col": 7, "line": 55, "offset": 1730}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 7, "line": 55, "offset": 1730}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 57, "offset": 1863}, "extra": {"engine_kind": "OSS", "fingerprint": "7dba8f87da35fab6d4847e18937c643aa8b8f02ce5c33e43a45ceff435037bdc5babc703e567cb62c40386fe5a1b0b46effc92d40f67c0dd3425ea512e1787ef_3", "is_ignored": false, "lines": "      pcVar5 = strtok((char *)0x0,\" \");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strtok", "end": {"col": 22, "line": 57, "offset": 1846}, "start": {"col": 16, "line": 57, "offset": 1840}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 16, "line": 57, "offset": 1840}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 62, "offset": 2056}, "extra": {"engine_kind": "OSS", "fingerprint": "8480e78a2eeb0fff50b68c3fdd3a18afad5070b964181f7d2f0a27b63e4a29e7766a7cdd833a07e99eaa766e270398528ae9b22bc11b107dc9b22f7c98db017b_3", "is_ignored": false, "lines": "      sscanf(pcVar5,\"%d\",&local_110);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 13, "line": 62, "offset": 2032}, "start": {"col": 7, "line": 62, "offset": 2026}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 7, "line": 62, "offset": 2026}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc", "end": {"col": 37, "line": 62, "offset": 2056}, "extra": {"engine_kind": "OSS", "fingerprint": "7b4d1fbfbc3798810fc15ae260586d0d4c622846c18015c2473fa08b3056075606737f896f6f6fc08cc0ab70f574fe892092587704697e4e315c9e34bc9e4c7e_3", "is_ignored": false, "lines": "      sscanf(pcVar5,\"%d\",&local_110);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 13, "line": 62, "offset": 2032}, "start": {"col": 7, "line": 62, "offset": 2026}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 7, "line": 62, "offset": 2026}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 64, "offset": 2154}, "extra": {"engine_kind": "OSS", "fingerprint": "7dba8f87da35fab6d4847e18937c643aa8b8f02ce5c33e43a45ceff435037bdc5babc703e567cb62c40386fe5a1b0b46effc92d40f67c0dd3425ea512e1787ef_4", "is_ignored": false, "lines": "      pcVar5 = strtok((char *)0x0,\" \");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strtok", "end": {"col": 22, "line": 64, "offset": 2137}, "start": {"col": 16, "line": 64, "offset": 2131}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 16, "line": 64, "offset": 2131}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 65, "offset": 2193}, "extra": {"engine_kind": "OSS", "fingerprint": "8480e78a2eeb0fff50b68c3fdd3a18afad5070b964181f7d2f0a27b63e4a29e7766a7cdd833a07e99eaa766e270398528ae9b22bc11b107dc9b22f7c98db017b_4", "is_ignored": false, "lines": "      sscanf(pcVar5,\"%d\",param_3 + 4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 13, "line": 65, "offset": 2168}, "start": {"col": 7, "line": 65, "offset": 2162}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 7, "line": 65, "offset": 2162}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc", "end": {"col": 38, "line": 65, "offset": 2193}, "extra": {"engine_kind": "OSS", "fingerprint": "7b4d1fbfbc3798810fc15ae260586d0d4c622846c18015c2473fa08b3056075606737f896f6f6fc08cc0ab70f574fe892092587704697e4e315c9e34bc9e4c7e_4", "is_ignored": false, "lines": "      sscanf(pcVar5,\"%d\",param_3 + 4);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 13, "line": 65, "offset": 2168}, "start": {"col": 7, "line": 65, "offset": 2162}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 7, "line": 65, "offset": 2162}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 66, "offset": 2233}, "extra": {"engine_kind": "OSS", "fingerprint": "7dba8f87da35fab6d4847e18937c643aa8b8f02ce5c33e43a45ceff435037bdc5babc703e567cb62c40386fe5a1b0b46effc92d40f67c0dd3425ea512e1787ef_5", "is_ignored": false, "lines": "      pcVar5 = strtok((char *)0x0,\" \");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strtok", "end": {"col": 22, "line": 66, "offset": 2216}, "start": {"col": 16, "line": 66, "offset": 2210}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 16, "line": 66, "offset": 2210}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 67, "offset": 2272}, "extra": {"engine_kind": "OSS", "fingerprint": "8480e78a2eeb0fff50b68c3fdd3a18afad5070b964181f7d2f0a27b63e4a29e7766a7cdd833a07e99eaa766e270398528ae9b22bc11b107dc9b22f7c98db017b_5", "is_ignored": false, "lines": "      sscanf(pcVar5,\"%d\",param_3 + 6);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 13, "line": 67, "offset": 2247}, "start": {"col": 7, "line": 67, "offset": 2241}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 7, "line": 67, "offset": 2241}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc", "end": {"col": 38, "line": 67, "offset": 2272}, "extra": {"engine_kind": "OSS", "fingerprint": "7b4d1fbfbc3798810fc15ae260586d0d4c622846c18015c2473fa08b3056075606737f896f6f6fc08cc0ab70f574fe892092587704697e4e315c9e34bc9e4c7e_5", "is_ignored": false, "lines": "      sscanf(pcVar5,\"%d\",param_3 + 6);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 13, "line": 67, "offset": 2247}, "start": {"col": 7, "line": 67, "offset": 2241}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 7, "line": 67, "offset": 2241}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 68, "offset": 2312}, "extra": {"engine_kind": "OSS", "fingerprint": "7dba8f87da35fab6d4847e18937c643aa8b8f02ce5c33e43a45ceff435037bdc5babc703e567cb62c40386fe5a1b0b46effc92d40f67c0dd3425ea512e1787ef_6", "is_ignored": false, "lines": "      pcVar5 = strtok((char *)0x0,\" \");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strtok", "end": {"col": 22, "line": 68, "offset": 2295}, "start": {"col": 16, "line": 68, "offset": 2289}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 16, "line": 68, "offset": 2289}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 69, "offset": 2353}, "extra": {"engine_kind": "OSS", "fingerprint": "8480e78a2eeb0fff50b68c3fdd3a18afad5070b964181f7d2f0a27b63e4a29e7766a7cdd833a07e99eaa766e270398528ae9b22bc11b107dc9b22f7c98db017b_6", "is_ignored": false, "lines": "      sscanf(pcVar5,\"%d\",param_3 + 0xc);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 13, "line": 69, "offset": 2326}, "start": {"col": 7, "line": 69, "offset": 2320}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 7, "line": 69, "offset": 2320}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc", "end": {"col": 40, "line": 69, "offset": 2353}, "extra": {"engine_kind": "OSS", "fingerprint": "7b4d1fbfbc3798810fc15ae260586d0d4c622846c18015c2473fa08b3056075606737f896f6f6fc08cc0ab70f574fe892092587704697e4e315c9e34bc9e4c7e_6", "is_ignored": false, "lines": "      sscanf(pcVar5,\"%d\",param_3 + 0xc);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 13, "line": 69, "offset": 2326}, "start": {"col": 7, "line": 69, "offset": 2320}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 7, "line": 69, "offset": 2320}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 78, "offset": 2515}, "extra": {"engine_kind": "OSS", "fingerprint": "33d58e30faff058d94606969d771299a9243984ea40920adecd8e1c5316c789691400557724066e3ce0d3a9b4f20f0e1763059d32ac7cef51edadb6a4c7aa8d0_0", "is_ignored": false, "lines": "    strncpy(acStack_10c,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 78, "offset": 2489}, "start": {"col": 5, "line": 78, "offset": 2482}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 5, "line": 78, "offset": 2482}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 78, "offset": 2515}, "extra": {"engine_kind": "OSS", "fingerprint": "ae6d814eb758bc3048d03005d2e3d8a134d9c9a9c0c6e5c3b7c721d9695395af67795a7801737aa193202134ae669ffd4481d03cf373796110cd9a9bba174d13_0", "is_ignored": false, "lines": "    strncpy(acStack_10c,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_10c", "end": {"col": 24, "line": 78, "offset": 2501}, "start": {"col": 13, "line": 78, "offset": 2490}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 37, "line": 78, "offset": 2514}, "start": {"col": 33, "line": 78, "offset": 2510}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 32, "line": 78, "offset": 2509}, "start": {"col": 25, "line": 78, "offset": 2502}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 5, "line": 78, "offset": 2482}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 38, "line": 78, "offset": 2515}, "extra": {"engine_kind": "OSS", "fingerprint": "ec82183216d366156f89297d4d63110078ec46d1c697f586ea3909fed6cd5ffbd50c18173ab180ca04ede65d4aeb73555bda4d45adab6de66fc0281ceb45c829_0", "is_ignored": false, "lines": "    strncpy(acStack_10c,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 78, "offset": 2489}, "start": {"col": 5, "line": 78, "offset": 2482}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 5, "line": 78, "offset": 2482}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 79, "offset": 2554}, "extra": {"engine_kind": "OSS", "fingerprint": "33d58e30faff058d94606969d771299a9243984ea40920adecd8e1c5316c789691400557724066e3ce0d3a9b4f20f0e1763059d32ac7cef51edadb6a4c7aa8d0_1", "is_ignored": false, "lines": "    strncpy(acStack_10c,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 79, "offset": 2528}, "start": {"col": 5, "line": 79, "offset": 2521}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 5, "line": 79, "offset": 2521}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 79, "offset": 2554}, "extra": {"engine_kind": "OSS", "fingerprint": "ae6d814eb758bc3048d03005d2e3d8a134d9c9a9c0c6e5c3b7c721d9695395af67795a7801737aa193202134ae669ffd4481d03cf373796110cd9a9bba174d13_1", "is_ignored": false, "lines": "    strncpy(acStack_10c,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_10c", "end": {"col": 24, "line": 79, "offset": 2540}, "start": {"col": 13, "line": 79, "offset": 2529}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 37, "line": 79, "offset": 2553}, "start": {"col": 33, "line": 79, "offset": 2549}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 32, "line": 79, "offset": 2548}, "start": {"col": 25, "line": 79, "offset": 2541}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 5, "line": 79, "offset": 2521}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 38, "line": 79, "offset": 2554}, "extra": {"engine_kind": "OSS", "fingerprint": "ec82183216d366156f89297d4d63110078ec46d1c697f586ea3909fed6cd5ffbd50c18173ab180ca04ede65d4aeb73555bda4d45adab6de66fc0281ceb45c829_1", "is_ignored": false, "lines": "    strncpy(acStack_10c,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 79, "offset": 2528}, "start": {"col": 5, "line": 79, "offset": 2521}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c", "start": {"col": 5, "line": 79, "offset": 2521}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 44, "offset": 1110}, "extra": {"engine_kind": "OSS", "fingerprint": "46650d22e9eaea5925bef13256b7ec2199fa22b2fc5527f1cbcf5915953df00e5ff289f22635c3c04471d903e3b5e79bf41791e5d69a11b54e021cdaa25e8310_0", "is_ignored": false, "lines": "    strncpy(acStack_24,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 44, "offset": 1085}, "start": {"col": 5, "line": 44, "offset": 1078}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_addr_0040b690.c", "start": {"col": 5, "line": 44, "offset": 1078}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 44, "offset": 1110}, "extra": {"engine_kind": "OSS", "fingerprint": "36c8480bf85ba56c52876822502b663fd7fa9e5d93a441a76b7d55083085c2f4cdd00c23816edfae486c0b2bd5142f5d58e353a0292886f42ffa27c2998da4a8_0", "is_ignored": false, "lines": "    strncpy(acStack_24,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_24", "end": {"col": 23, "line": 44, "offset": 1096}, "start": {"col": 13, "line": 44, "offset": 1086}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 36, "line": 44, "offset": 1109}, "start": {"col": 32, "line": 44, "offset": 1105}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 31, "line": 44, "offset": 1104}, "start": {"col": 24, "line": 44, "offset": 1097}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_addr_0040b690.c", "start": {"col": 5, "line": 44, "offset": 1078}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 37, "line": 44, "offset": 1110}, "extra": {"engine_kind": "OSS", "fingerprint": "981bdcdd5752192c5f2b42d3bf9407ded69c56097abeec6b85ca5a2c720a70201fc8116126d8f6fb19cbf340bece96cb666181ad44f33f3fc1ca64cbc48f92a2_0", "is_ignored": false, "lines": "    strncpy(acStack_24,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 44, "offset": 1085}, "start": {"col": 5, "line": 44, "offset": 1078}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_addr_0040b690.c", "start": {"col": 5, "line": 44, "offset": 1078}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 66, "line": 31, "offset": 704}, "extra": {"engine_kind": "OSS", "fingerprint": "09137cd5886c72205a0f0fb8d115e439a1eef927ba5215ca1aef84e2141804572d4eab736dd4edf31f9407e87707584850aa0b2d63a46b9424454f5e931db33a_0", "is_ignored": false, "lines": "        memcpy(param_2 + 2,*phVar5->h_addr_list,phVar5->h_length);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 15, "line": 31, "offset": 653}, "start": {"col": 9, "line": 31, "offset": 647}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_inet_0040b43c.c", "start": {"col": 9, "line": 31, "offset": 647}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 39, "line": 32, "offset": 744}, "extra": {"engine_kind": "OSS", "fingerprint": "3a418392cf5c0a455c8a4f1b5778687f965d0f1a0ebe6c3fea496faa88eaa9b9d1e3663bc90babe620e8ce2e3e5dc4d488977a55f39083ef5dad9edeac183385_0", "is_ignored": false, "lines": "        strcpy(param_1,phVar5->h_name);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_inet_0040b43c.c", "start": {"col": 9, "line": 32, "offset": 714}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 32, "offset": 744}, "extra": {"engine_kind": "OSS", "fingerprint": "a81ae5b18656a29aa52c820ae9726906561ae130bd367b411c485b11131fc03c0b7807c4e623c1607652062bd241ebcacd8544a405fb9d46883f4dec0a0b6d99_0", "is_ignored": false, "lines": "        strcpy(param_1,phVar5->h_name);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 15, "line": 32, "offset": 720}, "start": {"col": 9, "line": 32, "offset": 714}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_inet_0040b43c.c", "start": {"col": 9, "line": 32, "offset": 714}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 37, "line": 39, "offset": 904}, "extra": {"engine_kind": "OSS", "fingerprint": "3a418392cf5c0a455c8a4f1b5778687f965d0f1a0ebe6c3fea496faa88eaa9b9d1e3663bc90babe620e8ce2e3e5dc4d488977a55f39083ef5dad9edeac183385_1", "is_ignored": false, "lines": "      strcpy(param_1,pnVar3->n_name);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_inet_0040b43c.c", "start": {"col": 7, "line": 39, "offset": 874}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 39, "offset": 904}, "extra": {"engine_kind": "OSS", "fingerprint": "a81ae5b18656a29aa52c820ae9726906561ae130bd367b411c485b11131fc03c0b7807c4e623c1607652062bd241ebcacd8544a405fb9d46883f4dec0a0b6d99_1", "is_ignored": false, "lines": "      strcpy(param_1,pnVar3->n_name);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 13, "line": 39, "offset": 880}, "start": {"col": 7, "line": 39, "offset": 874}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_inet_0040b43c.c", "start": {"col": 7, "line": 39, "offset": 874}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 17, "line": 2, "offset": 17}, "extra": {"engine_kind": "OSS", "fingerprint": "c2f09d0516ad52cf7237f30bb3334a414a4219fd8b89e2fdf24c2ea21fef326321d1287309e57e385244bd5a254fd27c1cc1f5d5d49e32adccefbb23059e7752_0", "is_ignored": false, "lines": "size_t iw_in_key(char *param_1,void *param_2)", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$FUN": {"abstract_content": "iw_in_key", "end": {"col": 17, "line": 2, "offset": 17}, "start": {"col": 8, "line": 2, "offset": 8}}, "$SIGNED": {"abstract_content": "0xffffffff", "end": {"col": 28, "line": 41, "offset": 999}, "start": {"col": 18, "line": 41, "offset": 989}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c", "start": {"col": 8, "line": 2, "offset": 8}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 15, "line": 16, "offset": 251}, "extra": {"engine_kind": "OSS", "fingerprint": "ce0543c70525df6b2c4518f5346e5246b08501213640fda949ddf7b5b4534f8e946f8084c0ebf76f550edfc3e83b19281d5703da4e2bb69ca475adbe238f316b_0", "is_ignored": false, "lines": "  local_60 = 0;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0", "end": {"col": 15, "line": 16, "offset": 251}, "start": {"col": 14, "line": 16, "offset": 250}}, "$UNSIGNED": {"abstract_content": "local_60", "end": {"col": 11, "line": 16, "offset": 247}, "start": {"col": 3, "line": 16, "offset": 239}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c", "start": {"col": 3, "line": 16, "offset": 239}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 35, "line": 19, "offset": 342}, "extra": {"engine_kind": "OSS", "fingerprint": "faab08c3f057563d45db525ec7720475ba84672d461bbf023549a09b2df8b5c0d4e1dca328238dabc19fef3d4a1c0e00ab798d2eac55c1833b843c1ec3b88301_0", "is_ignored": false, "lines": "    local_60 = strlen(param_1 + 2);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "2", "end": {"col": 34, "line": 19, "offset": 341}, "start": {"col": 33, "line": 19, "offset": 340}}, "$UNSIGNED": {"abstract_content": "local_60", "end": {"col": 13, "line": 19, "offset": 320}, "start": {"col": 5, "line": 19, "offset": 312}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c", "start": {"col": 5, "line": 19, "offset": 312}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 22, "line": 21, "offset": 397}, "extra": {"engine_kind": "OSS", "fingerprint": "b4b886f2da424b0722aec6840476e473b77129a8e21cae96dff79355ab1a56f00a1df83cb7c3dc5ebd4e0dffd726139249e245a7ba6400782ae371b62a7d2d9f_0", "is_ignored": false, "lines": "      local_60 = 0x40;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0x40", "end": {"col": 22, "line": 21, "offset": 397}, "start": {"col": 18, "line": 21, "offset": 393}}, "$UNSIGNED": {"abstract_content": "local_60", "end": {"col": 15, "line": 21, "offset": 390}, "start": {"col": 7, "line": 21, "offset": 382}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c", "start": {"col": 7, "line": 21, "offset": 382}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 23, "offset": 445}, "extra": {"engine_kind": "OSS", "fingerprint": "bcbf2a951180ac6c2956ecacbf2ac1fccabd67279fe952691c6703821d1d5f57ed451438b8fbfc0e50a886ddef345ae2ac03cd216cfeda5a8a6ed1282b808e4d_0", "is_ignored": false, "lines": "    memcpy(param_2,param_1 + 2,local_60);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 23, "offset": 415}, "start": {"col": 5, "line": 23, "offset": 409}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c", "start": {"col": 5, "line": 23, "offset": 409}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 50, "line": 28, "offset": 568}, "extra": {"engine_kind": "OSS", "fingerprint": "faab08c3f057563d45db525ec7720475ba84672d461bbf023549a09b2df8b5c0d4e1dca328238dabc19fef3d4a1c0e00ab798d2eac55c1833b843c1ec3b88301_1", "is_ignored": false, "lines": "      local_60 = iw_pass_key(param_1 + 2,param_2);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "2", "end": {"col": 41, "line": 28, "offset": 559}, "start": {"col": 40, "line": 28, "offset": 558}}, "$UNSIGNED": {"abstract_content": "local_60", "end": {"col": 15, "line": 28, "offset": 533}, "start": {"col": 7, "line": 28, "offset": 525}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c", "start": {"col": 7, "line": 28, "offset": 525}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 72, "line": 39, "offset": 942}, "extra": {"engine_kind": "OSS", "fingerprint": "9b40337d2c8c2c31f971802a59825f2e86fdb0a4e8700ee30d72e60b5b5f773eaa3508cd4f86220906073300107cd318082aba359ed2d808f8c7b36cd5e9d774_0", "is_ignored": false, "lines": "        local_54 = sscanf(local_5c,\"%1X%1X\",&local_50,&local_4c,puVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 26, "line": 39, "offset": 896}, "start": {"col": 20, "line": 39, "offset": 890}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c", "start": {"col": 20, "line": 39, "offset": 890}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 32, "line": 53, "offset": 1300}, "extra": {"engine_kind": "OSS", "fingerprint": "f368e2674962c369a5cc76b035bfd0614bd4948450b35b3d3df4cb51d42e8d951ee6df795698b57b5f2144ce16b972c49e7bb4a375d3660e2c00020a1ab7f9f0_0", "is_ignored": false, "lines": "        local_60 = local_60 + 1;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "1", "end": {"col": 32, "line": 53, "offset": 1300}, "start": {"col": 31, "line": 53, "offset": 1299}}, "$UNSIGNED": {"abstract_content": "local_60", "end": {"col": 17, "line": 53, "offset": 1285}, "start": {"col": 9, "line": 53, "offset": 1277}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c", "start": {"col": 9, "line": 53, "offset": 1277}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 42, "line": 57, "offset": 1432}, "extra": {"engine_kind": "OSS", "fingerprint": "bcbf2a951180ac6c2956ecacbf2ac1fccabd67279fe952691c6703821d1d5f57ed451438b8fbfc0e50a886ddef345ae2ac03cd216cfeda5a8a6ed1282b808e4d_1", "is_ignored": false, "lines": "      memcpy(param_2,auStack_48,local_60);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 57, "offset": 1403}, "start": {"col": 7, "line": 57, "offset": 1397}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c", "start": {"col": 7, "line": 57, "offset": 1397}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 15, "offset": 340}, "extra": {"engine_kind": "OSS", "fingerprint": "ff951bde5a97e6a350c4f72b71bf1ff86386653ecbbfb4ef4222e4f9b8d8fcc4bdc67184b1b5f39252cc6c09ffe7c943030548daf5a312ea7fb7d8e1bfa75df7_0", "is_ignored": false, "lines": "    local_260 = strlen(param_3 + 2);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "2", "end": {"col": 35, "line": 15, "offset": 339}, "start": {"col": 34, "line": 15, "offset": 338}}, "$UNSIGNED": {"abstract_content": "local_260", "end": {"col": 14, "line": 15, "offset": 318}, "start": {"col": 5, "line": 15, "offset": 309}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_key_full_0040977c.c", "start": {"col": 5, "line": 15, "offset": 309}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 16, "offset": 371}, "extra": {"engine_kind": "OSS", "fingerprint": "233db1c619ed2ad381790a80265f32f7990440715935362c7e5e9463aba9cc235035a45554e7275c1a4aa2657e943da2c3f6ee07bacb1f262b1ea1f1adeb982e_0", "is_ignored": false, "lines": "    local_260 = local_260 + 1;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "1", "end": {"col": 30, "line": 16, "offset": 371}, "start": {"col": 29, "line": 16, "offset": 370}}, "$UNSIGNED": {"abstract_content": "local_260", "end": {"col": 14, "line": 16, "offset": 355}, "start": {"col": 5, "line": 16, "offset": 346}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_key_full_0040977c.c", "start": {"col": 5, "line": 16, "offset": 346}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 23, "line": 18, "offset": 428}, "extra": {"engine_kind": "OSS", "fingerprint": "970d5c9b9fb942a829fee6ec3f7060a6aa7f757bb983dc881fea93b2de188c2af96603654f097fa4f822ad6866fb192477d5b0d3eb58d4ece8153742bd2aba80_0", "is_ignored": false, "lines": "      local_260 = 0x40;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0x40", "end": {"col": 23, "line": 18, "offset": 428}, "start": {"col": 19, "line": 18, "offset": 424}}, "$UNSIGNED": {"abstract_content": "local_260", "end": {"col": 16, "line": 18, "offset": 421}, "start": {"col": 7, "line": 18, "offset": 412}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_key_full_0040977c.c", "start": {"col": 7, "line": 18, "offset": 412}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 42, "line": 20, "offset": 477}, "extra": {"engine_kind": "OSS", "fingerprint": "ad646e0daf5364f54b8673cd50830728e430418b14aa6b5da572b3f58b2e716daf4ace60e71447996a09126b2d0c97a63d9195f2ae9a8f17fc44b44f962e0288_0", "is_ignored": false, "lines": "    memcpy(param_4,param_3 + 2,local_260);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 20, "offset": 446}, "start": {"col": 5, "line": 20, "offset": 440}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_key_full_0040977c.c", "start": {"col": 5, "line": 20, "offset": 440}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 29, "line": 24, "offset": 636}, "extra": {"engine_kind": "OSS", "fingerprint": "bf7358c344d55b465842bc46ae5cd16dc35ffe467988c970b35b190fcb050665f7cb3c5069715dc62919a8f6b539dba2e6e10fa05eb7e37e89278e74f5f93a80_0", "is_ignored": false, "lines": "      local_260 = 0xffffffff;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0xffffffff", "end": {"col": 29, "line": 24, "offset": 636}, "start": {"col": 19, "line": 24, "offset": 626}}, "$UNSIGNED": {"abstract_content": "local_260", "end": {"col": 16, "line": 24, "offset": 623}, "start": {"col": 7, "line": 24, "offset": 614}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_key_full_0040977c.c", "start": {"col": 7, "line": 24, "offset": 614}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 30, "offset": 797}, "extra": {"engine_kind": "OSS", "fingerprint": "27d59689910b43ff3962f78044000ff820b4f67bc829150599d9a55c200059e15f33d818ceef1f88c68a94964b522a21b18ab4f786643a9dfa6d5f7a28e8b24c_0", "is_ignored": false, "lines": "        memset(auStack_258,0,0x24c);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 29, "line": 30, "offset": 790}, "start": {"col": 28, "line": 30, "offset": 789}}, "$DST": {"abstract_content": "auStack_258", "end": {"col": 27, "line": 30, "offset": 788}, "start": {"col": 16, "line": 30, "offset": 777}}, "$LEN": {"abstract_content": "0x24c", "end": {"col": 35, "line": 30, "offset": 796}, "start": {"col": 30, "line": 30, "offset": 791}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_key_full_0040977c.c", "start": {"col": 9, "line": 30, "offset": 770}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 40, "line": 37, "offset": 1081}, "extra": {"engine_kind": "OSS", "fingerprint": "27d59689910b43ff3962f78044000ff820b4f67bc829150599d9a55c200059e15f33d818ceef1f88c68a94964b522a21b18ab4f786643a9dfa6d5f7a28e8b24c_1", "is_ignored": false, "lines": "            memset(auStack_258,0,0x24c);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 33, "line": 37, "offset": 1074}, "start": {"col": 32, "line": 37, "offset": 1073}}, "$DST": {"abstract_content": "auStack_258", "end": {"col": 31, "line": 37, "offset": 1072}, "start": {"col": 20, "line": 37, "offset": 1061}}, "$LEN": {"abstract_content": "0x24c", "end": {"col": 39, "line": 37, "offset": 1080}, "start": {"col": 34, "line": 37, "offset": 1075}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_in_key_full_0040977c.c", "start": {"col": 13, "line": 37, "offset": 1054}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 70, "line": 17, "offset": 337}, "extra": {"engine_kind": "OSS", "fingerprint": "73145d262338b3f2fbd7ef1bbe77f72f2c6d68d30b1721b5316332e106687d3163a2ca10d9dc3011d3f98d2903897a055d8213a1f2b35daacf8e8f4fc303b6bb_0", "is_ignored": false, "lines": "         (iVar1 = sscanf(local_20,\"%1X%1X\",&local_14,local_10,puVar3), iVar1 == 2))) {", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 25, "line": 17, "offset": 292}, "start": {"col": 19, "line": 17, "offset": 286}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_mac_aton_0040b1b8.c", "start": {"col": 19, "line": 17, "offset": 286}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 56, "line": 11, "offset": 221}, "extra": {"engine_kind": "OSS", "fingerprint": "4ff032b1c718ddd73e558fb41979ffbbb0f54994bfc0563c34c8c4303c206de16438233b6d59631b4ce492fbefd22c19d1c8307a822500925f639fc74763b362_0", "is_ignored": false, "lines": "    sprintf(param_3,\"%02X\",(uint)*param_1,param_4,&_gp);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 12, "line": 11, "offset": 177}, "start": {"col": 5, "line": 11, "offset": 170}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_mac_ntop_0040ace4.c", "start": {"col": 5, "line": 11, "offset": 170}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 75, "line": 13, "offset": 367}, "extra": {"engine_kind": "OSS", "fingerprint": "4ff032b1c718ddd73e558fb41979ffbbb0f54994bfc0563c34c8c4303c206de16438233b6d59631b4ce492fbefd22c19d1c8307a822500925f639fc74763b362_1", "is_ignored": false, "lines": "      sprintf(param_3 + local_10 * 3 + -1,\":%02X\",(uint)param_1[local_10]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 14, "line": 13, "offset": 306}, "start": {"col": 7, "line": 13, "offset": 299}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_mac_ntop_0040ace4.c", "start": {"col": 7, "line": 13, "offset": 299}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 24, "offset": 490}, "extra": {"engine_kind": "OSS", "fingerprint": "05cd0681a5839a97c62ae4770855f96e433f2737a5d8856735afd5ad263659c49c8934f92f592055cc8f91178a8f7199a1d7af37855e05c2f1f7d0a60ff0c6c0_0", "is_ignored": false, "lines": "  snprintf(param_3,param_4,\"%g %cb/s\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 11, "line": 24, "offset": 462}, "start": {"col": 3, "line": 24, "offset": 454}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_bitrate_00407ce4.c", "start": {"col": 3, "line": 24, "offset": 454}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 66, "line": 21, "offset": 537}, "extra": {"engine_kind": "OSS", "fingerprint": "d08f929e67da2b4d210b0f1f9785d70b6245b2dec75d9c2c38f85b82c858f2465ce33dd0f24177e7e21c6c4b656dce2ed8496dd1651b2889eb2967d2f3474f08_0", "is_ignored": false, "lines": "    snprintf(param_3,param_4,\"Channel%c%s\",(int)cVar1,auStack_24);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 13, "line": 21, "offset": 484}, "start": {"col": 5, "line": 21, "offset": 476}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_freq_00407810.c", "start": {"col": 5, "line": 21, "offset": 476}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 68, "line": 24, "offset": 636}, "extra": {"engine_kind": "OSS", "fingerprint": "d08f929e67da2b4d210b0f1f9785d70b6245b2dec75d9c2c38f85b82c858f2465ce33dd0f24177e7e21c6c4b656dce2ed8496dd1651b2889eb2967d2f3474f08_1", "is_ignored": false, "lines": "    snprintf(param_3,param_4,\"Frequency%c%s\",(int)cVar1,auStack_24);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 13, "line": 24, "offset": 581}, "start": {"col": 5, "line": 24, "offset": 573}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_freq_00407810.c", "start": {"col": 5, "line": 24, "offset": 573}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 96, "line": 27, "offset": 746}, "extra": {"engine_kind": "OSS", "fingerprint": "d08f929e67da2b4d210b0f1f9785d70b6245b2dec75d9c2c38f85b82c858f2465ce33dd0f24177e7e21c6c4b656dce2ed8496dd1651b2889eb2967d2f3474f08_2", "is_ignored": false, "lines": "    snprintf(param_3,param_4,\"Frequency%c%s (Channel %d)\",(int)cVar1,auStack_24,param_5,puVar3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 13, "line": 27, "offset": 663}, "start": {"col": 5, "line": 27, "offset": 655}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_freq_00407810.c", "start": {"col": 5, "line": 27, "offset": 655}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 10, "offset": 221}, "extra": {"engine_kind": "OSS", "fingerprint": "e21695573b3e3fa7d55b4886fff0d12ce3935bcfdc756e933634a79ced76e870dbc13b891dbfc379b189011a2484c35c116891c33540f8f42c7064081efa4d06_0", "is_ignored": false, "lines": "    snprintf(param_3,param_4,\"%g\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 13, "line": 10, "offset": 199}, "start": {"col": 5, "line": 10, "offset": 191}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_freq_value_004075e8.c", "start": {"col": 5, "line": 10, "offset": 191}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 28, "offset": 589}, "extra": {"engine_kind": "OSS", "fingerprint": "e21695573b3e3fa7d55b4886fff0d12ce3935bcfdc756e933634a79ced76e870dbc13b891dbfc379b189011a2484c35c116891c33540f8f42c7064081efa4d06_1", "is_ignored": false, "lines": "    snprintf(param_3,param_4,\"%g %cHz\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 13, "line": 28, "offset": 562}, "start": {"col": 5, "line": 28, "offset": 554}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_freq_value_004075e8.c", "start": {"col": 5, "line": 28, "offset": 554}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 42, "line": 9, "offset": 208}, "extra": {"engine_kind": "OSS", "fingerprint": "8f1272aab6f517948c7b04eaa523a1ac4afb180fd87c5f98f0f1bcccaa72054ae5692c58400e5cde4a06c40fee76d51fc40d13307146de27de7ac738f53e2b7e_0", "is_ignored": false, "lines": "    snprintf(param_1,param_2,\"<too big>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 13, "line": 9, "offset": 179}, "start": {"col": 5, "line": 9, "offset": 171}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_key_004090b0.c", "start": {"col": 5, "line": 9, "offset": 171}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 56, "line": 12, "offset": 306}, "extra": {"engine_kind": "OSS", "fingerprint": "c573176387b7ae76a02efebddcf0000cf35b663cf05a4e5d3ee8b5e92763b2151fc4c48f582d4720b4f889ee5a1b318ff56770c6f7bfcec4b1ef92c36c197d17_0", "is_ignored": false, "lines": "    sprintf(param_1,\"%.2X\",(uint)*param_3,param_4,&_gp);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 12, "line": 12, "offset": 262}, "start": {"col": 5, "line": 12, "offset": 255}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_key_004090b0.c", "start": {"col": 5, "line": 12, "offset": 255}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 20, "offset": 604}, "extra": {"engine_kind": "OSS", "fingerprint": "c573176387b7ae76a02efebddcf0000cf35b663cf05a4e5d3ee8b5e92763b2151fc4c48f582d4720b4f889ee5a1b318ff56770c6f7bfcec4b1ef92c36c197d17_1", "is_ignored": false, "lines": "      sprintf(local_res0,\"%.2X\",(uint)param_3[local_10]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 14, "line": 20, "offset": 561}, "start": {"col": 7, "line": 20, "offset": 554}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_key_004090b0.c", "start": {"col": 7, "line": 20, "offset": 554}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 63, "line": 6, "offset": 185}, "extra": {"engine_kind": "OSS", "fingerprint": "d492ba4de9771110e615603c69e0f8866a41b1f855cc95871825cdfe2add7f3c6e0a5c6f36e834b8b496dcc39609f51064796d4bbc86269165445a2cda162ff6_0", "is_ignored": false, "lines": "    snprintf((char *)param_1,param_2,\"<too big>\",param_4,&_gp);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 13, "line": 6, "offset": 135}, "start": {"col": 5, "line": 6, "offset": 127}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_pm_mode_00409fa4.c", "start": {"col": 5, "line": 6, "offset": 127}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 50, "line": 10, "offset": 291}, "extra": {"engine_kind": "OSS", "fingerprint": "78070c79d68e0aa08d9386e07b69e5aa6e336cbe51b67d8eec00affdfe8846f1bb027f1e46a8bba57f4e4815834a54d5afa33600f08c7f49ebb38f7c15356064_0", "is_ignored": false, "lines": "    snprintf((char *)param_3,param_4,\"<too big>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 13, "line": 10, "offset": 254}, "start": {"col": 5, "line": 10, "offset": 246}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_pm_value_00409ae0.c", "start": {"col": 5, "line": 10, "offset": 246}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 29, "line": 13, "offset": 334}, "extra": {"engine_kind": "OSS", "fingerprint": "91eb10423bcaf6ce17b993fe235fe1a28e8aadb579b2e955a08247bb19bbd4ce5a9f2211b5106326a5050a4d33489f334e7fee22226dd939a32136f8612fcd17_0", "is_ignored": false, "lines": "    param_4 = param_4 - 0x19;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0x19", "end": {"col": 29, "line": 13, "offset": 334}, "start": {"col": 25, "line": 13, "offset": 330}}, "$UNSIGNED": {"abstract_content": "param_4", "end": {"col": 12, "line": 13, "offset": 317}, "start": {"col": 5, "line": 13, "offset": 310}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_pm_value_00409ae0.c", "start": {"col": 5, "line": 13, "offset": 310}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 65, "line": 49, "offset": 1432}, "extra": {"engine_kind": "OSS", "fingerprint": "78070c79d68e0aa08d9386e07b69e5aa6e336cbe51b67d8eec00affdfe8846f1bb027f1e46a8bba57f4e4815834a54d5afa33600f08c7f49ebb38f7c15356064_1", "is_ignored": false, "lines": "          snprintf((char *)local_res0,param_4,\"%dus\",param_5_00);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 19, "line": 49, "offset": 1386}, "start": {"col": 11, "line": 49, "offset": 1378}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_pm_value_00409ae0.c", "start": {"col": 11, "line": 49, "offset": 1378}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 54, "line": 54, "offset": 1584}, "extra": {"engine_kind": "OSS", "fingerprint": "78070c79d68e0aa08d9386e07b69e5aa6e336cbe51b67d8eec00affdfe8846f1bb027f1e46a8bba57f4e4815834a54d5afa33600f08c7f49ebb38f7c15356064_2", "is_ignored": false, "lines": "          snprintf((char *)local_res0,param_4,\"%gms\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 19, "line": 54, "offset": 1549}, "start": {"col": 11, "line": 54, "offset": 1541}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_pm_value_00409ae0.c", "start": {"col": 11, "line": 54, "offset": 1541}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 51, "line": 60, "offset": 1735}, "extra": {"engine_kind": "OSS", "fingerprint": "78070c79d68e0aa08d9386e07b69e5aa6e336cbe51b67d8eec00affdfe8846f1bb027f1e46a8bba57f4e4815834a54d5afa33600f08c7f49ebb38f7c15356064_3", "is_ignored": false, "lines": "        snprintf((char *)local_res0,param_4,\"%gs\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 17, "line": 60, "offset": 1701}, "start": {"col": 9, "line": 60, "offset": 1693}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_pm_value_00409ae0.c", "start": {"col": 9, "line": 60, "offset": 1693}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 59, "line": 70, "offset": 1996}, "extra": {"engine_kind": "OSS", "fingerprint": "78070c79d68e0aa08d9386e07b69e5aa6e336cbe51b67d8eec00affdfe8846f1bb027f1e46a8bba57f4e4815834a54d5afa33600f08c7f49ebb38f7c15356064_4", "is_ignored": false, "lines": "      snprintf((char *)local_res0,param_4,\"%d\",local_res8);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 15, "line": 70, "offset": 1952}, "start": {"col": 7, "line": 70, "offset": 1944}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_pm_value_00409ae0.c", "start": {"col": 7, "line": 70, "offset": 1944}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 50, "line": 12, "offset": 316}, "extra": {"engine_kind": "OSS", "fingerprint": "d767e93022cdfae0a0306f3fc605f41e48f963bb3544cbaa82e29ef4cb3cc7b999d18c18995ae38de3c45b63b3f38760842c92cca8bb12f9c18eb28201eb04b5_0", "is_ignored": false, "lines": "    snprintf((char *)param_3,param_4,\"<too big>\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 13, "line": 12, "offset": 279}, "start": {"col": 5, "line": 12, "offset": 271}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_retry_value_0040a430.c", "start": {"col": 5, "line": 12, "offset": 271}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 29, "line": 15, "offset": 359}, "extra": {"engine_kind": "OSS", "fingerprint": "64ce93dba6002b5f4921a7eb6fecabfd618a81d5dcee8f2dad459b4c306d88218aff38e37ba7694c292cf877639fd442685a654e34447950940f1f3a73c5f0e8_0", "is_ignored": false, "lines": "    param_4 = param_4 - 0x14;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0x14", "end": {"col": 29, "line": 15, "offset": 359}, "start": {"col": 25, "line": 15, "offset": 355}}, "$UNSIGNED": {"abstract_content": "param_4", "end": {"col": 12, "line": 15, "offset": 342}, "start": {"col": 5, "line": 15, "offset": 335}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_retry_value_0040a430.c", "start": {"col": 5, "line": 15, "offset": 335}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 66, "line": 42, "offset": 1278}, "extra": {"engine_kind": "OSS", "fingerprint": "d767e93022cdfae0a0306f3fc605f41e48f963bb3544cbaa82e29ef4cb3cc7b999d18c18995ae38de3c45b63b3f38760842c92cca8bb12f9c18eb28201eb04b5_1", "is_ignored": false, "lines": "      snprintf((char *)local_res0,param_4,\" limit:%d\",param_5_00);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 15, "line": 42, "offset": 1227}, "start": {"col": 7, "line": 42, "offset": 1219}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_retry_value_0040a430.c", "start": {"col": 7, "line": 42, "offset": 1219}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 52, "line": 54, "offset": 1690}, "extra": {"engine_kind": "OSS", "fingerprint": "d767e93022cdfae0a0306f3fc605f41e48f963bb3544cbaa82e29ef4cb3cc7b999d18c18995ae38de3c45b63b3f38760842c92cca8bb12f9c18eb28201eb04b5_2", "is_ignored": false, "lines": "            snprintf(__s,param_4,\"%dus\",param_5_00);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 21, "line": 54, "offset": 1659}, "start": {"col": 13, "line": 54, "offset": 1651}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_retry_value_0040a430.c", "start": {"col": 13, "line": 54, "offset": 1651}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 59, "offset": 1837}, "extra": {"engine_kind": "OSS", "fingerprint": "d767e93022cdfae0a0306f3fc605f41e48f963bb3544cbaa82e29ef4cb3cc7b999d18c18995ae38de3c45b63b3f38760842c92cca8bb12f9c18eb28201eb04b5_3", "is_ignored": false, "lines": "            snprintf(__s,param_4,\"%gms\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 21, "line": 59, "offset": 1817}, "start": {"col": 13, "line": 59, "offset": 1809}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_retry_value_0040a430.c", "start": {"col": 13, "line": 59, "offset": 1809}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 65, "offset": 1985}, "extra": {"engine_kind": "OSS", "fingerprint": "d767e93022cdfae0a0306f3fc605f41e48f963bb3544cbaa82e29ef4cb3cc7b999d18c18995ae38de3c45b63b3f38760842c92cca8bb12f9c18eb28201eb04b5_4", "is_ignored": false, "lines": "          snprintf(__s,param_4,\"%gs\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 19, "line": 65, "offset": 1966}, "start": {"col": 11, "line": 65, "offset": 1958}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_retry_value_0040a430.c", "start": {"col": 11, "line": 65, "offset": 1958}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 46, "line": 75, "offset": 2251}, "extra": {"engine_kind": "OSS", "fingerprint": "d767e93022cdfae0a0306f3fc605f41e48f963bb3544cbaa82e29ef4cb3cc7b999d18c18995ae38de3c45b63b3f38760842c92cca8bb12f9c18eb28201eb04b5_5", "is_ignored": false, "lines": "        snprintf(__s,param_4,\"%d\",local_res8);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 17, "line": 75, "offset": 2222}, "start": {"col": 9, "line": 75, "offset": 2214}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_retry_value_0040a430.c", "start": {"col": 9, "line": 75, "offset": 2214}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 54, "line": 17, "offset": 520}, "extra": {"engine_kind": "OSS", "fingerprint": "ab793d6e2a20c870d6d8826183ebf27e46fbc21963a920a05dacd66ed813e9b2766ca61e221dfff2c5bd2452005f77f33b93b28e9449b2c5b1d31a9ed73d6d6c_0", "is_ignored": false, "lines": "    snprintf(param_3,param_4,\"Quality:%d  Signal level:%d  Noise level:%d\",(uint)*param_5_00,\n             (uint)param_5_00[1],(uint)param_5_00[2]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 13, "line": 16, "offset": 385}, "start": {"col": 5, "line": 16, "offset": 377}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 5, "line": 16, "offset": 377}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 56, "line": 30, "offset": 875}, "extra": {"engine_kind": "OSS", "fingerprint": "c0b549e8a8029050194e61cfeaf0185c06d8c176fd27970884bc451d6a1836cdb523e535a8d797222d1ba4a4e4a4b42b1abb2d1e50b0412681120d8c5ed2e23e_0", "is_ignored": false, "lines": "      iVar2 = snprintf(param_3,param_4,\"Quality%c%d/%d  \",uVar1,(uint)*param_5_00,\n                       (uint)*(byte *)(param_6 + 0x2c));", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar2", "end": {"col": 12, "line": 29, "offset": 748}, "start": {"col": 7, "line": 29, "offset": 743}}, "$UNSIGNED": {"abstract_content": "param_4", "end": {"col": 39, "line": 29, "offset": 775}, "start": {"col": 32, "line": 29, "offset": 768}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 7, "line": 29, "offset": 743}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unsafe-ret-snprintf-vsnprintf", "end": {"col": 56, "line": 30, "offset": 875}, "extra": {"engine_kind": "OSS", "fingerprint": "244ae21b262eabf652b6322c834ca153769e134549046806895075b4c4ae0efee5dccc4741e243164639485ef9844bf6060e533aaebc63efbc4a52ad5ed1ffef_0", "is_ignored": false, "lines": "      iVar2 = snprintf(param_3,param_4,\"Quality%c%d/%d  \",uVar1,(uint)*param_5_00,\n                       (uint)*(byte *)(param_6 + 0x2c));", "message": "The snprintf() and vsnprintf() functions return the total length of the string they tried to create. Therefore, this return value can be larger than the size of the destination buffer. If it is used unsafely, e.g. as an index to write to the destination buffer, memory corruption might occur.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://lwn.net/Articles/507319/", "https://g.co/kgs/PCHQjJ", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$RET": {"abstract_content": "iVar2", "end": {"col": 12, "line": 29, "offset": 748}, "start": {"col": 7, "line": 29, "offset": 743}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 7, "line": 29, "offset": 743}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 56, "line": 30, "offset": 875}, "extra": {"engine_kind": "OSS", "fingerprint": "ab793d6e2a20c870d6d8826183ebf27e46fbc21963a920a05dacd66ed813e9b2766ca61e221dfff2c5bd2452005f77f33b93b28e9449b2c5b1d31a9ed73d6d6c_1", "is_ignored": false, "lines": "      iVar2 = snprintf(param_3,param_4,\"Quality%c%d/%d  \",uVar1,(uint)*param_5_00,\n                       (uint)*(byte *)(param_6 + 0x2c));", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 23, "line": 29, "offset": 759}, "start": {"col": 15, "line": 29, "offset": 751}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 15, "line": 29, "offset": 751}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 35, "line": 32, "offset": 947}, "extra": {"engine_kind": "OSS", "fingerprint": "c96a631d6fcbe5fd1c6eb510ff3c54064f07686d4f50c6ceec160b1a362d4bcc910441f70a07f8d93e9b0ef7d98ea0d65dc1e306dc162d71adeb72ed4af50c23_0", "is_ignored": false, "lines": "      local_res4 = param_4 - iVar2;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar2", "end": {"col": 35, "line": 32, "offset": 947}, "propagated_value": {"svalue_abstract_content": "snprintf(param_3 param_4\"Quality%c%d/%d  \"uVar1 uint*param_5_00 uint*byte*param_6+0x2c)", "svalue_end": {"col": 56, "line": 30, "offset": 875}, "svalue_start": {"col": 15, "line": 29, "offset": 751}}, "start": {"col": 30, "line": 32, "offset": 942}}, "$UNSIGNED": {"abstract_content": "local_res4", "end": {"col": 17, "line": 32, "offset": 929}, "start": {"col": 7, "line": 32, "offset": 919}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 7, "line": 32, "offset": 919}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 92, "line": 47, "offset": 1413}, "extra": {"engine_kind": "OSS", "fingerprint": "c96a631d6fcbe5fd1c6eb510ff3c54064f07686d4f50c6ceec160b1a362d4bcc910441f70a07f8d93e9b0ef7d98ea0d65dc1e306dc162d71adeb72ed4af50c23_1", "is_ignored": false, "lines": "        iVar2 = snprintf(local_res0,local_res4,\"Signal level%c%g dBm  \",uVar1,pcVar4,uVar3);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar2", "end": {"col": 14, "line": 47, "offset": 1335}, "start": {"col": 9, "line": 47, "offset": 1330}}, "$UNSIGNED": {"abstract_content": "local_res4", "end": {"col": 47, "line": 47, "offset": 1368}, "start": {"col": 37, "line": 47, "offset": 1358}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 9, "line": 47, "offset": 1330}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unsafe-ret-snprintf-vsnprintf", "end": {"col": 92, "line": 47, "offset": 1413}, "extra": {"engine_kind": "OSS", "fingerprint": "244ae21b262eabf652b6322c834ca153769e134549046806895075b4c4ae0efee5dccc4741e243164639485ef9844bf6060e533aaebc63efbc4a52ad5ed1ffef_1", "is_ignored": false, "lines": "        iVar2 = snprintf(local_res0,local_res4,\"Signal level%c%g dBm  \",uVar1,pcVar4,uVar3);", "message": "The snprintf() and vsnprintf() functions return the total length of the string they tried to create. Therefore, this return value can be larger than the size of the destination buffer. If it is used unsafely, e.g. as an index to write to the destination buffer, memory corruption might occur.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://lwn.net/Articles/507319/", "https://g.co/kgs/PCHQjJ", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$RET": {"abstract_content": "iVar2", "end": {"col": 14, "line": 47, "offset": 1335}, "start": {"col": 9, "line": 47, "offset": 1330}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 9, "line": 47, "offset": 1330}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 92, "line": 47, "offset": 1413}, "extra": {"engine_kind": "OSS", "fingerprint": "ab793d6e2a20c870d6d8826183ebf27e46fbc21963a920a05dacd66ed813e9b2766ca61e221dfff2c5bd2452005f77f33b93b28e9449b2c5b1d31a9ed73d6d6c_2", "is_ignored": false, "lines": "        iVar2 = snprintf(local_res0,local_res4,\"Signal level%c%g dBm  \",uVar1,pcVar4,uVar3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 25, "line": 47, "offset": 1346}, "start": {"col": 17, "line": 47, "offset": 1338}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 17, "line": 47, "offset": 1338}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 40, "line": 49, "offset": 1495}, "extra": {"engine_kind": "OSS", "fingerprint": "c96a631d6fcbe5fd1c6eb510ff3c54064f07686d4f50c6ceec160b1a362d4bcc910441f70a07f8d93e9b0ef7d98ea0d65dc1e306dc162d71adeb72ed4af50c23_2", "is_ignored": false, "lines": "        local_res4 = local_res4 - iVar2;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar2", "end": {"col": 40, "line": 49, "offset": 1495}, "propagated_value": {"svalue_abstract_content": "snprintf(local_res0 local_res4\"Signal level%c%g dBm  \"uVar1 pcVar4 uVar3)", "svalue_end": {"col": 92, "line": 47, "offset": 1413}, "svalue_start": {"col": 17, "line": 47, "offset": 1338}}, "start": {"col": 35, "line": 49, "offset": 1490}}, "$UNSIGNED": {"abstract_content": "local_res4", "end": {"col": 19, "line": 49, "offset": 1474}, "start": {"col": 9, "line": 49, "offset": 1464}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 9, "line": 49, "offset": 1464}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 81, "line": 63, "offset": 1914}, "extra": {"engine_kind": "OSS", "fingerprint": "ab793d6e2a20c870d6d8826183ebf27e46fbc21963a920a05dacd66ed813e9b2766ca61e221dfff2c5bd2452005f77f33b93b28e9449b2c5b1d31a9ed73d6d6c_3", "is_ignored": false, "lines": "        snprintf(local_res0,local_res4,\"Noise level%c%g dBm\",uVar1,pcVar4,uVar3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 17, "line": 63, "offset": 1850}, "start": {"col": 9, "line": 63, "offset": 1842}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 9, "line": 63, "offset": 1842}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 58, "line": 75, "offset": 2340}, "extra": {"engine_kind": "OSS", "fingerprint": "c96a631d6fcbe5fd1c6eb510ff3c54064f07686d4f50c6ceec160b1a362d4bcc910441f70a07f8d93e9b0ef7d98ea0d65dc1e306dc162d71adeb72ed4af50c23_3", "is_ignored": false, "lines": "        iVar2 = snprintf(local_res0,local_res4,\"Signal level%c%d/%d  \",uVar1,(uint)param_5_00[1],\n                         (uint)*(byte *)(param_6 + 0x2d));", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar2", "end": {"col": 14, "line": 74, "offset": 2198}, "start": {"col": 9, "line": 74, "offset": 2193}}, "$UNSIGNED": {"abstract_content": "local_res4", "end": {"col": 47, "line": 74, "offset": 2231}, "start": {"col": 37, "line": 74, "offset": 2221}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 9, "line": 74, "offset": 2193}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unsafe-ret-snprintf-vsnprintf", "end": {"col": 58, "line": 75, "offset": 2340}, "extra": {"engine_kind": "OSS", "fingerprint": "244ae21b262eabf652b6322c834ca153769e134549046806895075b4c4ae0efee5dccc4741e243164639485ef9844bf6060e533aaebc63efbc4a52ad5ed1ffef_2", "is_ignored": false, "lines": "        iVar2 = snprintf(local_res0,local_res4,\"Signal level%c%d/%d  \",uVar1,(uint)param_5_00[1],\n                         (uint)*(byte *)(param_6 + 0x2d));", "message": "The snprintf() and vsnprintf() functions return the total length of the string they tried to create. Therefore, this return value can be larger than the size of the destination buffer. If it is used unsafely, e.g. as an index to write to the destination buffer, memory corruption might occur.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://lwn.net/Articles/507319/", "https://g.co/kgs/PCHQjJ", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$RET": {"abstract_content": "iVar2", "end": {"col": 14, "line": 74, "offset": 2198}, "start": {"col": 9, "line": 74, "offset": 2193}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 9, "line": 74, "offset": 2193}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 75, "offset": 2340}, "extra": {"engine_kind": "OSS", "fingerprint": "ab793d6e2a20c870d6d8826183ebf27e46fbc21963a920a05dacd66ed813e9b2766ca61e221dfff2c5bd2452005f77f33b93b28e9449b2c5b1d31a9ed73d6d6c_4", "is_ignored": false, "lines": "        iVar2 = snprintf(local_res0,local_res4,\"Signal level%c%d/%d  \",uVar1,(uint)param_5_00[1],\n                         (uint)*(byte *)(param_6 + 0x2d));", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 25, "line": 74, "offset": 2209}, "start": {"col": 17, "line": 74, "offset": 2201}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 17, "line": 74, "offset": 2201}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 40, "line": 77, "offset": 2422}, "extra": {"engine_kind": "OSS", "fingerprint": "c96a631d6fcbe5fd1c6eb510ff3c54064f07686d4f50c6ceec160b1a362d4bcc910441f70a07f8d93e9b0ef7d98ea0d65dc1e306dc162d71adeb72ed4af50c23_4", "is_ignored": false, "lines": "        local_res4 = local_res4 - iVar2;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar2", "end": {"col": 40, "line": 77, "offset": 2422}, "propagated_value": {"svalue_abstract_content": "snprintf(local_res0 local_res4\"Signal level%c%d/%d  \"uVar1 uint param_5_00[1]uint*byte*param_6+0x2d)", "svalue_end": {"col": 58, "line": 75, "offset": 2340}, "svalue_start": {"col": 17, "line": 74, "offset": 2201}}, "start": {"col": 35, "line": 77, "offset": 2417}}, "$UNSIGNED": {"abstract_content": "local_res4", "end": {"col": 19, "line": 77, "offset": 2401}, "start": {"col": 9, "line": 77, "offset": 2391}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 9, "line": 77, "offset": 2391}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 50, "line": 87, "offset": 2732}, "extra": {"engine_kind": "OSS", "fingerprint": "ab793d6e2a20c870d6d8826183ebf27e46fbc21963a920a05dacd66ed813e9b2766ca61e221dfff2c5bd2452005f77f33b93b28e9449b2c5b1d31a9ed73d6d6c_5", "is_ignored": false, "lines": "        snprintf(local_res0,local_res4,\"Noise level%c%d/%d\",uVar1,(uint)param_5_00[2],\n                 (uint)*(byte *)(param_6 + 0x2e));", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 17, "line": 86, "offset": 2612}, "start": {"col": 9, "line": 86, "offset": 2604}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 9, "line": 86, "offset": 2604}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 88, "line": 102, "offset": 3135}, "extra": {"engine_kind": "OSS", "fingerprint": "c96a631d6fcbe5fd1c6eb510ff3c54064f07686d4f50c6ceec160b1a362d4bcc910441f70a07f8d93e9b0ef7d98ea0d65dc1e306dc162d71adeb72ed4af50c23_5", "is_ignored": false, "lines": "        iVar2 = snprintf(local_res0,local_res4,\"Signal level%c%d dBm  \",uVar1,local_28);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar2", "end": {"col": 14, "line": 102, "offset": 3061}, "start": {"col": 9, "line": 102, "offset": 3056}}, "$UNSIGNED": {"abstract_content": "local_res4", "end": {"col": 47, "line": 102, "offset": 3094}, "start": {"col": 37, "line": 102, "offset": 3084}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 9, "line": 102, "offset": 3056}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unsafe-ret-snprintf-vsnprintf", "end": {"col": 88, "line": 102, "offset": 3135}, "extra": {"engine_kind": "OSS", "fingerprint": "244ae21b262eabf652b6322c834ca153769e134549046806895075b4c4ae0efee5dccc4741e243164639485ef9844bf6060e533aaebc63efbc4a52ad5ed1ffef_3", "is_ignored": false, "lines": "        iVar2 = snprintf(local_res0,local_res4,\"Signal level%c%d dBm  \",uVar1,local_28);", "message": "The snprintf() and vsnprintf() functions return the total length of the string they tried to create. Therefore, this return value can be larger than the size of the destination buffer. If it is used unsafely, e.g. as an index to write to the destination buffer, memory corruption might occur.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://lwn.net/Articles/507319/", "https://g.co/kgs/PCHQjJ", "https://dustri.org/b/playing-with-weggli.html"]}, "metavars": {"$RET": {"abstract_content": "iVar2", "end": {"col": 14, "line": 102, "offset": 3061}, "start": {"col": 9, "line": 102, "offset": 3056}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 9, "line": 102, "offset": 3056}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 88, "line": 102, "offset": 3135}, "extra": {"engine_kind": "OSS", "fingerprint": "ab793d6e2a20c870d6d8826183ebf27e46fbc21963a920a05dacd66ed813e9b2766ca61e221dfff2c5bd2452005f77f33b93b28e9449b2c5b1d31a9ed73d6d6c_6", "is_ignored": false, "lines": "        iVar2 = snprintf(local_res0,local_res4,\"Signal level%c%d dBm  \",uVar1,local_28);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 25, "line": 102, "offset": 3072}, "start": {"col": 17, "line": 102, "offset": 3064}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 17, "line": 102, "offset": 3064}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 40, "line": 104, "offset": 3217}, "extra": {"engine_kind": "OSS", "fingerprint": "c96a631d6fcbe5fd1c6eb510ff3c54064f07686d4f50c6ceec160b1a362d4bcc910441f70a07f8d93e9b0ef7d98ea0d65dc1e306dc162d71adeb72ed4af50c23_6", "is_ignored": false, "lines": "        local_res4 = local_res4 - iVar2;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar2", "end": {"col": 40, "line": 104, "offset": 3217}, "propagated_value": {"svalue_abstract_content": "snprintf(local_res0 local_res4\"Signal level%c%d dBm  \"uVar1 local_28)", "svalue_end": {"col": 88, "line": 102, "offset": 3135}, "svalue_start": {"col": 17, "line": 102, "offset": 3064}}, "start": {"col": 35, "line": 104, "offset": 3212}}, "$UNSIGNED": {"abstract_content": "local_res4", "end": {"col": 19, "line": 104, "offset": 3196}, "start": {"col": 9, "line": 104, "offset": 3186}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 9, "line": 104, "offset": 3186}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 77, "line": 117, "offset": 3592}, "extra": {"engine_kind": "OSS", "fingerprint": "ab793d6e2a20c870d6d8826183ebf27e46fbc21963a920a05dacd66ed813e9b2766ca61e221dfff2c5bd2452005f77f33b93b28e9449b2c5b1d31a9ed73d6d6c_7", "is_ignored": false, "lines": "        snprintf(local_res0,local_res4,\"Noise level%c%d dBm\",uVar1,local_24);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 17, "line": 117, "offset": 3532}, "start": {"col": 9, "line": 117, "offset": 3524}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c", "start": {"col": 9, "line": 117, "offset": 3524}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 23, "line": 9, "offset": 271}, "extra": {"engine_kind": "OSS", "fingerprint": "70612eabd85a1e9308681b90b85ee5a85dde82f2c6a079fefc4b8c9548dc3dea5cabda1176afa9e13d7ba96a54e1aec2c4a2ebb55499ffcf55bb9bd5810f5ac9_0", "is_ignored": false, "lines": "  snprintf(param_1,param_2,\"%02d:%02d:%02d.%06u\",iVar1 / 0xe10,(iVar1 % 0xe10) / 0x3c,iVar1 % 0x3c,\n           param_3[1]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 11, "line": 8, "offset": 159}, "start": {"col": 3, "line": 8, "offset": 151}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_timeval_0040a948.c", "start": {"col": 3, "line": 8, "offset": 151}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 57, "line": 17, "offset": 467}, "extra": {"engine_kind": "OSS", "fingerprint": "a559c522a0920c74ea22b231b7905c1102144a76fe542f67f91728b248a7d9b2a7a159e10d05b6bb5eefadcdad63f9a2ebd533e6c8c9c3eb6aaf1cc1ca52ab7e_0", "is_ignored": false, "lines": "      snprintf(param_1,param_2,\"%d dBm\",local_10,puVar1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 15, "line": 17, "offset": 425}, "start": {"col": 7, "line": 17, "offset": 417}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_txpower_00408060.c", "start": {"col": 7, "line": 17, "offset": 417}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 51, "line": 20, "offset": 536}, "extra": {"engine_kind": "OSS", "fingerprint": "a559c522a0920c74ea22b231b7905c1102144a76fe542f67f91728b248a7d9b2a7a159e10d05b6bb5eefadcdad63f9a2ebd533e6c8c9c3eb6aaf1cc1ca52ab7e_1", "is_ignored": false, "lines": "      snprintf(param_1,param_2,\"%d\",*param_3,&_gp);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 15, "line": 20, "offset": 500}, "start": {"col": 7, "line": 20, "offset": 492}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_txpower_00408060.c", "start": {"col": 7, "line": 20, "offset": 492}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 49, "line": 24, "offset": 605}, "extra": {"engine_kind": "OSS", "fingerprint": "a559c522a0920c74ea22b231b7905c1102144a76fe542f67f91728b248a7d9b2a7a159e10d05b6bb5eefadcdad63f9a2ebd533e6c8c9c3eb6aaf1cc1ca52ab7e_2", "is_ignored": false, "lines": "    snprintf(param_1,param_2,\"off\",param_4,&_gp);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 13, "line": 24, "offset": 569}, "start": {"col": 5, "line": 24, "offset": 561}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_txpower_00408060.c", "start": {"col": 5, "line": 24, "offset": 561}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 27, "line": 9, "offset": 124}, "extra": {"engine_kind": "OSS", "fingerprint": "280fc3c13d77bae15001d202dd7415fb21db13fa204149c16e511597fcd24a7dfff84bd9e6fa7bc566b54a9db97e1fdc3d82592b9afa0214b69a726c8cf60678_0", "is_ignored": false, "lines": "  __fd = iw_sockets_open();", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "iw_sockets_open", "end": {"col": 25, "line": 9, "offset": 122}, "start": {"col": 10, "line": 9, "offset": 107}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_print_version_info_00405604.c", "start": {"col": 10, "line": 9, "offset": 107}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 39, "offset": 836}, "extra": {"engine_kind": "OSS", "fingerprint": "aeaa3b183610c24f19d3b98afc46453a65239850c66727ec26d877b0fe6b0a8aa299c281597cda96bfab601c761be23aa33a3c9cb1a8980005a8baff2f886ede_0", "is_ignored": false, "lines": "    strncpy(acStack_48,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 39, "offset": 811}, "start": {"col": 5, "line": 39, "offset": 804}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c", "start": {"col": 5, "line": 39, "offset": 804}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 39, "offset": 836}, "extra": {"engine_kind": "OSS", "fingerprint": "2fa75f77b9323188c9d9724b35af7e6cd003981c6fefc5dbbfa0b08ebd97fbd2c421ff4a269a1837bf9ab4beeb2b93db7d72e116ccaf3e88a0c5feca10ca8d2d_0", "is_ignored": false, "lines": "    strncpy(acStack_48,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_48", "end": {"col": 23, "line": 39, "offset": 822}, "start": {"col": 13, "line": 39, "offset": 812}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 36, "line": 39, "offset": 835}, "start": {"col": 32, "line": 39, "offset": 831}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 31, "line": 39, "offset": 830}, "start": {"col": 24, "line": 39, "offset": 823}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c", "start": {"col": 5, "line": 39, "offset": 804}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 37, "line": 39, "offset": 836}, "extra": {"engine_kind": "OSS", "fingerprint": "07e3bd41ed1492232698fbe080e3ef15ac5c3bc7f1df1af6ba0f31f97f01b8b2ed29467d8bcc4ffa86b38f694bce3e23e0bd09115f69b5bd2beef74e6fa0d4cf_0", "is_ignored": false, "lines": "    strncpy(acStack_48,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 39, "offset": 811}, "start": {"col": 5, "line": 39, "offset": 804}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c", "start": {"col": 5, "line": 39, "offset": 804}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 47, "offset": 1062}, "extra": {"engine_kind": "OSS", "fingerprint": "656bfc31ac447f45ded2a280382adc8ba071a51cf454d077883e3832c8f7d8c0fef14ef76ae43ccccd60302e84e5bc7ce305f1da352854a0c3b4c1fc6a02e3d4_0", "is_ignored": false, "lines": "    __ptr = realloc(local_88,local_84);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "realloc", "end": {"col": 20, "line": 47, "offset": 1043}, "start": {"col": 13, "line": 47, "offset": 1036}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c", "start": {"col": 13, "line": 47, "offset": 1036}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 59, "offset": 1361}, "extra": {"engine_kind": "OSS", "fingerprint": "aeaa3b183610c24f19d3b98afc46453a65239850c66727ec26d877b0fe6b0a8aa299c281597cda96bfab601c761be23aa33a3c9cb1a8980005a8baff2f886ede_1", "is_ignored": false, "lines": "    strncpy(acStack_48,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 59, "offset": 1336}, "start": {"col": 5, "line": 59, "offset": 1329}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c", "start": {"col": 5, "line": 59, "offset": 1329}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 59, "offset": 1361}, "extra": {"engine_kind": "OSS", "fingerprint": "2fa75f77b9323188c9d9724b35af7e6cd003981c6fefc5dbbfa0b08ebd97fbd2c421ff4a269a1837bf9ab4beeb2b93db7d72e116ccaf3e88a0c5feca10ca8d2d_1", "is_ignored": false, "lines": "    strncpy(acStack_48,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_48", "end": {"col": 23, "line": 59, "offset": 1347}, "start": {"col": 13, "line": 59, "offset": 1337}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 36, "line": 59, "offset": 1360}, "start": {"col": 32, "line": 59, "offset": 1356}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 31, "line": 59, "offset": 1355}, "start": {"col": 24, "line": 59, "offset": 1348}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c", "start": {"col": 5, "line": 59, "offset": 1329}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 37, "line": 59, "offset": 1361}, "extra": {"engine_kind": "OSS", "fingerprint": "07e3bd41ed1492232698fbe080e3ef15ac5c3bc7f1df1af6ba0f31f97f01b8b2ed29467d8bcc4ffa86b38f694bce3e23e0bd09115f69b5bd2beef74e6fa0d4cf_1", "is_ignored": false, "lines": "    strncpy(acStack_48,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 59, "offset": 1336}, "start": {"col": 5, "line": 59, "offset": 1329}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c", "start": {"col": 5, "line": 59, "offset": 1329}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 44, "line": 89, "offset": 2170}, "extra": {"engine_kind": "OSS", "fingerprint": "6819e6236716a3e387585f3b26046f39ef44dc2429aee6a13b404d0fc29a1c4723fab0e15f83b8f127faa130df029930e27e529c58d6d5fa01cf55075aa89737_0", "is_ignored": false, "lines": "          local_50 = (void **)malloc(0x100);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 37, "line": 89, "offset": 2163}, "start": {"col": 31, "line": 89, "offset": 2157}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c", "start": {"col": 31, "line": 89, "offset": 2157}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 44, "line": 89, "offset": 2170}, "extra": {"engine_kind": "OSS", "fingerprint": "7d113024637f0a11f174edf5b5aab1ea7d0ebb5398307baf9784c08d3cf0c7f7e112a898c8503ebeedc5a95467f29b9d99a16cafd9324244eb07ffad1de94100_0", "is_ignored": false, "lines": "          local_50 = (void **)malloc(0x100);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x100", "end": {"col": 43, "line": 89, "offset": 2169}, "start": {"col": 38, "line": 89, "offset": 2164}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c", "start": {"col": 31, "line": 89, "offset": 2157}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 94, "offset": 2344}, "extra": {"engine_kind": "OSS", "fingerprint": "f80f9708d5d94128ac1bad5c271e7e54d981ff24b4ccb038d65a71f385768a6d2620c12f91603d4955c5f76a514a95bf637c979b23e7d2c15fe545f3387c9f12_0", "is_ignored": false, "lines": "            memset(local_50,0,0x100);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 30, "line": 94, "offset": 2337}, "start": {"col": 29, "line": 94, "offset": 2336}}, "$DST": {"abstract_content": "local_50", "end": {"col": 28, "line": 94, "offset": 2335}, "propagated_value": {"svalue_abstract_content": "void**malloc(0x100)", "svalue_end": {"col": 44, "line": 89, "offset": 2170}, "svalue_start": {"col": 23, "line": 89, "offset": 2149}}, "start": {"col": 20, "line": 94, "offset": 2327}}, "$LEN": {"abstract_content": "0x100", "end": {"col": 36, "line": 94, "offset": 2343}, "start": {"col": 31, "line": 94, "offset": 2338}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c", "start": {"col": 13, "line": 94, "offset": 2320}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 43, "line": 132, "offset": 3762}, "extra": {"engine_kind": "OSS", "fingerprint": "c8dc28b3e8a5346baf75cef62a3530ceb50d5d143db72778caba79b77b2382362f6bde3db8d70d0f6f886f8f48582f902c301c8a4b92a3a07b8c95a0a7a88338_0", "is_ignored": false, "lines": "            memset(local_80 + 0x28,0,0x21);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 37, "line": 132, "offset": 3756}, "start": {"col": 36, "line": 132, "offset": 3755}}, "$DST": {"abstract_content": "local_80+0x28", "end": {"col": 35, "line": 132, "offset": 3754}, "start": {"col": 20, "line": 132, "offset": 3739}}, "$LEN": {"abstract_content": "0x21", "end": {"col": 42, "line": 132, "offset": 3761}, "start": {"col": 38, "line": 132, "offset": 3757}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c", "start": {"col": 13, "line": 132, "offset": 3732}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 74, "line": 134, "offset": 3911}, "extra": {"engine_kind": "OSS", "fingerprint": "0038cb5e70ec580aa18523ea2e8caef88e2e0ec0acdbfde81e2c4c3ff073191cedc0f1589f680568163502cdcefe85d9cf3900771a210e26194f54e470c11f8e_0", "is_ignored": false, "lines": "              memcpy(local_80 + 0x28,pvStack_24,(uint)uStack_20 & 0xffff);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 21, "line": 134, "offset": 3858}, "start": {"col": 15, "line": 134, "offset": 3852}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c", "start": {"col": 15, "line": 134, "offset": 3852}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 72, "line": 146, "offset": 4362}, "extra": {"engine_kind": "OSS", "fingerprint": "0038cb5e70ec580aa18523ea2e8caef88e2e0ec0acdbfde81e2c4c3ff073191cedc0f1589f680568163502cdcefe85d9cf3900771a210e26194f54e470c11f8e_1", "is_ignored": false, "lines": "            memcpy(local_80 + 0x14,pvStack_24,(uint)uStack_20 & 0xffff);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 19, "line": 146, "offset": 4309}, "start": {"col": 13, "line": 146, "offset": 4303}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c", "start": {"col": 13, "line": 146, "offset": 4303}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 47, "line": 21, "offset": 375}, "extra": {"engine_kind": "OSS", "fingerprint": "dd351eff29f37e6d66fe2440d517685dc82abd3fce5f41fe437511d8ba5fe90ab86bd6c90994577a36d03ee3d7ca4fa443bc708f719794373b5ad1bc2a9c13c7_0", "is_ignored": false, "lines": "  iVar5 = strncmp(param_1,\"IEEE 802.11\",sVar6);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar5", "end": {"col": 8, "line": 21, "offset": 336}, "start": {"col": 3, "line": 21, "offset": 331}}, "$UNSIGNED": {"abstract_content": "sVar6", "end": {"col": 46, "line": 21, "offset": 374}, "propagated_value": {"svalue_abstract_content": "strlen(\"IEEE 802.11\")", "svalue_end": {"col": 32, "line": 20, "offset": 327}, "svalue_start": {"col": 11, "line": 20, "offset": 306}}, "start": {"col": 41, "line": 21, "offset": 369}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_protocol_compare_00406f40.c", "start": {"col": 3, "line": 21, "offset": 331}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 49, "line": 24, "offset": 480}, "extra": {"engine_kind": "OSS", "fingerprint": "dd351eff29f37e6d66fe2440d517685dc82abd3fce5f41fe437511d8ba5fe90ab86bd6c90994577a36d03ee3d7ca4fa443bc708f719794373b5ad1bc2a9c13c7_1", "is_ignored": false, "lines": "    iVar5 = strncmp(param_2,\"IEEE 802.11\",sVar6);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar5", "end": {"col": 10, "line": 24, "offset": 441}, "start": {"col": 5, "line": 24, "offset": 436}}, "$UNSIGNED": {"abstract_content": "sVar6", "end": {"col": 48, "line": 24, "offset": 479}, "propagated_value": {"svalue_abstract_content": "strlen(\"IEEE 802.11\")", "svalue_end": {"col": 34, "line": 23, "offset": 430}, "svalue_start": {"col": 13, "line": 23, "offset": 409}}, "start": {"col": 43, "line": 24, "offset": 474}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_protocol_compare_00406f40.c", "start": {"col": 5, "line": 24, "offset": 436}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 20, "offset": 377}, "extra": {"engine_kind": "OSS", "fingerprint": "be38a6fdad6bb9beeafca73a9388edd78555bb7abdf5b20f5150479531e36df4ebd5b3867e31e3cc34b50af16f5ab7fbfdf25b2ce50dd2f4e3aaf5d85fe4cebb_0", "is_ignored": false, "lines": "  strncpy(acStack_3c,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 10, "line": 20, "offset": 352}, "start": {"col": 3, "line": 20, "offset": 345}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 3, "line": 20, "offset": 345}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 35, "line": 20, "offset": 377}, "extra": {"engine_kind": "OSS", "fingerprint": "abe7c74a653ef401280d5432c9497a6e3187f642f7a3604993c4071aead4b4fe01fb07c5aea0d71d951db994ffcc43d2134a8c825f4bff7108194704ccf6ac5a_0", "is_ignored": false, "lines": "  strncpy(acStack_3c,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_3c", "end": {"col": 21, "line": 20, "offset": 363}, "start": {"col": 11, "line": 20, "offset": 353}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 34, "line": 20, "offset": 376}, "start": {"col": 30, "line": 20, "offset": 372}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 29, "line": 20, "offset": 371}, "start": {"col": 22, "line": 20, "offset": 364}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 3, "line": 20, "offset": 345}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 35, "line": 20, "offset": 377}, "extra": {"engine_kind": "OSS", "fingerprint": "3b25b402e75aaf9cf8e89fd38775f16f65e83584ee5c7202ad8d755f8395f6c7643542d291a042f9ad5c36e8877a18f48dd8de7d455ece101f9ccd7c80b13e8d_0", "is_ignored": false, "lines": "  strncpy(acStack_3c,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 10, "line": 20, "offset": 352}, "start": {"col": 3, "line": 20, "offset": 345}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 3, "line": 20, "offset": 345}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 27, "offset": 561}, "extra": {"engine_kind": "OSS", "fingerprint": "be38a6fdad6bb9beeafca73a9388edd78555bb7abdf5b20f5150479531e36df4ebd5b3867e31e3cc34b50af16f5ab7fbfdf25b2ce50dd2f4e3aaf5d85fe4cebb_1", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 14, "line": 27, "offset": 536}, "start": {"col": 7, "line": 27, "offset": 529}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 27, "offset": 529}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 27, "offset": 561}, "extra": {"engine_kind": "OSS", "fingerprint": "abe7c74a653ef401280d5432c9497a6e3187f642f7a3604993c4071aead4b4fe01fb07c5aea0d71d951db994ffcc43d2134a8c825f4bff7108194704ccf6ac5a_1", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_3c", "end": {"col": 25, "line": 27, "offset": 547}, "start": {"col": 15, "line": 27, "offset": 537}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 38, "line": 27, "offset": 560}, "start": {"col": 34, "line": 27, "offset": 556}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 33, "line": 27, "offset": 555}, "start": {"col": 26, "line": 27, "offset": 548}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 27, "offset": 529}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 39, "line": 27, "offset": 561}, "extra": {"engine_kind": "OSS", "fingerprint": "3b25b402e75aaf9cf8e89fd38775f16f65e83584ee5c7202ad8d755f8395f6c7643542d291a042f9ad5c36e8877a18f48dd8de7d455ece101f9ccd7c80b13e8d_1", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 14, "line": 27, "offset": 536}, "start": {"col": 7, "line": 27, "offset": 529}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 27, "offset": 529}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 29, "offset": 644}, "extra": {"engine_kind": "OSS", "fingerprint": "be38a6fdad6bb9beeafca73a9388edd78555bb7abdf5b20f5150479531e36df4ebd5b3867e31e3cc34b50af16f5ab7fbfdf25b2ce50dd2f4e3aaf5d85fe4cebb_2", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 14, "line": 29, "offset": 619}, "start": {"col": 7, "line": 29, "offset": 612}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 29, "offset": 612}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 29, "offset": 644}, "extra": {"engine_kind": "OSS", "fingerprint": "abe7c74a653ef401280d5432c9497a6e3187f642f7a3604993c4071aead4b4fe01fb07c5aea0d71d951db994ffcc43d2134a8c825f4bff7108194704ccf6ac5a_2", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_3c", "end": {"col": 25, "line": 29, "offset": 630}, "start": {"col": 15, "line": 29, "offset": 620}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 38, "line": 29, "offset": 643}, "start": {"col": 34, "line": 29, "offset": 639}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 33, "line": 29, "offset": 638}, "start": {"col": 26, "line": 29, "offset": 631}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 29, "offset": 612}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 39, "line": 29, "offset": 644}, "extra": {"engine_kind": "OSS", "fingerprint": "3b25b402e75aaf9cf8e89fd38775f16f65e83584ee5c7202ad8d755f8395f6c7643542d291a042f9ad5c36e8877a18f48dd8de7d455ece101f9ccd7c80b13e8d_2", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 14, "line": 29, "offset": 619}, "start": {"col": 7, "line": 29, "offset": 612}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 29, "offset": 612}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 41, "offset": 1085}, "extra": {"engine_kind": "OSS", "fingerprint": "be38a6fdad6bb9beeafca73a9388edd78555bb7abdf5b20f5150479531e36df4ebd5b3867e31e3cc34b50af16f5ab7fbfdf25b2ce50dd2f4e3aaf5d85fe4cebb_3", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 14, "line": 41, "offset": 1060}, "start": {"col": 7, "line": 41, "offset": 1053}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 41, "offset": 1053}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 41, "offset": 1085}, "extra": {"engine_kind": "OSS", "fingerprint": "abe7c74a653ef401280d5432c9497a6e3187f642f7a3604993c4071aead4b4fe01fb07c5aea0d71d951db994ffcc43d2134a8c825f4bff7108194704ccf6ac5a_3", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_3c", "end": {"col": 25, "line": 41, "offset": 1071}, "start": {"col": 15, "line": 41, "offset": 1061}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 38, "line": 41, "offset": 1084}, "start": {"col": 34, "line": 41, "offset": 1080}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 33, "line": 41, "offset": 1079}, "start": {"col": 26, "line": 41, "offset": 1072}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 41, "offset": 1053}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 39, "line": 41, "offset": 1085}, "extra": {"engine_kind": "OSS", "fingerprint": "3b25b402e75aaf9cf8e89fd38775f16f65e83584ee5c7202ad8d755f8395f6c7643542d291a042f9ad5c36e8877a18f48dd8de7d455ece101f9ccd7c80b13e8d_3", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 14, "line": 41, "offset": 1060}, "start": {"col": 7, "line": 41, "offset": 1053}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 41, "offset": 1053}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 56, "offset": 1593}, "extra": {"engine_kind": "OSS", "fingerprint": "be38a6fdad6bb9beeafca73a9388edd78555bb7abdf5b20f5150479531e36df4ebd5b3867e31e3cc34b50af16f5ab7fbfdf25b2ce50dd2f4e3aaf5d85fe4cebb_4", "is_ignored": false, "lines": "        strncpy(acStack_3c,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 16, "line": 56, "offset": 1568}, "start": {"col": 9, "line": 56, "offset": 1561}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 9, "line": 56, "offset": 1561}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 41, "line": 56, "offset": 1593}, "extra": {"engine_kind": "OSS", "fingerprint": "abe7c74a653ef401280d5432c9497a6e3187f642f7a3604993c4071aead4b4fe01fb07c5aea0d71d951db994ffcc43d2134a8c825f4bff7108194704ccf6ac5a_4", "is_ignored": false, "lines": "        strncpy(acStack_3c,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_3c", "end": {"col": 27, "line": 56, "offset": 1579}, "start": {"col": 17, "line": 56, "offset": 1569}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 40, "line": 56, "offset": 1592}, "start": {"col": 36, "line": 56, "offset": 1588}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 35, "line": 56, "offset": 1587}, "start": {"col": 28, "line": 56, "offset": 1580}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 9, "line": 56, "offset": 1561}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 41, "line": 56, "offset": 1593}, "extra": {"engine_kind": "OSS", "fingerprint": "3b25b402e75aaf9cf8e89fd38775f16f65e83584ee5c7202ad8d755f8395f6c7643542d291a042f9ad5c36e8877a18f48dd8de7d455ece101f9ccd7c80b13e8d_4", "is_ignored": false, "lines": "        strncpy(acStack_3c,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 16, "line": 56, "offset": 1568}, "start": {"col": 9, "line": 56, "offset": 1561}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 9, "line": 56, "offset": 1561}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 73, "offset": 2170}, "extra": {"engine_kind": "OSS", "fingerprint": "be38a6fdad6bb9beeafca73a9388edd78555bb7abdf5b20f5150479531e36df4ebd5b3867e31e3cc34b50af16f5ab7fbfdf25b2ce50dd2f4e3aaf5d85fe4cebb_5", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 14, "line": 73, "offset": 2145}, "start": {"col": 7, "line": 73, "offset": 2138}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 73, "offset": 2138}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 73, "offset": 2170}, "extra": {"engine_kind": "OSS", "fingerprint": "abe7c74a653ef401280d5432c9497a6e3187f642f7a3604993c4071aead4b4fe01fb07c5aea0d71d951db994ffcc43d2134a8c825f4bff7108194704ccf6ac5a_5", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_3c", "end": {"col": 25, "line": 73, "offset": 2156}, "start": {"col": 15, "line": 73, "offset": 2146}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 38, "line": 73, "offset": 2169}, "start": {"col": 34, "line": 73, "offset": 2165}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 33, "line": 73, "offset": 2164}, "start": {"col": 26, "line": 73, "offset": 2157}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 73, "offset": 2138}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 39, "line": 73, "offset": 2170}, "extra": {"engine_kind": "OSS", "fingerprint": "3b25b402e75aaf9cf8e89fd38775f16f65e83584ee5c7202ad8d755f8395f6c7643542d291a042f9ad5c36e8877a18f48dd8de7d455ece101f9ccd7c80b13e8d_5", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 14, "line": 73, "offset": 2145}, "start": {"col": 7, "line": 73, "offset": 2138}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 73, "offset": 2138}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 88, "offset": 2713}, "extra": {"engine_kind": "OSS", "fingerprint": "be38a6fdad6bb9beeafca73a9388edd78555bb7abdf5b20f5150479531e36df4ebd5b3867e31e3cc34b50af16f5ab7fbfdf25b2ce50dd2f4e3aaf5d85fe4cebb_6", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 14, "line": 88, "offset": 2688}, "start": {"col": 7, "line": 88, "offset": 2681}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 88, "offset": 2681}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 88, "offset": 2713}, "extra": {"engine_kind": "OSS", "fingerprint": "abe7c74a653ef401280d5432c9497a6e3187f642f7a3604993c4071aead4b4fe01fb07c5aea0d71d951db994ffcc43d2134a8c825f4bff7108194704ccf6ac5a_6", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_3c", "end": {"col": 25, "line": 88, "offset": 2699}, "start": {"col": 15, "line": 88, "offset": 2689}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 38, "line": 88, "offset": 2712}, "start": {"col": 34, "line": 88, "offset": 2708}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 33, "line": 88, "offset": 2707}, "start": {"col": 26, "line": 88, "offset": 2700}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 88, "offset": 2681}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 39, "line": 88, "offset": 2713}, "extra": {"engine_kind": "OSS", "fingerprint": "3b25b402e75aaf9cf8e89fd38775f16f65e83584ee5c7202ad8d755f8395f6c7643542d291a042f9ad5c36e8877a18f48dd8de7d455ece101f9ccd7c80b13e8d_6", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 14, "line": 88, "offset": 2688}, "start": {"col": 7, "line": 88, "offset": 2681}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 88, "offset": 2681}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 47, "line": 101, "offset": 3141}, "extra": {"engine_kind": "OSS", "fingerprint": "78fa98e04fa94c6a69fb78c20c0714bc4feb0017eb618d965b410061bb7bf9764bac439e366911a575d8f4bedd9535d01ceac59e60002aeaed8009d8c0db5e60_0", "is_ignored": false, "lines": "      sVar7 = strlen((char *)(param_3 + 0x88));", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "param_3", "end": {"col": 38, "line": 101, "offset": 3132}, "start": {"col": 31, "line": 101, "offset": 3125}}, "$UNSIGNED": {"abstract_content": "sVar7", "end": {"col": 12, "line": 101, "offset": 3106}, "start": {"col": 7, "line": 101, "offset": 3101}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 101, "offset": 3101}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 107, "offset": 3343}, "extra": {"engine_kind": "OSS", "fingerprint": "be38a6fdad6bb9beeafca73a9388edd78555bb7abdf5b20f5150479531e36df4ebd5b3867e31e3cc34b50af16f5ab7fbfdf25b2ce50dd2f4e3aaf5d85fe4cebb_7", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 14, "line": 107, "offset": 3318}, "start": {"col": 7, "line": 107, "offset": 3311}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 107, "offset": 3311}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 107, "offset": 3343}, "extra": {"engine_kind": "OSS", "fingerprint": "abe7c74a653ef401280d5432c9497a6e3187f642f7a3604993c4071aead4b4fe01fb07c5aea0d71d951db994ffcc43d2134a8c825f4bff7108194704ccf6ac5a_7", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_3c", "end": {"col": 25, "line": 107, "offset": 3329}, "start": {"col": 15, "line": 107, "offset": 3319}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 38, "line": 107, "offset": 3342}, "start": {"col": 34, "line": 107, "offset": 3338}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 33, "line": 107, "offset": 3337}, "start": {"col": 26, "line": 107, "offset": 3330}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 107, "offset": 3311}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 39, "line": 107, "offset": 3343}, "extra": {"engine_kind": "OSS", "fingerprint": "3b25b402e75aaf9cf8e89fd38775f16f65e83584ee5c7202ad8d755f8395f6c7643542d291a042f9ad5c36e8877a18f48dd8de7d455ece101f9ccd7c80b13e8d_7", "is_ignored": false, "lines": "      strncpy(acStack_3c,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 14, "line": 107, "offset": 3318}, "start": {"col": 7, "line": 107, "offset": 3311}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c", "start": {"col": 7, "line": 107, "offset": 3311}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 15, "offset": 300}, "extra": {"engine_kind": "OSS", "fingerprint": "f63c34a387fd4a15d2714f60ad6b78a031ad13835610ceed11d6e5bb1dc44ff9c9040418d235ea3540d8063352fb472feaeb95d5bd3e2d8df757957deea9c96f_0", "is_ignored": false, "lines": "  strncpy(acStack_4c4,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 10, "line": 15, "offset": 274}, "start": {"col": 3, "line": 15, "offset": 267}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/print_iface_version_info_00405358.c", "start": {"col": 3, "line": 15, "offset": 267}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 15, "offset": 300}, "extra": {"engine_kind": "OSS", "fingerprint": "3682aff27cb2c00c1c09907951c18e8abcf5bc40a3622ae4c13a14bc279fbe4d7bd54356e34ad7de92777bbbb21328b7ca39aed735ea5c82930b26160791ce3a_0", "is_ignored": false, "lines": "  strncpy(acStack_4c4,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_4c4", "end": {"col": 22, "line": 15, "offset": 286}, "start": {"col": 11, "line": 15, "offset": 275}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 35, "line": 15, "offset": 299}, "start": {"col": 31, "line": 15, "offset": 295}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 30, "line": 15, "offset": 294}, "start": {"col": 23, "line": 15, "offset": 287}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/print_iface_version_info_00405358.c", "start": {"col": 3, "line": 15, "offset": 267}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 36, "line": 15, "offset": 300}, "extra": {"engine_kind": "OSS", "fingerprint": "31bb7c3e8762b88bbcfdddc0fcbefcfacaaec721ee4a6c614578bcb9a785200034824655b1949f3af2bb439fbdb99db0fe51425c7f89544a6658873305b25b28_0", "is_ignored": false, "lines": "  strncpy(acStack_4c4,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 10, "line": 15, "offset": 274}, "start": {"col": 3, "line": 15, "offset": 267}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/print_iface_version_info_00405358.c", "start": {"col": 3, "line": 15, "offset": 267}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 32, "line": 21, "offset": 434}, "extra": {"engine_kind": "OSS", "fingerprint": "ba8d57d45092a5ad8b41b8f47855c63eac4c8b4274d7237126a3cefb335fd024e0c1efb48f0a1ac991dd3f1fad1128288626fba71c5661093545b22fe58b8242_0", "is_ignored": false, "lines": "    memset(auStack_4a4,0,0x498);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 25, "line": 21, "offset": 427}, "start": {"col": 24, "line": 21, "offset": 426}}, "$DST": {"abstract_content": "auStack_4a4", "end": {"col": 23, "line": 21, "offset": 425}, "start": {"col": 12, "line": 21, "offset": 414}}, "$LEN": {"abstract_content": "0x498", "end": {"col": 31, "line": 21, "offset": 433}, "start": {"col": 26, "line": 21, "offset": 428}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/print_iface_version_info_00405358.c", "start": {"col": 5, "line": 21, "offset": 407}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 25, "offset": 544}, "extra": {"engine_kind": "OSS", "fingerprint": "f63c34a387fd4a15d2714f60ad6b78a031ad13835610ceed11d6e5bb1dc44ff9c9040418d235ea3540d8063352fb472feaeb95d5bd3e2d8df757957deea9c96f_1", "is_ignored": false, "lines": "    strncpy(acStack_4c4,param_2,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 25, "offset": 518}, "start": {"col": 5, "line": 25, "offset": 511}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/print_iface_version_info_00405358.c", "start": {"col": 5, "line": 25, "offset": 511}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 25, "offset": 544}, "extra": {"engine_kind": "OSS", "fingerprint": "3682aff27cb2c00c1c09907951c18e8abcf5bc40a3622ae4c13a14bc279fbe4d7bd54356e34ad7de92777bbbb21328b7ca39aed735ea5c82930b26160791ce3a_1", "is_ignored": false, "lines": "    strncpy(acStack_4c4,param_2,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_4c4", "end": {"col": 24, "line": 25, "offset": 530}, "start": {"col": 13, "line": 25, "offset": 519}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 37, "line": 25, "offset": 543}, "start": {"col": 33, "line": 25, "offset": 539}}, "$SRC": {"abstract_content": "param_2", "end": {"col": 32, "line": 25, "offset": 538}, "start": {"col": 25, "line": 25, "offset": 531}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/print_iface_version_info_00405358.c", "start": {"col": 5, "line": 25, "offset": 511}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 38, "line": 25, "offset": 544}, "extra": {"engine_kind": "OSS", "fingerprint": "31bb7c3e8762b88bbcfdddc0fcbefcfacaaec721ee4a6c614578bcb9a785200034824655b1949f3af2bb439fbdb99db0fe51425c7f89544a6658873305b25b28_1", "is_ignored": false, "lines": "    strncpy(acStack_4c4,param_2,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 25, "offset": 518}, "start": {"col": 5, "line": 25, "offset": 511}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/print_iface_version_info_00405358.c", "start": {"col": 5, "line": 25, "offset": 511}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 27, "line": 12, "offset": 209}, "extra": {"engine_kind": "OSS", "fingerprint": "b3551e19931b1e5ff927b4a2212380129e65a1c9510122b23a24e5e7b545083231b37233f9e36704b9bbe7e309258acd2f34f734a0c6bcbf8d68922ff84195c0_0", "is_ignored": false, "lines": "  __fd = iw_sockets_open();", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "iw_sockets_open", "end": {"col": 25, "line": 12, "offset": 207}, "start": {"col": 10, "line": 12, "offset": 192}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/process_iwpriv_cmd_00404430.c", "start": {"col": 10, "line": 12, "offset": 192}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 19, "offset": 354}, "extra": {"engine_kind": "OSS", "fingerprint": "8b8417fba5629fafdf932a83cf95f2a66220f4280f58b14ae9c64141179b41a27648950ae24ba2dfa1c812d288c8c49bdf1e2b346ee5eaf6f460e0cfdcbf1fb2_0", "is_ignored": false, "lines": "    strncpy(param_2,param_1,param_3 - 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 19, "offset": 325}, "start": {"col": 5, "line": 19, "offset": 318}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/process_iwpriv_cmd_00404430.c", "start": {"col": 5, "line": 19, "offset": 318}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 41, "line": 19, "offset": 354}, "extra": {"engine_kind": "OSS", "fingerprint": "2f430a3bba5ca6418d9190a38bf77f8428f61c87a568306ba3b08493321c6540191240e6be4450eea60b4024293eaadd9f4818c9bb4a62cffecbcc10a55d5ec6_0", "is_ignored": false, "lines": "    strncpy(param_2,param_1,param_3 - 1);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 12, "line": 19, "offset": 325}, "start": {"col": 5, "line": 19, "offset": 318}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/process_iwpriv_cmd_00404430.c", "start": {"col": 5, "line": 19, "offset": 318}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 33, "line": 23, "offset": 521}, "extra": {"engine_kind": "OSS", "fingerprint": "79d4371da0ef655dcd720b75883e6a75746563377daabb7b975b9714559f0f9aa06ed510a64f4a4e00404310ef5d49dee5ecbb2cd7830a8e71ec31fdb72f19af_0", "is_ignored": false, "lines": "      local_70 = system(param_1);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/process_iwpriv_cmd_00404430.c", "start": {"col": 18, "line": 23, "offset": 506}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 23, "offset": 521}, "extra": {"engine_kind": "OSS", "fingerprint": "5f103f33e206a6e845ffc65a4ecf44d2f89f5591ee48f997d92d726cd0128998366d0b949ced2144a47a78768294cb16dbc8a190e0da7229da96a56b61e56da3_0", "is_ignored": false, "lines": "      local_70 = system(param_1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 24, "line": 23, "offset": 512}, "start": {"col": 18, "line": 23, "offset": 506}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/process_iwpriv_cmd_00404430.c", "start": {"col": 18, "line": 23, "offset": 506}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 89, "line": 30, "offset": 850}, "extra": {"engine_kind": "OSS", "fingerprint": "7d161c9eb76aa016a07c1c9da99b45c6f45cec61ac859fadc0f7ccdd1ff4ccfcbc20fb062b0e830bfafa31b3b35de5db8cb2921cf023093d50ed0a71779eea8a_0", "is_ignored": false, "lines": "          local_70 = set_private(__fd,auStack_54,iVar1 + -2,local_5c[1],param_2,param_3);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "local_70", "end": {"col": 19, "line": 30, "offset": 780}, "start": {"col": 11, "line": 30, "offset": 772}}, "$UNSIGNED": {"abstract_content": "param_3", "end": {"col": 88, "line": 30, "offset": 849}, "start": {"col": 81, "line": 30, "offset": 842}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/process_iwpriv_cmd_00404430.c", "start": {"col": 11, "line": 30, "offset": 772}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 60, "line": 43, "offset": 1277}, "extra": {"engine_kind": "OSS", "fingerprint": "7d161c9eb76aa016a07c1c9da99b45c6f45cec61ac859fadc0f7ccdd1ff4ccfcbc20fb062b0e830bfafa31b3b35de5db8cb2921cf023093d50ed0a71779eea8a_1", "is_ignored": false, "lines": "        local_70 = getCmdResults(param_1,0,param_2,param_3);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "local_70", "end": {"col": 17, "line": 43, "offset": 1234}, "start": {"col": 9, "line": 43, "offset": 1226}}, "$UNSIGNED": {"abstract_content": "param_3", "end": {"col": 59, "line": 43, "offset": 1276}, "start": {"col": 52, "line": 43, "offset": 1269}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/process_iwpriv_cmd_00404430.c", "start": {"col": 9, "line": 43, "offset": 1226}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 73, "line": 51, "offset": 1252}, "extra": {"engine_kind": "OSS", "fingerprint": "13a6b52411d78daf5ee6bac14997482044dbd2f1bc5ee634fc4366dc30876871530e956188ed3445c6537f736aad5dffc57c48466a1e0e1bee362c43f48c3a19_0", "is_ignored": false, "lines": "  if ((0 < (int)param_5_00) && (iVar3 = sscanf(*param_4,\"[%i]\",local_a8), iVar3 == 1)) {", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 47, "line": 51, "offset": 1226}, "start": {"col": 41, "line": 51, "offset": 1220}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 41, "line": 51, "offset": 1220}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 85, "line": 66, "offset": 1735}, "extra": {"engine_kind": "OSS", "fingerprint": "85ab652a2df442e062082aa086f0760d2fdfdb404cb9e0d8b03f257f6b588b92f7732869a31c377e9fb789b200f5b449de8c197144501dc3c59c367409fb9d96_0", "is_ignored": false, "lines": "    snprintf(param_8 + sVar5,(param_9 - sVar6) - 1,\"Invalid command : %s\\n\",param_5);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 13, "line": 66, "offset": 1663}, "start": {"col": 5, "line": 66, "offset": 1655}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 5, "line": 66, "offset": 1655}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 24, "line": 83, "offset": 2468}, "extra": {"engine_kind": "OSS", "fingerprint": "85ab652a2df442e062082aa086f0760d2fdfdb404cb9e0d8b03f257f6b588b92f7732869a31c377e9fb789b200f5b449de8c197144501dc3c59c367409fb9d96_1", "is_ignored": false, "lines": "      snprintf(param_8 + sVar5,(param_9 - sVar6) - 1,\"Invalid private ioctl definition for : %s\\n\",\n               param_5);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 15, "line": 82, "offset": 2359}, "start": {"col": 7, "line": 82, "offset": 2351}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 7, "line": 82, "offset": 2351}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 53, "line": 102, "offset": 3299}, "extra": {"engine_kind": "OSS", "fingerprint": "13a6b52411d78daf5ee6bac14997482044dbd2f1bc5ee634fc4366dc30876871530e956188ed3445c6537f736aad5dffc57c48466a1e0e1bee362c43f48c3a19_1", "is_ignored": false, "lines": "        sscanf(local_res4[local_1100],\"%i\",local_a8);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 15, "line": 102, "offset": 3261}, "start": {"col": 9, "line": 102, "offset": 3255}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 9, "line": 102, "offset": 3255}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc", "end": {"col": 53, "line": 102, "offset": 3299}, "extra": {"engine_kind": "OSS", "fingerprint": "9a2ef682bbb276ad8fd1a695b6f9e914534a97ff6baa56f3b852bfeeddd8943c1433c5c5c7d70cb1905e0e893627a05aad45c14518b843e9b5887bf5755ebd06_0", "is_ignored": false, "lines": "        sscanf(local_res4[local_1100],\"%i\",local_a8);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 15, "line": 102, "offset": 3261}, "start": {"col": 9, "line": 102, "offset": 3255}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 9, "line": 102, "offset": 3255}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 55, "line": 114, "offset": 3850}, "extra": {"engine_kind": "OSS", "fingerprint": "13a6b52411d78daf5ee6bac14997482044dbd2f1bc5ee634fc4366dc30876871530e956188ed3445c6537f736aad5dffc57c48466a1e0e1bee362c43f48c3a19_2", "is_ignored": false, "lines": "          sscanf(local_res4[local_1100],\"%i\",local_a8);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 17, "line": 114, "offset": 3812}, "start": {"col": 11, "line": 114, "offset": 3806}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 11, "line": 114, "offset": 3806}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc", "end": {"col": 55, "line": 114, "offset": 3850}, "extra": {"engine_kind": "OSS", "fingerprint": "9a2ef682bbb276ad8fd1a695b6f9e914534a97ff6baa56f3b852bfeeddd8943c1433c5c5c7d70cb1905e0e893627a05aad45c14518b843e9b5887bf5755ebd06_1", "is_ignored": false, "lines": "          sscanf(local_res4[local_1100],\"%i\",local_a8);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 17, "line": 114, "offset": 3812}, "start": {"col": 11, "line": 114, "offset": 3806}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 11, "line": 114, "offset": 3806}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 81, "line": 123, "offset": 4150}, "extra": {"engine_kind": "OSS", "fingerprint": "85ab652a2df442e062082aa086f0760d2fdfdb404cb9e0d8b03f257f6b588b92f7732869a31c377e9fb789b200f5b449de8c197144501dc3c59c367409fb9d96_2", "is_ignored": false, "lines": "          snprintf(param_8 + sVar5,(param_9 - sVar6) - 1,\"Not implemented...\\n\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 19, "line": 123, "offset": 4088}, "start": {"col": 11, "line": 123, "offset": 4080}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 11, "line": 123, "offset": 4080}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 54, "line": 137, "offset": 4730}, "extra": {"engine_kind": "OSS", "fingerprint": "97d94cbb24d105702dbd97fd7680f3d11d2f553e8e7fd1c1cdd8f270e655431b8e6395ae59ba8438d2d58a1e2584c2b93a603f43fd1395ac44e1ae8c1d044c1b_0", "is_ignored": false, "lines": "          memcpy(&local_10a8,*local_res4,(uint)uVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 17, "line": 137, "offset": 4693}, "start": {"col": 11, "line": 137, "offset": 4687}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 11, "line": 137, "offset": 4687}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 63, "line": 149, "offset": 5234}, "extra": {"engine_kind": "OSS", "fingerprint": "13a6b52411d78daf5ee6bac14997482044dbd2f1bc5ee634fc4366dc30876871530e956188ed3445c6537f736aad5dffc57c48466a1e0e1bee362c43f48c3a19_3", "is_ignored": false, "lines": "        iVar3 = sscanf(local_res4[local_1100],\"%lg\",&local_a0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 23, "line": 149, "offset": 5194}, "start": {"col": 17, "line": 149, "offset": 5188}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 17, "line": 149, "offset": 5188}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 43, "line": 154, "offset": 5458}, "extra": {"engine_kind": "OSS", "fingerprint": "85ab652a2df442e062082aa086f0760d2fdfdb404cb9e0d8b03f257f6b588b92f7732869a31c377e9fb789b200f5b449de8c197144501dc3c59c367409fb9d96_3", "is_ignored": false, "lines": "          snprintf(param_8 + sVar5,(param_9 - sVar6) - 1,\"Invalid float [%s]...\\n\",\n                   local_res4[local_1100]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 19, "line": 153, "offset": 5350}, "start": {"col": 11, "line": 153, "offset": 5342}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 11, "line": 153, "offset": 5342}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 53, "line": 169, "offset": 5965}, "extra": {"engine_kind": "OSS", "fingerprint": "13a6b52411d78daf5ee6bac14997482044dbd2f1bc5ee634fc4366dc30876871530e956188ed3445c6537f736aad5dffc57c48466a1e0e1bee362c43f48c3a19_4", "is_ignored": false, "lines": "        sscanf(local_res4[local_1100],\"%i\",local_a8);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 15, "line": 169, "offset": 5927}, "start": {"col": 9, "line": 169, "offset": 5921}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 9, "line": 169, "offset": 5921}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc", "end": {"col": 53, "line": 169, "offset": 5965}, "extra": {"engine_kind": "OSS", "fingerprint": "9a2ef682bbb276ad8fd1a695b6f9e914534a97ff6baa56f3b852bfeeddd8943c1433c5c5c7d70cb1905e0e893627a05aad45c14518b843e9b5887bf5755ebd06_2", "is_ignored": false, "lines": "        sscanf(local_res4[local_1100],\"%i\",local_a8);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 15, "line": 169, "offset": 5927}, "start": {"col": 9, "line": 169, "offset": 5921}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 9, "line": 169, "offset": 5921}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 43, "line": 186, "offset": 6792}, "extra": {"engine_kind": "OSS", "fingerprint": "85ab652a2df442e062082aa086f0760d2fdfdb404cb9e0d8b03f257f6b588b92f7732869a31c377e9fb789b200f5b449de8c197144501dc3c59c367409fb9d96_4", "is_ignored": false, "lines": "          snprintf(param_8 + sVar5,(param_9 - sVar6) - 1,\"Invalid address [%s]...\\n\",\n                   local_res4[local_1100]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 19, "line": 185, "offset": 6682}, "start": {"col": 11, "line": 185, "offset": 6674}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 11, "line": 185, "offset": 6674}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 69, "line": 197, "offset": 7271}, "extra": {"engine_kind": "OSS", "fingerprint": "85ab652a2df442e062082aa086f0760d2fdfdb404cb9e0d8b03f257f6b588b92f7732869a31c377e9fb789b200f5b449de8c197144501dc3c59c367409fb9d96_5", "is_ignored": false, "lines": "      snprintf(param_8 + sVar5,(param_9 - sVar6) - 1,\n               \"The command %s needs exactly %d argument(s)...\\n\",param_5,\n               *(ushort *)(param_6 + local_10fc * 0x18 + 4) & 0x7ff);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 15, "line": 195, "offset": 7088}, "start": {"col": 7, "line": 195, "offset": 7080}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 7, "line": 195, "offset": 7080}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 201, "offset": 7347}, "extra": {"engine_kind": "OSS", "fingerprint": "a6ba7028979f58efab1b8cfe144fc413269f813cefe39896d11654cefe70ed4489803d0207b4e3453652fd60e783913788c012fa7ddfb361466e69eb3402dd6b_0", "is_ignored": false, "lines": "  strncpy(acStack_10c8,param_6_00,0x10);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 10, "line": 201, "offset": 7317}, "start": {"col": 3, "line": 201, "offset": 7310}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 3, "line": 201, "offset": 7310}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 40, "line": 201, "offset": 7347}, "extra": {"engine_kind": "OSS", "fingerprint": "05aeda05a64a883a350a92f449cbcd798aa9e42ac5e7660d2655432bf97dc4d3003f4e3f0d08ee9ab06bdd504f24c9425edfd8da89f2cb0abdefcf6fdee667ff_0", "is_ignored": false, "lines": "  strncpy(acStack_10c8,param_6_00,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "acStack_10c8", "end": {"col": 23, "line": 201, "offset": 7330}, "start": {"col": 11, "line": 201, "offset": 7318}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 39, "line": 201, "offset": 7346}, "start": {"col": 35, "line": 201, "offset": 7342}}, "$SRC": {"abstract_content": "param_6_00", "end": {"col": 34, "line": 201, "offset": 7341}, "start": {"col": 24, "line": 201, "offset": 7331}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 3, "line": 201, "offset": 7310}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 40, "line": 201, "offset": 7347}, "extra": {"engine_kind": "OSS", "fingerprint": "fdfd21ae190208719670ae4f65b1a3a2686e07b341c5a2f1f53c9964359d5c652951993d79686605d2c863acf07a5478040fe7349c6eab33e6ff6e5136a986e9_0", "is_ignored": false, "lines": "  strncpy(acStack_10c8,param_6_00,0x10);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 10, "line": 201, "offset": 7317}, "start": {"col": 3, "line": 201, "offset": 7310}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 3, "line": 201, "offset": 7310}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 82, "line": 222, "offset": 8132}, "extra": {"engine_kind": "OSS", "fingerprint": "97d94cbb24d105702dbd97fd7680f3d11d2f553e8e7fd1c1cdd8f270e655431b8e6395ae59ba8438d2d58a1e2584c2b93a603f43fd1395ac44e1ae8c1d044c1b_1", "is_ignored": false, "lines": "    memcpy((void *)((int)&local_10b8 + local_10f4),&local_10a8,0x10 - local_10f4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 222, "offset": 8061}, "start": {"col": 5, "line": 222, "offset": 8055}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 5, "line": 222, "offset": 8055}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 82, "line": 222, "offset": 8132}, "extra": {"engine_kind": "OSS", "fingerprint": "8426694528264025d0b38d99880b02046868bd3eb0ecb71974772fba551a86017df7e879ca6fce657b855cfb77571911e6708c91624150ebf1e3566bf74d8e06_0", "is_ignored": false, "lines": "    memcpy((void *)((int)&local_10b8 + local_10f4),&local_10a8,0x10 - local_10f4);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "void*int&local_10b8+local_10f4", "end": {"col": 50, "line": 222, "offset": 8100}, "start": {"col": 13, "line": 222, "offset": 8063}}, "$LEN": {"abstract_content": "0x10-local_10f4", "end": {"col": 81, "line": 222, "offset": 8131}, "start": {"col": 64, "line": 222, "offset": 8114}}, "$SRC": {"abstract_content": "&local_10a8", "end": {"col": 63, "line": 222, "offset": 8113}, "start": {"col": 52, "line": 222, "offset": 8102}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 5, "line": 222, "offset": 8055}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 89, "line": 243, "offset": 9147}, "extra": {"engine_kind": "OSS", "fingerprint": "85ab652a2df442e062082aa086f0760d2fdfdb404cb9e0d8b03f257f6b588b92f7732869a31c377e9fb789b200f5b449de8c197144501dc3c59c367409fb9d96_6", "is_ignored": false, "lines": "        snprintf(param_8 + sVar5,(param_9 - sVar6) - 1,\"%d  \",(&local_10a8)[local_10e8]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 17, "line": 243, "offset": 9075}, "start": {"col": 9, "line": 243, "offset": 9067}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 9, "line": 243, "offset": 9067}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 69, "line": 253, "offset": 9534}, "extra": {"engine_kind": "OSS", "fingerprint": "85ab652a2df442e062082aa086f0760d2fdfdb404cb9e0d8b03f257f6b588b92f7732869a31c377e9fb789b200f5b449de8c197144501dc3c59c367409fb9d96_7", "is_ignored": false, "lines": "            snprintf(param_8 + sVar5,(param_9 - sVar6) - 1,\"%d  \",\n                     (uint)*(byte *)((int)&local_10a8 + local_10e8));", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 21, "line": 252, "offset": 9419}, "start": {"col": 13, "line": 252, "offset": 9411}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 13, "line": 252, "offset": 9411}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 75, "line": 261, "offset": 9814}, "extra": {"engine_kind": "OSS", "fingerprint": "85ab652a2df442e062082aa086f0760d2fdfdb404cb9e0d8b03f257f6b588b92f7732869a31c377e9fb789b200f5b449de8c197144501dc3c59c367409fb9d96_8", "is_ignored": false, "lines": "          snprintf(param_8 + sVar5,(param_9 - sVar6) - 1,\"%s\",&local_10a8);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 19, "line": 261, "offset": 9758}, "start": {"col": 11, "line": 261, "offset": 9750}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 11, "line": 261, "offset": 9750}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 72, "line": 276, "offset": 10397}, "extra": {"engine_kind": "OSS", "fingerprint": "85ab652a2df442e062082aa086f0760d2fdfdb404cb9e0d8b03f257f6b588b92f7732869a31c377e9fb789b200f5b449de8c197144501dc3c59c367409fb9d96_9", "is_ignored": false, "lines": "                snprintf(param_8 + sVar5,(param_9 - sVar6) - 1,\"%gk  \");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 25, "line": 276, "offset": 10350}, "start": {"col": 17, "line": 276, "offset": 10342}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 17, "line": 276, "offset": 10342}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 72, "line": 284, "offset": 10708}, "extra": {"engine_kind": "OSS", "fingerprint": "85ab652a2df442e062082aa086f0760d2fdfdb404cb9e0d8b03f257f6b588b92f7732869a31c377e9fb789b200f5b449de8c197144501dc3c59c367409fb9d96_10", "is_ignored": false, "lines": "                snprintf(param_8 + sVar5,(param_9 - sVar6) - 1,\"%gM  \");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 25, "line": 284, "offset": 10661}, "start": {"col": 17, "line": 284, "offset": 10653}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 17, "line": 284, "offset": 10653}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 70, "line": 293, "offset": 11023}, "extra": {"engine_kind": "OSS", "fingerprint": "85ab652a2df442e062082aa086f0760d2fdfdb404cb9e0d8b03f257f6b588b92f7732869a31c377e9fb789b200f5b449de8c197144501dc3c59c367409fb9d96_11", "is_ignored": false, "lines": "              snprintf(param_8 + sVar5,(param_9 - sVar6) - 1,\"%gG  \");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 23, "line": 293, "offset": 10976}, "start": {"col": 15, "line": 293, "offset": 10968}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 15, "line": 293, "offset": 10968}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 43, "line": 308, "offset": 11611}, "extra": {"engine_kind": "OSS", "fingerprint": "85ab652a2df442e062082aa086f0760d2fdfdb404cb9e0d8b03f257f6b588b92f7732869a31c377e9fb789b200f5b449de8c197144501dc3c59c367409fb9d96_12", "is_ignored": false, "lines": "              snprintf(param_8 + sVar5,(param_9 - sVar6) - 1,\"           %.*s\",sVar9,\n                       \"                \");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 23, "line": 307, "offset": 11505}, "start": {"col": 15, "line": 307, "offset": 11497}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 15, "line": 307, "offset": 11497}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 74, "line": 314, "offset": 11839}, "extra": {"engine_kind": "OSS", "fingerprint": "85ab652a2df442e062082aa086f0760d2fdfdb404cb9e0d8b03f257f6b588b92f7732869a31c377e9fb789b200f5b449de8c197144501dc3c59c367409fb9d96_13", "is_ignored": false, "lines": "          snprintf(param_8 + sVar5,(param_9 - sVar6) - 1,\"%s\",auStack_98);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 19, "line": 314, "offset": 11784}, "start": {"col": 11, "line": 314, "offset": 11776}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 11, "line": 314, "offset": 11776}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 81, "line": 320, "offset": 12021}, "extra": {"engine_kind": "OSS", "fingerprint": "85ab652a2df442e062082aa086f0760d2fdfdb404cb9e0d8b03f257f6b588b92f7732869a31c377e9fb789b200f5b449de8c197144501dc3c59c367409fb9d96_14", "is_ignored": false, "lines": "      snprintf(param_8 + sVar5,(param_9 - sVar6) - 1,\"Not yet implemented...\\n\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 15, "line": 320, "offset": 11955}, "start": {"col": 7, "line": 320, "offset": 11947}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c", "start": {"col": 7, "line": 320, "offset": 11947}}], "skipped_rules": [], "version": "1.62.0"}
