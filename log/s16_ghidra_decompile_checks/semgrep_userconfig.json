{"errors": [], "interfile_languages_used": [], "paths": {"scanned": ["/tmp/haruspex_userconfig/FUN_00400ba0_00400ba0.c", "/tmp/haruspex_userconfig/FUN_00400c74_00400c74.c", "/tmp/haruspex_userconfig/FUN_00400ce0_00400ce0.c", "/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c", "/tmp/haruspex_userconfig/FUN_00401170_00401170.c", "/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c", "/tmp/haruspex_userconfig/FUN_004018a4_004018a4.c", "/tmp/haruspex_userconfig/FUN_00401a1c_00401a1c.c", "/tmp/haruspex_userconfig/FUN_00401b00_00401b00.c", "/tmp/haruspex_userconfig/FUN_00401c74_00401c74.c", "/tmp/haruspex_userconfig/FUN_00401d20_00401d20.c", "/tmp/haruspex_userconfig/FUN_00401e68_00401e68.c", "/tmp/haruspex_userconfig/FUN_00401fac_00401fac.c", "/tmp/haruspex_userconfig/FUN_00402140_00402140.c", "/tmp/haruspex_userconfig/FUN_004026d0_004026d0.c", "/tmp/haruspex_userconfig/_fini_004029c0.c", "/tmp/haruspex_userconfig/_ftext_00400b40.c", "/tmp/haruspex_userconfig/_init_00400ac4.c", "/tmp/haruspex_userconfig/main_004023a4.c"]}, "results": [{"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 47, "line": 27, "offset": 521}, "extra": {"engine_kind": "OSS", "fingerprint": "7e86c027f53dced1d76e5b925507452f71d1604a0a20d222f8602ad0febd8e6abc34a2612f93f3b581bb77b4811e48e492a2a96b8d1ec0ec9afebdf0aaee7086_0", "is_ignored": false, "lines": "  memset((char *)((int)&local_158 + 1),0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 41, "line": 27, "offset": 515}, "start": {"col": 40, "line": 27, "offset": 514}}, "$DST": {"abstract_content": "(char*(int&local_158+1", "end": {"col": 38, "line": 27, "offset": 512}, "start": {"col": 10, "line": 27, "offset": 484}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 46, "line": 27, "offset": 520}, "start": {"col": 42, "line": 27, "offset": 516}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c", "start": {"col": 3, "line": 27, "offset": 477}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 46, "line": 29, "offset": 602}, "extra": {"engine_kind": "OSS", "fingerprint": "626bee6e087929b47c3934385b1d41a36055a496c87113544a9454bdd2c4431d822cb010cb9c9883126f6915b13342637c896eb48d7d39d8bef8e07e24131f79_0", "is_ignored": false, "lines": "  memset((void *)((int)&local_58 + 1),0,0x13);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 40, "line": 29, "offset": 596}, "start": {"col": 39, "line": 29, "offset": 595}}, "$DST": {"abstract_content": "(void*(int&local_58+1", "end": {"col": 37, "line": 29, "offset": 593}, "start": {"col": 10, "line": 29, "offset": 566}}, "$LEN": {"abstract_content": "0x13", "end": {"col": 45, "line": 29, "offset": 601}, "start": {"col": 41, "line": 29, "offset": 597}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c", "start": {"col": 3, "line": 29, "offset": 559}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat", "end": {"col": 43, "line": 31, "offset": 662}, "extra": {"engine_kind": "OSS", "fingerprint": "ec8cc198f9afd684ef4ae1b6d47f39cc2ea789e7900e5756f9955adb2f309a32295772845d49fe17141786d872c78c41054dd78e8427514d20dda625a76a9a20_0", "is_ignored": false, "lines": "  iVar1 = stat(\"/tmp/sys_env\",&sStack_1f0);", "message": "The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/367", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c", "start": {"col": 11, "line": 31, "offset": 630}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 43, "line": 31, "offset": 662}, "extra": {"engine_kind": "OSS", "fingerprint": "d04c39ddf8d0967f79857cb6ba16e04b5663185f165e178b6ae6873d1287b872e2e0e18b78a48eff27bc068d5be57cea46de7cc6576a514e79aaa307a1ff2031_0", "is_ignored": false, "lines": "  iVar1 = stat(\"/tmp/sys_env\",&sStack_1f0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "stat", "end": {"col": 15, "line": 31, "offset": 634}, "start": {"col": 11, "line": 31, "offset": 630}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c", "start": {"col": 11, "line": 31, "offset": 630}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 27, "line": 33, "offset": 710}, "extra": {"engine_kind": "OSS", "fingerprint": "ca80c839e7742e6caca61f834f129c95a17e6aee2099d783e0fc824376a9a2300b40dcdcf34ed6f6bfe413da1198276f1eab9959bc1b079a1549c3b7b3ea09be_0", "is_ignored": false, "lines": "    unlink(\"/tmp/sys_env\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "unlink", "end": {"col": 11, "line": 33, "offset": 694}, "start": {"col": 5, "line": 33, "offset": 688}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c", "start": {"col": 5, "line": 33, "offset": 688}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 78, "line": 35, "offset": 793}, "extra": {"engine_kind": "OSS", "fingerprint": "70652f0c29f74533435fd30b3c83f2e67d4556998a80d88d29cfff60d6dc68d81f62778e92c2f1e5b2577cf599012df2c4eec8ec5c118c8f91f1f9f5adcf31a6_0", "is_ignored": false, "lines": "  system(\"/bin/dd if=/dev/mtdblock1 of=/tmp/sys_env 1>/dev/null 2>/dev/null\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 9, "line": 35, "offset": 724}, "start": {"col": 3, "line": 35, "offset": 718}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c", "start": {"col": 3, "line": 35, "offset": 718}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 36, "offset": 834}, "extra": {"engine_kind": "OSS", "fingerprint": "db435256c9689cb5f74160b731eecb12eafe93c5987c952cf91d66051f858f61a0592ce81c0f2d86002e0671987f63f14af33c967ecfb4ac63afa7da831d97f2_0", "is_ignored": false, "lines": "  __stream = fopen(\"/tmp/sys_env\",\"rb\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "fopen", "end": {"col": 19, "line": 36, "offset": 813}, "start": {"col": 14, "line": 36, "offset": 808}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c", "start": {"col": 14, "line": 36, "offset": 808}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 39, "offset": 932}, "extra": {"engine_kind": "OSS", "fingerprint": "5cc9e72e69349126f20ceef9502f4aa2fdb8769412679f5e53a3d9b56cf7356e7714cb4bbf6292c439120d7ba8bb25c81bf96ccc55925092538872cd0b6cc2c9_0", "is_ignored": false, "lines": "    fread(&local_158,1,0x100,__stream);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "fread", "end": {"col": 10, "line": 39, "offset": 903}, "start": {"col": 5, "line": 39, "offset": 898}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c", "start": {"col": 5, "line": 39, "offset": 898}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 39, "offset": 932}, "extra": {"engine_kind": "OSS", "fingerprint": "abc875e5bcf10064734b4f316358a6c03039d1358bf34ca98a1ba60ad33d19fd2973b9960dae265b84ba0662ce9a30f4bf5f328d8f0e448ff4bb476cef680f04_0", "is_ignored": false, "lines": "    fread(&local_158,1,0x100,__stream);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$FS": {"abstract_content": "__stream", "end": {"col": 38, "line": 39, "offset": 931}, "propagated_value": {"svalue_abstract_content": "fopen(\"/tmp/sys_env\"\"rb\")", "svalue_end": {"col": 40, "line": 36, "offset": 834}, "svalue_start": {"col": 14, "line": 36, "offset": 808}}, "start": {"col": 30, "line": 39, "offset": 923}}, "$LEN": {"abstract_content": "1", "end": {"col": 23, "line": 39, "offset": 916}, "start": {"col": 22, "line": 39, "offset": 915}}, "$NITEMS": {"abstract_content": "0x100", "end": {"col": 29, "line": 39, "offset": 922}, "start": {"col": 24, "line": 39, "offset": 917}}, "$PTR": {"abstract_content": "&local_158", "end": {"col": 21, "line": 39, "offset": 914}, "start": {"col": 11, "line": 39, "offset": 904}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c", "start": {"col": 5, "line": 39, "offset": 898}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 59, "line": 58, "offset": 1520}, "extra": {"engine_kind": "OSS", "fingerprint": "5272abaa99fa58f05e5edbbec681320cf33312cfcb1284e905251644f6330489ec5d4f98bd86e9b2d061316717f791fba21b5e1c6dc43fa3ceca026202313c45_0", "is_ignored": false, "lines": "        memcpy(&local_58,pcVar2,(int)pcVar3 - (int)pcVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 15, "line": 58, "offset": 1476}, "start": {"col": 9, "line": 58, "offset": 1470}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c", "start": {"col": 9, "line": 58, "offset": 1470}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 59, "line": 58, "offset": 1520}, "extra": {"engine_kind": "OSS", "fingerprint": "d14ce04d5bcd54264eb62b2c1983a54ea92536b36d5a9dcb7921ccf2dfe312d5ecff3ebd03c66f9bd217816ceecc22326e5a5d44ad6883f748fcd8477688395e_0", "is_ignored": false, "lines": "        memcpy(&local_58,pcVar2,(int)pcVar3 - (int)pcVar2);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "&local_58", "end": {"col": 25, "line": 58, "offset": 1486}, "start": {"col": 16, "line": 58, "offset": 1477}}, "$LEN": {"abstract_content": "(int pcVar3-(int pcVar2", "end": {"col": 58, "line": 58, "offset": 1519}, "start": {"col": 33, "line": 58, "offset": 1494}}, "$SRC": {"abstract_content": "pcVar2", "end": {"col": 32, "line": 58, "offset": 1493}, "propagated_value": {"svalue_abstract_content": "pcVar2+4", "svalue_end": {"col": 28, "line": 56, "offset": 1424}, "svalue_start": {"col": 18, "line": 56, "offset": 1414}}, "start": {"col": 26, "line": 58, "offset": 1487}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c", "start": {"col": 9, "line": 58, "offset": 1470}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-pointer-subtraction", "end": {"col": 58, "line": 58, "offset": 1519}, "extra": {"engine_kind": "OSS", "fingerprint": "e7a5f0edba4bd8a6f4b58c729fadea5c8289aed07b9efefa75cb17f5fffec8c616daf63a614fc6d2aac4dab8543bf7f78b2ca33757f27567367650395c93d355_0", "is_ignored": false, "lines": "        memcpy(&local_58,pcVar2,(int)pcVar3 - (int)pcVar2);", "message": "The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/469", "https://github.com/struct/mms"]}, "metavars": {"$PTR1": {"abstract_content": "pcVar2", "end": {"col": 58, "line": 58, "offset": 1519}, "propagated_value": {"svalue_abstract_content": "pcVar2+4", "svalue_end": {"col": 28, "line": 56, "offset": 1424}, "svalue_start": {"col": 18, "line": 56, "offset": 1414}}, "start": {"col": 52, "line": 58, "offset": 1513}}, "$PTR2": {"abstract_content": "pcVar3", "end": {"col": 44, "line": 58, "offset": 1505}, "propagated_value": {"svalue_abstract_content": "strchr(pcVar2 10)", "svalue_end": {"col": 35, "line": 57, "offset": 1460}, "svalue_start": {"col": 18, "line": 57, "offset": 1443}}, "start": {"col": 38, "line": 58, "offset": 1499}}, "$TYPE": {"abstract_content": "char", "end": {"col": 7, "line": 9, "offset": 121}, "start": {"col": 3, "line": 9, "offset": 117}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c", "start": {"col": 33, "line": 58, "offset": 1494}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 55, "line": 78, "offset": 2144}, "extra": {"engine_kind": "OSS", "fingerprint": "5272abaa99fa58f05e5edbbec681320cf33312cfcb1284e905251644f6330489ec5d4f98bd86e9b2d061316717f791fba21b5e1c6dc43fa3ceca026202313c45_1", "is_ignored": false, "lines": "    memcpy(&local_44,pcVar2,(int)pcVar3 - (int)pcVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 11, "line": 78, "offset": 2100}, "start": {"col": 5, "line": 78, "offset": 2094}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c", "start": {"col": 5, "line": 78, "offset": 2094}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 55, "line": 78, "offset": 2144}, "extra": {"engine_kind": "OSS", "fingerprint": "7b67c0f3b963601524ece9e4f8ed4052c3d614c0626ee654063d8b3011d7b7a396c1d341334fd211c55771de33cee54076a5537b55c9094075e77d6f69821886_0", "is_ignored": false, "lines": "    memcpy(&local_44,pcVar2,(int)pcVar3 - (int)pcVar2);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "&local_44", "end": {"col": 21, "line": 78, "offset": 2110}, "start": {"col": 12, "line": 78, "offset": 2101}}, "$LEN": {"abstract_content": "(int pcVar3-(int pcVar2", "end": {"col": 54, "line": 78, "offset": 2143}, "start": {"col": 29, "line": 78, "offset": 2118}}, "$SRC": {"abstract_content": "pcVar2", "end": {"col": 28, "line": 78, "offset": 2117}, "propagated_value": {"svalue_abstract_content": "pcVar2+7", "svalue_end": {"col": 24, "line": 76, "offset": 2056}, "svalue_start": {"col": 14, "line": 76, "offset": 2046}}, "start": {"col": 22, "line": 78, "offset": 2111}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c", "start": {"col": 5, "line": 78, "offset": 2094}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-pointer-subtraction", "end": {"col": 54, "line": 78, "offset": 2143}, "extra": {"engine_kind": "OSS", "fingerprint": "e7a5f0edba4bd8a6f4b58c729fadea5c8289aed07b9efefa75cb17f5fffec8c616daf63a614fc6d2aac4dab8543bf7f78b2ca33757f27567367650395c93d355_1", "is_ignored": false, "lines": "    memcpy(&local_44,pcVar2,(int)pcVar3 - (int)pcVar2);", "message": "The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/469", "https://github.com/struct/mms"]}, "metavars": {"$PTR1": {"abstract_content": "pcVar2", "end": {"col": 54, "line": 78, "offset": 2143}, "propagated_value": {"svalue_abstract_content": "pcVar2+7", "svalue_end": {"col": 24, "line": 76, "offset": 2056}, "svalue_start": {"col": 14, "line": 76, "offset": 2046}}, "start": {"col": 48, "line": 78, "offset": 2137}}, "$PTR2": {"abstract_content": "pcVar3", "end": {"col": 40, "line": 78, "offset": 2129}, "propagated_value": {"svalue_abstract_content": "strchr(pcVar2 10)", "svalue_end": {"col": 31, "line": 77, "offset": 2088}, "svalue_start": {"col": 14, "line": 77, "offset": 2071}}, "start": {"col": 34, "line": 78, "offset": 2123}}, "$TYPE": {"abstract_content": "char", "end": {"col": 7, "line": 9, "offset": 121}, "start": {"col": 3, "line": 9, "offset": 117}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c", "start": {"col": 29, "line": 78, "offset": 2118}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 69, "offset": 1571}, "extra": {"engine_kind": "OSS", "fingerprint": "11e7e638871b4d5af02b872d03842d62c876f59b6f653bbfd15e8aafab77d422d7f48d8f90245d9efcd28badcf6bcf9752830ab2d759f9dd0277cee813dc276f_0", "is_ignored": false, "lines": "    sVar4 = 1 << (iVar2 - 5U & 0x1f);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "1", "end": {"col": 14, "line": 69, "offset": 1549}, "start": {"col": 13, "line": 69, "offset": 1548}}, "$UNSIGNED": {"abstract_content": "sVar4", "end": {"col": 10, "line": 69, "offset": 1545}, "start": {"col": 5, "line": 69, "offset": 1540}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00401170_00401170.c", "start": {"col": 5, "line": 69, "offset": 1540}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 41, "line": 105, "offset": 2453}, "extra": {"engine_kind": "OSS", "fingerprint": "ee752f5352cf06d56cebe7c6e393057bb075516770568d255d15ed43fae64bd6f559db1b2935a73500ffa69059fe60bfa2c7016e2f03ee7607ef91cf00245a6e_0", "is_ignored": false, "lines": "      strcpy((char *)local_228,*param_5);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00401170_00401170.c", "start": {"col": 7, "line": 105, "offset": 2419}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 105, "offset": 2453}, "extra": {"engine_kind": "OSS", "fingerprint": "6759731c0b68ddb0037f061d4bfc31e37eca755dd6af3163904d90939a542eef1b308ae81d881725492a234178520d96263ba6925ef7329173fc4ea24f716547_0", "is_ignored": false, "lines": "      strcpy((char *)local_228,*param_5);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 13, "line": 105, "offset": 2425}, "start": {"col": 7, "line": 105, "offset": 2419}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00401170_00401170.c", "start": {"col": 7, "line": 105, "offset": 2419}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 32, "line": 32, "offset": 575}, "extra": {"engine_kind": "OSS", "fingerprint": "6334af0d1a2f52c07f6ab78c60284991571b1b58616c31372ef7cbb61af4663f4b2509bc1bb20d448e90b1857d6fc1c90cb84fb95bd30b629357d56b326633bb_0", "is_ignored": false, "lines": "  memset(local_acc + 1,0,0x1ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 25, "line": 32, "offset": 568}, "start": {"col": 24, "line": 32, "offset": 567}}, "$DST": {"abstract_content": "local_acc+1", "end": {"col": 23, "line": 32, "offset": 566}, "start": {"col": 10, "line": 32, "offset": 553}}, "$LEN": {"abstract_content": "0x1ff", "end": {"col": 31, "line": 32, "offset": 574}, "start": {"col": 26, "line": 32, "offset": 569}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c", "start": {"col": 3, "line": 32, "offset": 546}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 34, "offset": 626}, "extra": {"engine_kind": "OSS", "fingerprint": "80827f812f9eb78fcd794dfc6a11b28ad034d8454805a9d197806cca1e8add193329d67d17aa4e9b7cd50a2818a1b3c23a7fa70e079acf6981a0475cbb8bd2d4_0", "is_ignored": false, "lines": "  memset(auStack_4cb,0,0x47f);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 23, "line": 34, "offset": 619}, "start": {"col": 22, "line": 34, "offset": 618}}, "$DST": {"abstract_content": "auStack_4cb", "end": {"col": 21, "line": 34, "offset": 617}, "start": {"col": 10, "line": 34, "offset": 606}}, "$LEN": {"abstract_content": "0x47f", "end": {"col": 29, "line": 34, "offset": 625}, "start": {"col": 24, "line": 34, "offset": 620}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c", "start": {"col": 3, "line": 34, "offset": 599}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 34, "line": 40, "offset": 745}, "extra": {"engine_kind": "OSS", "fingerprint": "5afdf8609711e2afcb6b1da1ecc329544e55d1aa89cc4b0d8504fe3b2533d552f2869dd22c896fca6922f755be6e3727dedeff04693a7b9f49990329d31a64bc_0", "is_ignored": false, "lines": "    memset(local_8cc + 1,0,0x3ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 27, "line": 40, "offset": 738}, "start": {"col": 26, "line": 40, "offset": 737}}, "$DST": {"abstract_content": "local_8cc+1", "end": {"col": 25, "line": 40, "offset": 736}, "start": {"col": 12, "line": 40, "offset": 723}}, "$LEN": {"abstract_content": "0x3ff", "end": {"col": 33, "line": 40, "offset": 744}, "start": {"col": 28, "line": 40, "offset": 739}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c", "start": {"col": 5, "line": 40, "offset": 716}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 58, "offset": 1487}, "extra": {"engine_kind": "OSS", "fingerprint": "a7514f9d8bc6ede5318d8bef5bf4c95684cc6296841ecd62a3b1027d406ceaa8991b1b506709447b88bc7b3c67a7f1858af80f2d0a47f5344f8e3c51a5ac9b3d_0", "is_ignored": false, "lines": "            memset(local_acc,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 31, "line": 58, "offset": 1480}, "start": {"col": 30, "line": 58, "offset": 1479}}, "$DST": {"abstract_content": "local_acc", "end": {"col": 29, "line": 58, "offset": 1478}, "start": {"col": 20, "line": 58, "offset": 1469}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 37, "line": 58, "offset": 1486}, "start": {"col": 32, "line": 58, "offset": 1481}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c", "start": {"col": 13, "line": 58, "offset": 1462}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 62, "offset": 1668}, "extra": {"engine_kind": "OSS", "fingerprint": "b6abd0354aa246aff4344f81025d0d5adcb33569a3fddc35704e38aedd153c3dad5310c53e078dfa19eb0dc31042be98ab97d9a4491f0eb3b8c1213fb5403e11_0", "is_ignored": false, "lines": "              memset(local_38,0,0x400);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 32, "line": 62, "offset": 1661}, "start": {"col": 31, "line": 62, "offset": 1660}}, "$DST": {"abstract_content": "local_38", "end": {"col": 30, "line": 62, "offset": 1659}, "start": {"col": 22, "line": 62, "offset": 1651}}, "$LEN": {"abstract_content": "0x400", "end": {"col": 38, "line": 62, "offset": 1667}, "start": {"col": 33, "line": 62, "offset": 1662}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c", "start": {"col": 15, "line": 62, "offset": 1644}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-format-string-bugs", "end": {"col": 67, "line": 73, "offset": 2165}, "extra": {"engine_kind": "OSS", "fingerprint": "ae6732b0a091a406b74b1d2e3670758170be95110b33679c9edc7d60660cf5535890f7489a6da41359ff56e1278b4292ac603685efb04fd213858fbbed10275e_0", "is_ignored": false, "lines": "              fprintf(stderr,local_30,local_44,local_40,local_acc);", "message": "The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/134", "https://julianor.tripod.com/bc/formatstring-1.2.pdf", "http://phrack.org/issues/70/13.html#article", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c", "start": {"col": 15, "line": 73, "offset": 2113}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-format-string-bugs", "end": {"col": 76, "line": 74, "offset": 2242}, "extra": {"engine_kind": "OSS", "fingerprint": "ae6732b0a091a406b74b1d2e3670758170be95110b33679c9edc7d60660cf5535890f7489a6da41359ff56e1278b4292ac603685efb04fd213858fbbed10275e_1", "is_ignored": false, "lines": "              sprintf(local_34,local_2c,param_1,local_44,local_40,local_38);", "message": "The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/134", "https://julianor.tripod.com/bc/formatstring-1.2.pdf", "http://phrack.org/issues/70/13.html#article", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c", "start": {"col": 15, "line": 74, "offset": 2181}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 76, "line": 74, "offset": 2242}, "extra": {"engine_kind": "OSS", "fingerprint": "f9a721b20272687cfeecc40635f55d4a488c90407c6641571ec17e0dcffc3699f25a1c3c5da1b471a1269736e9c52c7a3ce7e75cb6f5fd68066ff5eed9de7525_0", "is_ignored": false, "lines": "              sprintf(local_34,local_2c,param_1,local_44,local_40,local_38);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "local_2c", "end": {"col": 9, "line": 1, "offset": 8}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_34", "end": {"col": 31, "line": 74, "offset": 2197}, "start": {"col": 23, "line": 74, "offset": 2189}}, "$FMT": {"abstract_content": "local_2c", "end": {"col": 40, "line": 74, "offset": 2206}, "start": {"col": 32, "line": 74, "offset": 2198}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c", "start": {"col": 15, "line": 74, "offset": 2181}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 76, "line": 74, "offset": 2242}, "extra": {"engine_kind": "OSS", "fingerprint": "a38a5d3346e512940c27a7d074cb93a1899386d564b8c5972cecb2fcffe559ea97736d7a4c95b339a941bff70ebfe64c8ce1ee847952fa3fb36372307f66626f_0", "is_ignored": false, "lines": "              sprintf(local_34,local_2c,param_1,local_44,local_40,local_38);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 22, "line": 74, "offset": 2188}, "start": {"col": 15, "line": 74, "offset": 2181}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c", "start": {"col": 15, "line": 74, "offset": 2181}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 31, "line": 75, "offset": 2274}, "extra": {"engine_kind": "OSS", "fingerprint": "762ab45f6a3dffd33ae18fd4430840ade5c701b0fb5a9856c0d43dde6ee1cdeefe6391b5737453eb6318ad93b516601d9d73406d6b2ea2cfdd77e2c79f9c18a0_0", "is_ignored": false, "lines": "              system(local_34);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c", "start": {"col": 15, "line": 75, "offset": 2258}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 31, "line": 75, "offset": 2274}, "extra": {"engine_kind": "OSS", "fingerprint": "2a760753064bcee74f0878f1df85a03df21aeaaabaa1626d60b7c934263af48554a32a8b061358987f1d1a043d9aaf37a7e43f7698a882f32f0c208975c93470_0", "is_ignored": false, "lines": "              system(local_34);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 21, "line": 75, "offset": 2264}, "start": {"col": 15, "line": 75, "offset": 2258}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c", "start": {"col": 15, "line": 75, "offset": 2258}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 34, "line": 24, "offset": 417}, "extra": {"engine_kind": "OSS", "fingerprint": "6ec5df376c950943eb39ce36d6f9027eb3c427c8d08dd1885b292bfab5144422fc1b15c5caf369492a631185882d37e7331888f380b5f034251c1dd4fd82a370_0", "is_ignored": false, "lines": "    __stream = fopen(param_1,\"w\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "fopen", "end": {"col": 21, "line": 24, "offset": 404}, "start": {"col": 16, "line": 24, "offset": 399}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_userconfig/FUN_00402140_00402140.c", "start": {"col": 16, "line": 24, "offset": 399}}], "skipped_rules": [], "version": "1.89.0"}
