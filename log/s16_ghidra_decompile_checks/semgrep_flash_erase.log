

[[0;33m*[0m] Binary protection state of [0;33mflash_erase[0m

  	RELRO          CANARY            NX           PIE          RPATH        RUNPATH      SYMBOLS      
  	[31mNo RELRO[0m       [31mNo Canary found[0m   [31mNX disabled[0m  [31mNo PIE[0m       [32mNo RPATH[0m     [32mNo RUNPATH[0m   [31mSymbols[0m


-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/dev_get_major_00401c60.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/dev_get_major_00401c60.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m21[0m - [0;33miVar1 = -(sVar2 + 0x40 & 0xfffffff8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/dev_read_pos_int_004021f8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/dev_read_pos_int_004021f8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m22[0m - [0;33miVar1 = -(sVar2 + 0x40 & 0xfffffff8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/sysfs_is_supported_004026a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/sysfs_is_supported_004026a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m27[0m - [0;33miVar1 = -(sVar2 + 0x18 & 0xfffffff8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/dev_read_hex_int_00402324.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/dev_read_hex_int_00402324.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m24[0m - [0;33miVar1 = -(sVar2 + 0x40 & 0xfffffff8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/xmalloc_00402a8c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/xmalloc_00402a8c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m11[0m - [0;33mpvVar1 = malloc(size);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/main_00400b90.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/main_00400b90.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m38[0m - [0;33miVar5 = getopt_long(argc,argv,&DAT_00406170,main::lexical_block_0::long_options);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/main_00400b90.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/main_00400b90.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m92[0m - [0;33mdesc = libmtd_open();[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/main_00400b90.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/main_00400b90.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m97[0m - [0;33miVar5 = open64(mtd_device,2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_dev_present_00403348.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_dev_present_00403348.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m15[0m - [0;33miVar2 = (int)&local_c0 - (sVar1 + 0x18 & 0xfffffff8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_get_info_00402c34.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_get_info_00402c34.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-scanf-etc[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m45[0m - [0;33miVar5 = sscanf(pcVar6,"mtd%d%s",&local_128,tmp_buf);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_get_info_00402c34.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_get_info_00402c34.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m45[0m - [0;33miVar5 = sscanf(pcVar6,"mtd%d%s",&local_128,tmp_buf);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_get_info_00403434.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_get_info_00403434.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m7[0m - [0;33mmemset(info,0,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_get_dev_info1_004034b8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_get_dev_info1_004034b8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m18[0m - [0;33mmemset(mtd,0,0x100);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mkpath_00402b6c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mkpath_00402b6c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m12[0m - [0;33m__dest = (char *)xmalloc(__n + sVar1 + 2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mkpath_00402b6c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mkpath_00402b6c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m13[0m - [0;33mmemcpy(__dest,path,__n);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mkpath_00402b6c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mkpath_00402b6c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m19[0m - [0;33mmemcpy(__dest_00,name,sVar1 + 1);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/libmtd_open_0040308c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/libmtd_open_0040308c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m11[0m - [0;33mlib = (libmtd *)calloc(1,0x34);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/libmtd_open_0040308c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/libmtd_open_0040308c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m11[0m - [0;33mlib = (libmtd *)calloc(1,0x34);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_pos_ll_00401ea8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_pos_ll_00401ea8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m13[0m - [0;33miVar2 = open64(file,0x80000);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_pos_ll_00401ea8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_pos_ll_00401ea8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m15[0m - [0;33msVar3 = read(iVar2,buf,0x32);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_pos_ll_00401ea8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_pos_ll_00401ea8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m15[0m - [0;33msVar3 = read(iVar2,buf,0x32);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_pos_ll_00401ea8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_pos_ll_00401ea8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m29[0m - [0;33miVar4 = sscanf(buf,"%lld
    ",value);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m14[0m - [0;33miVar2 = open64(file,0x80000);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m18[0m - [0;33msVar3 = read(iVar2,buf,buf_len);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m18[0m - [0;33msVar3 = read(iVar2,buf,buf_len);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m34[0m - [0;33msVar4 = read(iVar2,&tmp,1);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m34[0m - [0;33msVar4 = read(iVar2,&tmp,1);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info1_00405258.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info1_00405258.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m9[0m - [0;33msprintf(node,"/dev/mtd%d",mtd_num,in_a3,&_gp);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_next_00404794.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_next_00404794.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m17[0m - [0;33miVar1 = sscanf(pi->next,"mtd%d: %llx %x",pi,&pi->size,&pi->eb_size);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_next_00404794.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_next_00404794.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m31[0m - [0;33m(__n = (int)pvVar2 - (int)__s, iVar1 <= (int)pvVar2 - (int)pcVar4)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_next_00404794.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_next_00404794.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m39[0m - [0;33mmemcpy(pi->name,__s,__n);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info_00404aac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info_00404aac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m46[0m - [0;33mmemset(mtd,0,0x100);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info_00404aac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info_00404aac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m59[0m - [0;33miVar1 = open64(node,0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info_00404aac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info_00404aac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m205[0m - [0;33mstrcpy(mtd->name,pi.name);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info_00404aac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info_00404aac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m205[0m - [0;33mstrcpy(mtd->name,pi.name);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m12[0m - [0;33miVar2 = open64("/proc/mtd",0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m14[0m - [0;33mpcVar3 = (char *)malloc(0x1000);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m14[0m - [0;33mpcVar3 = (char *)malloc(0x1000);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m26[0m - [0;33muVar4 = read(iVar2,pcVar3,0x1000);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m26[0m - [0;33muVar4 = read(iVar2,pcVar3,0x1000);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/dev_get_major_00401c60.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/dev_get_major_00401c60.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m21[0m - [0;33miVar1 = -(sVar2 + 0x40 & 0xfffffff8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/dev_read_hex_int_00402324.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/dev_read_hex_int_00402324.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m24[0m - [0;33miVar1 = -(sVar2 + 0x40 & 0xfffffff8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/dev_read_pos_int_004021f8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/dev_read_pos_int_004021f8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m22[0m - [0;33miVar1 = -(sVar2 + 0x40 & 0xfffffff8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info1_00405258.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info1_00405258.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m9[0m - [0;33msprintf(node,"/dev/mtd%d",mtd_num,in_a3,&_gp);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info_00404aac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info_00404aac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m46[0m - [0;33mmemset(mtd,0,0x100);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info_00404aac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info_00404aac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m59[0m - [0;33miVar1 = open64(node,0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info_00404aac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info_00404aac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m205[0m - [0;33mstrcpy(mtd->name,pi.name);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info_00404aac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/legacy_get_dev_info_00404aac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m205[0m - [0;33mstrcpy(mtd->name,pi.name);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/libmtd_open_0040308c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/libmtd_open_0040308c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m11[0m - [0;33mlib = (libmtd *)calloc(1,0x34);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/libmtd_open_0040308c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/libmtd_open_0040308c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m11[0m - [0;33mlib = (libmtd *)calloc(1,0x34);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/main_00400b90.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/main_00400b90.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m38[0m - [0;33miVar5 = getopt_long(argc,argv,&DAT_00406170,main::lexical_block_0::long_options);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/main_00400b90.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/main_00400b90.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m92[0m - [0;33mdesc = libmtd_open();[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/main_00400b90.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/main_00400b90.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m97[0m - [0;33miVar5 = open64(mtd_device,2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mkpath_00402b6c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mkpath_00402b6c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m12[0m - [0;33m__dest = (char *)xmalloc(__n + sVar1 + 2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mkpath_00402b6c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mkpath_00402b6c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m13[0m - [0;33mmemcpy(__dest,path,__n);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mkpath_00402b6c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mkpath_00402b6c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m19[0m - [0;33mmemcpy(__dest_00,name,sVar1 + 1);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_dev_present_00403348.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_dev_present_00403348.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m15[0m - [0;33miVar2 = (int)&local_c0 - (sVar1 + 0x18 & 0xfffffff8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_get_dev_info1_004034b8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_get_dev_info1_004034b8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m18[0m - [0;33mmemset(mtd,0,0x100);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_get_info_00402c34.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_get_info_00402c34.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-scanf-etc[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m45[0m - [0;33miVar5 = sscanf(pcVar6,"mtd%d%s",&local_128,tmp_buf);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_get_info_00402c34.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_get_info_00402c34.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m45[0m - [0;33miVar5 = sscanf(pcVar6,"mtd%d%s",&local_128,tmp_buf);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_get_info_00403434.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/mtd_get_info_00403434.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m7[0m - [0;33mmemset(info,0,0x10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_next_00404794.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_next_00404794.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m17[0m - [0;33miVar1 = sscanf(pi->next,"mtd%d: %llx %x",pi,&pi->size,&pi->eb_size);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_next_00404794.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_next_00404794.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m31[0m - [0;33m(__n = (int)pvVar2 - (int)__s, iVar1 <= (int)pvVar2 - (int)pcVar4)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_next_00404794.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_next_00404794.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m39[0m - [0;33mmemcpy(pi->name,__s,__n);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m12[0m - [0;33miVar2 = open64("/proc/mtd",0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m14[0m - [0;33mpcVar3 = (char *)malloc(0x1000);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m14[0m - [0;33mpcVar3 = (char *)malloc(0x1000);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m26[0m - [0;33muVar4 = read(iVar2,pcVar3,0x1000);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/proc_parse_start_00404514.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m26[0m - [0;33muVar4 = read(iVar2,pcVar3,0x1000);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m14[0m - [0;33miVar2 = open64(file,0x80000);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m18[0m - [0;33msVar3 = read(iVar2,buf,buf_len);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m18[0m - [0;33msVar3 = read(iVar2,buf,buf_len);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m34[0m - [0;33msVar4 = read(iVar2,&tmp,1);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_data_004019d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m34[0m - [0;33msVar4 = read(iVar2,&tmp,1);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_pos_ll_00401ea8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_pos_ll_00401ea8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m13[0m - [0;33miVar2 = open64(file,0x80000);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_pos_ll_00401ea8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_pos_ll_00401ea8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m15[0m - [0;33msVar3 = read(iVar2,buf,0x32);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_pos_ll_00401ea8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_pos_ll_00401ea8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m15[0m - [0;33msVar3 = read(iVar2,buf,0x32);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_pos_ll_00401ea8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/read_pos_ll_00401ea8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m29[0m - [0;33miVar4 = sscanf(buf,"%lld
    ",value);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/sysfs_is_supported_004026a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/sysfs_is_supported_004026a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m27[0m - [0;33miVar1 = -(sVar2 + 0x18 & 0xfffffff8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_flash_erase/xmalloc_00402a8c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_flash_erase/xmalloc_00402a8c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m11[0m - [0;33mpvVar1 = malloc(size);[0m

-----------------------------------------------------------------

