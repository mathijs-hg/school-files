/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,27,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,29,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat,31,The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.
/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,31,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,33,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,35,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,36,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,39,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,39,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,58,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,58,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c,external.semgrep-rules-0xdea.c.raptor-pointer-subtraction,58,The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.
/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,78,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,78,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_userconfig/FUN_00400e00_00400e00.c,external.semgrep-rules-0xdea.c.raptor-pointer-subtraction,78,The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.
/tmp/haruspex_userconfig/FUN_00401170_00401170.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,69,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_userconfig/FUN_00401170_00401170.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,105,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_userconfig/FUN_00401170_00401170.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,105,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,32,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,34,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,40,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,58,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,62,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c,external.semgrep-rules-0xdea.c.raptor-format-string-bugs,73,The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.
/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c,external.semgrep-rules-0xdea.c.raptor-format-string-bugs,74,The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.
/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,74,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,74,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c,external.semgrep-rules-0xdea.c.raptor-command-injection,75,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_userconfig/FUN_004014ec_004014ec.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,75,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_userconfig/FUN_00402140_00402140.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,24,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
