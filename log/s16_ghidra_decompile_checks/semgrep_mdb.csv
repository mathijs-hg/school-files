/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,28,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,33,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,33,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,37,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,39,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,42,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,45,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc,45,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,49,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc,49,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,51,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,53,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,63,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,71,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,71,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,74,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,74,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/DoActionHandle_00409a34.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,76,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,87,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,89,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,92,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,103,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,105,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,117,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,119,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,131,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,133,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,145,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,147,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,167,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,185,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,205,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,207,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,210,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,220,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,221,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,232,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,233,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,244,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,245,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,256,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,257,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,268,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,269,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,280,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,281,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,292,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,293,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,304,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,305,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,316,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,317,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,328,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,329,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,360,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,362,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,364,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,366,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,368,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,370,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,372,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,374,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,376,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,378,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,410,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,412,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,414,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,416,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,418,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,420,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,422,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,424,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,426,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,428,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,432,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,432,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,436,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,436,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,440,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,440,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,444,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,444,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,448,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,448,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,465,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,467,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,469,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,471,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,500,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,502,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,504,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,513,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,515,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,517,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,525,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,629,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,635,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,638,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,642,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,670,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,682,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,686,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,689,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,693,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,708,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-integer-wraparound,715,The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,715,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,718,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,729,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,729,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,729,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,756,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,758,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,760,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,762,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,764,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,766,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,768,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,770,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,771,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,773,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,774,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,775,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,776,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,777,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,779,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,780,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,789,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,789,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,792,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,792,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,795,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,795,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,796,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,796,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,848,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,849,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,864,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-integer-wraparound,871,The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,871,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,874,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,885,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,885,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,885,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,898,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,900,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,901,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,901,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,906,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,925,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,929,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,930,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,930,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,930,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-incorrect-use-of-strncpy-stpncpy-strlcpy,931,The software uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,931,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,931,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,931,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-incorrect-use-of-strncpy-stpncpy-strlcpy,932,The software uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,932,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,932,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,932,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-incorrect-use-of-strncpy-stpncpy-strlcpy,933,The software uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,933,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,933,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,933,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-incorrect-use-of-strncpy-stpncpy-strlcpy,934,The software uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,934,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,934,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,934,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-incorrect-use-of-strncpy-stpncpy-strlcpy,935,The software uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,935,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,935,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,935,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,936,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,936,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,936,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_00401920_00401920.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,947,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00404b88_00404b88.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc,7,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/FUN_00404b88_00404b88.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,7,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00404b88_00404b88.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,7,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00404c1c_00404c1c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,17,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00404c1c_00404c1c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,19,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00404c1c_00404c1c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,21,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00404c1c_00404c1c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,23,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00404c1c_00404c1c.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,41,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/FUN_00404c1c_00404c1c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,41,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00404c1c_00404c1c.c,external.semgrep-rules-0xdea.c.raptor-command-injection,42,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_mdb/FUN_00404c1c_00404c1c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,42,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00404c1c_00404c1c.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-signal,43,The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.
/tmp/haruspex_mdb/FUN_00404c1c_00404c1c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,44,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00404c1c_00404c1c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,45,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00404c1c_00404c1c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,46,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00404c1c_00404c1c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,47,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00404c1c_00404c1c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,48,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00404c1c_00404c1c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,49,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00404e88_00404e88.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,33,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00404e88_00404e88.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,41,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00404e88_00404e88.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,43,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00404e88_00404e88.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,64,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00404e88_00404e88.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,67,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00404e88_00404e88.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,70,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00404e88_00404e88.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,73,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00404e88_00404e88.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,76,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_00404e88_00404e88.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,84,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004053f0_004053f0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,24,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004053f0_004053f0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,25,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004054d4_004054d4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,36,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004054d4_004054d4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,54,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004054d4_004054d4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,56,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004054d4_004054d4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,58,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004054d4_004054d4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,65,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004054d4_004054d4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,72,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004054d4_004054d4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,75,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004054d4_004054d4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,78,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004054d4_004054d4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,85,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,72,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,73,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,73,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,73,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat,74,The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,74,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,76,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,90,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,91,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,91,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,91,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat,92,The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,92,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,94,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,108,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,109,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,109,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,109,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat,110,The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,110,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,112,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,126,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,127,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,127,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,127,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat,128,The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,128,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,130,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,144,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,145,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,145,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,145,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat,146,The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,146,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,148,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,162,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,163,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,163,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,163,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat,164,The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,164,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,166,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,180,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,181,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,181,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,181,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat,182,The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,182,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,184,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,198,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,199,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,199,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,199,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat,200,The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,200,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,202,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,216,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,217,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,217,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,217,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat,218,The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,218,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,220,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,234,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,235,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,235,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,235,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat,236,The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,236,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,238,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,372,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,408,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,414,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,439,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,440,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,441,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,444,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,451,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,452,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,456,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,460,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,473,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,474,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,478,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,482,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,537,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,579,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,676,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,676,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,710,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,730,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,752,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004057f4_004057f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,772,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00408080_00408080.c,external.semgrep-rules-0xdea.c.raptor-integer-truncation,20,Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.
/tmp/haruspex_mdb/FUN_004082d8_004082d8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,20,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004083c4_004083c4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,16,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004083c4_004083c4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc,19,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/FUN_004083c4_004083c4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc,28,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/FUN_004083c4_004083c4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc,31,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/FUN_004086c4_004086c4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,35,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00408858_00408858.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc,13,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/FUN_00408858_00408858.c,external.semgrep-rules-0xdea.c.raptor-integer-wraparound,13,The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.
/tmp/haruspex_mdb/FUN_00408858_00408858.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,13,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00408858_00408858.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc,16,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/FUN_00408858_00408858.c,external.semgrep-rules-0xdea.c.raptor-integer-wraparound,16,The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.
/tmp/haruspex_mdb/FUN_00408858_00408858.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,16,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004089fc_004089fc.c,external.semgrep-rules-0xdea.c.raptor-integer-truncation,15,Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.
/tmp/haruspex_mdb/FUN_00408eac_00408eac.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,7,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/FUN_00408eac_00408eac.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,7,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00408f14_00408f14.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc,12,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/FUN_00408f14_00408f14.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,13,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/FUN_00408f14_00408f14.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,13,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00408f14_00408f14.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,14,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/FUN_00408f14_00408f14.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,14,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00409394_00409394.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,12,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_00409394_00409394.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,18,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004095f0_004095f0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,32,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004095f0_004095f0.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,56,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/FUN_004095f0_004095f0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,56,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004095f0_004095f0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,68,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/FUN_004098b8_004098b8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,30,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/FUN_004098b8_004098b8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,30,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,33,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,34,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,59,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,64,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,64,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,68,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,70,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,73,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,76,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc,76,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,80,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc,80,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,82,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,84,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,94,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,102,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,102,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,105,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,105,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,107,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_mdb/PushDCHEventHandle_00409de8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,130,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/SetDCHPolicyHandle_0040a4e0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,12,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/SetDCHPolicyHandle_0040a4e0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,13,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/SetDCHPolicyHandle_0040a4e0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,36,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/SetDCHPolicyHandle_0040a4e0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,37,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/SetDCHPolicyHandle_0040a4e0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,52,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/SetNotifierSettingsHandle_0040a2d0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,12,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/SetNotifierSettingsHandle_0040a2d0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,13,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/SetNotifierSettingsHandle_0040a2d0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,36,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/SetNotifierSettingsHandle_0040a2d0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,37,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/SetNotifierSettingsHandle_0040a2d0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,52,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/checkSetPolicyType_0040a6f0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,13,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/checkSetPolicyType_0040a6f0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,14,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/checkSetPolicyType_0040a6f0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,40,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/main_00407cd4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc,21,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/main_00407cd4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc,23,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/main_00407cd4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc,27,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/main_00407cd4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc,39,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/main_00407cd4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc,41,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/main_00407cd4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc,43,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/main_00407cd4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc,54,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/qryInit_00408500.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc,7,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_mdb/qryInit_00408500.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,7,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_mdb/qryInit_00408500.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,7,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
