/tmp/haruspex_ated_iwpriv/ProcessCmd_00401998.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,16,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/ProcessCmd_00401998.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,33,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/ProcessCmd_00401998.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,38,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/ProcessCmd_00401998.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,44,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/WaitForCmd_00401230.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,47,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/WaitForCmd_00401230.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,48,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/WaitForCmd_00401230.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,48,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/_fpadd_parts_0040cf60.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,40,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/_fpadd_parts_0040cf60.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,40,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/getCmdResults_00404948.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,12,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/getCmdResults_00404948.c,external.semgrep-rules-0xdea.c.raptor-command-injection,15,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_ated_iwpriv/getCmdResults_00404948.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,15,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/getCmdResults_00404948.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,22,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/getCmdResults_00404948.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,27,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/getCmdResults_00404948.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,31,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/get_option_00401e8c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,12,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/get_option_00401e8c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,29,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/init_debug_0040236c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,6,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_check_if_addr_type_0040abf8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,10,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_check_if_addr_type_0040abf8.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,10,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_check_if_addr_type_0040abf8.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,10,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_check_mac_addr_type_0040aafc.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,10,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_check_mac_addr_type_0040aafc.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,10,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_check_mac_addr_type_0040aafc.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,10,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,18,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,39,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,40,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,42,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,54,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,54,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c,external.semgrep-rules-0xdea.c.raptor-pointer-subtraction,54,The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.
/tmp/haruspex_ated_iwpriv/iw_enum_devices_00404c4c.c,external.semgrep-rules-0xdea.c.raptor-pointer-subtraction,55,The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.
/tmp/haruspex_ated_iwpriv/iw_ether_ntop_0040ae30.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,6,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_extract_event_stream_0040bb48.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,65,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_extract_event_stream_0040bb48.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,68,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_extract_event_stream_0040bb48.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,88,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_extract_event_stream_0040bb48.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,115,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,16,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,17,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,17,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,17,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,23,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,23,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,25,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,25,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,25,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,32,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,32,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,32,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,42,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,42,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,42,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,51,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,51,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,51,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,57,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,57,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_basic_config_0040608c.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,57,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_get_kernel_we_version_004050a4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,11,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_kernel_we_version_004050a4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,17,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_kernel_we_version_004050a4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,30,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_kernel_we_version_004050a4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,32,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_priv_info_00405e20.c,external.semgrep-rules-0xdea.c.raptor-integer-wraparound,18,The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.
/tmp/haruspex_ated_iwpriv/iw_get_priv_info_00405e20.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,18,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_priv_info_00405e20.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,26,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_priv_info_00405e20.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,26,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_priv_info_00405e20.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,26,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,27,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,31,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,31,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,31,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,41,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,45,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,45,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,48,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,48,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,49,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,49,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,51,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,51,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,55,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_range_info_00405784.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,55,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,21,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,27,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,37,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,40,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,41,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc,41,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,43,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,48,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc,48,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,50,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,55,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc,55,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,57,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,62,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc,62,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,64,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,65,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc,65,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,66,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,67,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc,67,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,68,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,69,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc,69,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,78,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,78,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,78,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,79,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,79,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_get_stats_004081e4.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,79,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_in_addr_0040b690.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,44,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_in_addr_0040b690.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,44,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_in_addr_0040b690.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,44,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_in_inet_0040b43c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,31,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_in_inet_0040b43c.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,32,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_ated_iwpriv/iw_in_inet_0040b43c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,32,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_in_inet_0040b43c.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat,39,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_ated_iwpriv/iw_in_inet_0040b43c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,39,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,2,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,16,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,19,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,21,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,23,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,28,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,39,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,53,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_in_key_0040944c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,57,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_in_key_full_0040977c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,15,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_in_key_full_0040977c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,16,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_in_key_full_0040977c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,18,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_in_key_full_0040977c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,20,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_in_key_full_0040977c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,24,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_in_key_full_0040977c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,30,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_in_key_full_0040977c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,37,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_mac_aton_0040b1b8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,17,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_mac_ntop_0040ace4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,11,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_mac_ntop_0040ace4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,13,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_bitrate_00407ce4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,24,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_freq_00407810.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,21,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_freq_00407810.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,24,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_freq_00407810.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,27,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_freq_value_004075e8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,10,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_freq_value_004075e8.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,28,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_key_004090b0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,9,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_key_004090b0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,12,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_key_004090b0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,20,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_pm_mode_00409fa4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,6,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_pm_value_00409ae0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,10,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_pm_value_00409ae0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,13,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_print_pm_value_00409ae0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,49,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_pm_value_00409ae0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,54,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_pm_value_00409ae0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,60,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_pm_value_00409ae0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,70,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_retry_value_0040a430.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,12,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_retry_value_0040a430.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,15,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_print_retry_value_0040a430.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,42,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_retry_value_0040a430.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,54,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_retry_value_0040a430.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,59,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_retry_value_0040a430.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,65,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_retry_value_0040a430.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,75,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,17,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,30,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-unsafe-ret-snprintf-vsnprintf,30,The snprintf() and vsnprintf() functions return the total length of the string they tried to create. Therefore, this return value can be larger than the size of the destination buffer. If it is used unsafely, e.g. as an index to write to the destination buffer, memory corruption might occur.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,30,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,32,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,47,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-unsafe-ret-snprintf-vsnprintf,47,The snprintf() and vsnprintf() functions return the total length of the string they tried to create. Therefore, this return value can be larger than the size of the destination buffer. If it is used unsafely, e.g. as an index to write to the destination buffer, memory corruption might occur.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,47,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,49,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,63,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,75,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-unsafe-ret-snprintf-vsnprintf,75,The snprintf() and vsnprintf() functions return the total length of the string they tried to create. Therefore, this return value can be larger than the size of the destination buffer. If it is used unsafely, e.g. as an index to write to the destination buffer, memory corruption might occur.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,75,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,77,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,87,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,102,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-unsafe-ret-snprintf-vsnprintf,102,The snprintf() and vsnprintf() functions return the total length of the string they tried to create. Therefore, this return value can be larger than the size of the destination buffer. If it is used unsafely, e.g. as an index to write to the destination buffer, memory corruption might occur.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,102,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,104,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_print_stats_00408904.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,117,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_timeval_0040a948.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,9,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_txpower_00408060.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,17,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_txpower_00408060.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,20,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_txpower_00408060.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,24,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_print_version_info_00405604.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,9,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,39,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,39,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,39,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,47,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,59,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,59,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,59,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,89,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,89,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,94,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,132,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,134,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_process_scan_0040c3ac.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,146,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_protocol_compare_00406f40.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,21,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_protocol_compare_00406f40.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,24,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,20,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,20,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,20,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,27,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,27,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,27,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,29,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,29,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,29,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,41,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,41,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,41,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,56,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,56,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,56,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,73,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,73,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,73,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,88,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,88,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,88,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,101,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,107,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,107,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/iw_set_basic_config_004065c0.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,107,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/print_iface_version_info_00405358.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,15,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/print_iface_version_info_00405358.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,15,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/print_iface_version_info_00405358.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,15,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/print_iface_version_info_00405358.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,21,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/print_iface_version_info_00405358.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,25,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/print_iface_version_info_00405358.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,25,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/print_iface_version_info_00405358.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,25,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/process_iwpriv_cmd_00404430.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,12,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/process_iwpriv_cmd_00404430.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,19,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/process_iwpriv_cmd_00404430.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,19,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/process_iwpriv_cmd_00404430.c,external.semgrep-rules-0xdea.c.raptor-command-injection,23,The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.
/tmp/haruspex_ated_iwpriv/process_iwpriv_cmd_00404430.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,23,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/process_iwpriv_cmd_00404430.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,30,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/process_iwpriv_cmd_00404430.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,43,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,51,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,66,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,83,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,102,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc,102,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,114,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc,114,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,123,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,137,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,149,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,154,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,169,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc,169,The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,186,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,197,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,201,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,201,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,201,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,222,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,222,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,243,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,253,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,261,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,276,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,284,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,293,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,308,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,314,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ated_iwpriv/set_private_cmd_00402684.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,320,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
