{"errors": [], "interfile_languages_used": [], "paths": {"scanned": ["/tmp/haruspex_bundle_restore/FUN_004007b0_004007b0.c", "/tmp/haruspex_bundle_restore/FUN_00400884_00400884.c", "/tmp/haruspex_bundle_restore/FUN_00400c00_00400c00.c", "/tmp/haruspex_bundle_restore/_fini_00400d10.c", "/tmp/haruspex_bundle_restore/_ftext_00400750.c", "/tmp/haruspex_bundle_restore/_init_004006d8.c", "/tmp/haruspex_bundle_restore/main_004008f0.c"]}, "results": [{"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 32, "line": 28, "offset": 460}, "extra": {"engine_kind": "OSS", "fingerprint": "3c57b642f0d699a7fe7ea370c8fd5a19ff7a2fd38a3a9fbfb441a854f06549dc7929231a4acad533e1c107da29e1c53808a5d8735abc471f8fec940bd38d3400_0", "is_ignored": false, "lines": "  memset(local_ad0 + 1,0,0x1ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 25, "line": 28, "offset": 453}, "start": {"col": 24, "line": 28, "offset": 452}}, "$DST": {"abstract_content": "local_ad0+1", "end": {"col": 23, "line": 28, "offset": 451}, "start": {"col": 10, "line": 28, "offset": 438}}, "$LEN": {"abstract_content": "0x1ff", "end": {"col": 31, "line": 28, "offset": 459}, "start": {"col": 26, "line": 28, "offset": 454}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_bundle_restore/main_004008f0.c", "start": {"col": 3, "line": 28, "offset": 431}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 32, "line": 30, "offset": 516}, "extra": {"engine_kind": "OSS", "fingerprint": "8218a06f07b69fab8de53b8cc93d4c4acca68e0f6987373317256e75475a81036a9dad14dc40514b3fa23cc60d2cb3eccb0b3903a22e044424b69a1d3e35b9da_0", "is_ignored": false, "lines": "  memset(local_8d0 + 1,0,0x3ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 25, "line": 30, "offset": 509}, "start": {"col": 24, "line": 30, "offset": 508}}, "$DST": {"abstract_content": "local_8d0+1", "end": {"col": 23, "line": 30, "offset": 507}, "start": {"col": 10, "line": 30, "offset": 494}}, "$LEN": {"abstract_content": "0x3ff", "end": {"col": 31, "line": 30, "offset": 515}, "start": {"col": 26, "line": 30, "offset": 510}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_bundle_restore/main_004008f0.c", "start": {"col": 3, "line": 30, "offset": 487}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 32, "offset": 567}, "extra": {"engine_kind": "OSS", "fingerprint": "e3cb6d3b673472374263ac93c361e132f400eec9c94ed591206db8ba382280592d1dbb604bde60124a5a0b3eb176dc36d95fc17a4c8a89576fa2e13fbe849116_0", "is_ignored": false, "lines": "  memset(auStack_4cf,0,0x47f);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 23, "line": 32, "offset": 560}, "start": {"col": 22, "line": 32, "offset": 559}}, "$DST": {"abstract_content": "auStack_4cf", "end": {"col": 21, "line": 32, "offset": 558}, "start": {"col": 10, "line": 32, "offset": 547}}, "$LEN": {"abstract_content": "0x47f", "end": {"col": 29, "line": 32, "offset": 566}, "start": {"col": 24, "line": 32, "offset": 561}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_bundle_restore/main_004008f0.c", "start": {"col": 3, "line": 32, "offset": 540}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 47, "offset": 1117}, "extra": {"engine_kind": "OSS", "fingerprint": "9bb3777b15663d1bbb3bcabf4d1104ec458d6f02fe6bcd3152cd5e28f4dd1dba4bdb939820018665f10f152399b6c82706b7e737c023547a3a792df138a9add4_0", "is_ignored": false, "lines": "          memset(local_ad0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 29, "line": 47, "offset": 1110}, "start": {"col": 28, "line": 47, "offset": 1109}}, "$DST": {"abstract_content": "local_ad0", "end": {"col": 27, "line": 47, "offset": 1108}, "start": {"col": 18, "line": 47, "offset": 1099}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 35, "line": 47, "offset": 1116}, "start": {"col": 30, "line": 47, "offset": 1111}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_bundle_restore/main_004008f0.c", "start": {"col": 11, "line": 47, "offset": 1092}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 51, "offset": 1313}, "extra": {"engine_kind": "OSS", "fingerprint": "d48dd3817708f5b6e955182de8f0d7cfd48e908d8bd12c9a4b530e40aa3964073fec94107c2c64438d6c95e06fd0670855a8efe9264fed8c9a331e371d000c1d_0", "is_ignored": false, "lines": "            memset(local_44,0,0x400);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 30, "line": 51, "offset": 1306}, "start": {"col": 29, "line": 51, "offset": 1305}}, "$DST": {"abstract_content": "local_44", "end": {"col": 28, "line": 51, "offset": 1304}, "propagated_value": {"svalue_abstract_content": "local_8d0", "svalue_end": {"col": 25, "line": 39, "offset": 878}, "svalue_start": {"col": 16, "line": 39, "offset": 869}}, "start": {"col": 20, "line": 51, "offset": 1296}}, "$LEN": {"abstract_content": "0x400", "end": {"col": 36, "line": 51, "offset": 1312}, "start": {"col": 31, "line": 51, "offset": 1307}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_bundle_restore/main_004008f0.c", "start": {"col": 13, "line": 51, "offset": 1289}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-format-string-bugs", "end": {"col": 65, "line": 62, "offset": 1788}, "extra": {"engine_kind": "OSS", "fingerprint": "2cc6b11eac8ef10719d33fff8f1e8d369f49bc9da4c4f04cbb7cedaa4b71d4ff20fe691387eab06e945123da11445bc69c8598c06b54990540da5dbeb2c88f90_0", "is_ignored": false, "lines": "            fprintf(stderr,local_38,local_4c,local_48,local_ad0);", "message": "The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/134", "https://julianor.tripod.com/bc/formatstring-1.2.pdf", "http://phrack.org/issues/70/13.html#article", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_bundle_restore/main_004008f0.c", "start": {"col": 13, "line": 62, "offset": 1736}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-format-string-bugs", "end": {"col": 66, "line": 63, "offset": 1855}, "extra": {"engine_kind": "OSS", "fingerprint": "2cc6b11eac8ef10719d33fff8f1e8d369f49bc9da4c4f04cbb7cedaa4b71d4ff20fe691387eab06e945123da11445bc69c8598c06b54990540da5dbeb2c88f90_1", "is_ignored": false, "lines": "            sprintf(local_40,local_34,local_4c,local_48,local_44);", "message": "The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/134", "https://julianor.tripod.com/bc/formatstring-1.2.pdf", "http://phrack.org/issues/70/13.html#article", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_bundle_restore/main_004008f0.c", "start": {"col": 13, "line": 63, "offset": 1802}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 66, "line": 63, "offset": 1855}, "extra": {"engine_kind": "OSS", "fingerprint": "6cfa013668f04febdf6843ddab56c9f6a4d2480117d1614d44b325ca1d4334811ceab0c43ee95e47fb13f908e3dc307833ae3fdab52446b60ab6896f9334b5b3_0", "is_ignored": false, "lines": "            sprintf(local_40,local_34,local_4c,local_48,local_44);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "local_34", "end": {"col": 9, "line": 1, "offset": 8}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_40", "end": {"col": 29, "line": 63, "offset": 1818}, "start": {"col": 21, "line": 63, "offset": 1810}}, "$FMT": {"abstract_content": "local_34", "end": {"col": 38, "line": 63, "offset": 1827}, "start": {"col": 30, "line": 63, "offset": 1819}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_bundle_restore/main_004008f0.c", "start": {"col": 13, "line": 63, "offset": 1802}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 66, "line": 63, "offset": 1855}, "extra": {"engine_kind": "OSS", "fingerprint": "d4be3c6846833997337ac2679f42cc063879841f8a035df2d31de865b2c980c9bee9009b5860b208d81e99598b3aa1560e3b7af40152bba801a5101630bb2578_0", "is_ignored": false, "lines": "            sprintf(local_40,local_34,local_4c,local_48,local_44);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 20, "line": 63, "offset": 1809}, "start": {"col": 13, "line": 63, "offset": 1802}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_bundle_restore/main_004008f0.c", "start": {"col": 13, "line": 63, "offset": 1802}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 29, "line": 64, "offset": 1885}, "extra": {"engine_kind": "OSS", "fingerprint": "cbfeed67d9b3db99ffb9d02d980992537a4dff55947bdf6817a4e08b5188da56b6c025fba0422915f03033f074e24febe6e3b67ae4bcf0f47ba2e1fd46963d1d_0", "is_ignored": false, "lines": "            system(local_40);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_bundle_restore/main_004008f0.c", "start": {"col": 13, "line": 64, "offset": 1869}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 29, "line": 64, "offset": 1885}, "extra": {"engine_kind": "OSS", "fingerprint": "9697e3fe15b889537adef4dbf6071e0dd426b93dda6c283bfccd3b719ed78fbbd850c89b1a3a547933a8e82f7ffacdcf6da29eaf6e4b9607612d4d69079c2bc3_0", "is_ignored": false, "lines": "            system(local_40);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 19, "line": 64, "offset": 1875}, "start": {"col": 13, "line": 64, "offset": 1869}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_bundle_restore/main_004008f0.c", "start": {"col": 13, "line": 64, "offset": 1869}}], "skipped_rules": [], "version": "1.89.0"}
