

[[0;33m*[0m] Binary protection state of [0;33mswitch[0m

  	RELRO          CANARY            NX           PIE          RPATH        RUNPATH      SYMBOLS      
  	[31mNo RELRO[0m       [31mNo Canary found[0m   [31mNX disabled[0m  [31mNo PIE[0m       [32mNo RPATH[0m     [32mNo RUNPATH[0m   [31mSymbols[0m


-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/ip_to_str_004021f8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/ip_to_str_004021f8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m8[0m - [0;33mparam_2 & 0xff,&_gp);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_ethertype_00403874.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_ethertype_00403874.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m15[0m - [0;33m(sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_ethertype_00403874.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_ethertype_00403874.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m40[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,local_20), (int)local_20[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_ethertype_00403874.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_ethertype_00403874.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m57[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,local_20), (int)local_20[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_ethertype_00403874.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_ethertype_00403874.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m74[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,local_20), (int)local_20[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_l4_add_00405bec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_l4_add_00405bec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m15[0m - [0;33m(sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_l4_add_00405bec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_l4_add_00405bec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m40[0m - [0;33mwhile ((local_28 < 0x14 && (reg_read(0x90,local_1c), (int)local_1c[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_l4_add_00405bec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_l4_add_00405bec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m57[0m - [0;33mwhile ((local_28 < 0x14 && (reg_read(0x90,local_1c), (int)local_1c[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_l4_add_00405bec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_l4_add_00405bec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m74[0m - [0;33mwhile ((local_28 < 0x14 && (reg_read(0x90,local_1c), (int)local_1c[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m16[0m - [0;33m(sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m41[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_20), (int)local_20 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m58[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_20), (int)local_20 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m75[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_20), (int)local_20 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m93[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_20), (int)local_20 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m15[0m - [0;33mstrcpy(param_3,param_1);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m15[0m - [0;33mstrcpy(param_3,param_1);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m19[0m - [0;33m__n = (int)pcVar2 - (int)param_1;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-pointer-subtraction[0m
        Issue description:
    The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.

        [0;32m19[0m - [0;33m__n = (int)pcVar2 - (int)param_1;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m20[0m - [0;33mstrncpy(param_3,param_1,__n);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m22[0m - [0;33miVar1 = __n + 1;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m17[0m - [0;33m(sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m42[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m59[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m76[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m93[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m17[0m - [0;33m(sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m42[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m59[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m76[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m93[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m17[0m - [0;33m(sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m42[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m59[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m76[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m93[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_sp_add_0040631c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_sp_add_0040631c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m15[0m - [0;33m(sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_sp_add_0040631c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_sp_add_0040631c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m40[0m - [0;33mwhile ((local_28 < 0x14 && (reg_read(0x90,local_1c), (int)local_1c[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_sp_add_0040631c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_sp_add_0040631c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m57[0m - [0;33mwhile ((local_28 < 0x14 && (reg_read(0x90,local_1c), (int)local_1c[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_sp_add_0040631c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_sp_add_0040631c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m74[0m - [0;33mwhile ((local_28 < 0x14 && (reg_read(0x90,local_1c), (int)local_1c[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m19[0m - [0;33m(sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m44[0m - [0;33mwhile ((local_40 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m61[0m - [0;33mwhile ((local_40 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m82[0m - [0;33mwhile ((local_40 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m99[0m - [0;33mwhile ((local_40 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m116[0m - [0;33mwhile ((local_40 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_del_004073e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_del_004073e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m24[0m - [0;33mreg_read(0x80,local_1c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_clear_004075b4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_clear_004075b4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m9[0m - [0;33mreg_read(0x80,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_del_0040800c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_del_0040800c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m24[0m - [0;33mreg_read(0x80,local_1c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_clear_004081fc.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_clear_004081fc.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m9[0m - [0;33mreg_read(0x80,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_add_0040701c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_add_0040701c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m14[0m - [0;33mif ((*(int *)(param_2 + 0x10) == 0) || (sVar1 = strlen(*(char **)(param_2 + 0x10)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_add_0040701c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_add_0040701c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m31[0m - [0;33mreg_read(0x7c,local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_add_0040701c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_add_0040701c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m37[0m - [0;33mreg_read(0x80,local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_add_00407bd4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_add_00407bd4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m17[0m - [0;33mif ((*(int *)(param_2 + 0x14) == 0) || (sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_add_00407bd4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_add_00407bd4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m34[0m - [0;33mreg_read(0x7c,local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_add_00407bd4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_add_00407bd4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m40[0m - [0;33mreg_read(0x80,local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m19[0m - [0;33mreg_read((local_70 + 0x40) * 4,&local_68,param_3,param_4,puVar4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m30[0m - [0;33mwhile (reg_read(0x80,&local_68), (local_68 & 0x2000) == 0) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m37[0m - [0;33mreg_read(0x8c,&local_5c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m89[0m - [0;33mreg_read(0x88,&local_60);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m93[0m - [0;33mreg_read(0x84,&local_64);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_clear_0040a9c8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_clear_0040a9c8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m9[0m - [0;33mreg_read(0x80,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m19[0m - [0;33mreg_read((local_70 + 0x40) * 4,&local_68,param_3,param_4,puVar4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m30[0m - [0;33mwhile (reg_read(0x80,&local_68), (local_68 & 0x2000) == 0) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m37[0m - [0;33mreg_read(0x8c,&local_5c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m89[0m - [0;33mreg_read(0x88,&local_60);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m92[0m - [0;33mreg_read(0x84,&local_64);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/set_mirror_to_0040aa70.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/set_mirror_to_0040aa70.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m13[0m - [0;33mreg_read(0x10,&local_c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m18[0m - [0;33mreg_read((local_60 + 0x40) * 4,&local_58,param_3,param_4,puVar4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m30[0m - [0;33mreg_read(0x80,&local_58);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m40[0m - [0;33mreg_read(0x8c,&local_4c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m98[0m - [0;33mreg_read(0x88,&local_50);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m102[0m - [0;33mreg_read(0x84,&local_54);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/set_mirror_from_0040aba0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/set_mirror_from_0040aba0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m20[0m - [0;33mreg_read(uVar3,&local_c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_clear_0040b258.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_clear_0040b258.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m20[0m - [0;33mreg_read(0x90,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_off_0040c0d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_off_0040c0d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m7[0m - [0;33mreg_read(0x18,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_set_0040b3bc.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_set_0040b3bc.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m23[0m - [0;33msVar2 = strlen(*(char **)(param_2 + 0x14));[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_set_0040b3bc.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_set_0040b3bc.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m53[0m - [0;33mreg_read(0x90,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_dump_0040ad70.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_dump_0040ad70.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m19[0m - [0;33mwhile ((local_14 < 0x14 && (reg_read(0x90,&local_10), (int)local_10 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_dump_0040ad70.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_dump_0040ad70.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m26[0m - [0;33mreg_read(0x94,&local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_dump_0040ad70.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_dump_0040ad70.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m27[0m - [0;33mreg_read(0x98,auStack_c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m13[0m - [0;33mif ((*(int *)(param_2 + 0xc) == 0) || (sVar1 = strlen(*(char **)(param_2 + 0xc)), sVar1 != 0xc)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m17[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m17[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m17[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m21[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m21[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m21[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m39[0m - [0;33mreg_read(0x80,&local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dump_gphy_0040c8d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dump_gphy_0040c8d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m35[0m - [0;33muVar1 = mii_mgr_cl45_read(local_80,0x1e,local_7c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/phy_crossover_0040cbc8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/phy_crossover_0040cbc8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m14[0m - [0;33mlocal_10 = mii_mgr_cl45_read(uVar1,0x1e,0x145);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m13[0m - [0;33mif ((*(int *)(param_2 + 0xc) == 0) || (sVar1 = strlen(*(char **)(param_2 + 0xc)), sVar1 != 0xc)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m17[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m17[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m17[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m21[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m21[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m21[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m34[0m - [0;33mreg_read(0x80,&local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m22[0m - [0;33mreg_read(0x2410,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m24[0m - [0;33mreg_read(0x2010,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m31[0m - [0;33mreg_read(0x10,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m42[0m - [0;33mreg_read(iVar1,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m87[0m - [0;33msystem("echo 2 > /sys/devices/virtual/net/br0/brif/eth0/multicast_router");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-integer-truncation[0m
        Issue description:
    Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.

        [0;32m17[0m - [0;33mcVar1 = **(char **)(param_2 + 4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m18[0m - [0;33mif ((*(int *)(param_2 + 8) == 0) || (sVar3 = strlen(*(char **)(param_2 + 8)), sVar3 != 0xc)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m22[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 8),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m22[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 8),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m22[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 8),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m27[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 8) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m27[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 8) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m27[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 8) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m41[0m - [0;33mif ((*(int *)(param_2 + 0xc) == 0) || (sVar3 = strlen(*(char **)(param_2 + 0xc)), sVar3 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m86[0m - [0;33mreg_read(0x7c,&local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m92[0m - [0;33mreg_read(0x80,&local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m19[0m - [0;33mif ((*(int *)(param_2 + 0xc) == 0) || (sVar1 = strlen(*(char **)(param_2 + 0xc)), sVar1 != 0xc)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m23[0m - [0;33mstrncpy(acStack_18,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m23[0m - [0;33mstrncpy(acStack_18,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m23[0m - [0;33mstrncpy(acStack_18,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m27[0m - [0;33mstrncpy(acStack_18,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m27[0m - [0;33mstrncpy(acStack_18,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m27[0m - [0;33mstrncpy(acStack_18,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m39[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x80,&local_28), (local_28 & 0x8000) != 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m50[0m - [0;33mreg_read(0x8c,&local_1c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m108[0m - [0;33mreg_read(0x88,&local_20);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m112[0m - [0;33mreg_read(0x84,&local_24);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m19[0m - [0;33mif ((*(int *)(param_2 + 0xc) == 0) || (sVar1 = strlen(*(char **)(param_2 + 0xc)), sVar1 != 0xc)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m23[0m - [0;33mstrncpy(acStack_18,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m23[0m - [0;33mstrncpy(acStack_18,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m23[0m - [0;33mstrncpy(acStack_18,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m27[0m - [0;33mstrncpy(acStack_18,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m27[0m - [0;33mstrncpy(acStack_18,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m27[0m - [0;33mstrncpy(acStack_18,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m39[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x80,&local_28), (local_28 & 0x8000) != 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m50[0m - [0;33mreg_read(0x8c,&local_1c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m108[0m - [0;33mreg_read(0x88,&local_20);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m112[0m - [0;33mreg_read(0x84,&local_24);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m42[0m - [0;33mmii_read(uVar3,uVar4,&local_30);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m63[0m - [0;33mmii_read(uVar3,0,&local_2c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m92[0m - [0;33mmii_read(uVar3,0,&local_28);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m176[0m - [0;33mreg_read(local_88 * 0x100 + 0x3008,&local_24);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m491[0m - [0;33mreg_read(uVar3,&local_20);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m510[0m - [0;33mreg_read((local_90 * 4 + local_8c) * 4 + uVar3,&local_20);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m610[0m - [0;33mreg_read(iVar2,&local_14);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m632[0m - [0;33mreg_read(iVar2,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m17[0m - [0;33m(sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m42[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m59[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m76[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_add_004052a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m93[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m16[0m - [0;33m(sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m41[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_20), (int)local_20 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m58[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_20), (int)local_20 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m75[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_20), (int)local_20 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_meter_004022e0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m93[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_20), (int)local_20 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m17[0m - [0;33m(sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m42[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m59[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m76[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_modify_00403fec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m93[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m17[0m - [0;33m(sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m42[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m59[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m76[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_pppoe_00404940.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m93[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m19[0m - [0;33m(sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m44[0m - [0;33mwhile ((local_40 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m61[0m - [0;33mwhile ((local_40 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m82[0m - [0;33mwhile ((local_40 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m99[0m - [0;33mwhile ((local_40 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_dip_trtcm_00402c4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m116[0m - [0;33mwhile ((local_40 < 0x14 && (reg_read(0x90,&local_24), (int)local_24 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_ethertype_00403874.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_ethertype_00403874.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m15[0m - [0;33m(sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_ethertype_00403874.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_ethertype_00403874.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m40[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,local_20), (int)local_20[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_ethertype_00403874.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_ethertype_00403874.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m57[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,local_20), (int)local_20[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_ethertype_00403874.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_ethertype_00403874.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m74[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x90,local_20), (int)local_20[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_l4_add_00405bec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_l4_add_00405bec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m15[0m - [0;33m(sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_l4_add_00405bec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_l4_add_00405bec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m40[0m - [0;33mwhile ((local_28 < 0x14 && (reg_read(0x90,local_1c), (int)local_1c[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_l4_add_00405bec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_l4_add_00405bec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m57[0m - [0;33mwhile ((local_28 < 0x14 && (reg_read(0x90,local_1c), (int)local_1c[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_l4_add_00405bec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_l4_add_00405bec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m74[0m - [0;33mwhile ((local_28 < 0x14 && (reg_read(0x90,local_1c), (int)local_1c[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_sp_add_0040631c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_sp_add_0040631c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m15[0m - [0;33m(sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_sp_add_0040631c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_sp_add_0040631c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m40[0m - [0;33mwhile ((local_28 < 0x14 && (reg_read(0x90,local_1c), (int)local_1c[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_sp_add_0040631c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_sp_add_0040631c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m57[0m - [0;33mwhile ((local_28 < 0x14 && (reg_read(0x90,local_1c), (int)local_1c[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/acl_sp_add_0040631c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/acl_sp_add_0040631c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m74[0m - [0;33mwhile ((local_28 < 0x14 && (reg_read(0x90,local_1c), (int)local_1c[0] < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_add_0040701c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_add_0040701c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m14[0m - [0;33mif ((*(int *)(param_2 + 0x10) == 0) || (sVar1 = strlen(*(char **)(param_2 + 0x10)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_add_0040701c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_add_0040701c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m31[0m - [0;33mreg_read(0x7c,local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_add_0040701c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_add_0040701c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m37[0m - [0;33mreg_read(0x80,local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_clear_004075b4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_clear_004075b4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m9[0m - [0;33mreg_read(0x80,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_del_004073e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_del_004073e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m24[0m - [0;33mreg_read(0x80,local_1c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m19[0m - [0;33mreg_read((local_70 + 0x40) * 4,&local_68,param_3,param_4,puVar4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m30[0m - [0;33mwhile (reg_read(0x80,&local_68), (local_68 & 0x2000) == 0) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m37[0m - [0;33mreg_read(0x8c,&local_5c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m89[0m - [0;33mreg_read(0x88,&local_60);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dip_dump_00406a4c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m93[0m - [0;33mreg_read(0x84,&local_64);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/dump_gphy_0040c8d0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/dump_gphy_0040c8d0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m35[0m - [0;33muVar1 = mii_mgr_cl45_read(local_80,0x1e,local_7c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m15[0m - [0;33mstrcpy(param_3,param_1);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m15[0m - [0;33mstrcpy(param_3,param_1);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m19[0m - [0;33m__n = (int)pcVar2 - (int)param_1;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-pointer-subtraction[0m
        Issue description:
    The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.

        [0;32m19[0m - [0;33m__n = (int)pcVar2 - (int)param_1;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m20[0m - [0;33mstrncpy(param_3,param_1,__n);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/getnext_00401f5c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m22[0m - [0;33miVar1 = __n + 1;[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_off_0040c0d8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_off_0040c0d8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m7[0m - [0;33mreg_read(0x18,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m22[0m - [0;33mreg_read(0x2410,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m24[0m - [0;33mreg_read(0x2010,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m31[0m - [0;33mreg_read(0x10,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m42[0m - [0;33mreg_read(iVar1,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/igmp_on_0040b8a8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m87[0m - [0;33msystem("echo 2 > /sys/devices/virtual/net/br0/brif/eth0/multicast_router");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/ip_to_str_004021f8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/ip_to_str_004021f8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m8[0m - [0;33mparam_2 & 0xff,&_gp);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m42[0m - [0;33mmii_read(uVar3,uVar4,&local_30);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m63[0m - [0;33mmii_read(uVar3,0,&local_2c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m92[0m - [0;33mmii_read(uVar3,0,&local_28);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m176[0m - [0;33mreg_read(local_88 * 0x100 + 0x3008,&local_24);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m491[0m - [0;33mreg_read(uVar3,&local_20);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m510[0m - [0;33mreg_read((local_90 * 4 + local_8c) * 4 + uVar3,&local_20);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m610[0m - [0;33mreg_read(iVar2,&local_14);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/main_0040ceac.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m632[0m - [0;33mreg_read(iVar2,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/phy_crossover_0040cbc8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/phy_crossover_0040cbc8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m14[0m - [0;33mlocal_10 = mii_mgr_cl45_read(uVar1,0x1e,0x145);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/set_mirror_from_0040aba0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/set_mirror_from_0040aba0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m20[0m - [0;33mreg_read(uVar3,&local_c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/set_mirror_to_0040aa70.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/set_mirror_to_0040aa70.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m13[0m - [0;33mreg_read(0x10,&local_c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_add_00407bd4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_add_00407bd4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m17[0m - [0;33mif ((*(int *)(param_2 + 0x14) == 0) || (sVar1 = strlen(*(char **)(param_2 + 0x14)), sVar1 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_add_00407bd4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_add_00407bd4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m34[0m - [0;33mreg_read(0x7c,local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_add_00407bd4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_add_00407bd4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m40[0m - [0;33mreg_read(0x80,local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_clear_004081fc.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_clear_004081fc.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m9[0m - [0;33mreg_read(0x80,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_del_0040800c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_del_0040800c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m24[0m - [0;33mreg_read(0x80,local_1c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m19[0m - [0;33mreg_read((local_70 + 0x40) * 4,&local_68,param_3,param_4,puVar4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m30[0m - [0;33mwhile (reg_read(0x80,&local_68), (local_68 & 0x2000) == 0) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m37[0m - [0;33mreg_read(0x8c,&local_5c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m89[0m - [0;33mreg_read(0x88,&local_60);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/sip_dump_0040765c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m92[0m - [0;33mreg_read(0x84,&local_64);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-integer-truncation[0m
        Issue description:
    Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.

        [0;32m17[0m - [0;33mcVar1 = **(char **)(param_2 + 4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m18[0m - [0;33mif ((*(int *)(param_2 + 8) == 0) || (sVar3 = strlen(*(char **)(param_2 + 8)), sVar3 != 0xc)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m22[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 8),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m22[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 8),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m22[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 8),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m27[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 8) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m27[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 8) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m27[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 8) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m41[0m - [0;33mif ((*(int *)(param_2 + 0xc) == 0) || (sVar3 = strlen(*(char **)(param_2 + 0xc)), sVar3 != 8)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m86[0m - [0;33mreg_read(0x7c,&local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_add_004089a0.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m92[0m - [0;33mreg_read(0x80,&local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_clear_0040a9c8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_clear_0040a9c8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m9[0m - [0;33mreg_read(0x80,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m13[0m - [0;33mif ((*(int *)(param_2 + 0xc) == 0) || (sVar1 = strlen(*(char **)(param_2 + 0xc)), sVar1 != 0xc)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m17[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m17[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m17[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m21[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m21[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m21[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_fid_0040a24c.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m39[0m - [0;33mreg_read(0x80,&local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m13[0m - [0;33mif ((*(int *)(param_2 + 0xc) == 0) || (sVar1 = strlen(*(char **)(param_2 + 0xc)), sVar1 != 0xc)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m17[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m17[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m17[0m - [0;33mstrncpy(acStack_14,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m21[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m21[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m21[0m - [0;33mstrncpy(acStack_14,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_del_vid_0040a610.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m34[0m - [0;33mreg_read(0x80,&local_18);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m18[0m - [0;33mreg_read((local_60 + 0x40) * 4,&local_58,param_3,param_4,puVar4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m30[0m - [0;33mreg_read(0x80,&local_58);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m40[0m - [0;33mreg_read(0x8c,&local_4c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m98[0m - [0;33mreg_read(0x88,&local_50);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_dump_004082a4.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m102[0m - [0;33mreg_read(0x84,&local_54);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m19[0m - [0;33mif ((*(int *)(param_2 + 0xc) == 0) || (sVar1 = strlen(*(char **)(param_2 + 0xc)), sVar1 != 0xc)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m23[0m - [0;33mstrncpy(acStack_18,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m23[0m - [0;33mstrncpy(acStack_18,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m23[0m - [0;33mstrncpy(acStack_18,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m27[0m - [0;33mstrncpy(acStack_18,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m27[0m - [0;33mstrncpy(acStack_18,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m27[0m - [0;33mstrncpy(acStack_18,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m39[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x80,&local_28), (local_28 & 0x8000) != 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m50[0m - [0;33mreg_read(0x8c,&local_1c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m108[0m - [0;33mreg_read(0x88,&local_20);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_fid_00409a14.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m112[0m - [0;33mreg_read(0x84,&local_24);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m19[0m - [0;33mif ((*(int *)(param_2 + 0xc) == 0) || (sVar1 = strlen(*(char **)(param_2 + 0xc)), sVar1 != 0xc)) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m23[0m - [0;33mstrncpy(acStack_18,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m23[0m - [0;33mstrncpy(acStack_18,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m23[0m - [0;33mstrncpy(acStack_18,*(char **)(param_2 + 0xc),8);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m27[0m - [0;33mstrncpy(acStack_18,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m27[0m - [0;33mstrncpy(acStack_18,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy[0m
        Issue description:
    If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.

        [0;32m27[0m - [0;33mstrncpy(acStack_18,(char *)(*(int *)(param_2 + 0xc) + 8),4);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m39[0m - [0;33mwhile ((local_30 < 0x14 && (reg_read(0x80,&local_28), (local_28 & 0x8000) != 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m50[0m - [0;33mreg_read(0x8c,&local_1c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m108[0m - [0;33mreg_read(0x88,&local_20);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/table_search_mac_vid_004091e8.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m112[0m - [0;33mreg_read(0x84,&local_24);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_clear_0040b258.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_clear_0040b258.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m20[0m - [0;33mreg_read(0x90,local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_dump_0040ad70.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_dump_0040ad70.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m19[0m - [0;33mwhile ((local_14 < 0x14 && (reg_read(0x90,&local_10), (int)local_10 < 0))) {[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_dump_0040ad70.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_dump_0040ad70.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m26[0m - [0;33mreg_read(0x94,&local_10);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_dump_0040ad70.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_dump_0040ad70.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m27[0m - [0;33mreg_read(0x98,auStack_c);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_set_0040b3bc.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_set_0040b3bc.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m23[0m - [0;33msVar2 = strlen(*(char **)(param_2 + 0x14));[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_set_0040b3bc.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_switch/vlan_set_0040b3bc.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m53[0m - [0;33mreg_read(0x90,local_10);[0m

-----------------------------------------------------------------

