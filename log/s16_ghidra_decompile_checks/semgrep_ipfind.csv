/tmp/haruspex_ipfind/FUN_00400f50_00400f50.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,14,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ipfind/FUN_00401120_00401120.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,12,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_ipfind/FUN_00401120_00401120.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,12,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ipfind/FUN_00401120_00401120.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,13,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ipfind/FUN_00401120_00401120.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,26,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ipfind/FUN_004013f4_004013f4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,89,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,38,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,44,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,49,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,51,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,51,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,51,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,52,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,56,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,78,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,80,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,80,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,80,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,81,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,83,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,83,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,83,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,84,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,86,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,86,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ipfind/FUN_0040172c_0040172c.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,86,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ipfind/FUN_00401df4_00401df4.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,44,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ipfind/FUN_00401df4_00401df4.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,44,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ipfind/FUN_00401df4_00401df4.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,44,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ipfind/FUN_00402198_00402198.c,external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf,7,A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.
/tmp/haruspex_ipfind/FUN_00402198_00402198.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,7,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ipfind/FUN_00402198_00402198.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,9,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ipfind/main_00402210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,62,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ipfind/main_00402210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,62,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ipfind/main_00402210.c,external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy,62,If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.
/tmp/haruspex_ipfind/main_00402210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,109,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
/tmp/haruspex_ipfind/main_00402210.c,external.semgrep-rules-0xdea.c.raptor-interesting-api-calls,110,Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
/tmp/haruspex_ipfind/main_00402210.c,external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion,110,The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.
