{"errors": [{"code": 2, "level": "warn", "message": "Timeout when running external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc on /tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c:\n ", "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "rule_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "type": "Timeout"}, {"code": 2, "level": "warn", "message": "Timeout when running external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc on /tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c:\n ", "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "rule_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-malloc-calloc-realloc", "type": "Timeout"}], "interfile_languages_used": [], "paths": {"scanned": ["/tmp/haruspex_hnap_push_service/AESDecrypt_0041326c.c", "/tmp/haruspex_hnap_push_service/AESEncrypt_0041313c.c", "/tmp/haruspex_hnap_push_service/FUN_004019a0_004019a0.c", "/tmp/haruspex_hnap_push_service/FUN_00401a74_00401a74.c", "/tmp/haruspex_hnap_push_service/FUN_00401ae0_00401ae0.c", "/tmp/haruspex_hnap_push_service/FUN_00401b2c_00401b2c.c", "/tmp/haruspex_hnap_push_service/FUN_00401bd0_00401bd0.c", "/tmp/haruspex_hnap_push_service/FUN_00402d50_00402d50.c", "/tmp/haruspex_hnap_push_service/FUN_00402dc8_00402dc8.c", "/tmp/haruspex_hnap_push_service/FUN_00402e94_00402e94.c", "/tmp/haruspex_hnap_push_service/FUN_00404d40_00404d40.c", "/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c", "/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c", "/tmp/haruspex_hnap_push_service/FUN_004058a8_004058a8.c", "/tmp/haruspex_hnap_push_service/FUN_00405e18_00405e18.c", "/tmp/haruspex_hnap_push_service/FUN_00406314_00406314.c", "/tmp/haruspex_hnap_push_service/FUN_0040710c_0040710c.c", "/tmp/haruspex_hnap_push_service/FUN_00410640_00410640.c", "/tmp/haruspex_hnap_push_service/FUN_00410864_00410864.c", "/tmp/haruspex_hnap_push_service/FUN_00410ae0_00410ae0.c", "/tmp/haruspex_hnap_push_service/FUN_00411588_00411588.c", "/tmp/haruspex_hnap_push_service/FUN_0041161c_0041161c.c", "/tmp/haruspex_hnap_push_service/FUN_00411860_00411860.c", "/tmp/haruspex_hnap_push_service/FUN_00411af8_00411af8.c", "/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c", "/tmp/haruspex_hnap_push_service/FUN_00412570_00412570.c", "/tmp/haruspex_hnap_push_service/FUN_004126e4_004126e4.c", "/tmp/haruspex_hnap_push_service/FUN_0041272c_0041272c.c", "/tmp/haruspex_hnap_push_service/FUN_00412a00_00412a00.c", "/tmp/haruspex_hnap_push_service/FUN_00412a2c_00412a2c.c", "/tmp/haruspex_hnap_push_service/FUN_00412a5c_00412a5c.c", "/tmp/haruspex_hnap_push_service/FUN_00412afc_00412afc.c", "/tmp/haruspex_hnap_push_service/FUN_00412b6c_00412b6c.c", "/tmp/haruspex_hnap_push_service/FUN_00412bd8_00412bd8.c", "/tmp/haruspex_hnap_push_service/FUN_00412eb4_00412eb4.c", "/tmp/haruspex_hnap_push_service/FUN_00412f7c_00412f7c.c", "/tmp/haruspex_hnap_push_service/FUN_0041332c_0041332c.c", "/tmp/haruspex_hnap_push_service/FUN_004133d0_004133d0.c", "/tmp/haruspex_hnap_push_service/FUN_00414100_00414100.c", "/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c", "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "/tmp/haruspex_hnap_push_service/_fini_00414700.c", "/tmp/haruspex_hnap_push_service/_ftext_00401940.c", "/tmp/haruspex_hnap_push_service/_init_004018c0.c", "/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c", "/tmp/haruspex_hnap_push_service/encrypt_00412d44.c", "/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c", "/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c", "/tmp/haruspex_hnap_push_service/initEventMsg_00414014.c", "/tmp/haruspex_hnap_push_service/ixmlAppendNewElement_00402c98.c", "/tmp/haruspex_hnap_push_service/ixmlElement_setTagName_00402698.c", "/tmp/haruspex_hnap_push_service/ixmlGetElementByTag_00402934.c", "/tmp/haruspex_hnap_push_service/ixmlGetElementByTag_s_00402be0.c", "/tmp/haruspex_hnap_push_service/ixmlGetElementValueByTag_004029c0.c", "/tmp/haruspex_hnap_push_service/ixmlGetElementValueByTag_s_00402ab4.c", "/tmp/haruspex_hnap_push_service/ixmlNode_setNodeName_004025ec.c", "/tmp/haruspex_hnap_push_service/ixmlSetElementValueByTag_00402814.c", "/tmp/haruspex_hnap_push_service/load_device_start_004112d0.c", "/tmp/haruspex_hnap_push_service/load_device_stop_00411220.c", "/tmp/haruspex_hnap_push_service/main_00401c74.c", "/tmp/haruspex_hnap_push_service/push_dchevent_start_0041142c.c", "/tmp/haruspex_hnap_push_service/push_dchevent_stop_00411278.c", "/tmp/haruspex_hnap_push_service/random_hash_004024f0.c", "/tmp/haruspex_hnap_push_service/sendEventMsg_00413d34.c", "/tmp/haruspex_hnap_push_service/uninitEventMsg_00413fdc.c"]}, "results": [{"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 28, "line": 17, "offset": 353}, "extra": {"engine_kind": "OSS", "fingerprint": "637157d30a5cd594e68a0aa03af1a40687b61c475a3fdf21f15762830519133aa67aa40b846520123ba47954b33c62a68c1ff2180c606ee50b50eef117cf43c6_0", "is_ignored": false, "lines": "  memset(auStack_70,0,0x40);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 22, "line": 17, "offset": 347}, "start": {"col": 21, "line": 17, "offset": 346}}, "$DST": {"abstract_content": "auStack_70", "end": {"col": 20, "line": 17, "offset": 345}, "start": {"col": 10, "line": 17, "offset": 335}}, "$LEN": {"abstract_content": "0x40", "end": {"col": 27, "line": 17, "offset": 352}, "start": {"col": 23, "line": 17, "offset": 348}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/AESDecrypt_0041326c.c", "start": {"col": 3, "line": 17, "offset": 328}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 28, "line": 27, "offset": 540}, "extra": {"engine_kind": "OSS", "fingerprint": "8050a000001c45e2bab7ee7f992bc101f4160b1b04cd4e16a9b2a464a111a553d6b3378b9c996a919d3d9e77f1cfe875014ad0e9db43e838b86000152568c373_0", "is_ignored": false, "lines": "  memset(auStack_98,0,0x40);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 22, "line": 27, "offset": 534}, "start": {"col": 21, "line": 27, "offset": 533}}, "$DST": {"abstract_content": "auStack_98", "end": {"col": 20, "line": 27, "offset": 532}, "start": {"col": 10, "line": 27, "offset": 522}}, "$LEN": {"abstract_content": "0x40", "end": {"col": 27, "line": 27, "offset": 539}, "start": {"col": 23, "line": 27, "offset": 535}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/AESEncrypt_0041313c.c", "start": {"col": 3, "line": 27, "offset": 515}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 32, "line": 39, "offset": 791}, "extra": {"engine_kind": "OSS", "fingerprint": "7949dd253216c89a54c9134f3c711ff7b4fced3f8df8a8d3c9930f039b2646e15881a09c326347ae4e1278ccd45ed4116763d29af8d4d29d6e6e840fdbbb4c66_0", "is_ignored": false, "lines": "      memset(auStack_58,0,0x40);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 26, "line": 39, "offset": 785}, "start": {"col": 25, "line": 39, "offset": 784}}, "$DST": {"abstract_content": "auStack_58", "end": {"col": 24, "line": 39, "offset": 783}, "start": {"col": 14, "line": 39, "offset": 773}}, "$LEN": {"abstract_content": "0x40", "end": {"col": 31, "line": 39, "offset": 790}, "start": {"col": 27, "line": 39, "offset": 786}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/AESEncrypt_0041313c.c", "start": {"col": 7, "line": 39, "offset": 766}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 21, "offset": 403}, "extra": {"engine_kind": "OSS", "fingerprint": "1386398278290133970bb4785584d35844a1cebc7bea02373d1aba9eeed958a9a67767458c156225c17006c5d5d9b564611ebc824bddc6a5ed82cc325bc40fe3_0", "is_ignored": false, "lines": "    memset(auStack_2f,0,0x1f);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 24, "line": 21, "offset": 397}, "start": {"col": 23, "line": 21, "offset": 396}}, "$DST": {"abstract_content": "auStack_2f", "end": {"col": 22, "line": 21, "offset": 395}, "start": {"col": 12, "line": 21, "offset": 385}}, "$LEN": {"abstract_content": "0x1f", "end": {"col": 29, "line": 21, "offset": 402}, "start": {"col": 25, "line": 21, "offset": 398}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00402e94_00402e94.c", "start": {"col": 5, "line": 21, "offset": 378}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 48, "line": 23, "offset": 488}, "extra": {"engine_kind": "OSS", "fingerprint": "6e0d13d42f1c221a3bfadc8b308dcd9fa84992ce13937f9de3482408ea6f4ba75644c0ee61df4bdf5032d75e839ecd384d9d99ed6f11d704387f0e7da9d34c57_0", "is_ignored": false, "lines": "    memset((void *)((int)&local_50 + 1),0,0x1f);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 42, "line": 23, "offset": 482}, "start": {"col": 41, "line": 23, "offset": 481}}, "$DST": {"abstract_content": "(void*(int&local_50+1", "end": {"col": 39, "line": 23, "offset": 479}, "start": {"col": 12, "line": 23, "offset": 452}}, "$LEN": {"abstract_content": "0x1f", "end": {"col": 47, "line": 23, "offset": 487}, "start": {"col": 43, "line": 23, "offset": 483}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00402e94_00402e94.c", "start": {"col": 5, "line": 23, "offset": 445}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 98, "line": 34, "offset": 872}, "extra": {"engine_kind": "OSS", "fingerprint": "38a5fe9404c21da7d141b30e807a018081da31dbdeff754968f1d00dca428f9eaebfc245771257060b40e9db458b8816ea1eff2220715b0fb3f35d44ae9a1c99_0", "is_ignored": false, "lines": "    sprintf(&local_30,\"%02X:%02X:%02X:%02X:%02X:%02X\",local_50 >> 0x18,local_50 >> 0x10 & 0xff,\n            local_50 >> 8 & 0xff,local_50 & 0xff,local_4c >> 0x18,local_4c >> 0x10 & 0xff,puVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 12, "line": 33, "offset": 690}, "start": {"col": 5, "line": 33, "offset": 683}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00402e94_00402e94.c", "start": {"col": 5, "line": 33, "offset": 683}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 78, "line": 27, "offset": 775}, "extra": {"engine_kind": "OSS", "fingerprint": "3d86f5451b87ef526a89629b824ad54d22209b3ce36b21f69499bc6bfa25bb0d3334e333bbb84cecee268389140eb20893db3dcdd5712660de0d5a71fbd32181_0", "is_ignored": false, "lines": "        iVar1 = sprintf((char *)(param_2 + iVar2),\"%c%02X\",0x25,iVar1,puVar3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 24, "line": 27, "offset": 721}, "start": {"col": 17, "line": 27, "offset": 714}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00404d40_00404d40.c", "start": {"col": 17, "line": 27, "offset": 714}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 29, "line": 25, "offset": 533}, "extra": {"engine_kind": "OSS", "fingerprint": "fdc1245309f5cad7055713b112c73aa1873132c1a893adf43bb1eddca71c685c14bb468c53adf8e0e8b93965469ced5382b3129e52c45077112cf7eb9d95e71f_0", "is_ignored": false, "lines": "  memset(auStack_16f,0,0x1f);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 23, "line": 25, "offset": 527}, "start": {"col": 22, "line": 25, "offset": 526}}, "$DST": {"abstract_content": "auStack_16f", "end": {"col": 21, "line": 25, "offset": 525}, "start": {"col": 10, "line": 25, "offset": 514}}, "$LEN": {"abstract_content": "0x1f", "end": {"col": 28, "line": 25, "offset": 532}, "start": {"col": 24, "line": 25, "offset": 528}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c", "start": {"col": 3, "line": 25, "offset": 507}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 29, "line": 27, "offset": 583}, "extra": {"engine_kind": "OSS", "fingerprint": "492f9c6cbbe25a09319e6cd264a8686a3f135974fdf85dcf158aac46b1a34d750f88d36cf50b6e69dac46a47eb7ac5cee602cc34aa535f04bb4d1f2a18935c45_0", "is_ignored": false, "lines": "  memset(auStack_14f,0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 23, "line": 27, "offset": 577}, "start": {"col": 22, "line": 27, "offset": 576}}, "$DST": {"abstract_content": "auStack_14f", "end": {"col": 21, "line": 27, "offset": 575}, "start": {"col": 10, "line": 27, "offset": 564}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 28, "line": 27, "offset": 582}, "start": {"col": 24, "line": 27, "offset": 578}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c", "start": {"col": 3, "line": 27, "offset": 557}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 51, "line": 34, "offset": 764}, "extra": {"engine_kind": "OSS", "fingerprint": "a092620d1fe07854b0f3f578410ebd5f17cb29e7d8c88065872c23cb79ff8f5f9f2b9fbf98601e389969f7bf4fe55a921c6463b53bdda8c6c8c6c91aa0aa4820_0", "is_ignored": false, "lines": "  sprintf((char *)&local_48,\"%ld\",local_50.tv_sec);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 10, "line": 34, "offset": 723}, "start": {"col": 3, "line": 34, "offset": 716}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c", "start": {"col": 3, "line": 34, "offset": 716}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 93, "line": 43, "offset": 1191}, "extra": {"engine_kind": "OSS", "fingerprint": "a092620d1fe07854b0f3f578410ebd5f17cb29e7d8c88065872c23cb79ff8f5f9f2b9fbf98601e389969f7bf4fe55a921c6463b53bdda8c6c8c6c91aa0aa4820_1", "is_ignored": false, "lines": "  sprintf(&local_170,\"%02X:%02X:%02X:%02X:%02X:%02X\",local_178 >> 0x18,local_178 >> 0x10 & 0xff,\n          local_178 >> 8 & 0xff,local_178 & 0xff,local_174 >> 0x18,local_174 >> 0x10 & 0xff);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 10, "line": 42, "offset": 1011}, "start": {"col": 3, "line": 42, "offset": 1004}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c", "start": {"col": 3, "line": 42, "offset": 1004}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 45, "offset": 1289}, "extra": {"engine_kind": "OSS", "fingerprint": "a092620d1fe07854b0f3f578410ebd5f17cb29e7d8c88065872c23cb79ff8f5f9f2b9fbf98601e389969f7bf4fe55a921c6463b53bdda8c6c8c6c91aa0aa4820_2", "is_ignored": false, "lines": "  sprintf(&local_150,\"%d\",param_2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 10, "line": 45, "offset": 1264}, "start": {"col": 3, "line": 45, "offset": 1257}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c", "start": {"col": 3, "line": 45, "offset": 1257}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 47, "offset": 1384}, "extra": {"engine_kind": "OSS", "fingerprint": "a092620d1fe07854b0f3f578410ebd5f17cb29e7d8c88065872c23cb79ff8f5f9f2b9fbf98601e389969f7bf4fe55a921c6463b53bdda8c6c8c6c91aa0aa4820_3", "is_ignored": false, "lines": "  sprintf(&local_150,\"%d\",param_3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 10, "line": 47, "offset": 1359}, "start": {"col": 3, "line": 47, "offset": 1352}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c", "start": {"col": 3, "line": 47, "offset": 1352}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 54, "offset": 1688}, "extra": {"engine_kind": "OSS", "fingerprint": "a092620d1fe07854b0f3f578410ebd5f17cb29e7d8c88065872c23cb79ff8f5f9f2b9fbf98601e389969f7bf4fe55a921c6463b53bdda8c6c8c6c91aa0aa4820_4", "is_ignored": false, "lines": "    sprintf(&local_150,\"%d\",param_1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 12, "line": 54, "offset": 1663}, "start": {"col": 5, "line": 54, "offset": 1656}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c", "start": {"col": 5, "line": 54, "offset": 1656}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 31, "line": 56, "offset": 1779}, "extra": {"engine_kind": "OSS", "fingerprint": "dbd65a493f23bb0b08110ac4546629e77d4d086b9d64742f6aa559dd27d7e5870fa393de62be555aa95eebb7a24a9ca4193f72cfadaf415b122fd14454cdae17_0", "is_ignored": false, "lines": "    memset(&local_150,0,0x100);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 24, "line": 56, "offset": 1772}, "start": {"col": 23, "line": 56, "offset": 1771}}, "$DST": {"abstract_content": "&local_150", "end": {"col": 22, "line": 56, "offset": 1770}, "start": {"col": 12, "line": 56, "offset": 1760}}, "$LEN": {"abstract_content": "0x100", "end": {"col": 30, "line": 56, "offset": 1778}, "start": {"col": 25, "line": 56, "offset": 1773}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00404e70_00404e70.c", "start": {"col": 5, "line": 56, "offset": 1753}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 53, "line": 59, "offset": 1432}, "extra": {"engine_kind": "OSS", "fingerprint": "1ade051364ae2395bd2add4bfd95c5ab3339d38ae0d7ab7c88888b8c2cb31f683de12fdd158784517556a7de08cca16f63777ab99ac330a7d2e8948704f26687_0", "is_ignored": false, "lines": "        sprintf((char *)&local_80,local_48,*param_1);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "local_48", "end": {"col": 9, "line": 1, "offset": 8}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "(char*&local_80", "end": {"col": 34, "line": 59, "offset": 1413}, "start": {"col": 17, "line": 59, "offset": 1396}}, "$FMT": {"abstract_content": "local_48", "end": {"col": 43, "line": 59, "offset": 1422}, "propagated_value": {"svalue_abstract_content": "\"%d\"", "svalue_end": {"col": 20, "line": 39, "offset": 769}, "svalue_start": {"col": 16, "line": 39, "offset": 765}}, "start": {"col": 35, "line": 59, "offset": 1414}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c", "start": {"col": 9, "line": 59, "offset": 1388}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 53, "line": 59, "offset": 1432}, "extra": {"engine_kind": "OSS", "fingerprint": "4b39662aad31f982b9e2eed355fb949335c504d38d6004480917d66030dd4324d655a0551d3229fa616295f64f1cf055da5c283fcb0c27d2963ae52001af87d2_0", "is_ignored": false, "lines": "        sprintf((char *)&local_80,local_48,*param_1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 16, "line": 59, "offset": 1395}, "start": {"col": 9, "line": 59, "offset": 1388}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c", "start": {"col": 9, "line": 59, "offset": 1388}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 63, "line": 78, "offset": 2258}, "extra": {"engine_kind": "OSS", "fingerprint": "e70cee9f35a598faf49d42641b4f846754d7ea3beefacb400894df75a48395e2959f449f55815645a636876f1aeb4153044a0e8aef08c535cc173c8f0679d139_0", "is_ignored": false, "lines": "              sprintf((char *)&local_80,__format,puVar6[0x21]);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "__format", "end": {"col": 9, "line": 1, "offset": 8}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "(char*&local_80", "end": {"col": 40, "line": 78, "offset": 2235}, "start": {"col": 23, "line": 78, "offset": 2218}}, "$FMT": {"abstract_content": "__format", "end": {"col": 49, "line": 78, "offset": 2244}, "propagated_value": {"svalue_abstract_content": "\"%d\"", "svalue_end": {"col": 20, "line": 39, "offset": 769}, "svalue_start": {"col": 16, "line": 39, "offset": 765}}, "start": {"col": 41, "line": 78, "offset": 2236}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c", "start": {"col": 15, "line": 78, "offset": 2210}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 63, "line": 78, "offset": 2258}, "extra": {"engine_kind": "OSS", "fingerprint": "4b39662aad31f982b9e2eed355fb949335c504d38d6004480917d66030dd4324d655a0551d3229fa616295f64f1cf055da5c283fcb0c27d2963ae52001af87d2_1", "is_ignored": false, "lines": "              sprintf((char *)&local_80,__format,puVar6[0x21]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 22, "line": 78, "offset": 2217}, "start": {"col": 15, "line": 78, "offset": 2210}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c", "start": {"col": 15, "line": 78, "offset": 2210}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 63, "line": 86, "offset": 2683}, "extra": {"engine_kind": "OSS", "fingerprint": "e70cee9f35a598faf49d42641b4f846754d7ea3beefacb400894df75a48395e2959f449f55815645a636876f1aeb4153044a0e8aef08c535cc173c8f0679d139_1", "is_ignored": false, "lines": "              sprintf((char *)&local_80,__format,puVar6[0x33]);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "__format", "end": {"col": 9, "line": 1, "offset": 8}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "(char*&local_80", "end": {"col": 40, "line": 86, "offset": 2660}, "start": {"col": 23, "line": 86, "offset": 2643}}, "$FMT": {"abstract_content": "__format", "end": {"col": 49, "line": 86, "offset": 2669}, "propagated_value": {"svalue_abstract_content": "\"%d\"", "svalue_end": {"col": 20, "line": 39, "offset": 769}, "svalue_start": {"col": 16, "line": 39, "offset": 765}}, "start": {"col": 41, "line": 86, "offset": 2661}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c", "start": {"col": 15, "line": 86, "offset": 2635}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 63, "line": 86, "offset": 2683}, "extra": {"engine_kind": "OSS", "fingerprint": "4b39662aad31f982b9e2eed355fb949335c504d38d6004480917d66030dd4324d655a0551d3229fa616295f64f1cf055da5c283fcb0c27d2963ae52001af87d2_2", "is_ignored": false, "lines": "              sprintf((char *)&local_80,__format,puVar6[0x33]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 22, "line": 86, "offset": 2642}, "start": {"col": 15, "line": 86, "offset": 2635}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c", "start": {"col": 15, "line": 86, "offset": 2635}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-format-string-bugs", "end": {"col": 63, "line": 113, "offset": 3875}, "extra": {"engine_kind": "OSS", "fingerprint": "5ba15404a18dd9f56988396fb8afb4fec0495db36685d0497c56d0108bc19fb3f1593801359bc9b1da60c631e8c19d7585955f1256a8edbe1ebfd82676d31b6a_0", "is_ignored": false, "lines": "              sprintf((char *)local_70,local_48,puVar6[0x541]);", "message": "The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/134", "https://julianor.tripod.com/bc/formatstring-1.2.pdf", "http://phrack.org/issues/70/13.html#article", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c", "start": {"col": 15, "line": 113, "offset": 3827}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 63, "line": 113, "offset": 3875}, "extra": {"engine_kind": "OSS", "fingerprint": "0dbb178b676154a87e40c816db209c7693ec916c14d34810b93290c86099acaef141241d3c4d4d738e3241e4523c7947c0feabbe510ee72bf34da4aa7438e1b6_0", "is_ignored": false, "lines": "              sprintf((char *)local_70,local_48,puVar6[0x541]);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "local_48", "end": {"col": 9, "line": 1, "offset": 8}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "(char*local_70", "end": {"col": 39, "line": 113, "offset": 3851}, "start": {"col": 23, "line": 113, "offset": 3835}}, "$FMT": {"abstract_content": "local_48", "end": {"col": 48, "line": 113, "offset": 3860}, "start": {"col": 40, "line": 113, "offset": 3852}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c", "start": {"col": 15, "line": 113, "offset": 3827}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 63, "line": 113, "offset": 3875}, "extra": {"engine_kind": "OSS", "fingerprint": "4b39662aad31f982b9e2eed355fb949335c504d38d6004480917d66030dd4324d655a0551d3229fa616295f64f1cf055da5c283fcb0c27d2963ae52001af87d2_3", "is_ignored": false, "lines": "              sprintf((char *)local_70,local_48,puVar6[0x541]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 22, "line": 113, "offset": 3834}, "start": {"col": 15, "line": 113, "offset": 3827}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c", "start": {"col": 15, "line": 113, "offset": 3827}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-format-string-bugs", "end": {"col": 63, "line": 121, "offset": 4302}, "extra": {"engine_kind": "OSS", "fingerprint": "5ba15404a18dd9f56988396fb8afb4fec0495db36685d0497c56d0108bc19fb3f1593801359bc9b1da60c631e8c19d7585955f1256a8edbe1ebfd82676d31b6a_1", "is_ignored": false, "lines": "              sprintf((char *)local_70,local_48,puVar6[0x553]);", "message": "The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/134", "https://julianor.tripod.com/bc/formatstring-1.2.pdf", "http://phrack.org/issues/70/13.html#article", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c", "start": {"col": 15, "line": 121, "offset": 4254}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 63, "line": 121, "offset": 4302}, "extra": {"engine_kind": "OSS", "fingerprint": "0dbb178b676154a87e40c816db209c7693ec916c14d34810b93290c86099acaef141241d3c4d4d738e3241e4523c7947c0feabbe510ee72bf34da4aa7438e1b6_1", "is_ignored": false, "lines": "              sprintf((char *)local_70,local_48,puVar6[0x553]);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "local_48", "end": {"col": 9, "line": 1, "offset": 8}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "(char*local_70", "end": {"col": 39, "line": 121, "offset": 4278}, "start": {"col": 23, "line": 121, "offset": 4262}}, "$FMT": {"abstract_content": "local_48", "end": {"col": 48, "line": 121, "offset": 4287}, "start": {"col": 40, "line": 121, "offset": 4279}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c", "start": {"col": 15, "line": 121, "offset": 4254}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 63, "line": 121, "offset": 4302}, "extra": {"engine_kind": "OSS", "fingerprint": "4b39662aad31f982b9e2eed355fb949335c504d38d6004480917d66030dd4324d655a0551d3229fa616295f64f1cf055da5c283fcb0c27d2963ae52001af87d2_4", "is_ignored": false, "lines": "              sprintf((char *)local_70,local_48,puVar6[0x553]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 22, "line": 121, "offset": 4261}, "start": {"col": 15, "line": 121, "offset": 4254}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c", "start": {"col": 15, "line": 121, "offset": 4254}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-format-string-bugs", "end": {"col": 63, "line": 128, "offset": 4634}, "extra": {"engine_kind": "OSS", "fingerprint": "5ba15404a18dd9f56988396fb8afb4fec0495db36685d0497c56d0108bc19fb3f1593801359bc9b1da60c631e8c19d7585955f1256a8edbe1ebfd82676d31b6a_2", "is_ignored": false, "lines": "              sprintf((char *)local_70,local_48,puVar6[0x565]);", "message": "The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/134", "https://julianor.tripod.com/bc/formatstring-1.2.pdf", "http://phrack.org/issues/70/13.html#article", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c", "start": {"col": 15, "line": 128, "offset": 4586}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 63, "line": 128, "offset": 4634}, "extra": {"engine_kind": "OSS", "fingerprint": "0dbb178b676154a87e40c816db209c7693ec916c14d34810b93290c86099acaef141241d3c4d4d738e3241e4523c7947c0feabbe510ee72bf34da4aa7438e1b6_2", "is_ignored": false, "lines": "              sprintf((char *)local_70,local_48,puVar6[0x565]);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "local_48", "end": {"col": 9, "line": 1, "offset": 8}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "(char*local_70", "end": {"col": 39, "line": 128, "offset": 4610}, "start": {"col": 23, "line": 128, "offset": 4594}}, "$FMT": {"abstract_content": "local_48", "end": {"col": 48, "line": 128, "offset": 4619}, "start": {"col": 40, "line": 128, "offset": 4611}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c", "start": {"col": 15, "line": 128, "offset": 4586}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 63, "line": 128, "offset": 4634}, "extra": {"engine_kind": "OSS", "fingerprint": "4b39662aad31f982b9e2eed355fb949335c504d38d6004480917d66030dd4324d655a0551d3229fa616295f64f1cf055da5c283fcb0c27d2963ae52001af87d2_5", "is_ignored": false, "lines": "              sprintf((char *)local_70,local_48,puVar6[0x565]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 22, "line": 128, "offset": 4593}, "start": {"col": 15, "line": 128, "offset": 4586}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00405228_00405228.c", "start": {"col": 15, "line": 128, "offset": 4586}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 43, "line": 28, "offset": 719}, "extra": {"engine_kind": "OSS", "fingerprint": "2690103a76eaedb8680420c491751c5e7ae8d3f771d2ff090556df72c343c98e233d29bdfeca5f8924ad21076417524f4b36a57abb0413c4a1fa42a9339fedb6_0", "is_ignored": false, "lines": "  sprintf((char *)&local_48,\"%d\",*param_1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 10, "line": 28, "offset": 686}, "start": {"col": 3, "line": 28, "offset": 679}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_004058a8_004058a8.c", "start": {"col": 3, "line": 28, "offset": 679}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 51, "line": 42, "offset": 1247}, "extra": {"engine_kind": "OSS", "fingerprint": "2690103a76eaedb8680420c491751c5e7ae8d3f771d2ff090556df72c343c98e233d29bdfeca5f8924ad21076417524f4b36a57abb0413c4a1fa42a9339fedb6_1", "is_ignored": false, "lines": "      sprintf((char *)&local_48,\"%d\",puVar5[0x21]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 14, "line": 42, "offset": 1210}, "start": {"col": 7, "line": 42, "offset": 1203}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_004058a8_004058a8.c", "start": {"col": 7, "line": 42, "offset": 1203}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 51, "line": 50, "offset": 1611}, "extra": {"engine_kind": "OSS", "fingerprint": "2690103a76eaedb8680420c491751c5e7ae8d3f771d2ff090556df72c343c98e233d29bdfeca5f8924ad21076417524f4b36a57abb0413c4a1fa42a9339fedb6_2", "is_ignored": false, "lines": "      sprintf((char *)&local_48,\"%d\",puVar5[0x33]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 14, "line": 50, "offset": 1574}, "start": {"col": 7, "line": 50, "offset": 1567}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_004058a8_004058a8.c", "start": {"col": 7, "line": 50, "offset": 1567}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 52, "line": 69, "offset": 2295}, "extra": {"engine_kind": "OSS", "fingerprint": "2690103a76eaedb8680420c491751c5e7ae8d3f771d2ff090556df72c343c98e233d29bdfeca5f8924ad21076417524f4b36a57abb0413c4a1fa42a9339fedb6_3", "is_ignored": false, "lines": "      sprintf((char *)&local_48,\"%d\",puVar5[0x541]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 14, "line": 69, "offset": 2257}, "start": {"col": 7, "line": 69, "offset": 2250}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_004058a8_004058a8.c", "start": {"col": 7, "line": 69, "offset": 2250}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 52, "line": 77, "offset": 2663}, "extra": {"engine_kind": "OSS", "fingerprint": "2690103a76eaedb8680420c491751c5e7ae8d3f771d2ff090556df72c343c98e233d29bdfeca5f8924ad21076417524f4b36a57abb0413c4a1fa42a9339fedb6_4", "is_ignored": false, "lines": "      sprintf((char *)&local_48,\"%d\",puVar5[0x553]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 14, "line": 77, "offset": 2625}, "start": {"col": 7, "line": 77, "offset": 2618}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_004058a8_004058a8.c", "start": {"col": 7, "line": 77, "offset": 2618}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 52, "line": 84, "offset": 2943}, "extra": {"engine_kind": "OSS", "fingerprint": "2690103a76eaedb8680420c491751c5e7ae8d3f771d2ff090556df72c343c98e233d29bdfeca5f8924ad21076417524f4b36a57abb0413c4a1fa42a9339fedb6_5", "is_ignored": false, "lines": "      sprintf((char *)&local_48,\"%d\",puVar5[0x565]);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 14, "line": 84, "offset": 2905}, "start": {"col": 7, "line": 84, "offset": 2898}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_004058a8_004058a8.c", "start": {"col": 7, "line": 84, "offset": 2898}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 28, "line": 35, "offset": 670}, "extra": {"engine_kind": "OSS", "fingerprint": "7cb734f600e0290954451918d0db71bb6725433251a992a086730b0c9e5981280d043b952dbe138faa28392663a15a3dd18b8ffd603fc08033e690260e8d5bf3_0", "is_ignored": false, "lines": "  memset(acStack_a0,0,0x81);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 22, "line": 35, "offset": 664}, "start": {"col": 21, "line": 35, "offset": 663}}, "$DST": {"abstract_content": "acStack_a0", "end": {"col": 20, "line": 35, "offset": 662}, "start": {"col": 10, "line": 35, "offset": 652}}, "$LEN": {"abstract_content": "0x81", "end": {"col": 27, "line": 35, "offset": 669}, "start": {"col": 23, "line": 35, "offset": 665}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_0040710c_0040710c.c", "start": {"col": 3, "line": 35, "offset": 645}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 36, "line": 36, "offset": 707}, "extra": {"engine_kind": "OSS", "fingerprint": "c54a8311c0b5022283c88f0e692120b25a19728455a7a7ea145885a26ed1228ea4772f9e06177a3d16ca1bbf14b2b1db4ffe94ae6082b68efa3004290e55606d_0", "is_ignored": false, "lines": "  strcpy((char *)&local_d8,param_1);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_0040710c_0040710c.c", "start": {"col": 3, "line": 36, "offset": 674}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 36, "offset": 707}, "extra": {"engine_kind": "OSS", "fingerprint": "5340a2bd7c574f73516595c97e36d322f8a9bc9c1191636c0c22cf54e61f5a3bdb0dd1ff39cbf23d24166faeec78ed4bc3c5e2d9276fe70dea2d42330532795c_0", "is_ignored": false, "lines": "  strcpy((char *)&local_d8,param_1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 9, "line": 36, "offset": 680}, "start": {"col": 3, "line": 36, "offset": 674}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_0040710c_0040710c.c", "start": {"col": 3, "line": 36, "offset": 674}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 36, "line": 37, "offset": 744}, "extra": {"engine_kind": "OSS", "fingerprint": "c54a8311c0b5022283c88f0e692120b25a19728455a7a7ea145885a26ed1228ea4772f9e06177a3d16ca1bbf14b2b1db4ffe94ae6082b68efa3004290e55606d_1", "is_ignored": false, "lines": "  strcpy((char *)&local_b4,param_2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_0040710c_0040710c.c", "start": {"col": 3, "line": 37, "offset": 711}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 37, "offset": 744}, "extra": {"engine_kind": "OSS", "fingerprint": "5340a2bd7c574f73516595c97e36d322f8a9bc9c1191636c0c22cf54e61f5a3bdb0dd1ff39cbf23d24166faeec78ed4bc3c5e2d9276fe70dea2d42330532795c_1", "is_ignored": false, "lines": "  strcpy((char *)&local_b4,param_2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 9, "line": 37, "offset": 717}, "start": {"col": 3, "line": 37, "offset": 711}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_0040710c_0040710c.c", "start": {"col": 3, "line": 37, "offset": 711}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 29, "line": 39, "offset": 818}, "extra": {"engine_kind": "OSS", "fingerprint": "c54a8311c0b5022283c88f0e692120b25a19728455a7a7ea145885a26ed1228ea4772f9e06177a3d16ca1bbf14b2b1db4ffe94ae6082b68efa3004290e55606d_2", "is_ignored": false, "lines": "  strcpy(param_3,acStack_a0);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_0040710c_0040710c.c", "start": {"col": 3, "line": 39, "offset": 792}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 29, "line": 39, "offset": 818}, "extra": {"engine_kind": "OSS", "fingerprint": "5340a2bd7c574f73516595c97e36d322f8a9bc9c1191636c0c22cf54e61f5a3bdb0dd1ff39cbf23d24166faeec78ed4bc3c5e2d9276fe70dea2d42330532795c_2", "is_ignored": false, "lines": "  strcpy(param_3,acStack_a0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 9, "line": 39, "offset": 798}, "start": {"col": 3, "line": 39, "offset": 792}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_0040710c_0040710c.c", "start": {"col": 3, "line": 39, "offset": 792}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 11, "offset": 158}, "extra": {"engine_kind": "OSS", "fingerprint": "3710539b6591cb0d9d144c6a193f72b1d69f14b09cbd7683dc8df01e79b1a671f155054a2d133733bf27bee2ddd1e4686146d8609f8ec85382e16ff558f1305a_0", "is_ignored": false, "lines": "  pcVar1 = getenv(\"REMOTE_ADDR\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$1": {"abstract_content": "get", "end": {"col": 4, "line": 1, "offset": 3}, "start": {"col": 1, "line": 1, "offset": 0}}, "$FUN": {"abstract_content": "getenv", "end": {"col": 18, "line": 11, "offset": 143}, "start": {"col": 12, "line": 11, "offset": 137}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00410640_00410640.c", "start": {"col": 12, "line": 11, "offset": 137}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 11, "offset": 166}, "extra": {"engine_kind": "OSS", "fingerprint": "8828ba7d9b6790282b537e88a0aa7b5bec1907e7948c2db6ffe47ddcc805c78b6ed5c7697279080d99001993a89af7a1b07175586004b0c111d66b5f0a710f7f_0", "is_ignored": false, "lines": "  pcVar1 = getenv(\"REMOTE_ADDR\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$1": {"abstract_content": "get", "end": {"col": 4, "line": 1, "offset": 3}, "start": {"col": 1, "line": 1, "offset": 0}}, "$FUN": {"abstract_content": "getenv", "end": {"col": 18, "line": 11, "offset": 151}, "start": {"col": 12, "line": 11, "offset": 145}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00410864_00410864.c", "start": {"col": 12, "line": 11, "offset": 145}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 60, "line": 15, "offset": 432}, "extra": {"engine_kind": "OSS", "fingerprint": "a04062ae0e5d28a946aa562026768dece9ef737bc7a2cda42a813367560a9f322b5fb78f6df6247cf234bccc82c522438608d2dddaf90b3585235b9dbeaed291_0", "is_ignored": false, "lines": "    __s = fopen(\"/mnt/flash/config/hnap_notifier.xml\",\"wb\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "fopen", "end": {"col": 16, "line": 15, "offset": 388}, "start": {"col": 11, "line": 15, "offset": 383}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00410864_00410864.c", "start": {"col": 11, "line": 15, "offset": 383}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 33, "line": 28, "offset": 637}, "extra": {"engine_kind": "OSS", "fingerprint": "d1e38095467fea54359f0a2fe5af02dd9a1b7cf909f571f4a21d28b687d747184858a53481c23e697b234dfa3f88ac3fdf241083c3242ec905ceadb156f9ef5b_0", "is_ignored": false, "lines": "      memset(acStack_130,0,0x80);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 27, "line": 28, "offset": 631}, "start": {"col": 26, "line": 28, "offset": 630}}, "$DST": {"abstract_content": "acStack_130", "end": {"col": 25, "line": 28, "offset": 629}, "start": {"col": 14, "line": 28, "offset": 618}}, "$LEN": {"abstract_content": "0x80", "end": {"col": 32, "line": 28, "offset": 636}, "start": {"col": 28, "line": 28, "offset": 632}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00410ae0_00410ae0.c", "start": {"col": 7, "line": 28, "offset": 611}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 29, "offset": 668}, "extra": {"engine_kind": "OSS", "fingerprint": "4d194d2afd5b2f4ca46f9e64cb260b5268e0cb5a2b310103bd592ca115a896d0b06db91ecc0016714300b23ba070bc3548678d0a994c3cb35b81077634f3ec8d_0", "is_ignored": false, "lines": "      memset(local_b0,0,0x80);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 24, "line": 29, "offset": 662}, "start": {"col": 23, "line": 29, "offset": 661}}, "$DST": {"abstract_content": "local_b0", "end": {"col": 22, "line": 29, "offset": 660}, "start": {"col": 14, "line": 29, "offset": 652}}, "$LEN": {"abstract_content": "0x80", "end": {"col": 29, "line": 29, "offset": 667}, "start": {"col": 25, "line": 29, "offset": 663}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00410ae0_00410ae0.c", "start": {"col": 7, "line": 29, "offset": 645}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 35, "line": 33, "offset": 856}, "extra": {"engine_kind": "OSS", "fingerprint": "674b35b6041e23e8d9964ba9cef25a5fd3d20c5487c66e843c76d9a3fcb16889886a7093d9dacbffbcb8dd0c59b716cdd02e1632cd6f14a6a7c207a6316d7b75_0", "is_ignored": false, "lines": "        strcpy(acStack_130,pcVar5);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00410ae0_00410ae0.c", "start": {"col": 9, "line": 33, "offset": 830}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 33, "offset": 856}, "extra": {"engine_kind": "OSS", "fingerprint": "8539dfca0456c0bef73cce8d2d85b6e3b4251ecae7dbfa863d808de20192e7728fd1124d9338106f33466cf49b35b65f9028e2f784d79f40437237e1c6322739_0", "is_ignored": false, "lines": "        strcpy(acStack_130,pcVar5);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 15, "line": 33, "offset": 836}, "start": {"col": 9, "line": 33, "offset": 830}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00410ae0_00410ae0.c", "start": {"col": 9, "line": 33, "offset": 830}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-truncation", "end": {"col": 34, "line": 56, "offset": 1674}, "extra": {"engine_kind": "OSS", "fingerprint": "62f2a8c6757e2753d4814b5f75f7fd32c47ff3b19aafa8f51587e676cb6832e33b16ce2ea9b8d7fe6863a4bdef62531cc9fe567cc7d49c8e59396a0a4ac29a3a_0", "is_ignored": false, "lines": "          cVar1 = local_b0[uVar9];", "message": "Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/197", "https://cwe.mitre.org/data/definitions/681", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms"]}, "metavars": {"$LARGE": {"abstract_content": "uVar9", "end": {"col": 33, "line": 56, "offset": 1673}, "propagated_value": {"svalue_abstract_content": "0", "svalue_end": {"col": 18, "line": 54, "offset": 1626}, "svalue_start": {"col": 17, "line": 54, "offset": 1625}}, "start": {"col": 28, "line": 56, "offset": 1668}}, "$NARROW": {"abstract_content": "cVar1", "end": {"col": 16, "line": 56, "offset": 1656}, "start": {"col": 11, "line": 56, "offset": 1651}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00410ae0_00410ae0.c", "start": {"col": 11, "line": 56, "offset": 1651}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 56, "line": 67, "offset": 2138}, "extra": {"engine_kind": "OSS", "fingerprint": "a59941127acb2077a0f36f0796039286e72ed1e0a3650886278ffff9584b898ce8a0a03bc975c52b4d276cdef3d9aafc338c7b77abdea5b869e9b2e90600e01c_0", "is_ignored": false, "lines": "  __s = fopen(\"/mnt/flash/config/hnap_policy.xml\",\"wb\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "fopen", "end": {"col": 14, "line": 67, "offset": 2096}, "start": {"col": 9, "line": 67, "offset": 2091}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00410ae0_00410ae0.c", "start": {"col": 9, "line": 67, "offset": 2091}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 26, "line": 16, "offset": 399}, "extra": {"engine_kind": "OSS", "fingerprint": "e99c52fcc80e39db79fb6d8b9e1164e04ca6703bd5118ccc4db7293378920fcc194ca27f388538543542c5c638121d19277749a12e66914acfb5cb67aff17e40_0", "is_ignored": false, "lines": "    strcpy(param_2,__src);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411588_00411588.c", "start": {"col": 5, "line": 16, "offset": 378}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 26, "line": 16, "offset": 399}, "extra": {"engine_kind": "OSS", "fingerprint": "d9b0bedf61893564120383ea093fc74f2036570ae19c45e22ced3e3b61788abcad2e2c84d0394a30e422e1886cd4ae658da82d618e4b93be8b9216dae4a469ea_0", "is_ignored": false, "lines": "    strcpy(param_2,__src);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 11, "line": 16, "offset": 384}, "start": {"col": 5, "line": 16, "offset": 378}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411588_00411588.c", "start": {"col": 5, "line": 16, "offset": 378}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 28, "line": 14, "offset": 250}, "extra": {"engine_kind": "OSS", "fingerprint": "fd076b67cc3e7b5fd40734b4f37d4c5e628a465e0be937b0a66e447b287beb846a25ed29b2430338674752ad226b59e270c9e610b92f6b91bd24c180e9125c35_0", "is_ignored": false, "lines": "  memset(auStack_67,0,0x4f);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 22, "line": 14, "offset": 244}, "start": {"col": 21, "line": 14, "offset": 243}}, "$DST": {"abstract_content": "auStack_67", "end": {"col": 20, "line": 14, "offset": 242}, "start": {"col": 10, "line": 14, "offset": 232}}, "$LEN": {"abstract_content": "0x4f", "end": {"col": 27, "line": 14, "offset": 249}, "start": {"col": 23, "line": 14, "offset": 245}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_0041161c_0041161c.c", "start": {"col": 3, "line": 14, "offset": 225}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 14, "offset": 264}, "extra": {"engine_kind": "OSS", "fingerprint": "973cb94e1160e83f55457a017618d8cfcdadca6f3e09764dab1d36086773e45b94f0eaff81699c145df3f76cbc442352f7354c528f7ca104657906a3e6aed537_0", "is_ignored": false, "lines": "  memset(auStack_5cf,0,0x5b3);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 23, "line": 14, "offset": 257}, "start": {"col": 22, "line": 14, "offset": 256}}, "$DST": {"abstract_content": "auStack_5cf", "end": {"col": 21, "line": 14, "offset": 255}, "start": {"col": 10, "line": 14, "offset": 244}}, "$LEN": {"abstract_content": "0x5b3", "end": {"col": 29, "line": 14, "offset": 263}, "start": {"col": 24, "line": 14, "offset": 258}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411860_00411860.c", "start": {"col": 3, "line": 14, "offset": 237}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 40, "line": 32, "offset": 1039}, "extra": {"engine_kind": "OSS", "fingerprint": "f1496c277d4a8a1721cd14ef7f6f5fb4c4ac291078e7da64a3fe15a466328fadde8a0ab21b271685cfbedcb483a260431b93853048d60d18d454558e827b9d2f_0", "is_ignored": false, "lines": "        sprintf(&local_5d0,\n                \"POST /HNAP1/ HTTP/1.1\\r\\nHost: %s\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nContent-Length: %d\\r\\nSOAPAction: \\\"http://%s/HNAP1/PushDCHEvent\\\"\\r\\n\\r\\n\"\n                ,param_2,sVar3,param_2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST /HNAP1/ HTTP/1.1\\r\\nHost: %s\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nContent-Length: %d\\r\\nSOAPAction: \\\"http://%s/HNAP1/PushDCHEvent\\\"\\r\\n\\r\\n\"", "end": {"col": 155, "line": 1, "offset": 154}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "&local_5d0", "end": {"col": 27, "line": 30, "offset": 827}, "start": {"col": 17, "line": 30, "offset": 817}}, "$FMT": {"abstract_content": "\"POST /HNAP1/ HTTP/1.1\\r\\nHost: %s\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nContent-Length: %d\\r\\nSOAPAction: \\\"http://%s/HNAP1/PushDCHEvent\\\"\\r\\n\\r\\n\"", "end": {"col": 171, "line": 31, "offset": 999}, "start": {"col": 17, "line": 31, "offset": 845}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411860_00411860.c", "start": {"col": 9, "line": 30, "offset": 809}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 32, "offset": 1039}, "extra": {"engine_kind": "OSS", "fingerprint": "ba72e0d98e45031484f95dc339c6d87699c26afad6675beb845f6c162766065870211fd30e3093159d4958400ed6dfd61872a28cf5061cef0d6646845dca2689_0", "is_ignored": false, "lines": "        sprintf(&local_5d0,\n                \"POST /HNAP1/ HTTP/1.1\\r\\nHost: %s\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nContent-Length: %d\\r\\nSOAPAction: \\\"http://%s/HNAP1/PushDCHEvent\\\"\\r\\n\\r\\n\"\n                ,param_2,sVar3,param_2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 16, "line": 30, "offset": 816}, "start": {"col": 9, "line": 30, "offset": 809}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411860_00411860.c", "start": {"col": 9, "line": 30, "offset": 809}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 48, "line": 37, "offset": 1311}, "extra": {"engine_kind": "OSS", "fingerprint": "d5fa764dc7a19bd91e95c4fbce54261779abf42271896e881c39acfc10067a1b1fc512cf4279e9c977250a254cf06eeda3cc79f95c3f4092b24118b00bd66032_0", "is_ignored": false, "lines": "        sprintf(&local_5d0,\n                \"POST /HNAP1/ HTTP/1.1\\r\\nHost: %s:%d\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nContent-Length: %d\\r\\nSOAPAction: \\\"http://%s/HNAP1/PushDCHEvent\\\"\\r\\n\\r\\n\"\n                ,param_2,param_3,sVar3,param_2);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"POST /HNAP1/ HTTP/1.1\\r\\nHost: %s:%d\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nContent-Length: %d\\r\\nSOAPAction: \\\"http://%s/HNAP1/PushDCHEvent\\\"\\r\\n\\r\\n\"", "end": {"col": 158, "line": 1, "offset": 157}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "&local_5d0", "end": {"col": 27, "line": 35, "offset": 1088}, "start": {"col": 17, "line": 35, "offset": 1078}}, "$FMT": {"abstract_content": "\"POST /HNAP1/ HTTP/1.1\\r\\nHost: %s:%d\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nContent-Length: %d\\r\\nSOAPAction: \\\"http://%s/HNAP1/PushDCHEvent\\\"\\r\\n\\r\\n\"", "end": {"col": 174, "line": 36, "offset": 1263}, "start": {"col": 17, "line": 36, "offset": 1106}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411860_00411860.c", "start": {"col": 9, "line": 35, "offset": 1070}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 48, "line": 37, "offset": 1311}, "extra": {"engine_kind": "OSS", "fingerprint": "ba72e0d98e45031484f95dc339c6d87699c26afad6675beb845f6c162766065870211fd30e3093159d4958400ed6dfd61872a28cf5061cef0d6646845dca2689_1", "is_ignored": false, "lines": "        sprintf(&local_5d0,\n                \"POST /HNAP1/ HTTP/1.1\\r\\nHost: %s:%d\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nContent-Length: %d\\r\\nSOAPAction: \\\"http://%s/HNAP1/PushDCHEvent\\\"\\r\\n\\r\\n\"\n                ,param_2,param_3,sVar3,param_2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 16, "line": 35, "offset": 1077}, "start": {"col": 9, "line": 35, "offset": 1070}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411860_00411860.c", "start": {"col": 9, "line": 35, "offset": 1070}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 24, "line": 52, "offset": 1712}, "extra": {"engine_kind": "OSS", "fingerprint": "c75e3b0c4a22ddc61398a33bed8e6c34804dc89379329cb8f1fbb2dbf5ad0c75df635da8a7eafd0084ec3e06f20230ad6dd5b9f2486a0a4db30b4789c66a98b3_0", "is_ignored": false, "lines": "          sVar4 = 0x5b4;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0x5b4", "end": {"col": 24, "line": 52, "offset": 1712}, "start": {"col": 19, "line": 52, "offset": 1707}}, "$UNSIGNED": {"abstract_content": "sVar4", "end": {"col": 16, "line": 52, "offset": 1704}, "start": {"col": 11, "line": 52, "offset": 1699}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411860_00411860.c", "start": {"col": 11, "line": 52, "offset": 1699}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 30, "offset": 896}, "extra": {"engine_kind": "OSS", "fingerprint": "6b44460975e74ae4dc135e3f413a1c9b3ea76f745c43aa97b0fc539d095ff5636fb41e9701a2e7209f4f31b095f6ca64e6f0a2437749d1a13e4c22e66f93e0ac_0", "is_ignored": false, "lines": "        sVar3 = recv(param_1,__buf,1,0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "recv", "end": {"col": 21, "line": 30, "offset": 877}, "start": {"col": 17, "line": 30, "offset": 873}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411af8_00411af8.c", "start": {"col": 17, "line": 30, "offset": 873}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 40, "line": 30, "offset": 896}, "extra": {"engine_kind": "OSS", "fingerprint": "1632426783f616cd60a9a8773b8e557aa338908c138519e78bb7939c0f2aef055f211a5ab2c678006df3fb2f830c9001c31e5e1e830aecaae68b334501943605_0", "is_ignored": false, "lines": "        sVar3 = recv(param_1,__buf,1,0);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$BUF": {"abstract_content": "__buf", "end": {"col": 35, "line": 30, "offset": 891}, "start": {"col": 30, "line": 30, "offset": 886}}, "$FL": {"abstract_content": "0", "end": {"col": 39, "line": 30, "offset": 895}, "start": {"col": 38, "line": 30, "offset": 894}}, "$LEN": {"abstract_content": "1", "end": {"col": 37, "line": 30, "offset": 893}, "start": {"col": 36, "line": 30, "offset": 892}}, "$SD": {"abstract_content": "param_1", "end": {"col": 29, "line": 30, "offset": 885}, "start": {"col": 22, "line": 30, "offset": 878}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411af8_00411af8.c", "start": {"col": 17, "line": 30, "offset": 873}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 16, "line": 21, "offset": 365}, "extra": {"engine_kind": "OSS", "fingerprint": "dc7c5b267e57a71a0edc09db309ed48a292e8372c0c9ee6f90bb54303ee6d68d137feda29fb958f18d0fde624d1bd291b1abbbe3963964a2360b860c5a374f48_0", "is_ignored": false, "lines": "  local_658 = 0;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "0", "end": {"col": 16, "line": 21, "offset": 365}, "start": {"col": 15, "line": 21, "offset": 364}}, "$UNSIGNED": {"abstract_content": "local_658", "end": {"col": 12, "line": 21, "offset": 361}, "start": {"col": 3, "line": 21, "offset": 352}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c", "start": {"col": 3, "line": 21, "offset": 352}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 32, "line": 23, "offset": 421}, "extra": {"engine_kind": "OSS", "fingerprint": "789802ca4f550d07bd56e3da833aa511c9943e0658fcb4bac11bd8c7a290b8aa28d1e3dee3ab1f9ed3649b5cb1b2f0b2dab684cbb330e5fd42185b25f7f17719_0", "is_ignored": false, "lines": "  memset(local_5cc + 1,0,0x5b3);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 25, "line": 23, "offset": 414}, "start": {"col": 24, "line": 23, "offset": 413}}, "$DST": {"abstract_content": "local_5cc+1", "end": {"col": 23, "line": 23, "offset": 412}, "start": {"col": 10, "line": 23, "offset": 399}}, "$LEN": {"abstract_content": "0x5b3", "end": {"col": 31, "line": 23, "offset": 420}, "start": {"col": 26, "line": 23, "offset": 415}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c", "start": {"col": 3, "line": 23, "offset": 392}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 32, "line": 35, "offset": 880}, "extra": {"engine_kind": "OSS", "fingerprint": "71c86249a5c22aa10593edf1147cfd39993fec2af497182d5994130d58f83a102220940dca15d4fe539b6e57634ef9f816cd3c73fa8885bbdddcb418908f710b_0", "is_ignored": false, "lines": "      memset(local_5cc,0,0x5b4);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 25, "line": 35, "offset": 873}, "start": {"col": 24, "line": 35, "offset": 872}}, "$DST": {"abstract_content": "local_5cc", "end": {"col": 23, "line": 35, "offset": 871}, "start": {"col": 14, "line": 35, "offset": 862}}, "$LEN": {"abstract_content": "0x5b4", "end": {"col": 31, "line": 35, "offset": 879}, "start": {"col": 26, "line": 35, "offset": 874}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c", "start": {"col": 7, "line": 35, "offset": 855}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 44, "line": 38, "offset": 1004}, "extra": {"engine_kind": "OSS", "fingerprint": "517ac97a19459fa967d26b4075777bff0266cf50ebffc867d1825938b631a92796ffbb878127431cf38913b21bd2780524380a69f99080407617961e4c7fa767_0", "is_ignored": false, "lines": "        sscanf(acStack_5c4,\"%d\",&local_65c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 15, "line": 38, "offset": 975}, "start": {"col": 9, "line": 38, "offset": 969}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c", "start": {"col": 9, "line": 38, "offset": 969}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc", "end": {"col": 44, "line": 38, "offset": 1004}, "extra": {"engine_kind": "OSS", "fingerprint": "efe99d3c35260bf0060b26573bc03adfc6356e5f19abec805a50c549b736815c126d512a49f99dcffc3660766c401b4fde3669df8e703c9c7babd80e27b94686_0", "is_ignored": false, "lines": "        sscanf(acStack_5c4,\"%d\",&local_65c);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 15, "line": 38, "offset": 975}, "start": {"col": 9, "line": 38, "offset": 969}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c", "start": {"col": 9, "line": 38, "offset": 969}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 50, "line": 47, "offset": 1379}, "extra": {"engine_kind": "OSS", "fingerprint": "517ac97a19459fa967d26b4075777bff0266cf50ebffc867d1825938b631a92796ffbb878127431cf38913b21bd2780524380a69f99080407617961e4c7fa767_1", "is_ignored": false, "lines": "            sscanf(pcVar2 + 0x10,\"%d\",&local_658);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 19, "line": 47, "offset": 1348}, "start": {"col": 13, "line": 47, "offset": 1342}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c", "start": {"col": 13, "line": 47, "offset": 1342}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unchecked-ret-scanf-etc", "end": {"col": 50, "line": 47, "offset": 1379}, "extra": {"engine_kind": "OSS", "fingerprint": "efe99d3c35260bf0060b26573bc03adfc6356e5f19abec805a50c549b736815c126d512a49f99dcffc3660766c401b4fde3669df8e703c9c7babd80e27b94686_1", "is_ignored": false, "lines": "            sscanf(pcVar2 + 0x10,\"%d\",&local_658);", "message": "The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/252", "https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 19, "line": 47, "offset": 1348}, "start": {"col": 13, "line": 47, "offset": 1342}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c", "start": {"col": 13, "line": 47, "offset": 1342}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 28, "line": 51, "offset": 1578}, "extra": {"engine_kind": "OSS", "fingerprint": "a60ab7cbcf6d26920ec044b698ebc22f2491af4d29f9a238f77146da75e9f9c260c0910b5bc92550240adfaee90173f8e8c6fff2b559b0dae2dcdab002e12fe3_0", "is_ignored": false, "lines": "              local_658 = 3;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "3", "end": {"col": 28, "line": 51, "offset": 1578}, "start": {"col": 27, "line": 51, "offset": 1577}}, "$UNSIGNED": {"abstract_content": "local_658", "end": {"col": 24, "line": 51, "offset": 1574}, "start": {"col": 15, "line": 51, "offset": 1565}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c", "start": {"col": 15, "line": 51, "offset": 1565}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 28, "line": 53, "offset": 1621}, "extra": {"engine_kind": "OSS", "fingerprint": "8efcc97da4ff35d8173f317291a58251dff18dcef3ba6c740f173e999bfb0f62febee8cc21fd8bf34c880ff314a6efa68d7b245db12e27fe0e8433f0cddf1c4a_0", "is_ignored": false, "lines": "            __n = local_658;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "local_658", "end": {"col": 28, "line": 53, "offset": 1621}, "start": {"col": 19, "line": 53, "offset": 1612}}, "$UNSIGNED": {"abstract_content": "__n", "end": {"col": 16, "line": 53, "offset": 1609}, "start": {"col": 13, "line": 53, "offset": 1606}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c", "start": {"col": 13, "line": 53, "offset": 1606}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 63, "offset": 2052}, "extra": {"engine_kind": "OSS", "fingerprint": "71c86249a5c22aa10593edf1147cfd39993fec2af497182d5994130d58f83a102220940dca15d4fe539b6e57634ef9f816cd3c73fa8885bbdddcb418908f710b_1", "is_ignored": false, "lines": "            memset(local_5cc,0,0x5b4);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 31, "line": 63, "offset": 2045}, "start": {"col": 30, "line": 63, "offset": 2044}}, "$DST": {"abstract_content": "local_5cc", "end": {"col": 29, "line": 63, "offset": 2043}, "start": {"col": 20, "line": 63, "offset": 2034}}, "$LEN": {"abstract_content": "0x5b4", "end": {"col": 37, "line": 63, "offset": 2051}, "start": {"col": 32, "line": 63, "offset": 2046}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c", "start": {"col": 13, "line": 63, "offset": 2027}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 66, "line": 75, "offset": 2577}, "extra": {"engine_kind": "OSS", "fingerprint": "cf9653de47a8e9c035782c50307a4c6f53000e4b16051ada7c363945ce75b42b2a37b2d35bb14288de04fdd25fee54ed28f93f5a80b0971461fa442d2e9439c6_0", "is_ignored": false, "lines": "                  iVar4 = recv(local_660,local_5cc + iVar1,__n,0);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar4", "end": {"col": 24, "line": 75, "offset": 2535}, "start": {"col": 19, "line": 75, "offset": 2530}}, "$UNSIGNED": {"abstract_content": "__n", "end": {"col": 63, "line": 75, "offset": 2574}, "propagated_value": {"svalue_abstract_content": "__n-iVar4", "svalue_end": {"col": 34, "line": 80, "offset": 2740}, "svalue_start": {"col": 23, "line": 80, "offset": 2729}}, "start": {"col": 60, "line": 75, "offset": 2571}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c", "start": {"col": 19, "line": 75, "offset": 2530}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 66, "line": 75, "offset": 2577}, "extra": {"engine_kind": "OSS", "fingerprint": "d98b5209a29bff93dc576a43ac970c259bc12c860ff0df24bfe828f7d3e5ab895cbbb3a14a7207ef4b6a8c02e1bbf1564e7f0a3076f9a456da5be8002d176de6_0", "is_ignored": false, "lines": "                  iVar4 = recv(local_660,local_5cc + iVar1,__n,0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "recv", "end": {"col": 31, "line": 75, "offset": 2542}, "start": {"col": 27, "line": 75, "offset": 2538}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c", "start": {"col": 27, "line": 75, "offset": 2538}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 68, "line": 78, "offset": 2687}, "extra": {"engine_kind": "OSS", "fingerprint": "d98b5209a29bff93dc576a43ac970c259bc12c860ff0df24bfe828f7d3e5ab895cbbb3a14a7207ef4b6a8c02e1bbf1564e7f0a3076f9a456da5be8002d176de6_1", "is_ignored": false, "lines": "                  iVar4 = recv(local_660,local_5cc + iVar1,0x5b4,0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "recv", "end": {"col": 31, "line": 78, "offset": 2650}, "start": {"col": 27, "line": 78, "offset": 2646}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c", "start": {"col": 27, "line": 78, "offset": 2646}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 68, "line": 78, "offset": 2687}, "extra": {"engine_kind": "OSS", "fingerprint": "43f1ff0dc32293fab5f2e37175632f61e818b9409795d2401be6d1b5e0b18395f65bc5f54a989d49638cb4e6d63c244ab80ea3e261f4cdb659b70a66a4d7715a_0", "is_ignored": false, "lines": "                  iVar4 = recv(local_660,local_5cc + iVar1,0x5b4,0);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$BUF": {"abstract_content": "local_5cc+iVar1", "end": {"col": 59, "line": 78, "offset": 2678}, "start": {"col": 42, "line": 78, "offset": 2661}}, "$FL": {"abstract_content": "0", "end": {"col": 67, "line": 78, "offset": 2686}, "start": {"col": 66, "line": 78, "offset": 2685}}, "$LEN": {"abstract_content": "0x5b4", "end": {"col": 65, "line": 78, "offset": 2684}, "start": {"col": 60, "line": 78, "offset": 2679}}, "$SD": {"abstract_content": "local_660", "end": {"col": 41, "line": 78, "offset": 2660}, "start": {"col": 32, "line": 78, "offset": 2651}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c", "start": {"col": 27, "line": 78, "offset": 2646}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 34, "line": 80, "offset": 2740}, "extra": {"engine_kind": "OSS", "fingerprint": "cf9653de47a8e9c035782c50307a4c6f53000e4b16051ada7c363945ce75b42b2a37b2d35bb14288de04fdd25fee54ed28f93f5a80b0971461fa442d2e9439c6_1", "is_ignored": false, "lines": "                __n = __n - iVar4;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar4", "end": {"col": 34, "line": 80, "offset": 2740}, "start": {"col": 29, "line": 80, "offset": 2735}}, "$UNSIGNED": {"abstract_content": "__n", "end": {"col": 20, "line": 80, "offset": 2726}, "start": {"col": 17, "line": 80, "offset": 2723}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00411cec_00411cec.c", "start": {"col": 17, "line": 80, "offset": 2723}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 10, "line": 7, "offset": 172}, "extra": {"engine_kind": "OSS", "fingerprint": "a13ea0783129570a18ea973cc5edc0b3479bfdd119fed19f36fb0a62bbc00f888d7dff7a592888aa0a4af8df2acfb76a0398806ca0ea4cb7fd970e05b58b3b98_0", "is_ignored": false, "lines": "  system(\n        \"/usr/sbin/mDNSClientPosix -t _dhnap._tcp -s 5 -f 0 -p /tmp/.hnap_device_list_tmp.xml 2>/dev/null 1>/dev/null\"\n        );", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 9, "line": 5, "offset": 42}, "start": {"col": 3, "line": 5, "offset": 36}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_004126e4_004126e4.c", "start": {"col": 3, "line": 5, "offset": 36}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 76, "line": 8, "offset": 249}, "extra": {"engine_kind": "OSS", "fingerprint": "a13ea0783129570a18ea973cc5edc0b3479bfdd119fed19f36fb0a62bbc00f888d7dff7a592888aa0a4af8df2acfb76a0398806ca0ea4cb7fd970e05b58b3b98_1", "is_ignored": false, "lines": "  system(\"cp -f /tmp/.hnap_device_list_tmp.xml /tmp/.hnap_device_list.xml\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 9, "line": 8, "offset": 182}, "start": {"col": 3, "line": 8, "offset": 176}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_004126e4_004126e4.c", "start": {"col": 3, "line": 8, "offset": 176}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-rand-srand", "end": {"col": 21, "line": 11, "offset": 144}, "extra": {"engine_kind": "OSS", "fingerprint": "88cf79fb07b5b945b89867a404fc9ade8ce74146249de8996f5baccd3d845b2038da8d044b95fdf9d9006e7ede17a3d0ce0c44a8166800bb5bbf1b40bd1b5d58_0", "is_ignored": false, "lines": "      iVar1 = rand();", "message": "The rand() PRNG should not be used in applications intended to be  portable when good randomness is needed. Instead, the use of random()  is recommended.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/338", "https://cwe.mitre.org/data/definitions/330", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00412afc_00412afc.c", "start": {"col": 15, "line": 11, "offset": 138}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 21, "line": 11, "offset": 144}, "extra": {"engine_kind": "OSS", "fingerprint": "8101edcf4a104d02685c5ed992e86b03f695eec0a42e1aebba8259de3bbbb2e3175901b7e526b25124d2644d25a94dd816cf882107f5161466e385884084fddc_0", "is_ignored": false, "lines": "      iVar1 = rand();", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "rand", "end": {"col": 19, "line": 11, "offset": 142}, "start": {"col": 15, "line": 11, "offset": 138}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00412afc_00412afc.c", "start": {"col": 15, "line": 11, "offset": 138}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 24, "line": 18, "offset": 379}, "extra": {"engine_kind": "OSS", "fingerprint": "c469f4a2e8c27d2c58c1ba22e364141417de608ba21f23fc64d35ce2fe734e55da90298bc310eaadf2c8b66e6860c1aa2adffacd7611da3a1e7b2b5161ac38a3_0", "is_ignored": false, "lines": "  memset(puVar1,0,0x40);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 18, "line": 18, "offset": 373}, "start": {"col": 17, "line": 18, "offset": 372}}, "$DST": {"abstract_content": "puVar1", "end": {"col": 16, "line": 18, "offset": 371}, "propagated_value": {"svalue_abstract_content": "local_80", "svalue_end": {"col": 20, "line": 17, "offset": 354}, "svalue_start": {"col": 12, "line": 17, "offset": 346}}, "start": {"col": 10, "line": 18, "offset": 365}}, "$LEN": {"abstract_content": "0x40", "end": {"col": 23, "line": 18, "offset": 378}, "start": {"col": 19, "line": 18, "offset": 374}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00412bd8_00412bd8.c", "start": {"col": 3, "line": 18, "offset": 358}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 42, "line": 27, "offset": 562}, "extra": {"engine_kind": "OSS", "fingerprint": "9cc7ba053534919e32ca39ba94707394563fc1a6436e15ff6c30509148e05b1e669244e1d5dbf4bbcc591c8bccbc261be7243f90efb911e2070ddf416a73c84e_0", "is_ignored": false, "lines": "  memcpy(local_80 + 0x10,param_1,param_2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 27, "offset": 529}, "start": {"col": 3, "line": 27, "offset": 523}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00412bd8_00412bd8.c", "start": {"col": 3, "line": 27, "offset": 523}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 28, "offset": 596}, "extra": {"engine_kind": "OSS", "fingerprint": "9cc7ba053534919e32ca39ba94707394563fc1a6436e15ff6c30509148e05b1e669244e1d5dbf4bbcc591c8bccbc261be7243f90efb911e2070ddf416a73c84e_1", "is_ignored": false, "lines": "  memcpy(puVar1,param_3,param_4);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 28, "offset": 572}, "start": {"col": 3, "line": 28, "offset": 566}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00412bd8_00412bd8.c", "start": {"col": 3, "line": 28, "offset": 566}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-truncation", "end": {"col": 88, "line": 16, "offset": 333}, "extra": {"engine_kind": "OSS", "fingerprint": "fc7f2c4ba2b76a27a94ed0eb620010f9a62f470e015c8f183b3f703427e705193594db2e10e7d99f677ad8b5d19a7ae84320346e463c5da129a164e37b15d8d2_0", "is_ignored": false, "lines": "      local_28 = \"0123456789abcdefpMsgInfo->stHeader.uPayloadLen: [%d]\\n\"[*pbVar1 >> 4];", "message": "Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/197", "https://cwe.mitre.org/data/definitions/681", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms"]}, "metavars": {"$LARGE": {"abstract_content": "4", "end": {"col": 87, "line": 16, "offset": 332}, "start": {"col": 86, "line": 16, "offset": 331}}, "$NARROW": {"abstract_content": "local_28", "end": {"col": 15, "line": 16, "offset": 260}, "start": {"col": 7, "line": 16, "offset": 252}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00412eb4_00412eb4.c", "start": {"col": 7, "line": 16, "offset": 252}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-truncation", "end": {"col": 89, "line": 17, "offset": 423}, "extra": {"engine_kind": "OSS", "fingerprint": "b0b419c5db0c61243a99a659bf0f5991320e5078f7d5a3a2bbd486b2811b16350c727f129108c731a023959f86a5916dbb4d645337abdf09413d2010d77755a4_0", "is_ignored": false, "lines": "      local_27 = \"0123456789abcdefpMsgInfo->stHeader.uPayloadLen: [%d]\\n\"[*pbVar1 & 0xf];", "message": "Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/197", "https://cwe.mitre.org/data/definitions/681", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms"]}, "metavars": {"$LARGE": {"abstract_content": "0xf", "end": {"col": 88, "line": 17, "offset": 422}, "start": {"col": 85, "line": 17, "offset": 419}}, "$NARROW": {"abstract_content": "local_27", "end": {"col": 15, "line": 17, "offset": 349}, "start": {"col": 7, "line": 17, "offset": 341}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00412eb4_00412eb4.c", "start": {"col": 7, "line": 17, "offset": 341}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 32, "line": 19, "offset": 476}, "extra": {"engine_kind": "OSS", "fingerprint": "408b84197f543aefc6123e0f0767cefbc888628335ef5904f7251b31ae16af116cacbed7a77dd8657f5e816403327bd544caba8870995d64da752ec96fcf77cb_0", "is_ignored": false, "lines": "      strcat(param_2,&local_28);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00412eb4_00412eb4.c", "start": {"col": 7, "line": 19, "offset": 451}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 32, "line": 19, "offset": 476}, "extra": {"engine_kind": "OSS", "fingerprint": "0f52deda0defdd5c0b0f4ab453d80917f737d3421c184fc0060356366c48af03947180f850afcda5c4298c871629aa74e83b193515463de84d6c101b9a87bb0b_0", "is_ignored": false, "lines": "      strcat(param_2,&local_28);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcat", "end": {"col": 13, "line": 19, "offset": 457}, "start": {"col": 7, "line": 19, "offset": 451}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00412eb4_00412eb4.c", "start": {"col": 7, "line": 19, "offset": 451}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-integer-truncation", "end": {"col": 36, "line": 26, "offset": 622}, "extra": {"engine_kind": "OSS", "fingerprint": "fbaf76efacfda6cb3477af2fa3c4d39584a8560785b9c8171ef264470dae82dbe5a54165141563cb4569a8479a72925e700d6037feebab17a1a01613a5bb1855_0", "is_ignored": false, "lines": "              local_1f = param_1[1];", "message": "Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/197", "https://cwe.mitre.org/data/definitions/681", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms"]}, "metavars": {"$LARGE": {"abstract_content": "1", "end": {"col": 35, "line": 26, "offset": 621}, "start": {"col": 34, "line": 26, "offset": 620}}, "$NARROW": {"abstract_content": "local_1f", "end": {"col": 23, "line": 26, "offset": 609}, "start": {"col": 15, "line": 26, "offset": 601}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_00412f7c_00412f7c.c", "start": {"col": 15, "line": 26, "offset": 601}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 33, "offset": 619}, "extra": {"engine_kind": "OSS", "fingerprint": "0ee1379f332f2c16fc0a5d4697dfe08fae9fa221b84c7b6f182c60f14fcf0bc6bdbf7ab4b3b7434117e5cb8deda2111fe72e13610f652da74c3487967ebc5cc6_0", "is_ignored": false, "lines": "  memset(auStack_467,0,0x3ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 23, "line": 33, "offset": 612}, "start": {"col": 22, "line": 33, "offset": 611}}, "$DST": {"abstract_content": "auStack_467", "end": {"col": 21, "line": 33, "offset": 610}, "start": {"col": 10, "line": 33, "offset": 599}}, "$LEN": {"abstract_content": "0x3ff", "end": {"col": 29, "line": 33, "offset": 618}, "start": {"col": 24, "line": 33, "offset": 613}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_004133d0_004133d0.c", "start": {"col": 3, "line": 33, "offset": 592}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 20, "line": 47, "offset": 995}, "extra": {"engine_kind": "OSS", "fingerprint": "4afb5fd567c3ecee68d2a15504dcb2149966009c7ccac091dc42e510ca34eb639095bce20ba9e7fb945d9738f2f602ed9067b3b849067df73b8c683e98d21a5d_0", "is_ignored": false, "lines": "    __s = tmpfile();", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "tmpfile", "end": {"col": 18, "line": 47, "offset": 993}, "start": {"col": 11, "line": 47, "offset": 986}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_004133d0_004133d0.c", "start": {"col": 11, "line": 47, "offset": 986}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 33, "line": 102, "offset": 3099}, "extra": {"engine_kind": "OSS", "fingerprint": "377112a74e88041800f6c982c6b2bc806cebb60bf104e91dc427ad55d258a583f6795740be4b65d761f3077cef8c2c54dc3e87bdcf961de69679b4d188df7b3c_0", "is_ignored": false, "lines": "      memset(&local_468,0,0x400);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 26, "line": 102, "offset": 3092}, "start": {"col": 25, "line": 102, "offset": 3091}}, "$DST": {"abstract_content": "&local_468", "end": {"col": 24, "line": 102, "offset": 3090}, "start": {"col": 14, "line": 102, "offset": 3080}}, "$LEN": {"abstract_content": "0x400", "end": {"col": 32, "line": 102, "offset": 3098}, "start": {"col": 27, "line": 102, "offset": 3093}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_004133d0_004133d0.c", "start": {"col": 7, "line": 102, "offset": 3073}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 51, "line": 103, "offset": 3151}, "extra": {"engine_kind": "OSS", "fingerprint": "8df6cda17c588eae37da5c9f08a2f3a5f3c63e8b1ef5627dbf31312b10de374e6c7c29928c522d3853878f4c1d5559c2f3abeb1a513bc4882b2c228badcd7769_0", "is_ignored": false, "lines": "      while (sVar2 = fread(&local_468,1,0x3ff,__s), sVar2 != 0) {", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "1", "end": {"col": 40, "line": 103, "offset": 3140}, "start": {"col": 39, "line": 103, "offset": 3139}}, "$UNSIGNED": {"abstract_content": "sVar2", "end": {"col": 19, "line": 103, "offset": 3119}, "start": {"col": 14, "line": 103, "offset": 3114}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_004133d0_004133d0.c", "start": {"col": 14, "line": 103, "offset": 3114}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 51, "line": 103, "offset": 3151}, "extra": {"engine_kind": "OSS", "fingerprint": "6da7e84afe04263ea1de86819e23ec307a3e46d294893d6c97a51d1eda24aab291513c40fbfe7652029dc5ea3c822599a8fa956380a359c9dc859d191cd36006_0", "is_ignored": false, "lines": "      while (sVar2 = fread(&local_468,1,0x3ff,__s), sVar2 != 0) {", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "fread", "end": {"col": 27, "line": 103, "offset": 3127}, "start": {"col": 22, "line": 103, "offset": 3122}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_004133d0_004133d0.c", "start": {"col": 22, "line": 103, "offset": 3122}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 51, "line": 103, "offset": 3151}, "extra": {"engine_kind": "OSS", "fingerprint": "d0b40511330f8f205fe47ac09c262de66fcdc5e8c319510e299fb4359c55e21b49850048d293c1b0f94d2600b2e8fc3eb6087b954371732fc65bdac10ab945e7_0", "is_ignored": false, "lines": "      while (sVar2 = fread(&local_468,1,0x3ff,__s), sVar2 != 0) {", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$FS": {"abstract_content": "__s", "end": {"col": 50, "line": 103, "offset": 3150}, "start": {"col": 47, "line": 103, "offset": 3147}}, "$LEN": {"abstract_content": "1", "end": {"col": 40, "line": 103, "offset": 3140}, "start": {"col": 39, "line": 103, "offset": 3139}}, "$NITEMS": {"abstract_content": "0x3ff", "end": {"col": 46, "line": 103, "offset": 3146}, "start": {"col": 41, "line": 103, "offset": 3141}}, "$PTR": {"abstract_content": "&local_468", "end": {"col": 38, "line": 103, "offset": 3138}, "start": {"col": 28, "line": 103, "offset": 3128}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_004133d0_004133d0.c", "start": {"col": 22, "line": 103, "offset": 3122}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 35, "line": 105, "offset": 3235}, "extra": {"engine_kind": "OSS", "fingerprint": "377112a74e88041800f6c982c6b2bc806cebb60bf104e91dc427ad55d258a583f6795740be4b65d761f3077cef8c2c54dc3e87bdcf961de69679b4d188df7b3c_1", "is_ignored": false, "lines": "        memset(&local_468,0,0x400);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 28, "line": 105, "offset": 3228}, "start": {"col": 27, "line": 105, "offset": 3227}}, "$DST": {"abstract_content": "&local_468", "end": {"col": 26, "line": 105, "offset": 3226}, "start": {"col": 16, "line": 105, "offset": 3216}}, "$LEN": {"abstract_content": "0x400", "end": {"col": 34, "line": 105, "offset": 3234}, "start": {"col": 29, "line": 105, "offset": 3229}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/FUN_004133d0_004133d0.c", "start": {"col": 9, "line": 105, "offset": 3209}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 45, "line": 89, "offset": 2490}, "extra": {"engine_kind": "OSS", "fingerprint": "a9b8585a1580982336d2b7faad495ab498634a7a2c0af463c54d7b6b779afa45b58f05a4e161c9fb69b6bc7f07b1634a470048b4c77b49aad2ae443076a64446_0", "is_ignored": false, "lines": "                  memset(auStack_567,0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 39, "line": 89, "offset": 2484}, "start": {"col": 38, "line": 89, "offset": 2483}}, "$DST": {"abstract_content": "auStack_567", "end": {"col": 37, "line": 89, "offset": 2482}, "start": {"col": 26, "line": 89, "offset": 2471}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 44, "line": 89, "offset": 2489}, "start": {"col": 40, "line": 89, "offset": 2485}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c", "start": {"col": 19, "line": 89, "offset": 2464}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 50, "line": 103, "offset": 3228}, "extra": {"engine_kind": "OSS", "fingerprint": "6fabef54e8591a32fff393e1b8556d116f6dbdb808ae2679ae4f22f5b82e5bc257ec029ef37bf6f338e69e4b46c938f9db37297d0f406667fe3e203f5db2f91f_0", "is_ignored": false, "lines": "                      memset(auStack_267,0,0x1ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 43, "line": 103, "offset": 3221}, "start": {"col": 42, "line": 103, "offset": 3220}}, "$DST": {"abstract_content": "auStack_267", "end": {"col": 41, "line": 103, "offset": 3219}, "start": {"col": 30, "line": 103, "offset": 3208}}, "$LEN": {"abstract_content": "0x1ff", "end": {"col": 49, "line": 103, "offset": 3227}, "start": {"col": 44, "line": 103, "offset": 3222}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c", "start": {"col": 23, "line": 103, "offset": 3201}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 49, "line": 107, "offset": 3392}, "extra": {"engine_kind": "OSS", "fingerprint": "3d776d22894c0e7dcac1a93d5442ea2a5d0a9615cbfe8f1aaaf17b580c2cd255e33fdf1c4e41f3cb16e71682eaa12d5a8899d4eca7d41148498d8527e708622a_0", "is_ignored": false, "lines": "                      memset(auStack_587,0,0x1f);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 43, "line": 107, "offset": 3386}, "start": {"col": 42, "line": 107, "offset": 3385}}, "$DST": {"abstract_content": "auStack_587", "end": {"col": 41, "line": 107, "offset": 3384}, "start": {"col": 30, "line": 107, "offset": 3373}}, "$LEN": {"abstract_content": "0x1f", "end": {"col": 48, "line": 107, "offset": 3391}, "start": {"col": 44, "line": 107, "offset": 3387}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c", "start": {"col": 23, "line": 107, "offset": 3366}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 66, "line": 109, "offset": 3515}, "extra": {"engine_kind": "OSS", "fingerprint": "0723af76bdb863a39fce774e92e3884b153d086b39fccf5aa54c68e12896d2883c9c730edac06dd798f0af0d348323f3c8d81bf528cb169054194cc520ae7624_0", "is_ignored": false, "lines": "                      memset((void *)((int)&local_5a8 + 1),0,0xf);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 61, "line": 109, "offset": 3510}, "start": {"col": 60, "line": 109, "offset": 3509}}, "$DST": {"abstract_content": "(void*(int&local_5a8+1", "end": {"col": 58, "line": 109, "offset": 3507}, "start": {"col": 30, "line": 109, "offset": 3479}}, "$LEN": {"abstract_content": "0xf", "end": {"col": 65, "line": 109, "offset": 3514}, "start": {"col": 62, "line": 109, "offset": 3511}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c", "start": {"col": 23, "line": 109, "offset": 3472}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 49, "line": 111, "offset": 3605}, "extra": {"engine_kind": "OSS", "fingerprint": "ff6b03018c5fc42ed581b4a4ae6bdea7a9999b617563293a60e751fd19039d68e4829e154943422d37f46557a08fc76f2fba2e0676c84767469fc5d5b791fb65_0", "is_ignored": false, "lines": "                      memset(auStack_467,0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 43, "line": 111, "offset": 3599}, "start": {"col": 42, "line": 111, "offset": 3598}}, "$DST": {"abstract_content": "auStack_467", "end": {"col": 41, "line": 111, "offset": 3597}, "start": {"col": 30, "line": 111, "offset": 3586}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 48, "line": 111, "offset": 3604}, "start": {"col": 44, "line": 111, "offset": 3600}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c", "start": {"col": 23, "line": 111, "offset": 3579}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 49, "line": 113, "offset": 3695}, "extra": {"engine_kind": "OSS", "fingerprint": "3d0546879170facd6be0c298309acbe1a1b4518179e0f0a6c8b4e691ae18e976410e5e9b4c47ac54ecc30ca2e9d532f4cb3ec189cf7d1bb778851794c891016d_0", "is_ignored": false, "lines": "                      memset(auStack_367,0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 43, "line": 113, "offset": 3689}, "start": {"col": 42, "line": 113, "offset": 3688}}, "$DST": {"abstract_content": "auStack_367", "end": {"col": 41, "line": 113, "offset": 3687}, "start": {"col": 30, "line": 113, "offset": 3676}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 48, "line": 113, "offset": 3694}, "start": {"col": 44, "line": 113, "offset": 3690}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c", "start": {"col": 23, "line": 113, "offset": 3669}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 56, "line": 121, "offset": 4164}, "extra": {"engine_kind": "OSS", "fingerprint": "fa224755b22d43373d518c29e1d6a38ca70f7bef02edf8435b7519da9ad29364f6baff7cc775b92933a513c374c7e99435ac696edbdd5e330c85e1c578ef2fb0_0", "is_ignored": false, "lines": "                      sprintf(local_50,local_44,local_5b0 >> 0x18,local_5b0 >> 0x10 & 0xff,\n                              local_5b0 >> 8 & 0xff,local_5b0 & 0xff,local_5ac >> 0x18,\n                              local_5ac >> 0x10 & 0xff);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "local_44", "end": {"col": 9, "line": 1, "offset": 8}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_50", "end": {"col": 39, "line": 119, "offset": 3967}, "start": {"col": 31, "line": 119, "offset": 3959}}, "$FMT": {"abstract_content": "local_44", "end": {"col": 48, "line": 119, "offset": 3976}, "propagated_value": {"svalue_abstract_content": "\"%02X%02X%02X%02X%02X%02X\"", "svalue_end": {"col": 48, "line": 68, "offset": 1499}, "svalue_start": {"col": 22, "line": 68, "offset": 1473}}, "start": {"col": 40, "line": 119, "offset": 3968}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c", "start": {"col": 23, "line": 119, "offset": 3951}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 56, "line": 121, "offset": 4164}, "extra": {"engine_kind": "OSS", "fingerprint": "207c09c2b39490ad7cae90a7677f69fc5ae52877fbd91a62e01fa1867a00a82616e41f6ff79f4125531f2daafcf792f55a47baf9be8f672f90bda64c306c30a7_0", "is_ignored": false, "lines": "                      sprintf(local_50,local_44,local_5b0 >> 0x18,local_5b0 >> 0x10 & 0xff,\n                              local_5b0 >> 8 & 0xff,local_5b0 & 0xff,local_5ac >> 0x18,\n                              local_5ac >> 0x10 & 0xff);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 30, "line": 119, "offset": 3958}, "start": {"col": 23, "line": 119, "offset": 3951}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c", "start": {"col": 23, "line": 119, "offset": 3951}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 83, "line": 130, "offset": 4610}, "extra": {"engine_kind": "OSS", "fingerprint": "85cf663be89d31d679bffc725a31aede87c4ecf651149c925f01febeb05a2f0e5e70b528e768d3ba589d249fed7df91b15c5576af25a202eb42e65f04cc189c2_0", "is_ignored": false, "lines": "                      snprintf(local_5c,0x100,local_34,local_64,local_4c,local_54);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 31, "line": 130, "offset": 4558}, "start": {"col": 23, "line": 130, "offset": 4550}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c", "start": {"col": 23, "line": 130, "offset": 4550}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 83, "line": 130, "offset": 4610}, "extra": {"engine_kind": "OSS", "fingerprint": "87011efa7bd79c536ef9890d3cf63b3b241fd3891c13e579d448600799b72e7f487ba8b113fecf2a1cf0594f9a3b7c28cd96257f7083ff02df899b76d0ca0dd2_0", "is_ignored": false, "lines": "                      snprintf(local_5c,0x100,local_34,local_64,local_4c,local_54);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$BUF": {"abstract_content": "local_5c", "end": {"col": 40, "line": 130, "offset": 4567}, "start": {"col": 32, "line": 130, "offset": 4559}}, "$LEN": {"abstract_content": "0x100", "end": {"col": 46, "line": 130, "offset": 4573}, "start": {"col": 41, "line": 130, "offset": 4568}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c", "start": {"col": 23, "line": 130, "offset": 4550}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 99, "line": 135, "offset": 4933}, "extra": {"engine_kind": "OSS", "fingerprint": "207c09c2b39490ad7cae90a7677f69fc5ae52877fbd91a62e01fa1867a00a82616e41f6ff79f4125531f2daafcf792f55a47baf9be8f672f90bda64c306c30a7_1", "is_ignored": false, "lines": "                      sprintf(local_5c,\"%08x%08x%08x%08x\",local_598,local_594,local_590,local_58c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 30, "line": 135, "offset": 4864}, "start": {"col": 23, "line": 135, "offset": 4857}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c", "start": {"col": 23, "line": 135, "offset": 4857}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 78, "line": 139, "offset": 5309}, "extra": {"engine_kind": "OSS", "fingerprint": "85cf663be89d31d679bffc725a31aede87c4ecf651149c925f01febeb05a2f0e5e70b528e768d3ba589d249fed7df91b15c5576af25a202eb42e65f04cc189c2_1", "is_ignored": false, "lines": "                      snprintf((char *)local_64,0x1ff,\n                               \"curl -H \\\"Content-Type: application/json\\\" -X POST -d \\'{\\\"mac\\\":\\\"%s\\\",\\\"eid\\\":\\\"%s\\\",\\\"ts\\\":\\\"%lu\\\",\\\"hash\\\":\\\"%s\\\"}\\' https://%s/ipcam_event -kv &\"\n                               ,local_50,local_4c,local_54,local_5c,local_2c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 31, "line": 137, "offset": 5024}, "start": {"col": 23, "line": 137, "offset": 5016}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c", "start": {"col": 23, "line": 137, "offset": 5016}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 78, "line": 139, "offset": 5309}, "extra": {"engine_kind": "OSS", "fingerprint": "ad99cca287779363b3e50a457c4f7d28d71baba36a262bf1591ac36a0b2ba43e9e7d8995abaa7fadb64aeb6a1a71a1b66746b92e565d1fb4c9c76821e5688111_0", "is_ignored": false, "lines": "                      snprintf((char *)local_64,0x1ff,\n                               \"curl -H \\\"Content-Type: application/json\\\" -X POST -d \\'{\\\"mac\\\":\\\"%s\\\",\\\"eid\\\":\\\"%s\\\",\\\"ts\\\":\\\"%lu\\\",\\\"hash\\\":\\\"%s\\\"}\\' https://%s/ipcam_event -kv &\"\n                               ,local_50,local_4c,local_54,local_5c,local_2c);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$BUF": {"abstract_content": "(char*local_64", "end": {"col": 48, "line": 137, "offset": 5041}, "start": {"col": 32, "line": 137, "offset": 5025}}, "$LEN": {"abstract_content": "0x1ff", "end": {"col": 54, "line": 137, "offset": 5047}, "start": {"col": 49, "line": 137, "offset": 5042}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c", "start": {"col": 23, "line": 137, "offset": 5016}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 47, "line": 141, "offset": 5430}, "extra": {"engine_kind": "OSS", "fingerprint": "cc08196bb41c67e9b794d54dbae19e8d062e7494fd18e024f0eb579212a28cad78d1fe8e953fb12f86c240890beca5ce6bbf94b6e4b9f5d6d8085f5b7b5b507e_0", "is_ignored": false, "lines": "                      system((char *)local_64);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c", "start": {"col": 23, "line": 141, "offset": 5406}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 141, "offset": 5430}, "extra": {"engine_kind": "OSS", "fingerprint": "6951d15d559565a76c87607a078fae4156ae403d75eb069d86a443d783c9438b3e82954f4d5022c16b7a756acb9eb18eff650e7aa23f29e3e14a67b2b588308f_0", "is_ignored": false, "lines": "                      system((char *)local_64);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 29, "line": 141, "offset": 5412}, "start": {"col": 23, "line": 141, "offset": 5406}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/NotifierSettingsCheck_00406a78.c", "start": {"col": 23, "line": 141, "offset": 5406}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 94, "offset": 1981}, "extra": {"engine_kind": "OSS", "fingerprint": "eaa9bc264991b5b966df9d6facc9eb8170d97eb852fc733f12e3f9f34a4eb8bb0bbc70e3f61d2cab8baba83fa260d24b99c5d7ec4c10cae7c2735e78adf7af3c_0", "is_ignored": false, "lines": "  memset(auStack_9ef,0,0x1ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 23, "line": 94, "offset": 1974}, "start": {"col": 22, "line": 94, "offset": 1973}}, "$DST": {"abstract_content": "auStack_9ef", "end": {"col": 21, "line": 94, "offset": 1972}, "start": {"col": 10, "line": 94, "offset": 1961}}, "$LEN": {"abstract_content": "0x1ff", "end": {"col": 29, "line": 94, "offset": 1980}, "start": {"col": 24, "line": 94, "offset": 1975}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 3, "line": 94, "offset": 1954}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 47, "line": 98, "offset": 2099}, "extra": {"engine_kind": "OSS", "fingerprint": "bfc4622da92d649a07dd3b10050c831de746c2a38ecb4b86cb0bd3b4d989cd3bac87df6c1d3e1b0ba3747acbd0c0b084b241c2c9f774d76641da3164ed9ec6d3_0", "is_ignored": false, "lines": "  memset((void *)((int)&local_7e8 + 1),0,0x1f);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 41, "line": 98, "offset": 2093}, "start": {"col": 40, "line": 98, "offset": 2092}}, "$DST": {"abstract_content": "(void*(int&local_7e8+1", "end": {"col": 38, "line": 98, "offset": 2090}, "start": {"col": 10, "line": 98, "offset": 2062}}, "$LEN": {"abstract_content": "0x1f", "end": {"col": 46, "line": 98, "offset": 2098}, "start": {"col": 42, "line": 98, "offset": 2094}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 3, "line": 98, "offset": 2055}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 29, "line": 100, "offset": 2149}, "extra": {"engine_kind": "OSS", "fingerprint": "0e709e025b228489a40938a69ab38b09ddc7f17e13ae9e881035a08da1fc24dad3e752ce660403b21d6c3c08e77b821bf7f4a0b6628c113c37105b47fb9b9103_0", "is_ignored": false, "lines": "  memset(auStack_7c7,0,0x1f);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 23, "line": 100, "offset": 2143}, "start": {"col": 22, "line": 100, "offset": 2142}}, "$DST": {"abstract_content": "auStack_7c7", "end": {"col": 21, "line": 100, "offset": 2141}, "start": {"col": 10, "line": 100, "offset": 2130}}, "$LEN": {"abstract_content": "0x1f", "end": {"col": 28, "line": 100, "offset": 2148}, "start": {"col": 24, "line": 100, "offset": 2144}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 3, "line": 100, "offset": 2123}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 108, "offset": 2413}, "extra": {"engine_kind": "OSS", "fingerprint": "0b111c97943026f39ba721e34ea38f9a7385598640ceb6f8d22992b40cd2ea05f92c3bb13d5f03caba9709ace7e08745528090e5926a6103504fdba72d0e0829_0", "is_ignored": false, "lines": "      memset(aiStack_55ff0,0,0x55600);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 29, "line": 108, "offset": 2404}, "start": {"col": 28, "line": 108, "offset": 2403}}, "$DST": {"abstract_content": "aiStack_55ff0", "end": {"col": 27, "line": 108, "offset": 2402}, "start": {"col": 14, "line": 108, "offset": 2389}}, "$LEN": {"abstract_content": "0x55600", "end": {"col": 37, "line": 108, "offset": 2412}, "start": {"col": 30, "line": 108, "offset": 2405}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 7, "line": 108, "offset": 2382}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 113, "offset": 2550}, "extra": {"engine_kind": "OSS", "fingerprint": "0b111c97943026f39ba721e34ea38f9a7385598640ceb6f8d22992b40cd2ea05f92c3bb13d5f03caba9709ace7e08745528090e5926a6103504fdba72d0e0829_1", "is_ignored": false, "lines": "      memset(aiStack_55ff0,0,0x55600);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 29, "line": 113, "offset": 2541}, "start": {"col": 28, "line": 113, "offset": 2540}}, "$DST": {"abstract_content": "aiStack_55ff0", "end": {"col": 27, "line": 113, "offset": 2539}, "start": {"col": 14, "line": 113, "offset": 2526}}, "$LEN": {"abstract_content": "0x55600", "end": {"col": 37, "line": 113, "offset": 2549}, "start": {"col": 30, "line": 113, "offset": 2542}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 7, "line": 113, "offset": 2519}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 130, "offset": 3051}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_0", "is_ignored": false, "lines": "          memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 30, "line": 130, "offset": 3044}, "start": {"col": 29, "line": 130, "offset": 3043}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 28, "line": 130, "offset": 3042}, "start": {"col": 18, "line": 130, "offset": 3032}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 36, "line": 130, "offset": 3050}, "start": {"col": 31, "line": 130, "offset": 3045}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 11, "line": 130, "offset": 3025}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 139, "offset": 3335}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_1", "is_ignored": false, "lines": "          memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 30, "line": 139, "offset": 3328}, "start": {"col": 29, "line": 139, "offset": 3327}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 28, "line": 139, "offset": 3326}, "start": {"col": 18, "line": 139, "offset": 3316}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 36, "line": 139, "offset": 3334}, "start": {"col": 31, "line": 139, "offset": 3329}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 11, "line": 139, "offset": 3309}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 153, "offset": 3750}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_2", "is_ignored": false, "lines": "          memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 30, "line": 153, "offset": 3743}, "start": {"col": 29, "line": 153, "offset": 3742}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 28, "line": 153, "offset": 3741}, "start": {"col": 18, "line": 153, "offset": 3731}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 36, "line": 153, "offset": 3749}, "start": {"col": 31, "line": 153, "offset": 3744}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 11, "line": 153, "offset": 3724}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 84, "line": 156, "offset": 3949}, "extra": {"engine_kind": "OSS", "fingerprint": "4d60f6da9a1ea3f7e27303a986b04cf6308f8d9b8ce45c0d952d671a70a83897090525685114913ef502d885b2740fe6e985e982b04db4f023062f8ee6faa305_0", "is_ignored": false, "lines": "            strcpy((char *)(aiStack_55ff0 + (local_64 * 0x556 + 1) * 2),&local_9f0);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 13, "line": 156, "offset": 3878}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 84, "line": 156, "offset": 3949}, "extra": {"engine_kind": "OSS", "fingerprint": "df9c94c68eac9ebca593d432db9be7e34d253702c0cae1e37c8fae145f994ab507aebd654299e3cc0c4463f4f174194b28874c15ceef08d8cc73f8b1d0a1b7c6_0", "is_ignored": false, "lines": "            strcpy((char *)(aiStack_55ff0 + (local_64 * 0x556 + 1) * 2),&local_9f0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 19, "line": 156, "offset": 3884}, "start": {"col": 13, "line": 156, "offset": 3878}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 13, "line": 156, "offset": 3878}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 161, "offset": 4104}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_3", "is_ignored": false, "lines": "          memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 30, "line": 161, "offset": 4097}, "start": {"col": 29, "line": 161, "offset": 4096}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 28, "line": 161, "offset": 4095}, "start": {"col": 18, "line": 161, "offset": 4085}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 36, "line": 161, "offset": 4103}, "start": {"col": 31, "line": 161, "offset": 4098}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 11, "line": 161, "offset": 4078}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 65, "line": 164, "offset": 4284}, "extra": {"engine_kind": "OSS", "fingerprint": "4d60f6da9a1ea3f7e27303a986b04cf6308f8d9b8ce45c0d952d671a70a83897090525685114913ef502d885b2740fe6e985e982b04db4f023062f8ee6faa305_1", "is_ignored": false, "lines": "            strcpy(acStack_55fc7 + local_64 * 0x2ab0,&local_9f0);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 13, "line": 164, "offset": 4232}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 65, "line": 164, "offset": 4284}, "extra": {"engine_kind": "OSS", "fingerprint": "df9c94c68eac9ebca593d432db9be7e34d253702c0cae1e37c8fae145f994ab507aebd654299e3cc0c4463f4f174194b28874c15ceef08d8cc73f8b1d0a1b7c6_1", "is_ignored": false, "lines": "            strcpy(acStack_55fc7 + local_64 * 0x2ab0,&local_9f0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 19, "line": 164, "offset": 4238}, "start": {"col": 13, "line": 164, "offset": 4232}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 13, "line": 164, "offset": 4232}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 169, "offset": 4416}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_4", "is_ignored": false, "lines": "          memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 30, "line": 169, "offset": 4409}, "start": {"col": 29, "line": 169, "offset": 4408}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 28, "line": 169, "offset": 4407}, "start": {"col": 18, "line": 169, "offset": 4397}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 36, "line": 169, "offset": 4415}, "start": {"col": 31, "line": 169, "offset": 4410}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 11, "line": 169, "offset": 4390}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 43, "line": 198, "offset": 5455}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_5", "is_ignored": false, "lines": "                memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 36, "line": 198, "offset": 5448}, "start": {"col": 35, "line": 198, "offset": 5447}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 34, "line": 198, "offset": 5446}, "start": {"col": 24, "line": 198, "offset": 5436}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 42, "line": 198, "offset": 5454}, "start": {"col": 37, "line": 198, "offset": 5449}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 17, "line": 198, "offset": 5429}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 99, "line": 201, "offset": 5681}, "extra": {"engine_kind": "OSS", "fingerprint": "4d60f6da9a1ea3f7e27303a986b04cf6308f8d9b8ce45c0d952d671a70a83897090525685114913ef502d885b2740fe6e985e982b04db4f023062f8ee6faa305_2", "is_ignored": false, "lines": "                  strcpy((char *)(aiStack_55ff0 + iVar3 * 0xaac + iVar5 * 0x29 + 0x1c),&local_9f0);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 19, "line": 201, "offset": 5601}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 99, "line": 201, "offset": 5681}, "extra": {"engine_kind": "OSS", "fingerprint": "df9c94c68eac9ebca593d432db9be7e34d253702c0cae1e37c8fae145f994ab507aebd654299e3cc0c4463f4f174194b28874c15ceef08d8cc73f8b1d0a1b7c6_2", "is_ignored": false, "lines": "                  strcpy((char *)(aiStack_55ff0 + iVar3 * 0xaac + iVar5 * 0x29 + 0x1c),&local_9f0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 25, "line": 201, "offset": 5607}, "start": {"col": 19, "line": 201, "offset": 5601}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 19, "line": 201, "offset": 5601}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 43, "line": 206, "offset": 5846}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_6", "is_ignored": false, "lines": "                memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 36, "line": 206, "offset": 5839}, "start": {"col": 35, "line": 206, "offset": 5838}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 34, "line": 206, "offset": 5837}, "start": {"col": 24, "line": 206, "offset": 5827}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 42, "line": 206, "offset": 5845}, "start": {"col": 37, "line": 206, "offset": 5840}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 17, "line": 206, "offset": 5820}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 43, "line": 215, "offset": 6196}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_7", "is_ignored": false, "lines": "                memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 36, "line": 215, "offset": 6189}, "start": {"col": 35, "line": 215, "offset": 6188}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 34, "line": 215, "offset": 6187}, "start": {"col": 24, "line": 215, "offset": 6177}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 42, "line": 215, "offset": 6195}, "start": {"col": 37, "line": 215, "offset": 6190}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 17, "line": 215, "offset": 6170}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 99, "line": 218, "offset": 6417}, "extra": {"engine_kind": "OSS", "fingerprint": "4d60f6da9a1ea3f7e27303a986b04cf6308f8d9b8ce45c0d952d671a70a83897090525685114913ef502d885b2740fe6e985e982b04db4f023062f8ee6faa305_3", "is_ignored": false, "lines": "                  strcpy((char *)(aiStack_55ff0 + iVar3 * 0xaac + iVar5 * 0x29 + 0x22),&local_9f0);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 19, "line": 218, "offset": 6337}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 99, "line": 218, "offset": 6417}, "extra": {"engine_kind": "OSS", "fingerprint": "df9c94c68eac9ebca593d432db9be7e34d253702c0cae1e37c8fae145f994ab507aebd654299e3cc0c4463f4f174194b28874c15ceef08d8cc73f8b1d0a1b7c6_3", "is_ignored": false, "lines": "                  strcpy((char *)(aiStack_55ff0 + iVar3 * 0xaac + iVar5 * 0x29 + 0x22),&local_9f0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 25, "line": 218, "offset": 6343}, "start": {"col": 19, "line": 218, "offset": 6337}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 19, "line": 218, "offset": 6337}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 43, "line": 223, "offset": 6579}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_8", "is_ignored": false, "lines": "                memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 36, "line": 223, "offset": 6572}, "start": {"col": 35, "line": 223, "offset": 6571}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 34, "line": 223, "offset": 6570}, "start": {"col": 24, "line": 223, "offset": 6560}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 42, "line": 223, "offset": 6578}, "start": {"col": 37, "line": 223, "offset": 6573}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 17, "line": 223, "offset": 6553}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 74, "line": 226, "offset": 6775}, "extra": {"engine_kind": "OSS", "fingerprint": "4d60f6da9a1ea3f7e27303a986b04cf6308f8d9b8ce45c0d952d671a70a83897090525685114913ef502d885b2740fe6e985e982b04db4f023062f8ee6faa305_4", "is_ignored": false, "lines": "                  strcpy(acStack_55f47 + iVar5 * 0xa4 + iVar6,&local_9f0);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 19, "line": 226, "offset": 6720}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 74, "line": 226, "offset": 6775}, "extra": {"engine_kind": "OSS", "fingerprint": "df9c94c68eac9ebca593d432db9be7e34d253702c0cae1e37c8fae145f994ab507aebd654299e3cc0c4463f4f174194b28874c15ceef08d8cc73f8b1d0a1b7c6_4", "is_ignored": false, "lines": "                  strcpy(acStack_55f47 + iVar5 * 0xa4 + iVar6,&local_9f0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 25, "line": 226, "offset": 6726}, "start": {"col": 19, "line": 226, "offset": 6720}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 19, "line": 226, "offset": 6720}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 43, "line": 231, "offset": 6940}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_9", "is_ignored": false, "lines": "                memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 36, "line": 231, "offset": 6933}, "start": {"col": 35, "line": 231, "offset": 6932}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 34, "line": 231, "offset": 6931}, "start": {"col": 24, "line": 231, "offset": 6921}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 42, "line": 231, "offset": 6939}, "start": {"col": 37, "line": 231, "offset": 6934}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 17, "line": 231, "offset": 6914}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 43, "line": 240, "offset": 7278}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_10", "is_ignored": false, "lines": "                memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 36, "line": 240, "offset": 7271}, "start": {"col": 35, "line": 240, "offset": 7270}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 34, "line": 240, "offset": 7269}, "start": {"col": 24, "line": 240, "offset": 7259}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 42, "line": 240, "offset": 7277}, "start": {"col": 37, "line": 240, "offset": 7272}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 17, "line": 240, "offset": 7252}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 99, "line": 243, "offset": 7499}, "extra": {"engine_kind": "OSS", "fingerprint": "4d60f6da9a1ea3f7e27303a986b04cf6308f8d9b8ce45c0d952d671a70a83897090525685114913ef502d885b2740fe6e985e982b04db4f023062f8ee6faa305_5", "is_ignored": false, "lines": "                  strcpy((char *)(aiStack_55ff0 + iVar3 * 0xaac + iVar5 * 0x29 + 0x34),&local_9f0);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 19, "line": 243, "offset": 7419}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 99, "line": 243, "offset": 7499}, "extra": {"engine_kind": "OSS", "fingerprint": "df9c94c68eac9ebca593d432db9be7e34d253702c0cae1e37c8fae145f994ab507aebd654299e3cc0c4463f4f174194b28874c15ceef08d8cc73f8b1d0a1b7c6_5", "is_ignored": false, "lines": "                  strcpy((char *)(aiStack_55ff0 + iVar3 * 0xaac + iVar5 * 0x29 + 0x34),&local_9f0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 25, "line": 243, "offset": 7425}, "start": {"col": 19, "line": 243, "offset": 7419}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 19, "line": 243, "offset": 7419}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 43, "line": 274, "offset": 8604}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_11", "is_ignored": false, "lines": "                memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 36, "line": 274, "offset": 8597}, "start": {"col": 35, "line": 274, "offset": 8596}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 34, "line": 274, "offset": 8595}, "start": {"col": 24, "line": 274, "offset": 8585}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 42, "line": 274, "offset": 8603}, "start": {"col": 37, "line": 274, "offset": 8598}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 17, "line": 274, "offset": 8578}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 100, "line": 277, "offset": 8829}, "extra": {"engine_kind": "OSS", "fingerprint": "4d60f6da9a1ea3f7e27303a986b04cf6308f8d9b8ce45c0d952d671a70a83897090525685114913ef502d885b2740fe6e985e982b04db4f023062f8ee6faa305_6", "is_ignored": false, "lines": "                  strcpy((char *)(aiStack_55ff0 + iVar3 * 0xaac + iVar4 * 0x2b + 0x53c),&local_9f0);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 19, "line": 277, "offset": 8748}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 100, "line": 277, "offset": 8829}, "extra": {"engine_kind": "OSS", "fingerprint": "df9c94c68eac9ebca593d432db9be7e34d253702c0cae1e37c8fae145f994ab507aebd654299e3cc0c4463f4f174194b28874c15ceef08d8cc73f8b1d0a1b7c6_6", "is_ignored": false, "lines": "                  strcpy((char *)(aiStack_55ff0 + iVar3 * 0xaac + iVar4 * 0x2b + 0x53c),&local_9f0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 25, "line": 277, "offset": 8754}, "start": {"col": 19, "line": 277, "offset": 8748}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 19, "line": 277, "offset": 8748}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 43, "line": 282, "offset": 8994}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_12", "is_ignored": false, "lines": "                memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 36, "line": 282, "offset": 8987}, "start": {"col": 35, "line": 282, "offset": 8986}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 34, "line": 282, "offset": 8985}, "start": {"col": 24, "line": 282, "offset": 8975}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 42, "line": 282, "offset": 8993}, "start": {"col": 37, "line": 282, "offset": 8988}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 17, "line": 282, "offset": 8968}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 43, "line": 291, "offset": 9340}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_13", "is_ignored": false, "lines": "                memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 36, "line": 291, "offset": 9333}, "start": {"col": 35, "line": 291, "offset": 9332}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 34, "line": 291, "offset": 9331}, "start": {"col": 24, "line": 291, "offset": 9321}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 42, "line": 291, "offset": 9339}, "start": {"col": 37, "line": 291, "offset": 9334}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 17, "line": 291, "offset": 9314}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 100, "line": 294, "offset": 9560}, "extra": {"engine_kind": "OSS", "fingerprint": "4d60f6da9a1ea3f7e27303a986b04cf6308f8d9b8ce45c0d952d671a70a83897090525685114913ef502d885b2740fe6e985e982b04db4f023062f8ee6faa305_7", "is_ignored": false, "lines": "                  strcpy((char *)(aiStack_55ff0 + iVar3 * 0xaac + iVar4 * 0x2b + 0x542),&local_9f0);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 19, "line": 294, "offset": 9479}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 100, "line": 294, "offset": 9560}, "extra": {"engine_kind": "OSS", "fingerprint": "df9c94c68eac9ebca593d432db9be7e34d253702c0cae1e37c8fae145f994ab507aebd654299e3cc0c4463f4f174194b28874c15ceef08d8cc73f8b1d0a1b7c6_7", "is_ignored": false, "lines": "                  strcpy((char *)(aiStack_55ff0 + iVar3 * 0xaac + iVar4 * 0x2b + 0x542),&local_9f0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 25, "line": 294, "offset": 9485}, "start": {"col": 19, "line": 294, "offset": 9479}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 19, "line": 294, "offset": 9479}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 43, "line": 299, "offset": 9722}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_14", "is_ignored": false, "lines": "                memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 36, "line": 299, "offset": 9715}, "start": {"col": 35, "line": 299, "offset": 9714}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 34, "line": 299, "offset": 9713}, "start": {"col": 24, "line": 299, "offset": 9703}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 42, "line": 299, "offset": 9721}, "start": {"col": 37, "line": 299, "offset": 9716}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 17, "line": 299, "offset": 9696}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 74, "line": 302, "offset": 9916}, "extra": {"engine_kind": "OSS", "fingerprint": "4d60f6da9a1ea3f7e27303a986b04cf6308f8d9b8ce45c0d952d671a70a83897090525685114913ef502d885b2740fe6e985e982b04db4f023062f8ee6faa305_8", "is_ignored": false, "lines": "                  strcpy(acStack_54ac7 + iVar4 * 0xac + iVar5,&local_9f0);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 19, "line": 302, "offset": 9861}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 74, "line": 302, "offset": 9916}, "extra": {"engine_kind": "OSS", "fingerprint": "df9c94c68eac9ebca593d432db9be7e34d253702c0cae1e37c8fae145f994ab507aebd654299e3cc0c4463f4f174194b28874c15ceef08d8cc73f8b1d0a1b7c6_8", "is_ignored": false, "lines": "                  strcpy(acStack_54ac7 + iVar4 * 0xac + iVar5,&local_9f0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 25, "line": 302, "offset": 9867}, "start": {"col": 19, "line": 302, "offset": 9861}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 19, "line": 302, "offset": 9861}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 43, "line": 307, "offset": 10081}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_15", "is_ignored": false, "lines": "                memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 36, "line": 307, "offset": 10074}, "start": {"col": 35, "line": 307, "offset": 10073}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 34, "line": 307, "offset": 10072}, "start": {"col": 24, "line": 307, "offset": 10062}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 42, "line": 307, "offset": 10080}, "start": {"col": 37, "line": 307, "offset": 10075}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 17, "line": 307, "offset": 10055}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 43, "line": 316, "offset": 10427}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_16", "is_ignored": false, "lines": "                memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 36, "line": 316, "offset": 10420}, "start": {"col": 35, "line": 316, "offset": 10419}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 34, "line": 316, "offset": 10418}, "start": {"col": 24, "line": 316, "offset": 10408}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 42, "line": 316, "offset": 10426}, "start": {"col": 37, "line": 316, "offset": 10421}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 17, "line": 316, "offset": 10401}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 100, "line": 319, "offset": 10647}, "extra": {"engine_kind": "OSS", "fingerprint": "4d60f6da9a1ea3f7e27303a986b04cf6308f8d9b8ce45c0d952d671a70a83897090525685114913ef502d885b2740fe6e985e982b04db4f023062f8ee6faa305_9", "is_ignored": false, "lines": "                  strcpy((char *)(aiStack_55ff0 + iVar3 * 0xaac + iVar4 * 0x2b + 0x554),&local_9f0);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 19, "line": 319, "offset": 10566}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 100, "line": 319, "offset": 10647}, "extra": {"engine_kind": "OSS", "fingerprint": "df9c94c68eac9ebca593d432db9be7e34d253702c0cae1e37c8fae145f994ab507aebd654299e3cc0c4463f4f174194b28874c15ceef08d8cc73f8b1d0a1b7c6_9", "is_ignored": false, "lines": "                  strcpy((char *)(aiStack_55ff0 + iVar3 * 0xaac + iVar4 * 0x2b + 0x554),&local_9f0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 25, "line": 319, "offset": 10572}, "start": {"col": 19, "line": 319, "offset": 10566}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 19, "line": 319, "offset": 10566}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 43, "line": 324, "offset": 10809}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_17", "is_ignored": false, "lines": "                memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 36, "line": 324, "offset": 10802}, "start": {"col": 35, "line": 324, "offset": 10801}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 34, "line": 324, "offset": 10800}, "start": {"col": 24, "line": 324, "offset": 10790}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 42, "line": 324, "offset": 10808}, "start": {"col": 37, "line": 324, "offset": 10803}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 17, "line": 324, "offset": 10783}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 37, "line": 344, "offset": 11456}, "extra": {"engine_kind": "OSS", "fingerprint": "6fa6bf89ea8eaf3efbc4d6d1014714b0b93b625ebcb7aa5ce6939f2a1da261a723d6d28261550391a5eaf551cbb9bfa2fbca2fc9eb315d333283bb344d7753f5_18", "is_ignored": false, "lines": "          memset(&local_9f0,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 30, "line": 344, "offset": 11449}, "start": {"col": 29, "line": 344, "offset": 11448}}, "$DST": {"abstract_content": "&local_9f0", "end": {"col": 28, "line": 344, "offset": 11447}, "start": {"col": 18, "line": 344, "offset": 11437}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 36, "line": 344, "offset": 11455}, "start": {"col": 31, "line": 344, "offset": 11450}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 11, "line": 344, "offset": 11430}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 82, "line": 347, "offset": 11654}, "extra": {"engine_kind": "OSS", "fingerprint": "4d60f6da9a1ea3f7e27303a986b04cf6308f8d9b8ce45c0d952d671a70a83897090525685114913ef502d885b2740fe6e985e982b04db4f023062f8ee6faa305_10", "is_ignored": false, "lines": "            strcpy((char *)(aiStack_55ff0 + local_64 * 0xaac + 0xa9e),&local_9f0);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 13, "line": 347, "offset": 11585}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 82, "line": 347, "offset": 11654}, "extra": {"engine_kind": "OSS", "fingerprint": "df9c94c68eac9ebca593d432db9be7e34d253702c0cae1e37c8fae145f994ab507aebd654299e3cc0c4463f4f174194b28874c15ceef08d8cc73f8b1d0a1b7c6_10", "is_ignored": false, "lines": "            strcpy((char *)(aiStack_55ff0 + local_64 * 0xaac + 0xa9e),&local_9f0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 19, "line": 347, "offset": 11591}, "start": {"col": 13, "line": 347, "offset": 11585}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 13, "line": 347, "offset": 11585}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 95, "line": 378, "offset": 12617}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_0", "is_ignored": false, "lines": "    sprintf(&local_7c8,\"%02X:%02X:%02X:%02X:%02X:%02X\",local_7e8 >> 0x18,local_7e8 >> 0x10 & 0xff,\n            local_7e8 >> 8 & 0xff,local_7e8 & 0xff,local_7e4 >> 0x18,local_7e4 >> 0x10 & 0xff);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 12, "line": 377, "offset": 12435}, "start": {"col": 5, "line": 377, "offset": 12428}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 5, "line": 377, "offset": 12428}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 70, "line": 430, "offset": 14894}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_0", "is_ignored": false, "lines": "                    memset((undefined *)((int)&local_79c + 1),0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 64, "line": 430, "offset": 14888}, "start": {"col": 63, "line": 430, "offset": 14887}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 61, "line": 430, "offset": 14885}, "start": {"col": 28, "line": 430, "offset": 14852}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 69, "line": 430, "offset": 14893}, "start": {"col": 65, "line": 430, "offset": 14889}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 21, "line": 430, "offset": 14845}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 67, "line": 435, "offset": 15258}, "extra": {"engine_kind": "OSS", "fingerprint": "8e02dc2d5870c46fbe750175e9770fadf2589afca00448d6ff5fcbb9f46c050d00f8e88c3954d9d54f400cb7bb4fd6d30d5d4a5d1056901695cd6c911463d52e_0", "is_ignored": false, "lines": "                    sprintf(local_94,\n                            \"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                            ,0,local_70,piVar17[-0x12],0,local_6c);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 92, "line": 1, "offset": 91}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 37, "line": 433, "offset": 15070}, "start": {"col": 29, "line": 433, "offset": 15062}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 120, "line": 434, "offset": 15191}, "start": {"col": 29, "line": 434, "offset": 15100}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 21, "line": 433, "offset": 15054}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 67, "line": 435, "offset": 15258}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_1", "is_ignored": false, "lines": "                    sprintf(local_94,\n                            \"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                            ,0,local_70,piVar17[-0x12],0,local_6c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 28, "line": 433, "offset": 15061}, "start": {"col": 21, "line": 433, "offset": 15054}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 21, "line": 433, "offset": 15054}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 37, "line": 436, "offset": 15296}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_0", "is_ignored": false, "lines": "                    system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 21, "line": 436, "offset": 15280}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 37, "line": 436, "offset": 15296}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_0", "is_ignored": false, "lines": "                    system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 27, "line": 436, "offset": 15286}, "start": {"col": 21, "line": 436, "offset": 15280}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 21, "line": 436, "offset": 15280}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 72, "line": 456, "offset": 16421}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_1", "is_ignored": false, "lines": "                      memset((undefined *)((int)&local_79c + 1),0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 66, "line": 456, "offset": 16415}, "start": {"col": 65, "line": 456, "offset": 16414}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 63, "line": 456, "offset": 16412}, "start": {"col": 30, "line": 456, "offset": 16379}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 71, "line": 456, "offset": 16420}, "start": {"col": 67, "line": 456, "offset": 16416}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 23, "line": 456, "offset": 16372}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 69, "line": 461, "offset": 16796}, "extra": {"engine_kind": "OSS", "fingerprint": "8e02dc2d5870c46fbe750175e9770fadf2589afca00448d6ff5fcbb9f46c050d00f8e88c3954d9d54f400cb7bb4fd6d30d5d4a5d1056901695cd6c911463d52e_1", "is_ignored": false, "lines": "                      sprintf(local_94,\n                              \"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                              ,1,local_70,piVar17[-0x12],0,local_6c);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 92, "line": 1, "offset": 91}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 39, "line": 459, "offset": 16604}, "start": {"col": 31, "line": 459, "offset": 16596}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 122, "line": 460, "offset": 16727}, "start": {"col": 31, "line": 460, "offset": 16636}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 23, "line": 459, "offset": 16588}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 69, "line": 461, "offset": 16796}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_2", "is_ignored": false, "lines": "                      sprintf(local_94,\n                              \"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                              ,1,local_70,piVar17[-0x12],0,local_6c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 30, "line": 459, "offset": 16595}, "start": {"col": 23, "line": 459, "offset": 16588}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 23, "line": 459, "offset": 16588}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 39, "line": 462, "offset": 16836}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_1", "is_ignored": false, "lines": "                      system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 23, "line": 462, "offset": 16820}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 462, "offset": 16836}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_1", "is_ignored": false, "lines": "                      system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 29, "line": 462, "offset": 16826}, "start": {"col": 23, "line": 462, "offset": 16820}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 23, "line": 462, "offset": 16820}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 74, "line": 482, "offset": 18001}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_2", "is_ignored": false, "lines": "                        memset((undefined *)((int)&local_79c + 1),0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 68, "line": 482, "offset": 17995}, "start": {"col": 67, "line": 482, "offset": 17994}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 65, "line": 482, "offset": 17992}, "start": {"col": 32, "line": 482, "offset": 17959}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 73, "line": 482, "offset": 18000}, "start": {"col": 69, "line": 482, "offset": 17996}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 25, "line": 482, "offset": 17952}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 71, "line": 488, "offset": 18420}, "extra": {"engine_kind": "OSS", "fingerprint": "508b7e03c3dafd8d52146fa18065d87c283b83c5b6ce3c1f70eab7302ae056b1f10087c577e292c225f107256af3f9a3f4a5962dece4a210cd37ce2a42beceb0_0", "is_ignored": false, "lines": "                        sprintf(local_94,\n                                \"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                                ,0,local_70,piVar17[-0x12],0,local_6c);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 93, "line": 1, "offset": 92}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 41, "line": 486, "offset": 18223}, "start": {"col": 33, "line": 486, "offset": 18215}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 125, "line": 487, "offset": 18349}, "start": {"col": 33, "line": 487, "offset": 18257}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 25, "line": 486, "offset": 18207}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 71, "line": 488, "offset": 18420}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_3", "is_ignored": false, "lines": "                        sprintf(local_94,\n                                \"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                                ,0,local_70,piVar17[-0x12],0,local_6c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 32, "line": 486, "offset": 18214}, "start": {"col": 25, "line": 486, "offset": 18207}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 25, "line": 486, "offset": 18207}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 41, "line": 489, "offset": 18462}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_2", "is_ignored": false, "lines": "                        system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 25, "line": 489, "offset": 18446}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 489, "offset": 18462}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_2", "is_ignored": false, "lines": "                        system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 31, "line": 489, "offset": 18452}, "start": {"col": 25, "line": 489, "offset": 18446}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 25, "line": 489, "offset": 18446}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 76, "line": 509, "offset": 19667}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_3", "is_ignored": false, "lines": "                          memset((undefined *)((int)&local_79c + 1),0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 70, "line": 509, "offset": 19661}, "start": {"col": 69, "line": 509, "offset": 19660}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 67, "line": 509, "offset": 19658}, "start": {"col": 34, "line": 509, "offset": 19625}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 75, "line": 509, "offset": 19666}, "start": {"col": 71, "line": 509, "offset": 19662}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 27, "line": 509, "offset": 19618}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 73, "line": 515, "offset": 20099}, "extra": {"engine_kind": "OSS", "fingerprint": "508b7e03c3dafd8d52146fa18065d87c283b83c5b6ce3c1f70eab7302ae056b1f10087c577e292c225f107256af3f9a3f4a5962dece4a210cd37ce2a42beceb0_1", "is_ignored": false, "lines": "                          sprintf(local_94,\n                                  \"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                                  ,1,local_70,piVar17[-0x12],0,local_6c);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 93, "line": 1, "offset": 92}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 43, "line": 513, "offset": 19898}, "start": {"col": 35, "line": 513, "offset": 19890}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 127, "line": 514, "offset": 20026}, "start": {"col": 35, "line": 514, "offset": 19934}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 27, "line": 513, "offset": 19882}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 73, "line": 515, "offset": 20099}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_4", "is_ignored": false, "lines": "                          sprintf(local_94,\n                                  \"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                                  ,1,local_70,piVar17[-0x12],0,local_6c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 34, "line": 513, "offset": 19889}, "start": {"col": 27, "line": 513, "offset": 19882}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 27, "line": 513, "offset": 19882}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 43, "line": 516, "offset": 20143}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_3", "is_ignored": false, "lines": "                          system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 27, "line": 516, "offset": 20127}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 43, "line": 516, "offset": 20143}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_3", "is_ignored": false, "lines": "                          system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 33, "line": 516, "offset": 20133}, "start": {"col": 27, "line": 516, "offset": 20127}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 27, "line": 516, "offset": 20127}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 78, "line": 537, "offset": 21429}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_4", "is_ignored": false, "lines": "                            memset((undefined *)((int)&local_79c + 1),0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 72, "line": 537, "offset": 21423}, "start": {"col": 71, "line": 537, "offset": 21422}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 69, "line": 537, "offset": 21420}, "start": {"col": 36, "line": 537, "offset": 21387}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 77, "line": 537, "offset": 21428}, "start": {"col": 73, "line": 537, "offset": 21424}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 29, "line": 537, "offset": 21380}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 75, "line": 543, "offset": 21871}, "extra": {"engine_kind": "OSS", "fingerprint": "8e02dc2d5870c46fbe750175e9770fadf2589afca00448d6ff5fcbb9f46c050d00f8e88c3954d9d54f400cb7bb4fd6d30d5d4a5d1056901695cd6c911463d52e_2", "is_ignored": false, "lines": "                            sprintf(local_94,\n                                    \"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                                    ,4,local_70,piVar17[-0x12],0,local_6c);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 92, "line": 1, "offset": 91}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 45, "line": 541, "offset": 21667}, "start": {"col": 37, "line": 541, "offset": 21659}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 128, "line": 542, "offset": 21796}, "start": {"col": 37, "line": 542, "offset": 21705}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 29, "line": 541, "offset": 21651}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 75, "line": 543, "offset": 21871}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_5", "is_ignored": false, "lines": "                            sprintf(local_94,\n                                    \"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                                    ,4,local_70,piVar17[-0x12],0,local_6c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 36, "line": 541, "offset": 21658}, "start": {"col": 29, "line": 541, "offset": 21651}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 29, "line": 541, "offset": 21651}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 45, "line": 544, "offset": 21917}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_4", "is_ignored": false, "lines": "                            system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 29, "line": 544, "offset": 21901}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 45, "line": 544, "offset": 21917}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_4", "is_ignored": false, "lines": "                            system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 35, "line": 544, "offset": 21907}, "start": {"col": 29, "line": 544, "offset": 21901}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 29, "line": 544, "offset": 21901}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 80, "line": 565, "offset": 23245}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_5", "is_ignored": false, "lines": "                              memset((undefined *)((int)&local_79c + 1),0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 74, "line": 565, "offset": 23239}, "start": {"col": 73, "line": 565, "offset": 23238}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 71, "line": 565, "offset": 23236}, "start": {"col": 38, "line": 565, "offset": 23203}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 79, "line": 565, "offset": 23244}, "start": {"col": 75, "line": 565, "offset": 23240}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 31, "line": 565, "offset": 23196}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 77, "line": 571, "offset": 23701}, "extra": {"engine_kind": "OSS", "fingerprint": "508b7e03c3dafd8d52146fa18065d87c283b83c5b6ce3c1f70eab7302ae056b1f10087c577e292c225f107256af3f9a3f4a5962dece4a210cd37ce2a42beceb0_2", "is_ignored": false, "lines": "                              sprintf(local_94,\n                                      \"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                                      ,4,local_70,piVar17[-0x12],0,local_6c);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 93, "line": 1, "offset": 92}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 47, "line": 569, "offset": 23492}, "start": {"col": 39, "line": 569, "offset": 23484}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 131, "line": 570, "offset": 23624}, "start": {"col": 39, "line": 570, "offset": 23532}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 31, "line": 569, "offset": 23476}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 77, "line": 571, "offset": 23701}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_6", "is_ignored": false, "lines": "                              sprintf(local_94,\n                                      \"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                                      ,4,local_70,piVar17[-0x12],0,local_6c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 38, "line": 569, "offset": 23483}, "start": {"col": 31, "line": 569, "offset": 23476}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 31, "line": 569, "offset": 23476}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 47, "line": 572, "offset": 23749}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_5", "is_ignored": false, "lines": "                              system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 31, "line": 572, "offset": 23733}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 572, "offset": 23749}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_5", "is_ignored": false, "lines": "                              system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 37, "line": 572, "offset": 23739}, "start": {"col": 31, "line": 572, "offset": 23733}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 31, "line": 572, "offset": 23733}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 82, "line": 593, "offset": 25119}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_6", "is_ignored": false, "lines": "                                memset((undefined *)((int)&local_79c + 1),0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 76, "line": 593, "offset": 25113}, "start": {"col": 75, "line": 593, "offset": 25112}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 73, "line": 593, "offset": 25110}, "start": {"col": 40, "line": 593, "offset": 25077}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 81, "line": 593, "offset": 25118}, "start": {"col": 77, "line": 593, "offset": 25114}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 33, "line": 593, "offset": 25070}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 49, "line": 616, "offset": 26450}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_6", "is_ignored": false, "lines": "                                system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 33, "line": 616, "offset": 26434}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 49, "line": 616, "offset": 26450}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_6", "is_ignored": false, "lines": "                                system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 39, "line": 616, "offset": 26440}, "start": {"col": 33, "line": 616, "offset": 26434}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 33, "line": 616, "offset": 26434}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 84, "line": 637, "offset": 27862}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_7", "is_ignored": false, "lines": "                                  memset((undefined *)((int)&local_79c + 1),0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 78, "line": 637, "offset": 27856}, "start": {"col": 77, "line": 637, "offset": 27855}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 75, "line": 637, "offset": 27853}, "start": {"col": 42, "line": 637, "offset": 27820}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 83, "line": 637, "offset": 27861}, "start": {"col": 79, "line": 637, "offset": 27857}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 35, "line": 637, "offset": 27813}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 51, "line": 655, "offset": 28945}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_7", "is_ignored": false, "lines": "                                  system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 35, "line": 655, "offset": 28929}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 51, "line": 655, "offset": 28945}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_7", "is_ignored": false, "lines": "                                  system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 41, "line": 655, "offset": 28935}, "start": {"col": 35, "line": 655, "offset": 28929}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 35, "line": 655, "offset": 28929}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 86, "line": 676, "offset": 30399}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_8", "is_ignored": false, "lines": "                                    memset((undefined *)((int)&local_79c + 1),0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 80, "line": 676, "offset": 30393}, "start": {"col": 79, "line": 676, "offset": 30392}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 77, "line": 676, "offset": 30390}, "start": {"col": 44, "line": 676, "offset": 30357}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 85, "line": 676, "offset": 30398}, "start": {"col": 81, "line": 676, "offset": 30394}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 37, "line": 676, "offset": 30350}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 67, "line": 685, "offset": 31044}, "extra": {"engine_kind": "OSS", "fingerprint": "e3d1e3f9eeb025814aa27d5058d957fe864d8cb474710e96d0e0d1a3a482d97cecd3dbadc45436161803aa9fd1daffb9dcbf16f3d41a9eb322f6cfc10fecdf55_0", "is_ignored": false, "lines": "                                      sprintf(local_94,\n                                              \"/usr/sbin/msger eventd 0 eiotnotification 1 \\\"1 %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                                              ,param_3,0,local_6c);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotnotification 1 \\\"1 %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 85, "line": 1, "offset": 84}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 55, "line": 683, "offset": 30845}, "start": {"col": 47, "line": 683, "offset": 30837}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotnotification 1 \\\"1 %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 131, "line": 684, "offset": 30977}, "start": {"col": 47, "line": 684, "offset": 30893}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 39, "line": 683, "offset": 30829}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 67, "line": 685, "offset": 31044}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_7", "is_ignored": false, "lines": "                                      sprintf(local_94,\n                                              \"/usr/sbin/msger eventd 0 eiotnotification 1 \\\"1 %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                                              ,param_3,0,local_6c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 46, "line": 683, "offset": 30836}, "start": {"col": 39, "line": 683, "offset": 30829}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 39, "line": 683, "offset": 30829}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 69, "line": 692, "offset": 31508}, "extra": {"engine_kind": "OSS", "fingerprint": "d2afc13318c33faec821610773eebd94894195b47577558ce2b20d9e4f2b1e5548e32fe16de3f244c2951ddad2d835f7907b7286d8ef2e53c64ab6db022b41a4_0", "is_ignored": false, "lines": "                                        sprintf(local_94,\n                                                \"/usr/sbin/msger eventd 0 eiotnotification 1 \\\"2 %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                                                ,param_3,0,local_6c);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotnotification 1 \\\"2 %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 85, "line": 1, "offset": 84}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 57, "line": 690, "offset": 31305}, "start": {"col": 49, "line": 690, "offset": 31297}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotnotification 1 \\\"2 %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 133, "line": 691, "offset": 31439}, "start": {"col": 49, "line": 691, "offset": 31355}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 41, "line": 690, "offset": 31289}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 69, "line": 692, "offset": 31508}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_8", "is_ignored": false, "lines": "                                        sprintf(local_94,\n                                                \"/usr/sbin/msger eventd 0 eiotnotification 1 \\\"2 %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                                                ,param_3,0,local_6c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 48, "line": 690, "offset": 31296}, "start": {"col": 41, "line": 690, "offset": 31289}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 41, "line": 690, "offset": 31289}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 53, "line": 695, "offset": 31640}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_8", "is_ignored": false, "lines": "                                    system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 37, "line": 695, "offset": 31624}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 53, "line": 695, "offset": 31640}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_8", "is_ignored": false, "lines": "                                    system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 43, "line": 695, "offset": 31630}, "start": {"col": 37, "line": 695, "offset": 31624}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 37, "line": 695, "offset": 31624}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 88, "line": 728, "offset": 33928}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_9", "is_ignored": false, "lines": "                                      memset((undefined *)((int)&local_79c + 1),0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 82, "line": 728, "offset": 33922}, "start": {"col": 81, "line": 728, "offset": 33921}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 79, "line": 728, "offset": 33919}, "start": {"col": 46, "line": 728, "offset": 33886}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 87, "line": 728, "offset": 33927}, "start": {"col": 83, "line": 728, "offset": 33923}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 39, "line": 728, "offset": 33879}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 69, "line": 737, "offset": 34590}, "extra": {"engine_kind": "OSS", "fingerprint": "e3d1e3f9eeb025814aa27d5058d957fe864d8cb474710e96d0e0d1a3a482d97cecd3dbadc45436161803aa9fd1daffb9dcbf16f3d41a9eb322f6cfc10fecdf55_1", "is_ignored": false, "lines": "                                        sprintf(local_94,\n                                                \"/usr/sbin/msger eventd 0 eiotnotification 1 \\\"1 %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                                                ,param_3,0,local_6c);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotnotification 1 \\\"1 %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 85, "line": 1, "offset": 84}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 57, "line": 735, "offset": 34387}, "start": {"col": 49, "line": 735, "offset": 34379}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotnotification 1 \\\"1 %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 133, "line": 736, "offset": 34521}, "start": {"col": 49, "line": 736, "offset": 34437}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 41, "line": 735, "offset": 34371}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 69, "line": 737, "offset": 34590}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_9", "is_ignored": false, "lines": "                                        sprintf(local_94,\n                                                \"/usr/sbin/msger eventd 0 eiotnotification 1 \\\"1 %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                                                ,param_3,0,local_6c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 48, "line": 735, "offset": 34378}, "start": {"col": 41, "line": 735, "offset": 34371}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 41, "line": 735, "offset": 34371}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 71, "line": 744, "offset": 35068}, "extra": {"engine_kind": "OSS", "fingerprint": "d2afc13318c33faec821610773eebd94894195b47577558ce2b20d9e4f2b1e5548e32fe16de3f244c2951ddad2d835f7907b7286d8ef2e53c64ab6db022b41a4_1", "is_ignored": false, "lines": "                                          sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotnotification 1 \\\"2 %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,param_3,0,local_6c);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotnotification 1 \\\"2 %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 85, "line": 1, "offset": 84}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 59, "line": 742, "offset": 34861}, "start": {"col": 51, "line": 742, "offset": 34853}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotnotification 1 \\\"2 %d %d %s\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 135, "line": 743, "offset": 34997}, "start": {"col": 51, "line": 743, "offset": 34913}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 43, "line": 742, "offset": 34845}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 71, "line": 744, "offset": 35068}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_10", "is_ignored": false, "lines": "                                          sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotnotification 1 \\\"2 %d %d %s\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,param_3,0,local_6c);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 50, "line": 742, "offset": 34852}, "start": {"col": 43, "line": 742, "offset": 34845}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 43, "line": 742, "offset": 34845}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 55, "line": 747, "offset": 35206}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_9", "is_ignored": false, "lines": "                                      system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 39, "line": 747, "offset": 35190}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 55, "line": 747, "offset": 35206}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_9", "is_ignored": false, "lines": "                                      system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 45, "line": 747, "offset": 35196}, "start": {"col": 39, "line": 747, "offset": 35190}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 39, "line": 747, "offset": 35190}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 98, "line": 796, "offset": 38715}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_10", "is_ignored": false, "lines": "                                                memset((undefined *)((int)&local_79c + 1),0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 92, "line": 796, "offset": 38709}, "start": {"col": 91, "line": 796, "offset": 38708}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 89, "line": 796, "offset": 38706}, "start": {"col": 56, "line": 796, "offset": 38673}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 97, "line": 796, "offset": 38714}, "start": {"col": 93, "line": 796, "offset": 38710}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 49, "line": 796, "offset": 38666}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 94, "line": 798, "offset": 38892}, "extra": {"engine_kind": "OSS", "fingerprint": "8570d2a20cbbb69f0d958f381eab6b4e64ca64e2a6eb8d59c83b63b6e720917e492752304d51cde9cf550532b7b982b489c00b21c4f3ee9aca411f6be7dc05f2_0", "is_ignored": false, "lines": "                                                memset((void *)((int)&local_39c + 1),0,0x2ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 87, "line": 798, "offset": 38885}, "start": {"col": 86, "line": 798, "offset": 38884}}, "$DST": {"abstract_content": "(void*(int&local_39c+1", "end": {"col": 84, "line": 798, "offset": 38882}, "start": {"col": 56, "line": 798, "offset": 38854}}, "$LEN": {"abstract_content": "0x2ff", "end": {"col": 93, "line": 798, "offset": 38891}, "start": {"col": 88, "line": 798, "offset": 38886}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 49, "line": 798, "offset": 38847}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 94, "line": 800, "offset": 39081}, "extra": {"engine_kind": "OSS", "fingerprint": "34eee87aa1e618c5afa20fb743765e1d1c3134cedcd6c9eb1d49cdef2e826e3bc388cc3675080d72e3c86c424b917c9f929acc3884631cbf8614f35e81378ca7_0", "is_ignored": false, "lines": "                                                memset((void *)((int)&local_69c + 1),0,0x2ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 87, "line": 800, "offset": 39074}, "start": {"col": 86, "line": 800, "offset": 39073}}, "$DST": {"abstract_content": "(void*(int&local_69c+1", "end": {"col": 84, "line": 800, "offset": 39071}, "start": {"col": 56, "line": 800, "offset": 39043}}, "$LEN": {"abstract_content": "0x2ff", "end": {"col": 93, "line": 800, "offset": 39080}, "start": {"col": 88, "line": 800, "offset": 39075}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 49, "line": 800, "offset": 39036}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 61, "line": 806, "offset": 39624}, "extra": {"engine_kind": "OSS", "fingerprint": "4fae05f7a986c07bbb5f7a3acde19834944f832aa3899dfb027d47368bd483420cd3417b6a51e6803365cb1131c20d1e6930e1de2634b4d2009428d8bec551ef_0", "is_ignored": false, "lines": "                                                sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,2,local_70,piVar17[-0x12],0,&local_39c,&local_69c\n                                                  ,*piVar17);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 98, "line": 1, "offset": 97}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 65, "line": 803, "offset": 39313}, "start": {"col": 57, "line": 803, "offset": 39305}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 148, "line": 804, "offset": 39462}, "start": {"col": 51, "line": 804, "offset": 39365}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 49, "line": 803, "offset": 39297}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 61, "line": 806, "offset": 39624}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_11", "is_ignored": false, "lines": "                                                sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,2,local_70,piVar17[-0x12],0,&local_39c,&local_69c\n                                                  ,*piVar17);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 56, "line": 803, "offset": 39304}, "start": {"col": 49, "line": 803, "offset": 39297}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 49, "line": 803, "offset": 39297}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 65, "line": 807, "offset": 39690}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_10", "is_ignored": false, "lines": "                                                system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 49, "line": 807, "offset": 39674}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 65, "line": 807, "offset": 39690}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_10", "is_ignored": false, "lines": "                                                system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 55, "line": 807, "offset": 39680}, "start": {"col": 49, "line": 807, "offset": 39674}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 49, "line": 807, "offset": 39674}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 100, "line": 814, "offset": 40206}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_11", "is_ignored": false, "lines": "                                                  memset((undefined *)((int)&local_79c + 1),0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 94, "line": 814, "offset": 40200}, "start": {"col": 93, "line": 814, "offset": 40199}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 91, "line": 814, "offset": 40197}, "start": {"col": 58, "line": 814, "offset": 40164}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 99, "line": 814, "offset": 40205}, "start": {"col": 95, "line": 814, "offset": 40201}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 814, "offset": 40157}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 96, "line": 816, "offset": 40399}, "extra": {"engine_kind": "OSS", "fingerprint": "34eee87aa1e618c5afa20fb743765e1d1c3134cedcd6c9eb1d49cdef2e826e3bc388cc3675080d72e3c86c424b917c9f929acc3884631cbf8614f35e81378ca7_1", "is_ignored": false, "lines": "                                                  memset((void *)((int)&local_69c + 1),0,0x2ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 89, "line": 816, "offset": 40392}, "start": {"col": 88, "line": 816, "offset": 40391}}, "$DST": {"abstract_content": "(void*(int&local_69c+1", "end": {"col": 86, "line": 816, "offset": 40389}, "start": {"col": 58, "line": 816, "offset": 40361}}, "$LEN": {"abstract_content": "0x2ff", "end": {"col": 95, "line": 816, "offset": 40398}, "start": {"col": 90, "line": 816, "offset": 40393}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 816, "offset": 40354}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 96, "line": 818, "offset": 40580}, "extra": {"engine_kind": "OSS", "fingerprint": "8570d2a20cbbb69f0d958f381eab6b4e64ca64e2a6eb8d59c83b63b6e720917e492752304d51cde9cf550532b7b982b489c00b21c4f3ee9aca411f6be7dc05f2_1", "is_ignored": false, "lines": "                                                  memset((void *)((int)&local_39c + 1),0,0x2ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 89, "line": 818, "offset": 40573}, "start": {"col": 88, "line": 818, "offset": 40572}}, "$DST": {"abstract_content": "(void*(int&local_39c+1", "end": {"col": 86, "line": 818, "offset": 40570}, "start": {"col": 58, "line": 818, "offset": 40542}}, "$LEN": {"abstract_content": "0x2ff", "end": {"col": 95, "line": 818, "offset": 40579}, "start": {"col": 90, "line": 818, "offset": 40574}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 818, "offset": 40535}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 61, "line": 824, "offset": 41130}, "extra": {"engine_kind": "OSS", "fingerprint": "1e339081a84f03616ca91cb59d37b5be433026803ac8531592f1fbe64d478e2ff090eb62ed72f94c0ff3bd6e07d2374bdf99176351c394876a139d3405d3f24a_0", "is_ignored": false, "lines": "                                                  sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,2,local_70,piVar17[-0x12],0,&local_69c,&local_39c\n                                                  ,*piVar17);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 99, "line": 1, "offset": 98}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 67, "line": 821, "offset": 40818}, "start": {"col": 59, "line": 821, "offset": 40810}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 149, "line": 822, "offset": 40968}, "start": {"col": 51, "line": 822, "offset": 40870}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 821, "offset": 40802}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 61, "line": 824, "offset": 41130}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_12", "is_ignored": false, "lines": "                                                  sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,2,local_70,piVar17[-0x12],0,&local_69c,&local_39c\n                                                  ,*piVar17);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 58, "line": 821, "offset": 40809}, "start": {"col": 51, "line": 821, "offset": 40802}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 821, "offset": 40802}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 67, "line": 825, "offset": 41198}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_11", "is_ignored": false, "lines": "                                                  system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 825, "offset": 41182}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 67, "line": 825, "offset": 41198}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_11", "is_ignored": false, "lines": "                                                  system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 57, "line": 825, "offset": 41188}, "start": {"col": 51, "line": 825, "offset": 41182}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 825, "offset": 41182}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 100, "line": 873, "offset": 44609}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_12", "is_ignored": false, "lines": "                                                  memset((undefined *)((int)&local_79c + 1),0,0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 94, "line": 873, "offset": 44603}, "start": {"col": 93, "line": 873, "offset": 44602}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 91, "line": 873, "offset": 44600}, "start": {"col": 58, "line": 873, "offset": 44567}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 99, "line": 873, "offset": 44608}, "start": {"col": 95, "line": 873, "offset": 44604}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 873, "offset": 44560}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 96, "line": 875, "offset": 44790}, "extra": {"engine_kind": "OSS", "fingerprint": "8570d2a20cbbb69f0d958f381eab6b4e64ca64e2a6eb8d59c83b63b6e720917e492752304d51cde9cf550532b7b982b489c00b21c4f3ee9aca411f6be7dc05f2_2", "is_ignored": false, "lines": "                                                  memset((void *)((int)&local_39c + 1),0,0x2ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 89, "line": 875, "offset": 44783}, "start": {"col": 88, "line": 875, "offset": 44782}}, "$DST": {"abstract_content": "(void*(int&local_39c+1", "end": {"col": 86, "line": 875, "offset": 44780}, "start": {"col": 58, "line": 875, "offset": 44752}}, "$LEN": {"abstract_content": "0x2ff", "end": {"col": 95, "line": 875, "offset": 44789}, "start": {"col": 90, "line": 875, "offset": 44784}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 875, "offset": 44745}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 96, "line": 877, "offset": 44983}, "extra": {"engine_kind": "OSS", "fingerprint": "34eee87aa1e618c5afa20fb743765e1d1c3134cedcd6c9eb1d49cdef2e826e3bc388cc3675080d72e3c86c424b917c9f929acc3884631cbf8614f35e81378ca7_2", "is_ignored": false, "lines": "                                                  memset((void *)((int)&local_69c + 1),0,0x2ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 89, "line": 877, "offset": 44976}, "start": {"col": 88, "line": 877, "offset": 44975}}, "$DST": {"abstract_content": "(void*(int&local_69c+1", "end": {"col": 86, "line": 877, "offset": 44973}, "start": {"col": 58, "line": 877, "offset": 44945}}, "$LEN": {"abstract_content": "0x2ff", "end": {"col": 95, "line": 877, "offset": 44982}, "start": {"col": 90, "line": 877, "offset": 44977}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 877, "offset": 44938}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 61, "line": 883, "offset": 45532}, "extra": {"engine_kind": "OSS", "fingerprint": "4fae05f7a986c07bbb5f7a3acde19834944f832aa3899dfb027d47368bd483420cd3417b6a51e6803365cb1131c20d1e6930e1de2634b4d2009428d8bec551ef_1", "is_ignored": false, "lines": "                                                  sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,2,local_70,piVar17[-0x12],0,&local_39c,&local_69c\n                                                  ,*piVar17);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 98, "line": 1, "offset": 97}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 67, "line": 880, "offset": 45221}, "start": {"col": 59, "line": 880, "offset": 45213}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 148, "line": 881, "offset": 45370}, "start": {"col": 51, "line": 881, "offset": 45273}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 880, "offset": 45205}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 61, "line": 883, "offset": 45532}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_13", "is_ignored": false, "lines": "                                                  sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,2,local_70,piVar17[-0x12],0,&local_39c,&local_69c\n                                                  ,*piVar17);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 58, "line": 880, "offset": 45212}, "start": {"col": 51, "line": 880, "offset": 45205}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 880, "offset": 45205}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 67, "line": 884, "offset": 45600}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_12", "is_ignored": false, "lines": "                                                  system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 884, "offset": 45584}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 67, "line": 884, "offset": 45600}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_12", "is_ignored": false, "lines": "                                                  system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 57, "line": 884, "offset": 45590}, "start": {"col": 51, "line": 884, "offset": 45584}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 884, "offset": 45584}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 60, "line": 892, "offset": 46189}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_13", "is_ignored": false, "lines": "                                                    memset((undefined *)((int)&local_79c + 1),0,0xff\n                                                          );", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 96, "line": 891, "offset": 46124}, "start": {"col": 95, "line": 891, "offset": 46123}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 93, "line": 891, "offset": 46121}, "start": {"col": 60, "line": 891, "offset": 46088}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 101, "line": 891, "offset": 46129}, "start": {"col": 97, "line": 891, "offset": 46125}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 53, "line": 891, "offset": 46081}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 98, "line": 894, "offset": 46386}, "extra": {"engine_kind": "OSS", "fingerprint": "34eee87aa1e618c5afa20fb743765e1d1c3134cedcd6c9eb1d49cdef2e826e3bc388cc3675080d72e3c86c424b917c9f929acc3884631cbf8614f35e81378ca7_3", "is_ignored": false, "lines": "                                                    memset((void *)((int)&local_69c + 1),0,0x2ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 91, "line": 894, "offset": 46379}, "start": {"col": 90, "line": 894, "offset": 46378}}, "$DST": {"abstract_content": "(void*(int&local_69c+1", "end": {"col": 88, "line": 894, "offset": 46376}, "start": {"col": 60, "line": 894, "offset": 46348}}, "$LEN": {"abstract_content": "0x2ff", "end": {"col": 97, "line": 894, "offset": 46385}, "start": {"col": 92, "line": 894, "offset": 46380}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 53, "line": 894, "offset": 46341}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 98, "line": 896, "offset": 46571}, "extra": {"engine_kind": "OSS", "fingerprint": "8570d2a20cbbb69f0d958f381eab6b4e64ca64e2a6eb8d59c83b63b6e720917e492752304d51cde9cf550532b7b982b489c00b21c4f3ee9aca411f6be7dc05f2_3", "is_ignored": false, "lines": "                                                    memset((void *)((int)&local_39c + 1),0,0x2ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 91, "line": 896, "offset": 46564}, "start": {"col": 90, "line": 896, "offset": 46563}}, "$DST": {"abstract_content": "(void*(int&local_39c+1", "end": {"col": 88, "line": 896, "offset": 46561}, "start": {"col": 60, "line": 896, "offset": 46533}}, "$LEN": {"abstract_content": "0x2ff", "end": {"col": 97, "line": 896, "offset": 46570}, "start": {"col": 92, "line": 896, "offset": 46565}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 53, "line": 896, "offset": 46526}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 61, "line": 902, "offset": 47127}, "extra": {"engine_kind": "OSS", "fingerprint": "1e339081a84f03616ca91cb59d37b5be433026803ac8531592f1fbe64d478e2ff090eb62ed72f94c0ff3bd6e07d2374bdf99176351c394876a139d3405d3f24a_1", "is_ignored": false, "lines": "                                                    sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,2,local_70,piVar17[-0x12],0,&local_69c,&local_39c\n                                                  ,*piVar17);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 99, "line": 1, "offset": 98}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 69, "line": 899, "offset": 46815}, "start": {"col": 61, "line": 899, "offset": 46807}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 149, "line": 900, "offset": 46965}, "start": {"col": 51, "line": 900, "offset": 46867}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 53, "line": 899, "offset": 46799}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 61, "line": 902, "offset": 47127}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_14", "is_ignored": false, "lines": "                                                    sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,2,local_70,piVar17[-0x12],0,&local_69c,&local_39c\n                                                  ,*piVar17);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 60, "line": 899, "offset": 46806}, "start": {"col": 53, "line": 899, "offset": 46799}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 53, "line": 899, "offset": 46799}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 67, "line": 903, "offset": 47195}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_13", "is_ignored": false, "lines": "                                                  system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 903, "offset": 47179}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 67, "line": 903, "offset": 47195}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_13", "is_ignored": false, "lines": "                                                  system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 57, "line": 903, "offset": 47185}, "start": {"col": 51, "line": 903, "offset": 47179}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 903, "offset": 47179}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 60, "line": 952, "offset": 50754}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_14", "is_ignored": false, "lines": "                                                    memset((undefined *)((int)&local_79c + 1),0,0xff\n                                                          );", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 96, "line": 951, "offset": 50689}, "start": {"col": 95, "line": 951, "offset": 50688}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 93, "line": 951, "offset": 50686}, "start": {"col": 60, "line": 951, "offset": 50653}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 101, "line": 951, "offset": 50694}, "start": {"col": 97, "line": 951, "offset": 50690}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 53, "line": 951, "offset": 50646}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 98, "line": 954, "offset": 50939}, "extra": {"engine_kind": "OSS", "fingerprint": "8570d2a20cbbb69f0d958f381eab6b4e64ca64e2a6eb8d59c83b63b6e720917e492752304d51cde9cf550532b7b982b489c00b21c4f3ee9aca411f6be7dc05f2_4", "is_ignored": false, "lines": "                                                    memset((void *)((int)&local_39c + 1),0,0x2ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 91, "line": 954, "offset": 50932}, "start": {"col": 90, "line": 954, "offset": 50931}}, "$DST": {"abstract_content": "(void*(int&local_39c+1", "end": {"col": 88, "line": 954, "offset": 50929}, "start": {"col": 60, "line": 954, "offset": 50901}}, "$LEN": {"abstract_content": "0x2ff", "end": {"col": 97, "line": 954, "offset": 50938}, "start": {"col": 92, "line": 954, "offset": 50933}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 53, "line": 954, "offset": 50894}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 98, "line": 956, "offset": 51136}, "extra": {"engine_kind": "OSS", "fingerprint": "34eee87aa1e618c5afa20fb743765e1d1c3134cedcd6c9eb1d49cdef2e826e3bc388cc3675080d72e3c86c424b917c9f929acc3884631cbf8614f35e81378ca7_4", "is_ignored": false, "lines": "                                                    memset((void *)((int)&local_69c + 1),0,0x2ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 91, "line": 956, "offset": 51129}, "start": {"col": 90, "line": 956, "offset": 51128}}, "$DST": {"abstract_content": "(void*(int&local_69c+1", "end": {"col": 88, "line": 956, "offset": 51126}, "start": {"col": 60, "line": 956, "offset": 51098}}, "$LEN": {"abstract_content": "0x2ff", "end": {"col": 97, "line": 956, "offset": 51135}, "start": {"col": 92, "line": 956, "offset": 51130}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 53, "line": 956, "offset": 51091}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 61, "line": 962, "offset": 51691}, "extra": {"engine_kind": "OSS", "fingerprint": "4fae05f7a986c07bbb5f7a3acde19834944f832aa3899dfb027d47368bd483420cd3417b6a51e6803365cb1131c20d1e6930e1de2634b4d2009428d8bec551ef_2", "is_ignored": false, "lines": "                                                    sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,2,local_70,piVar17[-0x12],0,&local_39c,&local_69c\n                                                  ,*piVar17);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 98, "line": 1, "offset": 97}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 69, "line": 959, "offset": 51380}, "start": {"col": 61, "line": 959, "offset": 51372}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 148, "line": 960, "offset": 51529}, "start": {"col": 51, "line": 960, "offset": 51432}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 53, "line": 959, "offset": 51364}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 61, "line": 962, "offset": 51691}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_15", "is_ignored": false, "lines": "                                                    sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,2,local_70,piVar17[-0x12],0,&local_39c,&local_69c\n                                                  ,*piVar17);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 60, "line": 959, "offset": 51371}, "start": {"col": 53, "line": 959, "offset": 51364}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 53, "line": 959, "offset": 51364}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 67, "line": 963, "offset": 51759}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_14", "is_ignored": false, "lines": "                                                  system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 963, "offset": 51743}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 67, "line": 963, "offset": 51759}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_14", "is_ignored": false, "lines": "                                                  system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 57, "line": 963, "offset": 51749}, "start": {"col": 51, "line": 963, "offset": 51743}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 963, "offset": 51743}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 67, "line": 972, "offset": 52417}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_15", "is_ignored": false, "lines": "                                                      memset((undefined *)((int)&local_79c + 1),0,\n                                                             0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 98, "line": 971, "offset": 52349}, "start": {"col": 97, "line": 971, "offset": 52348}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 95, "line": 971, "offset": 52346}, "start": {"col": 62, "line": 971, "offset": 52313}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 66, "line": 972, "offset": 52416}, "start": {"col": 62, "line": 972, "offset": 52412}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 55, "line": 971, "offset": 52306}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 100, "line": 974, "offset": 52618}, "extra": {"engine_kind": "OSS", "fingerprint": "34eee87aa1e618c5afa20fb743765e1d1c3134cedcd6c9eb1d49cdef2e826e3bc388cc3675080d72e3c86c424b917c9f929acc3884631cbf8614f35e81378ca7_5", "is_ignored": false, "lines": "                                                      memset((void *)((int)&local_69c + 1),0,0x2ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 93, "line": 974, "offset": 52611}, "start": {"col": 92, "line": 974, "offset": 52610}}, "$DST": {"abstract_content": "(void*(int&local_69c+1", "end": {"col": 90, "line": 974, "offset": 52608}, "start": {"col": 62, "line": 974, "offset": 52580}}, "$LEN": {"abstract_content": "0x2ff", "end": {"col": 99, "line": 974, "offset": 52617}, "start": {"col": 94, "line": 974, "offset": 52612}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 55, "line": 974, "offset": 52573}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 100, "line": 976, "offset": 52807}, "extra": {"engine_kind": "OSS", "fingerprint": "8570d2a20cbbb69f0d958f381eab6b4e64ca64e2a6eb8d59c83b63b6e720917e492752304d51cde9cf550532b7b982b489c00b21c4f3ee9aca411f6be7dc05f2_5", "is_ignored": false, "lines": "                                                      memset((void *)((int)&local_39c + 1),0,0x2ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 93, "line": 976, "offset": 52800}, "start": {"col": 92, "line": 976, "offset": 52799}}, "$DST": {"abstract_content": "(void*(int&local_39c+1", "end": {"col": 90, "line": 976, "offset": 52797}, "start": {"col": 62, "line": 976, "offset": 52769}}, "$LEN": {"abstract_content": "0x2ff", "end": {"col": 99, "line": 976, "offset": 52806}, "start": {"col": 94, "line": 976, "offset": 52801}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 55, "line": 976, "offset": 52762}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 61, "line": 982, "offset": 53369}, "extra": {"engine_kind": "OSS", "fingerprint": "1e339081a84f03616ca91cb59d37b5be433026803ac8531592f1fbe64d478e2ff090eb62ed72f94c0ff3bd6e07d2374bdf99176351c394876a139d3405d3f24a_2", "is_ignored": false, "lines": "                                                      sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,2,local_70,piVar17[-0x12],0,&local_69c,&local_39c\n                                                  ,*piVar17);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 99, "line": 1, "offset": 98}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 71, "line": 979, "offset": 53057}, "start": {"col": 63, "line": 979, "offset": 53049}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 149, "line": 980, "offset": 53207}, "start": {"col": 51, "line": 980, "offset": 53109}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 55, "line": 979, "offset": 53041}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 61, "line": 982, "offset": 53369}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_16", "is_ignored": false, "lines": "                                                      sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,2,local_70,piVar17[-0x12],0,&local_69c,&local_39c\n                                                  ,*piVar17);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 62, "line": 979, "offset": 53048}, "start": {"col": 55, "line": 979, "offset": 53041}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 55, "line": 979, "offset": 53041}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 67, "line": 983, "offset": 53437}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_15", "is_ignored": false, "lines": "                                                  system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 983, "offset": 53421}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 67, "line": 983, "offset": 53437}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_15", "is_ignored": false, "lines": "                                                  system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 57, "line": 983, "offset": 53427}, "start": {"col": 51, "line": 983, "offset": 53421}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 983, "offset": 53421}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 67, "line": 1034, "offset": 57231}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_16", "is_ignored": false, "lines": "                                                      memset((undefined *)((int)&local_79c + 1),0,\n                                                             0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 98, "line": 1033, "offset": 57163}, "start": {"col": 97, "line": 1033, "offset": 57162}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 95, "line": 1033, "offset": 57160}, "start": {"col": 62, "line": 1033, "offset": 57127}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 66, "line": 1034, "offset": 57230}, "start": {"col": 62, "line": 1034, "offset": 57226}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 55, "line": 1033, "offset": 57120}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 100, "line": 1036, "offset": 57420}, "extra": {"engine_kind": "OSS", "fingerprint": "8570d2a20cbbb69f0d958f381eab6b4e64ca64e2a6eb8d59c83b63b6e720917e492752304d51cde9cf550532b7b982b489c00b21c4f3ee9aca411f6be7dc05f2_6", "is_ignored": false, "lines": "                                                      memset((void *)((int)&local_39c + 1),0,0x2ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 93, "line": 1036, "offset": 57413}, "start": {"col": 92, "line": 1036, "offset": 57412}}, "$DST": {"abstract_content": "(void*(int&local_39c+1", "end": {"col": 90, "line": 1036, "offset": 57410}, "start": {"col": 62, "line": 1036, "offset": 57382}}, "$LEN": {"abstract_content": "0x2ff", "end": {"col": 99, "line": 1036, "offset": 57419}, "start": {"col": 94, "line": 1036, "offset": 57414}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 55, "line": 1036, "offset": 57375}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 100, "line": 1038, "offset": 57621}, "extra": {"engine_kind": "OSS", "fingerprint": "34eee87aa1e618c5afa20fb743765e1d1c3134cedcd6c9eb1d49cdef2e826e3bc388cc3675080d72e3c86c424b917c9f929acc3884631cbf8614f35e81378ca7_6", "is_ignored": false, "lines": "                                                      memset((void *)((int)&local_69c + 1),0,0x2ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 93, "line": 1038, "offset": 57614}, "start": {"col": 92, "line": 1038, "offset": 57613}}, "$DST": {"abstract_content": "(void*(int&local_69c+1", "end": {"col": 90, "line": 1038, "offset": 57611}, "start": {"col": 62, "line": 1038, "offset": 57583}}, "$LEN": {"abstract_content": "0x2ff", "end": {"col": 99, "line": 1038, "offset": 57620}, "start": {"col": 94, "line": 1038, "offset": 57615}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 55, "line": 1038, "offset": 57576}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 61, "line": 1044, "offset": 58182}, "extra": {"engine_kind": "OSS", "fingerprint": "4fae05f7a986c07bbb5f7a3acde19834944f832aa3899dfb027d47368bd483420cd3417b6a51e6803365cb1131c20d1e6930e1de2634b4d2009428d8bec551ef_3", "is_ignored": false, "lines": "                                                      sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,2,local_70,piVar17[-0x12],0,&local_39c,&local_69c\n                                                  ,*piVar17);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 98, "line": 1, "offset": 97}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 71, "line": 1041, "offset": 57871}, "start": {"col": 63, "line": 1041, "offset": 57863}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 148, "line": 1042, "offset": 58020}, "start": {"col": 51, "line": 1042, "offset": 57923}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 55, "line": 1041, "offset": 57855}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 61, "line": 1044, "offset": 58182}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_17", "is_ignored": false, "lines": "                                                      sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotsnapshottrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,2,local_70,piVar17[-0x12],0,&local_39c,&local_69c\n                                                  ,*piVar17);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 62, "line": 1041, "offset": 57862}, "start": {"col": 55, "line": 1041, "offset": 57855}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 55, "line": 1041, "offset": 57855}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 67, "line": 1045, "offset": 58250}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_16", "is_ignored": false, "lines": "                                                  system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 1045, "offset": 58234}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 67, "line": 1045, "offset": 58250}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_16", "is_ignored": false, "lines": "                                                  system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 57, "line": 1045, "offset": 58240}, "start": {"col": 51, "line": 1045, "offset": 58234}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 1045, "offset": 58234}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 67, "line": 1054, "offset": 58908}, "extra": {"engine_kind": "OSS", "fingerprint": "59f833caed1f0e4efa1af8faafddf1b55659e3650e1be66e398f40bf2762a7f381cb80376225b4d78fd6c8d7759c3f9cd31ca88c169738e2889b2716ae0ebb83_17", "is_ignored": false, "lines": "                                                      memset((undefined *)((int)&local_79c + 1),0,\n                                                             0xff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 98, "line": 1053, "offset": 58840}, "start": {"col": 97, "line": 1053, "offset": 58839}}, "$DST": {"abstract_content": "(undefined*(int&local_79c+1", "end": {"col": 95, "line": 1053, "offset": 58837}, "start": {"col": 62, "line": 1053, "offset": 58804}}, "$LEN": {"abstract_content": "0xff", "end": {"col": 66, "line": 1054, "offset": 58907}, "start": {"col": 62, "line": 1054, "offset": 58903}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 55, "line": 1053, "offset": 58797}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 100, "line": 1056, "offset": 59109}, "extra": {"engine_kind": "OSS", "fingerprint": "34eee87aa1e618c5afa20fb743765e1d1c3134cedcd6c9eb1d49cdef2e826e3bc388cc3675080d72e3c86c424b917c9f929acc3884631cbf8614f35e81378ca7_7", "is_ignored": false, "lines": "                                                      memset((void *)((int)&local_69c + 1),0,0x2ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 93, "line": 1056, "offset": 59102}, "start": {"col": 92, "line": 1056, "offset": 59101}}, "$DST": {"abstract_content": "(void*(int&local_69c+1", "end": {"col": 90, "line": 1056, "offset": 59099}, "start": {"col": 62, "line": 1056, "offset": 59071}}, "$LEN": {"abstract_content": "0x2ff", "end": {"col": 99, "line": 1056, "offset": 59108}, "start": {"col": 94, "line": 1056, "offset": 59103}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 55, "line": 1056, "offset": 59064}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 100, "line": 1058, "offset": 59298}, "extra": {"engine_kind": "OSS", "fingerprint": "8570d2a20cbbb69f0d958f381eab6b4e64ca64e2a6eb8d59c83b63b6e720917e492752304d51cde9cf550532b7b982b489c00b21c4f3ee9aca411f6be7dc05f2_7", "is_ignored": false, "lines": "                                                      memset((void *)((int)&local_39c + 1),0,0x2ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 93, "line": 1058, "offset": 59291}, "start": {"col": 92, "line": 1058, "offset": 59290}}, "$DST": {"abstract_content": "(void*(int&local_39c+1", "end": {"col": 90, "line": 1058, "offset": 59288}, "start": {"col": 62, "line": 1058, "offset": 59260}}, "$LEN": {"abstract_content": "0x2ff", "end": {"col": 99, "line": 1058, "offset": 59297}, "start": {"col": 94, "line": 1058, "offset": 59292}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 55, "line": 1058, "offset": 59253}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf", "end": {"col": 61, "line": 1064, "offset": 59860}, "extra": {"engine_kind": "OSS", "fingerprint": "1e339081a84f03616ca91cb59d37b5be433026803ac8531592f1fbe64d478e2ff090eb62ed72f94c0ff3bd6e07d2374bdf99176351c394876a139d3405d3f24a_3", "is_ignored": false, "lines": "                                                      sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,2,local_70,piVar17[-0x12],0,&local_69c,&local_39c\n                                                  ,*piVar17);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 99, "line": 1, "offset": 98}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "local_94", "end": {"col": 71, "line": 1061, "offset": 59548}, "start": {"col": 63, "line": 1061, "offset": 59540}}, "$FMT": {"abstract_content": "\"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"", "end": {"col": 149, "line": 1062, "offset": 59698}, "start": {"col": 51, "line": 1062, "offset": 59600}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 55, "line": 1061, "offset": 59532}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 61, "line": 1064, "offset": 59860}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_18", "is_ignored": false, "lines": "                                                      sprintf(local_94,\n                                                  \"/usr/sbin/msger eventd 0 eiotvideocliptrigger 1 \\\"%d %s %d %d %s %s %d\\\" 2>/dev/null 1>/dev/null\"\n                                                  ,2,local_70,piVar17[-0x12],0,&local_69c,&local_39c\n                                                  ,*piVar17);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 62, "line": 1061, "offset": 59539}, "start": {"col": 55, "line": 1061, "offset": 59532}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 55, "line": 1061, "offset": 59532}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-command-injection", "end": {"col": 67, "line": 1065, "offset": 59928}, "extra": {"engine_kind": "OSS", "fingerprint": "be0c8defedf93a9e904f039d75b140a7098658864ca66327f494817864df77cede87337ec1689e1894ee048d4cbbf803096b27b0cbea98c64cb5e3dbf99a21e7_17", "is_ignored": false, "lines": "                                                  system(local_94);", "message": "The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/78", "https://cwe.mitre.org/data/definitions/88", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 1065, "offset": 59912}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 67, "line": 1065, "offset": 59928}, "extra": {"engine_kind": "OSS", "fingerprint": "24dc9392550c42ea4f76188348b86a3f2e7df22ef9f4b1cdd0beec776a4c4866f6795d2a4e0b71a6c185633cdf4725ec1ac1613ccbe3bd01378d5ef2a3619970_17", "is_ignored": false, "lines": "                                                  system(local_94);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 57, "line": 1065, "offset": 59918}, "start": {"col": 51, "line": 1065, "offset": 59912}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 51, "line": 1065, "offset": 59912}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 72, "line": 1105, "offset": 62859}, "extra": {"engine_kind": "OSS", "fingerprint": "19ba593b6527ab822484dbae35dd244f76cddf945d6a83ba66daf402d5fe8a3c430820e988ea4174e90f56effcdebd5538fde6bc005656cc45f97e61373855e7_0", "is_ignored": false, "lines": "                                                memset(local_94,0,0x81);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 66, "line": 1105, "offset": 62853}, "start": {"col": 65, "line": 1105, "offset": 62852}}, "$DST": {"abstract_content": "local_94", "end": {"col": 64, "line": 1105, "offset": 62851}, "start": {"col": 56, "line": 1105, "offset": 62843}}, "$LEN": {"abstract_content": "0x81", "end": {"col": 71, "line": 1105, "offset": 62858}, "start": {"col": 67, "line": 1105, "offset": 62854}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 49, "line": 1105, "offset": 62836}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 98, "line": 1113, "offset": 63442}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_19", "is_ignored": false, "lines": "                                                sprintf((char *)&local_39c,\"%ld\",local_69c._0_4_);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 56, "line": 1113, "offset": 63400}, "start": {"col": 49, "line": 1113, "offset": 63393}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 49, "line": 1113, "offset": 63393}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 40, "line": 1175, "offset": 67197}, "extra": {"engine_kind": "OSS", "fingerprint": "2a373070bde4d72baad48c943ae6885608d4bc75b4e16a2ddf125cea8b53fceab2497cb35ae7bd057f85cd6390492034870f5278994814408b4d3f5c31b212b4_0", "is_ignored": false, "lines": "              memset(&local_79c,0,0x81);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 34, "line": 1175, "offset": 67191}, "start": {"col": 33, "line": 1175, "offset": 67190}}, "$DST": {"abstract_content": "&local_79c", "end": {"col": 32, "line": 1175, "offset": 67189}, "start": {"col": 22, "line": 1175, "offset": 67179}}, "$LEN": {"abstract_content": "0x81", "end": {"col": 39, "line": 1175, "offset": 67196}, "start": {"col": 35, "line": 1175, "offset": 67192}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 15, "line": 1175, "offset": 67172}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 64, "line": 1182, "offset": 67480}, "extra": {"engine_kind": "OSS", "fingerprint": "0a08772a33009cba655ce8db4b12a90a6af0f54c9552514ebd1d98b8ac5bc22015102f405a00b3e61a70dfa142f251b07eed189014fbb861aef1ae2907aa0052_20", "is_ignored": false, "lines": "              sprintf((char *)&local_39c,\"%ld\",local_69c._0_4_);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 22, "line": 1182, "offset": 67438}, "start": {"col": 15, "line": 1182, "offset": 67431}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/PushDCHEventNotifyCheck_00407210.c", "start": {"col": 15, "line": 1182, "offset": 67431}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 58, "offset": 1116}, "extra": {"engine_kind": "OSS", "fingerprint": "8b2b2d99f5be0b0c38ec9b89f3fda823e3412bf7d2d9518218424ecba698a14f757428e7da7fcfd0b88d68c32634b36d985f87ed7e987538f48c057ef69f551d_0", "is_ignored": false, "lines": "  memset(auStack_287,0,0x1ff);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 23, "line": 58, "offset": 1109}, "start": {"col": 22, "line": 58, "offset": 1108}}, "$DST": {"abstract_content": "auStack_287", "end": {"col": 21, "line": 58, "offset": 1107}, "start": {"col": 10, "line": 58, "offset": 1096}}, "$LEN": {"abstract_content": "0x1ff", "end": {"col": 29, "line": 58, "offset": 1115}, "start": {"col": 24, "line": 58, "offset": 1110}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 3, "line": 58, "offset": 1089}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 67, "offset": 1396}, "extra": {"engine_kind": "OSS", "fingerprint": "45fdc3263674b53ec34a446893ea83cf490487c0eb52b2750ed089a1d550376c7f1c83ae219881a64751a996aebcf584c5acafb510dbc442c80b76c335649065_0", "is_ignored": false, "lines": "    memset(aiStack_55888,0,0x55600);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 27, "line": 67, "offset": 1387}, "start": {"col": 26, "line": 67, "offset": 1386}}, "$DST": {"abstract_content": "aiStack_55888", "end": {"col": 25, "line": 67, "offset": 1385}, "start": {"col": 12, "line": 67, "offset": 1372}}, "$LEN": {"abstract_content": "0x55600", "end": {"col": 35, "line": 67, "offset": 1395}, "start": {"col": 28, "line": 67, "offset": 1388}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 5, "line": 67, "offset": 1365}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 77, "offset": 1622}, "extra": {"engine_kind": "OSS", "fingerprint": "45fdc3263674b53ec34a446893ea83cf490487c0eb52b2750ed089a1d550376c7f1c83ae219881a64751a996aebcf584c5acafb510dbc442c80b76c335649065_1", "is_ignored": false, "lines": "    memset(aiStack_55888,0,0x55600);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 27, "line": 77, "offset": 1613}, "start": {"col": 26, "line": 77, "offset": 1612}}, "$DST": {"abstract_content": "aiStack_55888", "end": {"col": 25, "line": 77, "offset": 1611}, "start": {"col": 12, "line": 77, "offset": 1598}}, "$LEN": {"abstract_content": "0x55600", "end": {"col": 35, "line": 77, "offset": 1621}, "start": {"col": 28, "line": 77, "offset": 1614}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 5, "line": 77, "offset": 1591}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 33, "line": 91, "offset": 2038}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_0", "is_ignored": false, "lines": "      memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 26, "line": 91, "offset": 2031}, "start": {"col": 25, "line": 91, "offset": 2030}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 24, "line": 91, "offset": 2029}, "start": {"col": 14, "line": 91, "offset": 2019}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 32, "line": 91, "offset": 2037}, "start": {"col": 27, "line": 91, "offset": 2032}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 7, "line": 91, "offset": 2012}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 33, "line": 100, "offset": 2286}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_1", "is_ignored": false, "lines": "      memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 26, "line": 100, "offset": 2279}, "start": {"col": 25, "line": 100, "offset": 2278}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 24, "line": 100, "offset": 2277}, "start": {"col": 14, "line": 100, "offset": 2267}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 32, "line": 100, "offset": 2285}, "start": {"col": 27, "line": 100, "offset": 2280}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 7, "line": 100, "offset": 2260}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 33, "line": 114, "offset": 2645}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_2", "is_ignored": false, "lines": "      memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 26, "line": 114, "offset": 2638}, "start": {"col": 25, "line": 114, "offset": 2637}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 24, "line": 114, "offset": 2636}, "start": {"col": 14, "line": 114, "offset": 2626}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 32, "line": 114, "offset": 2644}, "start": {"col": 27, "line": 114, "offset": 2639}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 7, "line": 114, "offset": 2619}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 80, "line": 117, "offset": 2832}, "extra": {"engine_kind": "OSS", "fingerprint": "3be241920853f6c1e05810bb21b5d2454b8e3b8d5263a85a5080d4b15149645acdd8f1b7796bac9a6aa0a30b7757e2627f6f3458c72b8d6dae6570f6e5b65423_0", "is_ignored": false, "lines": "        strcpy((char *)(aiStack_55888 + (local_40 * 0x556 + 1) * 2),&local_288);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 9, "line": 117, "offset": 2761}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 80, "line": 117, "offset": 2832}, "extra": {"engine_kind": "OSS", "fingerprint": "093d5703230c9a4fcb07fdf027d102eca934300924867b00864d78b8432b9c2ac15e8151eb009dead613b312e7e949bc64d570a5cf445e996764e09bab23e131_0", "is_ignored": false, "lines": "        strcpy((char *)(aiStack_55888 + (local_40 * 0x556 + 1) * 2),&local_288);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 15, "line": 117, "offset": 2767}, "start": {"col": 9, "line": 117, "offset": 2761}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 9, "line": 117, "offset": 2761}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 33, "line": 122, "offset": 2967}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_3", "is_ignored": false, "lines": "      memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 26, "line": 122, "offset": 2960}, "start": {"col": 25, "line": 122, "offset": 2959}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 24, "line": 122, "offset": 2958}, "start": {"col": 14, "line": 122, "offset": 2948}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 32, "line": 122, "offset": 2966}, "start": {"col": 27, "line": 122, "offset": 2961}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 7, "line": 122, "offset": 2941}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 61, "line": 125, "offset": 3135}, "extra": {"engine_kind": "OSS", "fingerprint": "3be241920853f6c1e05810bb21b5d2454b8e3b8d5263a85a5080d4b15149645acdd8f1b7796bac9a6aa0a30b7757e2627f6f3458c72b8d6dae6570f6e5b65423_1", "is_ignored": false, "lines": "        strcpy(acStack_5585f + local_40 * 0x2ab0,&local_288);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 9, "line": 125, "offset": 3083}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 61, "line": 125, "offset": 3135}, "extra": {"engine_kind": "OSS", "fingerprint": "093d5703230c9a4fcb07fdf027d102eca934300924867b00864d78b8432b9c2ac15e8151eb009dead613b312e7e949bc64d570a5cf445e996764e09bab23e131_1", "is_ignored": false, "lines": "        strcpy(acStack_5585f + local_40 * 0x2ab0,&local_288);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 15, "line": 125, "offset": 3089}, "start": {"col": 9, "line": 125, "offset": 3083}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 9, "line": 125, "offset": 3083}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 33, "line": 130, "offset": 3247}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_4", "is_ignored": false, "lines": "      memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 26, "line": 130, "offset": 3240}, "start": {"col": 25, "line": 130, "offset": 3239}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 24, "line": 130, "offset": 3238}, "start": {"col": 14, "line": 130, "offset": 3228}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 32, "line": 130, "offset": 3246}, "start": {"col": 27, "line": 130, "offset": 3241}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 7, "line": 130, "offset": 3221}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 159, "offset": 4186}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_5", "is_ignored": false, "lines": "            memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 32, "line": 159, "offset": 4179}, "start": {"col": 31, "line": 159, "offset": 4178}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 30, "line": 159, "offset": 4177}, "start": {"col": 20, "line": 159, "offset": 4167}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 38, "line": 159, "offset": 4185}, "start": {"col": 33, "line": 159, "offset": 4180}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 13, "line": 159, "offset": 4160}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 95, "line": 162, "offset": 4398}, "extra": {"engine_kind": "OSS", "fingerprint": "3be241920853f6c1e05810bb21b5d2454b8e3b8d5263a85a5080d4b15149645acdd8f1b7796bac9a6aa0a30b7757e2627f6f3458c72b8d6dae6570f6e5b65423_2", "is_ignored": false, "lines": "              strcpy((char *)(aiStack_55888 + iVar2 * 0xaac + iVar8 * 0x29 + 0x1c),&local_288);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 15, "line": 162, "offset": 4318}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 95, "line": 162, "offset": 4398}, "extra": {"engine_kind": "OSS", "fingerprint": "093d5703230c9a4fcb07fdf027d102eca934300924867b00864d78b8432b9c2ac15e8151eb009dead613b312e7e949bc64d570a5cf445e996764e09bab23e131_2", "is_ignored": false, "lines": "              strcpy((char *)(aiStack_55888 + iVar2 * 0xaac + iVar8 * 0x29 + 0x1c),&local_288);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 21, "line": 162, "offset": 4324}, "start": {"col": 15, "line": 162, "offset": 4318}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 15, "line": 162, "offset": 4318}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 167, "offset": 4540}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_6", "is_ignored": false, "lines": "            memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 32, "line": 167, "offset": 4533}, "start": {"col": 31, "line": 167, "offset": 4532}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 30, "line": 167, "offset": 4531}, "start": {"col": 20, "line": 167, "offset": 4521}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 38, "line": 167, "offset": 4539}, "start": {"col": 33, "line": 167, "offset": 4534}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 13, "line": 167, "offset": 4514}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 176, "offset": 4850}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_7", "is_ignored": false, "lines": "            memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 32, "line": 176, "offset": 4843}, "start": {"col": 31, "line": 176, "offset": 4842}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 30, "line": 176, "offset": 4841}, "start": {"col": 20, "line": 176, "offset": 4831}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 38, "line": 176, "offset": 4849}, "start": {"col": 33, "line": 176, "offset": 4844}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 13, "line": 176, "offset": 4824}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 95, "line": 179, "offset": 5057}, "extra": {"engine_kind": "OSS", "fingerprint": "3be241920853f6c1e05810bb21b5d2454b8e3b8d5263a85a5080d4b15149645acdd8f1b7796bac9a6aa0a30b7757e2627f6f3458c72b8d6dae6570f6e5b65423_3", "is_ignored": false, "lines": "              strcpy((char *)(aiStack_55888 + iVar2 * 0xaac + iVar8 * 0x29 + 0x22),&local_288);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 15, "line": 179, "offset": 4977}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 95, "line": 179, "offset": 5057}, "extra": {"engine_kind": "OSS", "fingerprint": "093d5703230c9a4fcb07fdf027d102eca934300924867b00864d78b8432b9c2ac15e8151eb009dead613b312e7e949bc64d570a5cf445e996764e09bab23e131_3", "is_ignored": false, "lines": "              strcpy((char *)(aiStack_55888 + iVar2 * 0xaac + iVar8 * 0x29 + 0x22),&local_288);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 21, "line": 179, "offset": 4983}, "start": {"col": 15, "line": 179, "offset": 4977}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 15, "line": 179, "offset": 4977}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 184, "offset": 5199}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_8", "is_ignored": false, "lines": "            memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 32, "line": 184, "offset": 5192}, "start": {"col": 31, "line": 184, "offset": 5191}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 30, "line": 184, "offset": 5190}, "start": {"col": 20, "line": 184, "offset": 5180}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 38, "line": 184, "offset": 5198}, "start": {"col": 33, "line": 184, "offset": 5193}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 13, "line": 184, "offset": 5173}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 70, "line": 187, "offset": 5381}, "extra": {"engine_kind": "OSS", "fingerprint": "3be241920853f6c1e05810bb21b5d2454b8e3b8d5263a85a5080d4b15149645acdd8f1b7796bac9a6aa0a30b7757e2627f6f3458c72b8d6dae6570f6e5b65423_4", "is_ignored": false, "lines": "              strcpy(acStack_557df + iVar8 * 0xa4 + iVar4,&local_288);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 15, "line": 187, "offset": 5326}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 70, "line": 187, "offset": 5381}, "extra": {"engine_kind": "OSS", "fingerprint": "093d5703230c9a4fcb07fdf027d102eca934300924867b00864d78b8432b9c2ac15e8151eb009dead613b312e7e949bc64d570a5cf445e996764e09bab23e131_4", "is_ignored": false, "lines": "              strcpy(acStack_557df + iVar8 * 0xa4 + iVar4,&local_288);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 21, "line": 187, "offset": 5332}, "start": {"col": 15, "line": 187, "offset": 5326}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 15, "line": 187, "offset": 5326}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 192, "offset": 5526}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_9", "is_ignored": false, "lines": "            memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 32, "line": 192, "offset": 5519}, "start": {"col": 31, "line": 192, "offset": 5518}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 30, "line": 192, "offset": 5517}, "start": {"col": 20, "line": 192, "offset": 5507}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 38, "line": 192, "offset": 5525}, "start": {"col": 33, "line": 192, "offset": 5520}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 13, "line": 192, "offset": 5500}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 201, "offset": 5824}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_10", "is_ignored": false, "lines": "            memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 32, "line": 201, "offset": 5817}, "start": {"col": 31, "line": 201, "offset": 5816}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 30, "line": 201, "offset": 5815}, "start": {"col": 20, "line": 201, "offset": 5805}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 38, "line": 201, "offset": 5823}, "start": {"col": 33, "line": 201, "offset": 5818}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 13, "line": 201, "offset": 5798}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 95, "line": 204, "offset": 6031}, "extra": {"engine_kind": "OSS", "fingerprint": "3be241920853f6c1e05810bb21b5d2454b8e3b8d5263a85a5080d4b15149645acdd8f1b7796bac9a6aa0a30b7757e2627f6f3458c72b8d6dae6570f6e5b65423_5", "is_ignored": false, "lines": "              strcpy((char *)(aiStack_55888 + iVar2 * 0xaac + iVar8 * 0x29 + 0x34),&local_288);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 15, "line": 204, "offset": 5951}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 95, "line": 204, "offset": 6031}, "extra": {"engine_kind": "OSS", "fingerprint": "093d5703230c9a4fcb07fdf027d102eca934300924867b00864d78b8432b9c2ac15e8151eb009dead613b312e7e949bc64d570a5cf445e996764e09bab23e131_5", "is_ignored": false, "lines": "              strcpy((char *)(aiStack_55888 + iVar2 * 0xaac + iVar8 * 0x29 + 0x34),&local_288);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 21, "line": 204, "offset": 5957}, "start": {"col": 15, "line": 204, "offset": 5951}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 15, "line": 204, "offset": 5951}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 235, "offset": 7023}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_11", "is_ignored": false, "lines": "            memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 32, "line": 235, "offset": 7016}, "start": {"col": 31, "line": 235, "offset": 7015}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 30, "line": 235, "offset": 7014}, "start": {"col": 20, "line": 235, "offset": 7004}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 38, "line": 235, "offset": 7022}, "start": {"col": 33, "line": 235, "offset": 7017}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 13, "line": 235, "offset": 6997}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 96, "line": 238, "offset": 7236}, "extra": {"engine_kind": "OSS", "fingerprint": "3be241920853f6c1e05810bb21b5d2454b8e3b8d5263a85a5080d4b15149645acdd8f1b7796bac9a6aa0a30b7757e2627f6f3458c72b8d6dae6570f6e5b65423_6", "is_ignored": false, "lines": "              strcpy((char *)(aiStack_55888 + iVar2 * 0xaac + iVar9 * 0x2b + 0x53c),&local_288);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 15, "line": 238, "offset": 7155}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 96, "line": 238, "offset": 7236}, "extra": {"engine_kind": "OSS", "fingerprint": "093d5703230c9a4fcb07fdf027d102eca934300924867b00864d78b8432b9c2ac15e8151eb009dead613b312e7e949bc64d570a5cf445e996764e09bab23e131_6", "is_ignored": false, "lines": "              strcpy((char *)(aiStack_55888 + iVar2 * 0xaac + iVar9 * 0x2b + 0x53c),&local_288);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 21, "line": 238, "offset": 7161}, "start": {"col": 15, "line": 238, "offset": 7155}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 15, "line": 238, "offset": 7155}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 243, "offset": 7378}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_12", "is_ignored": false, "lines": "            memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 32, "line": 243, "offset": 7371}, "start": {"col": 31, "line": 243, "offset": 7370}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 30, "line": 243, "offset": 7369}, "start": {"col": 20, "line": 243, "offset": 7359}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 38, "line": 243, "offset": 7377}, "start": {"col": 33, "line": 243, "offset": 7372}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 13, "line": 243, "offset": 7352}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 252, "offset": 7688}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_13", "is_ignored": false, "lines": "            memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 32, "line": 252, "offset": 7681}, "start": {"col": 31, "line": 252, "offset": 7680}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 30, "line": 252, "offset": 7679}, "start": {"col": 20, "line": 252, "offset": 7669}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 38, "line": 252, "offset": 7687}, "start": {"col": 33, "line": 252, "offset": 7682}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 13, "line": 252, "offset": 7662}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 96, "line": 255, "offset": 7896}, "extra": {"engine_kind": "OSS", "fingerprint": "3be241920853f6c1e05810bb21b5d2454b8e3b8d5263a85a5080d4b15149645acdd8f1b7796bac9a6aa0a30b7757e2627f6f3458c72b8d6dae6570f6e5b65423_7", "is_ignored": false, "lines": "              strcpy((char *)(aiStack_55888 + iVar2 * 0xaac + iVar9 * 0x2b + 0x542),&local_288);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 15, "line": 255, "offset": 7815}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 96, "line": 255, "offset": 7896}, "extra": {"engine_kind": "OSS", "fingerprint": "093d5703230c9a4fcb07fdf027d102eca934300924867b00864d78b8432b9c2ac15e8151eb009dead613b312e7e949bc64d570a5cf445e996764e09bab23e131_7", "is_ignored": false, "lines": "              strcpy((char *)(aiStack_55888 + iVar2 * 0xaac + iVar9 * 0x2b + 0x542),&local_288);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 21, "line": 255, "offset": 7821}, "start": {"col": 15, "line": 255, "offset": 7815}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 15, "line": 255, "offset": 7815}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 260, "offset": 8038}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_14", "is_ignored": false, "lines": "            memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 32, "line": 260, "offset": 8031}, "start": {"col": 31, "line": 260, "offset": 8030}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 30, "line": 260, "offset": 8029}, "start": {"col": 20, "line": 260, "offset": 8019}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 38, "line": 260, "offset": 8037}, "start": {"col": 33, "line": 260, "offset": 8032}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 13, "line": 260, "offset": 8012}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 70, "line": 263, "offset": 8220}, "extra": {"engine_kind": "OSS", "fingerprint": "3be241920853f6c1e05810bb21b5d2454b8e3b8d5263a85a5080d4b15149645acdd8f1b7796bac9a6aa0a30b7757e2627f6f3458c72b8d6dae6570f6e5b65423_8", "is_ignored": false, "lines": "              strcpy(acStack_5435f + iVar9 * 0xac + iVar8,&local_288);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 15, "line": 263, "offset": 8165}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 70, "line": 263, "offset": 8220}, "extra": {"engine_kind": "OSS", "fingerprint": "093d5703230c9a4fcb07fdf027d102eca934300924867b00864d78b8432b9c2ac15e8151eb009dead613b312e7e949bc64d570a5cf445e996764e09bab23e131_8", "is_ignored": false, "lines": "              strcpy(acStack_5435f + iVar9 * 0xac + iVar8,&local_288);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 21, "line": 263, "offset": 8171}, "start": {"col": 15, "line": 263, "offset": 8165}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 15, "line": 263, "offset": 8165}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 268, "offset": 8365}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_15", "is_ignored": false, "lines": "            memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 32, "line": 268, "offset": 8358}, "start": {"col": 31, "line": 268, "offset": 8357}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 30, "line": 268, "offset": 8356}, "start": {"col": 20, "line": 268, "offset": 8346}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 38, "line": 268, "offset": 8364}, "start": {"col": 33, "line": 268, "offset": 8359}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 13, "line": 268, "offset": 8339}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 277, "offset": 8675}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_16", "is_ignored": false, "lines": "            memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 32, "line": 277, "offset": 8668}, "start": {"col": 31, "line": 277, "offset": 8667}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 30, "line": 277, "offset": 8666}, "start": {"col": 20, "line": 277, "offset": 8656}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 38, "line": 277, "offset": 8674}, "start": {"col": 33, "line": 277, "offset": 8669}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 13, "line": 277, "offset": 8649}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 96, "line": 280, "offset": 8883}, "extra": {"engine_kind": "OSS", "fingerprint": "3be241920853f6c1e05810bb21b5d2454b8e3b8d5263a85a5080d4b15149645acdd8f1b7796bac9a6aa0a30b7757e2627f6f3458c72b8d6dae6570f6e5b65423_9", "is_ignored": false, "lines": "              strcpy((char *)(aiStack_55888 + iVar2 * 0xaac + iVar9 * 0x2b + 0x554),&local_288);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 15, "line": 280, "offset": 8802}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 96, "line": 280, "offset": 8883}, "extra": {"engine_kind": "OSS", "fingerprint": "093d5703230c9a4fcb07fdf027d102eca934300924867b00864d78b8432b9c2ac15e8151eb009dead613b312e7e949bc64d570a5cf445e996764e09bab23e131_9", "is_ignored": false, "lines": "              strcpy((char *)(aiStack_55888 + iVar2 * 0xaac + iVar9 * 0x2b + 0x554),&local_288);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 21, "line": 280, "offset": 8808}, "start": {"col": 15, "line": 280, "offset": 8802}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 15, "line": 280, "offset": 8802}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 285, "offset": 9025}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_17", "is_ignored": false, "lines": "            memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 32, "line": 285, "offset": 9018}, "start": {"col": 31, "line": 285, "offset": 9017}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 30, "line": 285, "offset": 9016}, "start": {"col": 20, "line": 285, "offset": 9006}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 38, "line": 285, "offset": 9024}, "start": {"col": 33, "line": 285, "offset": 9019}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 13, "line": 285, "offset": 8999}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 33, "line": 305, "offset": 9595}, "extra": {"engine_kind": "OSS", "fingerprint": "e1e8fb132d5a469882a60886def1f146587611913f123ba8bd02a755fb2bdeae0832a86f3cc7ed10cdce700c5a3a0ebec393280ebdba060ab7dfd6c3921bb1dd_18", "is_ignored": false, "lines": "      memset(&local_288,0,0x200);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 26, "line": 305, "offset": 9588}, "start": {"col": 25, "line": 305, "offset": 9587}}, "$DST": {"abstract_content": "&local_288", "end": {"col": 24, "line": 305, "offset": 9586}, "start": {"col": 14, "line": 305, "offset": 9576}}, "$LEN": {"abstract_content": "0x200", "end": {"col": 32, "line": 305, "offset": 9594}, "start": {"col": 27, "line": 305, "offset": 9589}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 7, "line": 305, "offset": 9569}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 78, "line": 308, "offset": 9781}, "extra": {"engine_kind": "OSS", "fingerprint": "3be241920853f6c1e05810bb21b5d2454b8e3b8d5263a85a5080d4b15149645acdd8f1b7796bac9a6aa0a30b7757e2627f6f3458c72b8d6dae6570f6e5b65423_10", "is_ignored": false, "lines": "        strcpy((char *)(aiStack_55888 + local_40 * 0xaac + 0xa9e),&local_288);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 9, "line": 308, "offset": 9712}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 78, "line": 308, "offset": 9781}, "extra": {"engine_kind": "OSS", "fingerprint": "093d5703230c9a4fcb07fdf027d102eca934300924867b00864d78b8432b9c2ac15e8151eb009dead613b312e7e949bc64d570a5cf445e996764e09bab23e131_10", "is_ignored": false, "lines": "        strcpy((char *)(aiStack_55888 + local_40 * 0xaac + 0xa9e),&local_288);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 15, "line": 308, "offset": 9718}, "start": {"col": 9, "line": 308, "offset": 9712}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 9, "line": 308, "offset": 9712}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 88, "line": 522, "offset": 19250}, "extra": {"engine_kind": "OSS", "fingerprint": "2d8361467506914a0583ec854c6bc6b77e17d3f1c82d2eda672592b6b6c1b62d618f4a6d35d6e6f4c048cd8b63e002877e65426e8fd761a529f1c2e4520bbce5_0", "is_ignored": false, "lines": "      system(\"/usr/sbin/msger eventd 0 eiotenablesnapshot 0 1 2>/dev/null 1>/dev/null\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 13, "line": 522, "offset": 19175}, "start": {"col": 7, "line": 522, "offset": 19169}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 7, "line": 522, "offset": 19169}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 84, "line": 526, "offset": 19370}, "extra": {"engine_kind": "OSS", "fingerprint": "2d8361467506914a0583ec854c6bc6b77e17d3f1c82d2eda672592b6b6c1b62d618f4a6d35d6e6f4c048cd8b63e002877e65426e8fd761a529f1c2e4520bbce5_1", "is_ignored": false, "lines": "  system(\"/usr/sbin/msger eventd 0 eiotenablesnapshot 0 0 2>/dev/null 1>/dev/null\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 9, "line": 526, "offset": 19295}, "start": {"col": 3, "line": 526, "offset": 19289}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 3, "line": 526, "offset": 19289}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 87, "line": 529, "offset": 19495}, "extra": {"engine_kind": "OSS", "fingerprint": "2d8361467506914a0583ec854c6bc6b77e17d3f1c82d2eda672592b6b6c1b62d618f4a6d35d6e6f4c048cd8b63e002877e65426e8fd761a529f1c2e4520bbce5_2", "is_ignored": false, "lines": "    system(\"/usr/sbin/msger eventd 0 eiotenablevideoclip 0 0 2>/dev/null 1>/dev/null\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 11, "line": 529, "offset": 19419}, "start": {"col": 5, "line": 529, "offset": 19413}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 5, "line": 529, "offset": 19413}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 87, "line": 532, "offset": 19596}, "extra": {"engine_kind": "OSS", "fingerprint": "2d8361467506914a0583ec854c6bc6b77e17d3f1c82d2eda672592b6b6c1b62d618f4a6d35d6e6f4c048cd8b63e002877e65426e8fd761a529f1c2e4520bbce5_3", "is_ignored": false, "lines": "    system(\"/usr/sbin/msger eventd 0 eiotenablevideoclip 0 1 2>/dev/null 1>/dev/null\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 11, "line": 532, "offset": 19520}, "start": {"col": 5, "line": 532, "offset": 19514}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 5, "line": 532, "offset": 19514}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 90, "line": 535, "offset": 19714}, "extra": {"engine_kind": "OSS", "fingerprint": "2d8361467506914a0583ec854c6bc6b77e17d3f1c82d2eda672592b6b6c1b62d618f4a6d35d6e6f4c048cd8b63e002877e65426e8fd761a529f1c2e4520bbce5_4", "is_ignored": false, "lines": "    system(\"/usr/sbin/msger eventd 0 eiotenablenotification 0 0 2>/dev/null 1>/dev/null\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 11, "line": 535, "offset": 19635}, "start": {"col": 5, "line": 535, "offset": 19629}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 5, "line": 535, "offset": 19629}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 90, "line": 538, "offset": 19818}, "extra": {"engine_kind": "OSS", "fingerprint": "2d8361467506914a0583ec854c6bc6b77e17d3f1c82d2eda672592b6b6c1b62d618f4a6d35d6e6f4c048cd8b63e002877e65426e8fd761a529f1c2e4520bbce5_5", "is_ignored": false, "lines": "    system(\"/usr/sbin/msger eventd 0 eiotenablenotification 0 1 2>/dev/null 1>/dev/null\");", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "system", "end": {"col": 11, "line": 538, "offset": 19739}, "start": {"col": 5, "line": 538, "offset": 19733}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ReviewPolicyFromFile_00402fa8.c", "start": {"col": 5, "line": 538, "offset": 19733}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 31, "line": 17, "offset": 372}, "extra": {"engine_kind": "OSS", "fingerprint": "77d77a827f54ea6d54a24fb5bd256a2cdfeb733124ad1ea57bd2ba2342ee3cbf2e7fc734b15a9152cf023b44fe1c4cdfd40fefbd0a819ffa9086812f763d78fa_0", "is_ignored": false, "lines": "  memset(auStack_148bf,0,0x14);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 25, "line": 17, "offset": 366}, "start": {"col": 24, "line": 17, "offset": 365}}, "$DST": {"abstract_content": "auStack_148bf", "end": {"col": 23, "line": 17, "offset": 364}, "start": {"col": 10, "line": 17, "offset": 351}}, "$LEN": {"abstract_content": "0x14", "end": {"col": 30, "line": 17, "offset": 371}, "start": {"col": 26, "line": 17, "offset": 367}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c", "start": {"col": 3, "line": 17, "offset": 344}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 31, "line": 19, "offset": 424}, "extra": {"engine_kind": "OSS", "fingerprint": "c64b08d412f6995ec808dbf4748c38f6db661363a5c0a42c2cfe705dfb2237bf47287789b99e2021f0fa9cc52a8e46e872a7fb9dd0417477e0fdb1ecacf84220_0", "is_ignored": false, "lines": "  memset(auStack_148a7,0,0x14);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 25, "line": 19, "offset": 418}, "start": {"col": 24, "line": 19, "offset": 417}}, "$DST": {"abstract_content": "auStack_148a7", "end": {"col": 23, "line": 19, "offset": 416}, "start": {"col": 10, "line": 19, "offset": 403}}, "$LEN": {"abstract_content": "0x14", "end": {"col": 30, "line": 19, "offset": 423}, "start": {"col": 26, "line": 19, "offset": 419}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c", "start": {"col": 3, "line": 19, "offset": 396}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 34, "line": 20, "offset": 459}, "extra": {"engine_kind": "OSS", "fingerprint": "8e868566a12bec7474d68c1d69d2788d0a7a8dfc7c45937d77ddad3dbc2af5ecf04de2d40f358a2b26b86e2e859a2d6f943b9db5400e22dc0e77db6f69b9cefa_0", "is_ignored": false, "lines": "  memset(acStack_14880,0,0x14868);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 25, "line": 20, "offset": 450}, "start": {"col": 24, "line": 20, "offset": 449}}, "$DST": {"abstract_content": "acStack_14880", "end": {"col": 23, "line": 20, "offset": 448}, "start": {"col": 10, "line": 20, "offset": 435}}, "$LEN": {"abstract_content": "0x14868", "end": {"col": 33, "line": 20, "offset": 458}, "start": {"col": 26, "line": 20, "offset": 451}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c", "start": {"col": 3, "line": 20, "offset": 428}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 50, "line": 24, "offset": 621}, "extra": {"engine_kind": "OSS", "fingerprint": "e31d80a00976d7868f3e60f463bccf9c35d4631b6acd67b634dfd3cc4063915e54be628014ea1665aef3a4e8c10dc659e17ab6733db7a9cbbdad0f6ec9be3e97_0", "is_ignored": false, "lines": "  snprintf(acStack_14880,0x23,\"%s\",&uStack_148c0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 11, "line": 24, "offset": 582}, "start": {"col": 3, "line": 24, "offset": 574}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c", "start": {"col": 3, "line": 24, "offset": 574}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 50, "line": 24, "offset": 621}, "extra": {"engine_kind": "OSS", "fingerprint": "8bb7098c0f28efd36aaefcd7a973ceb856f395c16a606b63759f2d40f144ccb58f22cafcd5392987ef31ff63c0a20e5e9943cc682857803d83b69e33b3f8f984_0", "is_ignored": false, "lines": "  snprintf(acStack_14880,0x23,\"%s\",&uStack_148c0);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$BUF": {"abstract_content": "acStack_14880", "end": {"col": 25, "line": 24, "offset": 596}, "start": {"col": 12, "line": 24, "offset": 583}}, "$LEN": {"abstract_content": "0x23", "end": {"col": 30, "line": 24, "offset": 601}, "start": {"col": 26, "line": 24, "offset": 597}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c", "start": {"col": 3, "line": 24, "offset": 574}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 50, "line": 25, "offset": 672}, "extra": {"engine_kind": "OSS", "fingerprint": "e31d80a00976d7868f3e60f463bccf9c35d4631b6acd67b634dfd3cc4063915e54be628014ea1665aef3a4e8c10dc659e17ab6733db7a9cbbdad0f6ec9be3e97_1", "is_ignored": false, "lines": "  snprintf(acStack_1485c,0x23,\"%s\",&uStack_148a8);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 11, "line": 25, "offset": 633}, "start": {"col": 3, "line": 25, "offset": 625}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c", "start": {"col": 3, "line": 25, "offset": 625}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 50, "line": 25, "offset": 672}, "extra": {"engine_kind": "OSS", "fingerprint": "2798ddc1f75abdacf7ffd4faa9b5f26b0c7126f5b9d825f47e4294af6b661807cf8a53b077271560302cf8452759c090d0ab032348cd182b10cce2838c58bfcf_0", "is_ignored": false, "lines": "  snprintf(acStack_1485c,0x23,\"%s\",&uStack_148a8);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$BUF": {"abstract_content": "acStack_1485c", "end": {"col": 25, "line": 25, "offset": 647}, "start": {"col": 12, "line": 25, "offset": 634}}, "$LEN": {"abstract_content": "0x23", "end": {"col": 30, "line": 25, "offset": 652}, "start": {"col": 26, "line": 25, "offset": 648}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c", "start": {"col": 3, "line": 25, "offset": 625}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 29, "offset": 779}, "extra": {"engine_kind": "OSS", "fingerprint": "e31d80a00976d7868f3e60f463bccf9c35d4631b6acd67b634dfd3cc4063915e54be628014ea1665aef3a4e8c10dc659e17ab6733db7a9cbbdad0f6ec9be3e97_2", "is_ignored": false, "lines": "    snprintf(__s,0xb,\"%s\",auStack_14890);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 13, "line": 29, "offset": 751}, "start": {"col": 5, "line": 29, "offset": 743}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c", "start": {"col": 5, "line": 29, "offset": 743}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 41, "line": 29, "offset": 779}, "extra": {"engine_kind": "OSS", "fingerprint": "ec312e6ad0bccb77cc3917a452d47723af533105d80951dd8637a5cc0c50c444bd8e3acb4a1c198defce46ee19cf35c04084432e51eaa171d9ad2d526fd529a6_0", "is_ignored": false, "lines": "    snprintf(__s,0xb,\"%s\",auStack_14890);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$BUF": {"abstract_content": "__s", "end": {"col": 17, "line": 29, "offset": 755}, "propagated_value": {"svalue_abstract_content": "acStack_14838", "svalue_end": {"col": 22, "line": 26, "offset": 695}, "svalue_start": {"col": 9, "line": 26, "offset": 682}}, "start": {"col": 14, "line": 29, "offset": 752}}, "$LEN": {"abstract_content": "0xb", "end": {"col": 21, "line": 29, "offset": 759}, "start": {"col": 18, "line": 29, "offset": 756}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/create_hnap_login_info_00412848.c", "start": {"col": 5, "line": 29, "offset": 743}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 24, "line": 20, "offset": 381}, "extra": {"engine_kind": "OSS", "fingerprint": "c636f145b14e4601f541bb7077df9c3bc0e1c8dfdd0689a1a9f53aaad5836651b55230cd14c1bba22eac5fd977071efa69eeb5d8e62709d077fdfb51e918de08_0", "is_ignored": false, "lines": "  memset(puVar1,0,0x40);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 18, "line": 20, "offset": 375}, "start": {"col": 17, "line": 20, "offset": 374}}, "$DST": {"abstract_content": "puVar1", "end": {"col": 16, "line": 20, "offset": 373}, "propagated_value": {"svalue_abstract_content": "local_80", "svalue_end": {"col": 20, "line": 19, "offset": 356}, "svalue_start": {"col": 12, "line": 19, "offset": 348}}, "start": {"col": 10, "line": 20, "offset": 367}}, "$LEN": {"abstract_content": "0x40", "end": {"col": 23, "line": 20, "offset": 380}, "start": {"col": 19, "line": 20, "offset": 376}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/encrypt_00412d44.c", "start": {"col": 3, "line": 20, "offset": 360}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 43, "line": 29, "offset": 565}, "extra": {"engine_kind": "OSS", "fingerprint": "a49829c44f6ab1f01d10560aea8830eead5fb9ca3ce0f8adc5387db38df3894bc278122e0e448571c6a415ce6f25fbe821e06ede51a04b0234de619bab61f7f6_0", "is_ignored": false, "lines": "  memcpy(local_80 + 0x10,__block,__edflag);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 29, "offset": 531}, "start": {"col": 3, "line": 29, "offset": 525}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/encrypt_00412d44.c", "start": {"col": 3, "line": 29, "offset": 525}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 43, "line": 29, "offset": 565}, "extra": {"engine_kind": "OSS", "fingerprint": "66408b3216c9110ada7c03253a54c1a39b968fb00c95b4fdbf794199ce38d39642a644cbf3e1ec496cd7f011e37b65ecb945491127496a46e8dce89b2000cf4a_0", "is_ignored": false, "lines": "  memcpy(local_80 + 0x10,__block,__edflag);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$DST": {"abstract_content": "local_80+0x10", "end": {"col": 25, "line": 29, "offset": 547}, "start": {"col": 10, "line": 29, "offset": 532}}, "$LEN": {"abstract_content": "__edflag", "end": {"col": 42, "line": 29, "offset": 564}, "start": {"col": 34, "line": 29, "offset": 556}}, "$SRC": {"abstract_content": "__block", "end": {"col": 33, "line": 29, "offset": 555}, "start": {"col": 26, "line": 29, "offset": 548}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/encrypt_00412d44.c", "start": {"col": 3, "line": 29, "offset": 525}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 29, "line": 30, "offset": 595}, "extra": {"engine_kind": "OSS", "fingerprint": "a49829c44f6ab1f01d10560aea8830eead5fb9ca3ce0f8adc5387db38df3894bc278122e0e448571c6a415ce6f25fbe821e06ede51a04b0234de619bab61f7f6_1", "is_ignored": false, "lines": "  memcpy(puVar1,in_a2,in_a3);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 30, "offset": 575}, "start": {"col": 3, "line": 30, "offset": 569}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/encrypt_00412d44.c", "start": {"col": 3, "line": 30, "offset": 569}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-incorrect-unsigned-comparison", "end": {"col": 25, "line": 45, "offset": 1122}, "extra": {"engine_kind": "OSS", "fingerprint": "d2b809f7dd7c3b9be51e95dc7b22be005e7f2673a6f6f2b3713736eed75f8712e9693cad4adbb72b9485be4fe011244f822705d7d8d6382b2c98e36158bc620b_0", "is_ignored": false, "lines": "    if ((int)param_5 < 0) {", "message": "Checking if an unsigned variable is negative makes no sense and is usually a good indication that something is probably wrong with the code.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/697", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$UNSIGNED": {"abstract_content": "param_5", "end": {"col": 21, "line": 45, "offset": 1118}, "start": {"col": 14, "line": 45, "offset": 1111}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c", "start": {"col": 9, "line": 45, "offset": 1106}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 32, "line": 55, "offset": 1379}, "extra": {"engine_kind": "OSS", "fingerprint": "51e1e6c3fbf95f8836e5e9969d279b0916353f201f0f598df1c29dbec7b767629485706f16fe9ba8bfdb9a38be51c80204fd2b4a5016d9f1e02ed903c2fabc88_0", "is_ignored": false, "lines": "      memset(auStack_4b,0,0x1f);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 26, "line": 55, "offset": 1373}, "start": {"col": 25, "line": 55, "offset": 1372}}, "$DST": {"abstract_content": "auStack_4b", "end": {"col": 24, "line": 55, "offset": 1371}, "start": {"col": 14, "line": 55, "offset": 1361}}, "$LEN": {"abstract_content": "0x1f", "end": {"col": 31, "line": 55, "offset": 1378}, "start": {"col": 27, "line": 55, "offset": 1374}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c", "start": {"col": 7, "line": 55, "offset": 1354}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 40, "line": 72, "offset": 2105}, "extra": {"engine_kind": "OSS", "fingerprint": "624ae8e456f85a3f208012bf4757af61e38f1d06110344a8c0045e4356c1856227e65e79c211078fb818ae2b8af03a5eae361fd1b8ddb25e64c83aead39b3a95_0", "is_ignored": false, "lines": "      memcpy(puVar10 + 4,param_3,sVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 72, "offset": 2078}, "start": {"col": 7, "line": 72, "offset": 2072}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c", "start": {"col": 7, "line": 72, "offset": 2072}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 77, "offset": 2389}, "extra": {"engine_kind": "OSS", "fingerprint": "a1a3aec4b4e02cc9a977ab2316e2a7304f6fe84a1a046779e6ca487e16ff8ecf92afc1b2e39112c19adcae81d537b9f72ca653ecf93668c89e96e5f5388ce320_0", "is_ignored": false, "lines": "      sprintf(&local_4c,\"%d\",param_2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 14, "line": 77, "offset": 2365}, "start": {"col": 7, "line": 77, "offset": 2358}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c", "start": {"col": 7, "line": 77, "offset": 2358}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 42, "line": 84, "offset": 2633}, "extra": {"engine_kind": "OSS", "fingerprint": "624ae8e456f85a3f208012bf4757af61e38f1d06110344a8c0045e4356c1856227e65e79c211078fb818ae2b8af03a5eae361fd1b8ddb25e64c83aead39b3a95_1", "is_ignored": false, "lines": "      memcpy(puVar10 + 4,&local_4c,sVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 84, "offset": 2604}, "start": {"col": 7, "line": 84, "offset": 2598}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c", "start": {"col": 7, "line": 84, "offset": 2598}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 83, "line": 95, "offset": 3131}, "extra": {"engine_kind": "OSS", "fingerprint": "624ae8e456f85a3f208012bf4757af61e38f1d06110344a8c0045e4356c1856227e65e79c211078fb818ae2b8af03a5eae361fd1b8ddb25e64c83aead39b3a95_2", "is_ignored": false, "lines": "        memcpy((undefined *)((int)psVar7 + (ushort)psVar7[1] + 4),param_4,param_5);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 15, "line": 95, "offset": 3063}, "start": {"col": 9, "line": 95, "offset": 3057}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c", "start": {"col": 9, "line": 95, "offset": 3057}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 41, "line": 112, "offset": 3983}, "extra": {"engine_kind": "OSS", "fingerprint": "624ae8e456f85a3f208012bf4757af61e38f1d06110344a8c0045e4356c1856227e65e79c211078fb818ae2b8af03a5eae361fd1b8ddb25e64c83aead39b3a95_3", "is_ignored": false, "lines": "      memcpy(puVar10 + 4,local_90,sVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 112, "offset": 3955}, "start": {"col": 7, "line": 112, "offset": 3949}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c", "start": {"col": 7, "line": 112, "offset": 3949}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 50, "line": 114, "offset": 4074}, "extra": {"engine_kind": "OSS", "fingerprint": "624ae8e456f85a3f208012bf4757af61e38f1d06110344a8c0045e4356c1856227e65e79c211078fb818ae2b8af03a5eae361fd1b8ddb25e64c83aead39b3a95_4", "is_ignored": false, "lines": "      memcpy(puVar10 + 4 + sVar2,param_4,param_5);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 13, "line": 114, "offset": 4037}, "start": {"col": 7, "line": 114, "offset": 4031}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/fillEventMessageContent_00413878.c", "start": {"col": 7, "line": 114, "offset": 4031}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 30, "line": 30, "offset": 557}, "extra": {"engine_kind": "OSS", "fingerprint": "e8b0dc309cbe8d1ac74a7fc5c0dc464eaa88f20e16cb2cf468441ef5791485730e485347f701a82793811979020f7b7f42aa3a27b30dbf6a9f3c51687d03a962_0", "is_ignored": false, "lines": "  memset(local_b8 + 1,0,0x1f);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 24, "line": 30, "offset": 551}, "start": {"col": 23, "line": 30, "offset": 550}}, "$DST": {"abstract_content": "local_b8+1", "end": {"col": 22, "line": 30, "offset": 549}, "start": {"col": 10, "line": 30, "offset": 537}}, "$LEN": {"abstract_content": "0x1f", "end": {"col": 29, "line": 30, "offset": 556}, "start": {"col": 25, "line": 30, "offset": 552}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c", "start": {"col": 3, "line": 30, "offset": 530}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 29, "line": 36, "offset": 804}, "extra": {"engine_kind": "OSS", "fingerprint": "ed364300c144c81e5eed0cfb87d46dbf7751421c498a99b884ea9153e5e56d515d08d6248d11fda79a70f1fa98082c422a04c4328a3d1472404932fecd1e1d26_0", "is_ignored": false, "lines": "    strcpy(local_b8,param_1);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c", "start": {"col": 5, "line": 36, "offset": 780}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 29, "line": 36, "offset": 804}, "extra": {"engine_kind": "OSS", "fingerprint": "c1e04b6a919d564bde95667499439519d46dd6a871a44c97c5f616b0f7aa28a5a764b03fa55b6ae28b09ac0fbd90a7a6a6afdb610bef7f44d99dadf407ff0346_0", "is_ignored": false, "lines": "    strcpy(local_b8,param_1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 11, "line": 36, "offset": 786}, "start": {"col": 5, "line": 36, "offset": 780}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c", "start": {"col": 5, "line": 36, "offset": 780}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 79, "offset": 2214}, "extra": {"engine_kind": "OSS", "fingerprint": "9c4268a115ff36f773be9b302fc23dd5d1247824e613856465973365e6566d3a11aa4276393efe4d09da58e6d2598112ed31fba82ceed5f699cffc396a2ab7b5_0", "is_ignored": false, "lines": "          memset(auStack_87,0,0x1f);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 30, "line": 79, "offset": 2208}, "start": {"col": 29, "line": 79, "offset": 2207}}, "$DST": {"abstract_content": "auStack_87", "end": {"col": 28, "line": 79, "offset": 2206}, "start": {"col": 18, "line": 79, "offset": 2196}}, "$LEN": {"abstract_content": "0x1f", "end": {"col": 35, "line": 79, "offset": 2213}, "start": {"col": 31, "line": 79, "offset": 2209}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c", "start": {"col": 11, "line": 79, "offset": 2189}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 81, "offset": 2278}, "extra": {"engine_kind": "OSS", "fingerprint": "594165927400066a0b917201f63eb7f363ceb4cb5c3239780bc071b6ac33a81a527516d73a23f7a949e979d9e9f051cd7f3fffee7de5095193ce5a72c1af015f_0", "is_ignored": false, "lines": "          memset(auStack_67,0,0x1f);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 30, "line": 81, "offset": 2272}, "start": {"col": 29, "line": 81, "offset": 2271}}, "$DST": {"abstract_content": "auStack_67", "end": {"col": 28, "line": 81, "offset": 2270}, "start": {"col": 18, "line": 81, "offset": 2260}}, "$LEN": {"abstract_content": "0x1f", "end": {"col": 35, "line": 81, "offset": 2277}, "start": {"col": 31, "line": 81, "offset": 2273}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c", "start": {"col": 11, "line": 81, "offset": 2253}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 35, "line": 83, "offset": 2341}, "extra": {"engine_kind": "OSS", "fingerprint": "ba2b9bf7a0763ad37597a3263618fe6eebcf928f9013c4722574d81af8f5098f99837c3b8e6d6e49d93a65de971456d2ac0c58946401d69f58fa22e0caf3c8d2_0", "is_ignored": false, "lines": "          memset(auStack_97,0,0xf);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 30, "line": 83, "offset": 2336}, "start": {"col": 29, "line": 83, "offset": 2335}}, "$DST": {"abstract_content": "auStack_97", "end": {"col": 28, "line": 83, "offset": 2334}, "start": {"col": 18, "line": 83, "offset": 2324}}, "$LEN": {"abstract_content": "0xf", "end": {"col": 34, "line": 83, "offset": 2340}, "start": {"col": 31, "line": 83, "offset": 2337}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c", "start": {"col": 11, "line": 83, "offset": 2317}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 38, "line": 90, "offset": 2834}, "extra": {"engine_kind": "OSS", "fingerprint": "ed364300c144c81e5eed0cfb87d46dbf7751421c498a99b884ea9153e5e56d515d08d6248d11fda79a70f1fa98082c422a04c4328a3d1472404932fecd1e1d26_1", "is_ignored": false, "lines": "            strcpy(param_2,&local_68);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c", "start": {"col": 13, "line": 90, "offset": 2809}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 90, "offset": 2834}, "extra": {"engine_kind": "OSS", "fingerprint": "c1e04b6a919d564bde95667499439519d46dd6a871a44c97c5f616b0f7aa28a5a764b03fa55b6ae28b09ac0fbd90a7a6a6afdb610bef7f44d99dadf407ff0346_1", "is_ignored": false, "lines": "            strcpy(param_2,&local_68);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 19, "line": 90, "offset": 2815}, "start": {"col": 13, "line": 90, "offset": 2809}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/getTargetIPAndPort_00412140.c", "start": {"col": 13, "line": 90, "offset": 2809}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 7, "offset": 95}, "extra": {"engine_kind": "OSS", "fingerprint": "e5f080313e40da0c3b01990c58c91f43faf8051a962e76b34bf4fd1dfeb7589ea063138effca76657aa9ddd1f00163245ca3e20bcfbd04ff1e01cc681ebe944e_0", "is_ignored": false, "lines": "  __s = (undefined4 *)malloc(0x10010);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 29, "line": 7, "offset": 86}, "start": {"col": 23, "line": 7, "offset": 80}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/initEventMsg_00414014.c", "start": {"col": 23, "line": 7, "offset": 80}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 7, "offset": 95}, "extra": {"engine_kind": "OSS", "fingerprint": "148434fda9da4f6342b70f2cf5bc30032010686c105fbef9d33fd48ffdda5cf36f5c9656f9cc0d8b305248272b428f4bffde85cf0577a920df28522d8219421a_0", "is_ignored": false, "lines": "  __s = (undefined4 *)malloc(0x10010);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x10010", "end": {"col": 37, "line": 7, "offset": 94}, "start": {"col": 30, "line": 7, "offset": 87}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/initEventMsg_00414014.c", "start": {"col": 23, "line": 7, "offset": 80}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 26, "line": 12, "offset": 261}, "extra": {"engine_kind": "OSS", "fingerprint": "25f186f3843531de88a5b6e80284cbd1cd958dceb1a2623e6e970e302087cba5ee609ce2e7ecff9ba88257b82b7a4aa0f505d69421129ec8e13c573ed8e67130_0", "is_ignored": false, "lines": "    memset(__s,0,0x10010);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 17, "line": 12, "offset": 252}, "start": {"col": 16, "line": 12, "offset": 251}}, "$DST": {"abstract_content": "__s", "end": {"col": 15, "line": 12, "offset": 250}, "propagated_value": {"svalue_abstract_content": "(undefined4*malloc(0x10010)", "svalue_end": {"col": 38, "line": 7, "offset": 95}, "svalue_start": {"col": 9, "line": 7, "offset": 66}}, "start": {"col": 12, "line": 12, "offset": 247}}, "$LEN": {"abstract_content": "0x10010", "end": {"col": 25, "line": 12, "offset": 260}, "start": {"col": 18, "line": 12, "offset": 253}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/initEventMsg_00414014.c", "start": {"col": 5, "line": 12, "offset": 240}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 47, "line": 23, "offset": 672}, "extra": {"engine_kind": "OSS", "fingerprint": "b336dded104724bc95488c4cb68807f65bf3ffd90e88646f9311a49953b796a0fb1ef77e57704636bd9233cd711c9be8d28c7859473beed3b192738307c52515_0", "is_ignored": false, "lines": "          snprintf(param_3,param_4,\"%s\",iVar2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "snprintf", "end": {"col": 19, "line": 23, "offset": 644}, "start": {"col": 11, "line": 23, "offset": 636}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/ixmlGetElementValueByTag_s_00402ab4.c", "start": {"col": 11, "line": 23, "offset": 636}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-signal", "end": {"col": 25, "line": 21, "offset": 319}, "extra": {"engine_kind": "OSS", "fingerprint": "a0e71e5d6458c10981b35c8e40035fc5f623e0f86ea0d3cd698e686e94e516b23b879426bd1dbd847763fba48e3faaec642e705da48becfa89a198a4e7f79b87_0", "is_ignored": false, "lines": "  signal(2,FUN_00401ae0);", "message": "The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/364", "https://cwe.mitre.org/data/definitions/479", "https://cwe.mitre.org/data/definitions/828"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/main_00401c74.c", "start": {"col": 3, "line": 21, "offset": 297}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-signal", "end": {"col": 27, "line": 22, "offset": 347}, "extra": {"engine_kind": "OSS", "fingerprint": "a0e71e5d6458c10981b35c8e40035fc5f623e0f86ea0d3cd698e686e94e516b23b879426bd1dbd847763fba48e3faaec642e705da48becfa89a198a4e7f79b87_1", "is_ignored": false, "lines": "  signal(0xf,FUN_00401ae0);", "message": "The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/364", "https://cwe.mitre.org/data/definitions/479", "https://cwe.mitre.org/data/definitions/828"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/main_00401c74.c", "start": {"col": 3, "line": 22, "offset": 323}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-signal", "end": {"col": 25, "line": 23, "offset": 373}, "extra": {"engine_kind": "OSS", "fingerprint": "a0e71e5d6458c10981b35c8e40035fc5f623e0f86ea0d3cd698e686e94e516b23b879426bd1dbd847763fba48e3faaec642e705da48becfa89a198a4e7f79b87_2", "is_ignored": false, "lines": "  signal(3,FUN_00401ae0);", "message": "The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/364", "https://cwe.mitre.org/data/definitions/479", "https://cwe.mitre.org/data/definitions/828"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/main_00401c74.c", "start": {"col": 3, "line": 23, "offset": 351}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-signal", "end": {"col": 34, "line": 24, "offset": 408}, "extra": {"engine_kind": "OSS", "fingerprint": "a0e71e5d6458c10981b35c8e40035fc5f623e0f86ea0d3cd698e686e94e516b23b879426bd1dbd847763fba48e3faaec642e705da48becfa89a198a4e7f79b87_3", "is_ignored": false, "lines": "  signal(0xd,(__sighandler_t)0x1);", "message": "The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/364", "https://cwe.mitre.org/data/definitions/479", "https://cwe.mitre.org/data/definitions/828"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/main_00401c74.c", "start": {"col": 3, "line": 24, "offset": 377}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-signal", "end": {"col": 44, "line": 25, "offset": 453}, "extra": {"engine_kind": "OSS", "fingerprint": "a0e71e5d6458c10981b35c8e40035fc5f623e0f86ea0d3cd698e686e94e516b23b879426bd1dbd847763fba48e3faaec642e705da48becfa89a198a4e7f79b87_4", "is_ignored": false, "lines": "  signal(0xb,(__sighandler_t)&DAT_004022ac);", "message": "The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/364", "https://cwe.mitre.org/data/definitions/479", "https://cwe.mitre.org/data/definitions/828"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/main_00401c74.c", "start": {"col": 3, "line": 25, "offset": 412}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 38, "offset": 865}, "extra": {"engine_kind": "OSS", "fingerprint": "cb738ed99619b11208a3aa64cbbbe3c845976601f9261003f9835a066ceaeeb126bf3ede08aba79786d3c88eb1ae9805aa1ee631a2a99984107f6ebe15b34ec7_0", "is_ignored": false, "lines": "      g_pPushThread = malloc(0x52b16);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 29, "line": 38, "offset": 856}, "start": {"col": 23, "line": 38, "offset": 850}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/main_00401c74.c", "start": {"col": 23, "line": 38, "offset": 850}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 38, "offset": 865}, "extra": {"engine_kind": "OSS", "fingerprint": "f9247e8193af6c010ca331dc7f3868cee88bca81a7b1c8de4bfbe4fc9839ea73ea15068c91f211ddbe095e0bff194a17089fd6dce8a50b5a48483ad3bf1000f7_0", "is_ignored": false, "lines": "      g_pPushThread = malloc(0x52b16);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x52b16", "end": {"col": 37, "line": 38, "offset": 864}, "start": {"col": 30, "line": 38, "offset": 857}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/main_00401c74.c", "start": {"col": 23, "line": 38, "offset": 850}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 12, "offset": 244}, "extra": {"engine_kind": "OSS", "fingerprint": "cba4cd8a854143411bf89fbf145241a46e0614704ee03b1eb0ada9a9c6ac99633b6062b0958d7887b520f332b1d7e62f5c0384f1601331965c62fe51b879583b_0", "is_ignored": false, "lines": "  strncpy(param_1,__src,param_2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 10, "line": 12, "offset": 221}, "start": {"col": 3, "line": 12, "offset": 214}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/random_hash_004024f0.c", "start": {"col": 3, "line": 12, "offset": 214}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-unterminated-string-strncpy-stpncpy", "end": {"col": 33, "line": 12, "offset": 244}, "extra": {"engine_kind": "OSS", "fingerprint": "5c1e0725fa230ccf1fae052dd4e0e2d8bf9372a9e3f6d0bab52a60ac61e4bb04ecdcca59b6184b9ad5b28f0dc564a39f7ea37e17742938e2592e56553b2c2a8d_0", "is_ignored": false, "lines": "  strncpy(param_1,__src,param_2);", "message": "If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://cwe.mitre.org/data/definitions/170", "https://cwe.mitre.org/data/definitions/126", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {"$FUN": {"abstract_content": "strncpy", "end": {"col": 10, "line": 12, "offset": 221}, "start": {"col": 3, "line": 12, "offset": 214}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/random_hash_004024f0.c", "start": {"col": 3, "line": 12, "offset": 214}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 27, "line": 14, "offset": 287}, "extra": {"engine_kind": "OSS", "fingerprint": "83f7a0a90810b2f56a33ec7677c18a690d0835a6041d6f951365f9675718ae620db17f2fa8ba109ffa1f01e7d3a09a0fef2e9f056901a19759cd8dcb74738542_0", "is_ignored": false, "lines": "  iVar2 = (int)param_2 / 2;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar2", "end": {"col": 8, "line": 14, "offset": 268}, "start": {"col": 3, "line": 14, "offset": 263}}, "$UNSIGNED": {"abstract_content": "param_2", "end": {"col": 23, "line": 14, "offset": 283}, "start": {"col": 16, "line": 14, "offset": 276}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/random_hash_004024f0.c", "start": {"col": 3, "line": 14, "offset": 263}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-rand-srand", "end": {"col": 19, "line": 17, "offset": 353}, "extra": {"engine_kind": "OSS", "fingerprint": "8858a4a05376be711218d72c8330c5a9e077abf2b89ee44dc82bc751328fffc74e01a53b8d36a7f9e7ed0b03fe981c99fe79467daddc974ae69085b413bf4581_0", "is_ignored": false, "lines": "    iVar1 = rand();", "message": "The rand() PRNG should not be used in applications intended to be  portable when good randomness is needed. Instead, the use of random()  is recommended.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/338", "https://cwe.mitre.org/data/definitions/330", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/random_hash_004024f0.c", "start": {"col": 13, "line": 17, "offset": 347}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 19, "line": 17, "offset": 353}, "extra": {"engine_kind": "OSS", "fingerprint": "079732b8b7355aec01054bc4e6333be87c8fa66c0fd3514db042a68f53f3db58cbb46243265ab638bd0202456950cd7fe7343662da96af21291e58d7a514b0b2_0", "is_ignored": false, "lines": "    iVar1 = rand();", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "rand", "end": {"col": 17, "line": 17, "offset": 351}, "start": {"col": 13, "line": 17, "offset": 347}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/random_hash_004024f0.c", "start": {"col": 13, "line": 17, "offset": 347}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 28, "line": 26, "offset": 496}, "extra": {"engine_kind": "OSS", "fingerprint": "7d2c181b444ff1bc02f93be018f656964d66bb9e8829ad554bc485b920004d2713e3e6ad4630e25ffd46df1380c69459736ad1b2669dadbd3c1d56bf32e22674_0", "is_ignored": false, "lines": "  memset(auStack_71,0,0x31);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 22, "line": 26, "offset": 490}, "start": {"col": 21, "line": 26, "offset": 489}}, "$DST": {"abstract_content": "auStack_71", "end": {"col": 20, "line": 26, "offset": 488}, "start": {"col": 10, "line": 26, "offset": 478}}, "$LEN": {"abstract_content": "0x31", "end": {"col": 27, "line": 26, "offset": 495}, "start": {"col": 23, "line": 26, "offset": 491}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/sendEventMsg_00413d34.c", "start": {"col": 3, "line": 26, "offset": 471}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 27, "line": 28, "offset": 540}, "extra": {"engine_kind": "OSS", "fingerprint": "d0e4545d080a2205e38fb4ed1b37c58a4048729cc31d727ba2c90fc29a7d043a3670d59ecb46e69e6f7313ec2121031a213f662a74d58830ca8f9aa23764c7e7_0", "is_ignored": false, "lines": "  memset(auStack_3f,0,0xf);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 22, "line": 28, "offset": 535}, "start": {"col": 21, "line": 28, "offset": 534}}, "$DST": {"abstract_content": "auStack_3f", "end": {"col": 20, "line": 28, "offset": 533}, "start": {"col": 10, "line": 28, "offset": 523}}, "$LEN": {"abstract_content": "0xf", "end": {"col": 26, "line": 28, "offset": 539}, "start": {"col": 23, "line": 28, "offset": 536}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/sendEventMsg_00413d34.c", "start": {"col": 3, "line": 28, "offset": 516}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 40, "line": 36, "offset": 789}, "extra": {"engine_kind": "OSS", "fingerprint": "8dd76fcd3f840c7ed59f5c6bbdf8b1480e17f250e0a7acb2dc8b81d8175681bdf7e0d668b550ba23d914b1af9166b59f61e79f464a3fafdda0e1851a15dc4fcc_0", "is_ignored": false, "lines": "      sVar1 = strlen((char *)&local_80);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "local_80", "end": {"col": 39, "line": 36, "offset": 788}, "propagated_value": {"svalue_abstract_content": "0x3c2f4d75", "svalue_end": {"col": 24, "line": 21, "offset": 377}, "svalue_start": {"col": 14, "line": 21, "offset": 367}}, "start": {"col": 31, "line": 36, "offset": 780}}, "$UNSIGNED": {"abstract_content": "sVar1", "end": {"col": 12, "line": 36, "offset": 761}, "start": {"col": 7, "line": 36, "offset": 756}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/sendEventMsg_00413d34.c", "start": {"col": 7, "line": 36, "offset": 756}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 50, "line": 47, "offset": 1229}, "extra": {"engine_kind": "OSS", "fingerprint": "01e7cf5ded4bc3bbb2b60378e1f6a7d2c1e1ef58cb7981cd5149110e2f62bc78a2f8dc4049c55db48397d221b90f1a06eda98f009438a34cec8b13b41fcf300c_0", "is_ignored": false, "lines": "        sVar1 = *(ushort *)(param_1 + 0xe) + 0x10;", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "param_1", "end": {"col": 36, "line": 47, "offset": 1215}, "start": {"col": 29, "line": 47, "offset": 1208}}, "$UNSIGNED": {"abstract_content": "sVar1", "end": {"col": 14, "line": 47, "offset": 1193}, "start": {"col": 9, "line": 47, "offset": 1188}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_hnap_push_service/sendEventMsg_00413d34.c", "start": {"col": 9, "line": 47, "offset": 1188}}], "skipped_rules": [], "version": "1.89.0"}
