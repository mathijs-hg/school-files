[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00402140_00402140.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00402140_00402140.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m24[0m - [0;33m__stream = fopen(param_1,"w");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00401170_00401170.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00401170_00401170.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m69[0m - [0;33msVar4 = 1 << (iVar2 - 5U & 0x1f);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00401170_00401170.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00401170_00401170.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m105[0m - [0;33mstrcpy((char *)local_228,*param_5);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00401170_00401170.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00401170_00401170.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m105[0m - [0;33mstrcpy((char *)local_228,*param_5);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m32[0m - [0;33mmemset(local_acc + 1,0,0x1ff);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m34[0m - [0;33mmemset(auStack_4cb,0,0x47f);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m40[0m - [0;33mmemset(local_8cc + 1,0,0x3ff);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m58[0m - [0;33mmemset(local_acc,0,0x200);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m62[0m - [0;33mmemset(local_38,0,0x400);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-format-string-bugs[0m
        Issue description:
    The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.

        [0;32m73[0m - [0;33mfprintf(stderr,local_30,local_44,local_40,local_acc);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-format-string-bugs[0m
        Issue description:
    The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.

        [0;32m74[0m - [0;33msprintf(local_34,local_2c,param_1,local_44,local_40,local_38);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m74[0m - [0;33msprintf(local_34,local_2c,param_1,local_44,local_40,local_38);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m74[0m - [0;33msprintf(local_34,local_2c,param_1,local_44,local_40,local_38);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-command-injection[0m
        Issue description:
    The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.

        [0;32m75[0m - [0;33msystem(local_34);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m75[0m - [0;33msystem(local_34);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m27[0m - [0;33mmemset((char *)((int)&local_158 + 1),0,0xff);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m29[0m - [0;33mmemset((void *)((int)&local_58 + 1),0,0x13);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat[0m
        Issue description:
    The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.

        [0;32m31[0m - [0;33miVar1 = stat("/tmp/sys_env",&sStack_1f0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m31[0m - [0;33miVar1 = stat("/tmp/sys_env",&sStack_1f0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m33[0m - [0;33munlink("/tmp/sys_env");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m35[0m - [0;33msystem("/bin/dd if=/dev/mtdblock1 of=/tmp/sys_env 1>/dev/null 2>/dev/null");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m36[0m - [0;33m__stream = fopen("/tmp/sys_env","rb");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m39[0m - [0;33mfread(&local_158,1,0x100,__stream);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m39[0m - [0;33mfread(&local_158,1,0x100,__stream);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m58[0m - [0;33mmemcpy(&local_58,pcVar2,(int)pcVar3 - (int)pcVar2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m58[0m - [0;33mmemcpy(&local_58,pcVar2,(int)pcVar3 - (int)pcVar2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-pointer-subtraction[0m
        Issue description:
    The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.

        [0;32m58[0m - [0;33mmemcpy(&local_58,pcVar2,(int)pcVar3 - (int)pcVar2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m78[0m - [0;33mmemcpy(&local_44,pcVar2,(int)pcVar3 - (int)pcVar2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m78[0m - [0;33mmemcpy(&local_44,pcVar2,(int)pcVar3 - (int)pcVar2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-pointer-subtraction[0m
        Issue description:
    The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.

        [0;32m78[0m - [0;33mmemcpy(&local_44,pcVar2,(int)pcVar3 - (int)pcVar2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m27[0m - [0;33mmemset((char *)((int)&local_158 + 1),0,0xff);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m29[0m - [0;33mmemset((void *)((int)&local_58 + 1),0,0x13);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-access-stat-lstat[0m
        Issue description:
    The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.

        [0;32m31[0m - [0;33miVar1 = stat("/tmp/sys_env",&sStack_1f0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m31[0m - [0;33miVar1 = stat("/tmp/sys_env",&sStack_1f0);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m33[0m - [0;33munlink("/tmp/sys_env");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m35[0m - [0;33msystem("/bin/dd if=/dev/mtdblock1 of=/tmp/sys_env 1>/dev/null 2>/dev/null");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m36[0m - [0;33m__stream = fopen("/tmp/sys_env","rb");[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m39[0m - [0;33mfread(&local_158,1,0x100,__stream);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m39[0m - [0;33mfread(&local_158,1,0x100,__stream);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m58[0m - [0;33mmemcpy(&local_58,pcVar2,(int)pcVar3 - (int)pcVar2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m58[0m - [0;33mmemcpy(&local_58,pcVar2,(int)pcVar3 - (int)pcVar2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-pointer-subtraction[0m
        Issue description:
    The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.

        [0;32m58[0m - [0;33mmemcpy(&local_58,pcVar2,(int)pcVar3 - (int)pcVar2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m78[0m - [0;33mmemcpy(&local_44,pcVar2,(int)pcVar3 - (int)pcVar2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m78[0m - [0;33mmemcpy(&local_44,pcVar2,(int)pcVar3 - (int)pcVar2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00400e00_00400e00.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-pointer-subtraction[0m
        Issue description:
    The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.

        [0;32m78[0m - [0;33mmemcpy(&local_44,pcVar2,(int)pcVar3 - (int)pcVar2);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00401170_00401170.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00401170_00401170.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m69[0m - [0;33msVar4 = 1 << (iVar2 - 5U & 0x1f);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00401170_00401170.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00401170_00401170.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m105[0m - [0;33mstrcpy((char *)local_228,*param_5);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00401170_00401170.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00401170_00401170.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m105[0m - [0;33mstrcpy((char *)local_228,*param_5);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m32[0m - [0;33mmemset(local_acc + 1,0,0x1ff);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m34[0m - [0;33mmemset(auStack_4cb,0,0x47f);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m40[0m - [0;33mmemset(local_8cc + 1,0,0x3ff);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m58[0m - [0;33mmemset(local_acc,0,0x200);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion[0m
        Issue description:
    The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.

        [0;32m62[0m - [0;33mmemset(local_38,0,0x400);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-format-string-bugs[0m
        Issue description:
    The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.

        [0;32m73[0m - [0;33mfprintf(stderr,local_30,local_44,local_40,local_acc);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-format-string-bugs[0m
        Issue description:
    The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.

        [0;32m74[0m - [0;33msprintf(local_34,local_2c,param_1,local_44,local_40,local_38);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-insecure-api-sprintf-vsprintf[0m
        Issue description:
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.

        [0;32m74[0m - [0;33msprintf(local_34,local_2c,param_1,local_44,local_40,local_38);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m74[0m - [0;33msprintf(local_34,local_2c,param_1,local_44,local_40,local_38);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-command-injection[0m
        Issue description:
    The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.

        [0;32m75[0m - [0;33msystem(local_34);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_004014ec_004014ec.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m75[0m - [0;33msystem(local_34);[0m

-----------------------------------------------------------------

[[0;32m+[0m][0;32m Identified source function: [0;33m/logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00402140_00402140.c[0m[0m
[REF] /logs/s16_ghidra_decompile_checks/haruspex_userconfig/FUN_00402140_00402140.c
        Semgrep rule: [0;33mexternal.semgrep-rules-0xdea.c.raptor-interesting-api-calls[0m
        Issue description:
    Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.

        [0;32m24[0m - [0;33m__stream = fopen(param_1,"w");[0m

-----------------------------------------------------------------

