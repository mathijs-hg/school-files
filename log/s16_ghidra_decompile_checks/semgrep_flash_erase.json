{"errors": [{"code": 3, "level": "warn", "message": "Syntax error at line /tmp/haruspex_flash_erase/main_00400b90.c:38:\n `main::lexical_block_0::` was unexpected", "path": "/tmp/haruspex_flash_erase/main_00400b90.c", "spans": [{"end": {"col": 72, "line": 38, "offset": 23}, "file": "/tmp/haruspex_flash_erase/main_00400b90.c", "start": {"col": 49, "line": 38, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 72, "line": 38, "offset": 23}, "path": "/tmp/haruspex_flash_erase/main_00400b90.c", "start": {"col": 49, "line": 38, "offset": 0}}]]}], "interfile_languages_used": [], "paths": {"scanned": ["/tmp/haruspex_flash_erase/__divdi3_004052f0.c", "/tmp/haruspex_flash_erase/__do_global_ctors_aux_00405e80.c", "/tmp/haruspex_flash_erase/__do_global_dtors_aux_00401880.c", "/tmp/haruspex_flash_erase/__start_00401820.c", "/tmp/haruspex_flash_erase/__udivdi3_004058e0.c", "/tmp/haruspex_flash_erase/_fini_00406110.c", "/tmp/haruspex_flash_erase/_init_00400b18.c", "/tmp/haruspex_flash_erase/dev_get_major_00401c60.c", "/tmp/haruspex_flash_erase/dev_read_data_00401e00.c", "/tmp/haruspex_flash_erase/dev_read_hex_int_00402324.c", "/tmp/haruspex_flash_erase/dev_read_pos_int_004021f8.c", "/tmp/haruspex_flash_erase/dev_read_pos_ll_0040215c.c", "/tmp/haruspex_flash_erase/do_oob_op_00404044.c", "/tmp/haruspex_flash_erase/frame_dummy_0040194c.c", "/tmp/haruspex_flash_erase/legacy_dev_present_004049b4.c", "/tmp/haruspex_flash_erase/legacy_get_dev_info1_00405258.c", "/tmp/haruspex_flash_erase/legacy_get_dev_info_00404aac.c", "/tmp/haruspex_flash_erase/legacy_mtd_get_info_00404a1c.c", "/tmp/haruspex_flash_erase/libmtd_close_00402f38.c", "/tmp/haruspex_flash_erase/libmtd_open_0040308c.c", "/tmp/haruspex_flash_erase/main_00400b90.c", "/tmp/haruspex_flash_erase/mkpath_00402b6c.c", "/tmp/haruspex_flash_erase/mtd_crc32_004052a8.c", "/tmp/haruspex_flash_erase/mtd_dev_present_00403348.c", "/tmp/haruspex_flash_erase/mtd_erase_00403c0c.c", "/tmp/haruspex_flash_erase/mtd_get_dev_info1_004034b8.c", "/tmp/haruspex_flash_erase/mtd_get_dev_info_00403830.c", "/tmp/haruspex_flash_erase/mtd_get_info_00402c34.c", "/tmp/haruspex_flash_erase/mtd_get_info_00403434.c", "/tmp/haruspex_flash_erase/mtd_is_bad_00403ef8.c", "/tmp/haruspex_flash_erase/mtd_unlock_00403adc.c", "/tmp/haruspex_flash_erase/mtd_valid_erase_block_004029fc.c", "/tmp/haruspex_flash_erase/mtd_write_oob_004044b8.c", "/tmp/haruspex_flash_erase/proc_parse_next_00404794.c", "/tmp/haruspex_flash_erase/proc_parse_start_00404514.c", "/tmp/haruspex_flash_erase/read_data_004019d0.c", "/tmp/haruspex_flash_erase/read_pos_ll_00401ea8.c", "/tmp/haruspex_flash_erase/sysfs_is_supported_004026a4.c", "/tmp/haruspex_flash_erase/xmalloc_00402a8c.c"]}, "results": [{"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 21, "offset": 377}, "extra": {"engine_kind": "OSS", "fingerprint": "bc16b0b5b9abc76397d4754e838c0e128b40247268c12efd5ba7c9461226776cde50e422793e04d984d1c557cb2e9c84c019264fc5c775b1b0f069a6493ffac9_0", "is_ignored": false, "lines": "  iVar1 = -(sVar2 + 0x40 & 0xfffffff8);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar1", "end": {"col": 8, "line": 21, "offset": 347}, "start": {"col": 3, "line": 21, "offset": 342}}, "$UNSIGNED": {"abstract_content": "sVar2", "end": {"col": 18, "line": 21, "offset": 357}, "propagated_value": {"svalue_abstract_content": "strlen(__s)", "svalue_end": {"col": 22, "line": 20, "offset": 338}, "svalue_start": {"col": 11, "line": 20, "offset": 327}}, "start": {"col": 13, "line": 21, "offset": 352}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/dev_get_major_00401c60.c", "start": {"col": 3, "line": 21, "offset": 342}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 24, "offset": 429}, "extra": {"engine_kind": "OSS", "fingerprint": "d6208f1d4709fa0c44e8f4aae7de4b8565c0c070a5d92a7c654f71253968d900586aca9c90f1214ea4da18e80d3cc6c211bd446479a6f2417aa6e4c776f1c752_0", "is_ignored": false, "lines": "  iVar1 = -(sVar2 + 0x40 & 0xfffffff8);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar1", "end": {"col": 8, "line": 24, "offset": 399}, "start": {"col": 3, "line": 24, "offset": 394}}, "$UNSIGNED": {"abstract_content": "sVar2", "end": {"col": 18, "line": 24, "offset": 409}, "propagated_value": {"svalue_abstract_content": "strlen(patt)", "svalue_end": {"col": 23, "line": 23, "offset": 390}, "svalue_start": {"col": 11, "line": 23, "offset": 378}}, "start": {"col": 13, "line": 24, "offset": 404}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/dev_read_hex_int_00402324.c", "start": {"col": 3, "line": 24, "offset": 394}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 22, "offset": 416}, "extra": {"engine_kind": "OSS", "fingerprint": "266f0692c3e86f7c76018eb0ef65cca60912ecdf5a507e9ee6c57f0b90358f147994ec57b996bcfbbe9a20386d5df1921169e15ec96c59f794fd1586280e0db6_0", "is_ignored": false, "lines": "  iVar1 = -(sVar2 + 0x40 & 0xfffffff8);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar1", "end": {"col": 8, "line": 22, "offset": 386}, "start": {"col": 3, "line": 22, "offset": 381}}, "$UNSIGNED": {"abstract_content": "sVar2", "end": {"col": 18, "line": 22, "offset": 396}, "propagated_value": {"svalue_abstract_content": "strlen(patt)", "svalue_end": {"col": 23, "line": 21, "offset": 377}, "svalue_start": {"col": 11, "line": 21, "offset": 365}}, "start": {"col": 13, "line": 22, "offset": 391}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/dev_read_pos_int_004021f8.c", "start": {"col": 3, "line": 22, "offset": 381}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 48, "line": 9, "offset": 161}, "extra": {"engine_kind": "OSS", "fingerprint": "7d416c2612b21ca0427f57799d885386d18c3e8a6ae46a61b02a4e4e42cae7e37d532a5540c52e32d9ddfedeaa8a53b1eb48e38f80af34782eaf1d3402cbc058_0", "is_ignored": false, "lines": "  sprintf(node,\"/dev/mtd%d\",mtd_num,in_a3,&_gp);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sprintf", "end": {"col": 10, "line": 9, "offset": 123}, "start": {"col": 3, "line": 9, "offset": 116}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/legacy_get_dev_info1_00405258.c", "start": {"col": 3, "line": 9, "offset": 116}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 22, "line": 46, "offset": 1184}, "extra": {"engine_kind": "OSS", "fingerprint": "c474cd3c30910fe2bace44ed9ce4395cb6d43635021801e0aa32966f4721f9ff655c6dc7a40c0f0553e438a828cb09e7a0ead2262014cdc00af9b3606dbacdcd_0", "is_ignored": false, "lines": "  memset(mtd,0,0x100);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 15, "line": 46, "offset": 1177}, "start": {"col": 14, "line": 46, "offset": 1176}}, "$DST": {"abstract_content": "mtd", "end": {"col": 13, "line": 46, "offset": 1175}, "start": {"col": 10, "line": 46, "offset": 1172}}, "$LEN": {"abstract_content": "0x100", "end": {"col": 21, "line": 46, "offset": 1183}, "start": {"col": 16, "line": 46, "offset": 1178}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/legacy_get_dev_info_00404aac.c", "start": {"col": 3, "line": 46, "offset": 1165}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 25, "line": 59, "offset": 1690}, "extra": {"engine_kind": "OSS", "fingerprint": "6c90d0c3d754725e3bb3fc276fe5b417d648d45041e39cbcf817103b9397cca98fcac9db26dc08264b13d05510c853f535d8cef5de6dc55a0936938514adb724_0", "is_ignored": false, "lines": "  iVar1 = open64(node,0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$2": {"abstract_content": "64", "end": {"col": 6, "line": 2, "offset": 6}, "start": {"col": 4, "line": 2, "offset": 4}}, "$FUN": {"abstract_content": "open64", "end": {"col": 17, "line": 59, "offset": 1682}, "start": {"col": 11, "line": 59, "offset": 1676}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/legacy_get_dev_info_00404aac.c", "start": {"col": 11, "line": 59, "offset": 1676}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-strcpy-stpcpy-strcat", "end": {"col": 32, "line": 205, "offset": 7400}, "extra": {"engine_kind": "OSS", "fingerprint": "5f7aafe04397a7c8be9b9d7d4541ae1a508a185f6e2f9e03ba2829e8b09b6e4d47133875e3c39174393b037ece9bf3135518b8222d21ae91f9dd0952aaacec8a_0", "is_ignored": false, "lines": "      strcpy(mtd->name,pi.name);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/legacy_get_dev_info_00404aac.c", "start": {"col": 7, "line": 205, "offset": 7375}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 32, "line": 205, "offset": 7400}, "extra": {"engine_kind": "OSS", "fingerprint": "d43f3c82ba12f2441e2be9892c8991d65c13bfdd49ebb2305eecd840a29e31c1aac14b6c2622b3023f582f22578880b622e1aacde40b5d79ba81ddfc27feae90_0", "is_ignored": false, "lines": "      strcpy(mtd->name,pi.name);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "strcpy", "end": {"col": 13, "line": 205, "offset": 7381}, "start": {"col": 7, "line": 205, "offset": 7375}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/legacy_get_dev_info_00404aac.c", "start": {"col": 7, "line": 205, "offset": 7375}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 11, "offset": 143}, "extra": {"engine_kind": "OSS", "fingerprint": "5de013a972b58b4b7e8aaac8c53321084b5a593819590a32ca1d42484c2913b46ad3108a485a8c0e698125d8b83fe4625ba78203f633bfc498e891016dffa758_0", "is_ignored": false, "lines": "  lib = (libmtd *)calloc(1,0x34);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "calloc", "end": {"col": 25, "line": 11, "offset": 135}, "start": {"col": 19, "line": 11, "offset": 129}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/libmtd_open_0040308c.c", "start": {"col": 19, "line": 11, "offset": 129}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 33, "line": 11, "offset": 143}, "extra": {"engine_kind": "OSS", "fingerprint": "333646095827be95ce81580aeccd62b955cc7626b2d4e6a39d93b7c46c3dbe6d8cb75ba03ba75b92a099d3f92ebee107a614b97d8a4ac23d80bc75885a8e36a8_0", "is_ignored": false, "lines": "  lib = (libmtd *)calloc(1,0x34);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CNT": {"abstract_content": "1", "end": {"col": 27, "line": 11, "offset": 137}, "start": {"col": 26, "line": 11, "offset": 136}}, "$LEN": {"abstract_content": "0x34", "end": {"col": 32, "line": 11, "offset": 142}, "start": {"col": 28, "line": 11, "offset": 138}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/libmtd_open_0040308c.c", "start": {"col": 19, "line": 11, "offset": 129}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 85, "line": 38, "offset": 717}, "extra": {"engine_kind": "OSS", "fingerprint": "a7e7b3677a137a5a9ec9a88fa5c0723dfc553ba7a370aa813ac8b9df8c961cb7abb126a4f036408fc092a36efb796fd547ebfad6a1e67e5a0b47341be50b0679_0", "is_ignored": false, "lines": "    iVar5 = getopt_long(argc,argv,&DAT_00406170,main::lexical_block_0::long_options);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$1": {"abstract_content": "opt_long", "end": {"col": 11, "line": 2, "offset": 11}, "start": {"col": 3, "line": 2, "offset": 3}}, "$FUN": {"abstract_content": "getopt_long", "end": {"col": 24, "line": 38, "offset": 656}, "start": {"col": 13, "line": 38, "offset": 645}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/main_00400b90.c", "start": {"col": 13, "line": 38, "offset": 645}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 29, "line": 92, "offset": 2843}, "extra": {"engine_kind": "OSS", "fingerprint": "0a61639ca93d39e6e5cceac3a586e855646bc4360525a330f905d415c9ecbd22b11963d3ff808720e631c782207b8450ed7942144939bee1ee6d70345e1c402e_0", "is_ignored": false, "lines": "        desc = libmtd_open();", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "libmtd_open", "end": {"col": 27, "line": 92, "offset": 2841}, "start": {"col": 16, "line": 92, "offset": 2830}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/main_00400b90.c", "start": {"col": 16, "line": 92, "offset": 2830}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 39, "line": 97, "offset": 3007}, "extra": {"engine_kind": "OSS", "fingerprint": "5253536c1e2a5a800b8b6fa0d83d94feaf33b909b84c754e1a5da23ca811cf04915b2bdad531b12e74f8616fdfb61bde65f5c1ec7d6b66610a56886200782f06_0", "is_ignored": false, "lines": "          iVar5 = open64(mtd_device,2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$2": {"abstract_content": "64", "end": {"col": 6, "line": 2, "offset": 6}, "start": {"col": 4, "line": 2, "offset": 4}}, "$FUN": {"abstract_content": "open64", "end": {"col": 25, "line": 97, "offset": 2993}, "start": {"col": 19, "line": 97, "offset": 2987}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/main_00400b90.c", "start": {"col": 19, "line": 97, "offset": 2987}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 44, "line": 12, "offset": 198}, "extra": {"engine_kind": "OSS", "fingerprint": "d8353e76c0a266c4fdc9314bc699c1219c52f9c621f13d1f3c565b506ac4c3ff5bbdea855be46a0520ca177633d5c4535f5ea1851dbd56388754dff5cda2d3b2_0", "is_ignored": false, "lines": "  __dest = (char *)xmalloc(__n + sVar1 + 2);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "xmalloc", "end": {"col": 27, "line": 12, "offset": 181}, "start": {"col": 20, "line": 12, "offset": 174}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/mkpath_00402b6c.c", "start": {"col": 20, "line": 12, "offset": 174}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 26, "line": 13, "offset": 225}, "extra": {"engine_kind": "OSS", "fingerprint": "7edcf7a39d5c362aec2f60e18193d7b10b24d201203785b72e3d44f626e19dc340f257d1ea9f81c77278b0ecbac817d94a504033ed38bc8b5f447041125f4f92_0", "is_ignored": false, "lines": "  memcpy(__dest,path,__n);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 13, "offset": 208}, "start": {"col": 3, "line": 13, "offset": 202}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/mkpath_00402b6c.c", "start": {"col": 3, "line": 13, "offset": 202}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 35, "line": 19, "offset": 379}, "extra": {"engine_kind": "OSS", "fingerprint": "7edcf7a39d5c362aec2f60e18193d7b10b24d201203785b72e3d44f626e19dc340f257d1ea9f81c77278b0ecbac817d94a504033ed38bc8b5f447041125f4f92_1", "is_ignored": false, "lines": "  memcpy(__dest_00,name,sVar1 + 1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 9, "line": 19, "offset": 353}, "start": {"col": 3, "line": 19, "offset": 347}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/mkpath_00402b6c.c", "start": {"col": 3, "line": 19, "offset": 347}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 56, "line": 15, "offset": 314}, "extra": {"engine_kind": "OSS", "fingerprint": "6705233ac89f3cbca27e595c479b650a03e38514722717ab110d1144191c80fe95dd6a207f2357a59b40f4919196d7c1d26e53260d6590ff63e4d0bde062e978_0", "is_ignored": false, "lines": "    iVar2 = (int)&local_c0 - (sVar1 + 0x18 & 0xfffffff8);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar2", "end": {"col": 10, "line": 15, "offset": 268}, "start": {"col": 5, "line": 15, "offset": 263}}, "$UNSIGNED": {"abstract_content": "sVar1", "end": {"col": 36, "line": 15, "offset": 294}, "propagated_value": {"svalue_abstract_content": "strlen(__s)", "svalue_end": {"col": 24, "line": 14, "offset": 257}, "svalue_start": {"col": 13, "line": 14, "offset": 246}}, "start": {"col": 31, "line": 15, "offset": 289}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/mtd_dev_present_00403348.c", "start": {"col": 5, "line": 15, "offset": 263}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 22, "line": 18, "offset": 316}, "extra": {"engine_kind": "OSS", "fingerprint": "c07e9b9b0ebc4dcb39c92c9fa374d024eccebc3c42014464b8f5715f70ef424c67c4d1b53f2b426b16cff416a80219d94d7da91941c33c81f74d8e77aafa7350_0", "is_ignored": false, "lines": "  memset(mtd,0,0x100);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 15, "line": 18, "offset": 309}, "start": {"col": 14, "line": 18, "offset": 308}}, "$DST": {"abstract_content": "mtd", "end": {"col": 13, "line": 18, "offset": 307}, "start": {"col": 10, "line": 18, "offset": 304}}, "$LEN": {"abstract_content": "0x100", "end": {"col": 21, "line": 18, "offset": 315}, "start": {"col": 16, "line": 18, "offset": 310}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/mtd_get_dev_info1_004034b8.c", "start": {"col": 3, "line": 18, "offset": 297}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-insecure-api-scanf-etc", "end": {"col": 58, "line": 45, "offset": 1201}, "extra": {"engine_kind": "OSS", "fingerprint": "9597e872c37296910edf628658841a6d7b193f71f9f382de36992f80fbf796cbece7899929cc32bd49d220e00fd56966717c4cddea17da7ed0262df1e0a12a5c_0", "is_ignored": false, "lines": "      iVar5 = sscanf(pcVar6,\"mtd%d%s\",&local_128,tmp_buf);", "message": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "HIGH", "references": ["https://cwe.mitre.org/data/definitions/676", "https://cwe.mitre.org/data/definitions/120", "https://cwe.mitre.org/data/definitions/787", "https://g.co/kgs/PCHQjJ"]}, "metavars": {"$1": {"abstract_content": "\"mtd%d%s\"", "end": {"col": 10, "line": 1, "offset": 9}, "start": {"col": 1, "line": 1, "offset": 0}}, "$BUF": {"abstract_content": "pcVar6", "end": {"col": 28, "line": 45, "offset": 1171}, "start": {"col": 22, "line": 45, "offset": 1165}}, "$FMT": {"abstract_content": "\"mtd%d%s\"", "end": {"col": 38, "line": 45, "offset": 1181}, "start": {"col": 29, "line": 45, "offset": 1172}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/mtd_get_info_00402c34.c", "start": {"col": 15, "line": 45, "offset": 1158}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 58, "line": 45, "offset": 1201}, "extra": {"engine_kind": "OSS", "fingerprint": "e1a34e41f94bae5c6e8e047508c445c74b0ed7e4fe3ef6102942d43f7db45cbadaa4b4d89e250fde9fa173e38e1732b4d76f20308f5bb1287d251aa9debe73f9_0", "is_ignored": false, "lines": "      iVar5 = sscanf(pcVar6,\"mtd%d%s\",&local_128,tmp_buf);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 21, "line": 45, "offset": 1164}, "start": {"col": 15, "line": 45, "offset": 1158}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/mtd_get_info_00402c34.c", "start": {"col": 15, "line": 45, "offset": 1158}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 22, "line": 7, "offset": 88}, "extra": {"engine_kind": "OSS", "fingerprint": "2f16de8c217ef1e6db82478b9c4746d9477d85ae00ed663223fa344ccad27c31463139dcf5763b3846d03d921b2732ff00aeaccad5caf08d492d72dc83dd750a_0", "is_ignored": false, "lines": "  memset(info,0,0x10);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$CHAR": {"abstract_content": "0", "end": {"col": 16, "line": 7, "offset": 82}, "start": {"col": 15, "line": 7, "offset": 81}}, "$DST": {"abstract_content": "info", "end": {"col": 14, "line": 7, "offset": 80}, "start": {"col": 10, "line": 7, "offset": 76}}, "$LEN": {"abstract_content": "0x10", "end": {"col": 21, "line": 7, "offset": 87}, "start": {"col": 17, "line": 7, "offset": 83}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/mtd_get_info_00403434.c", "start": {"col": 3, "line": 7, "offset": 69}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 70, "line": 17, "offset": 311}, "extra": {"engine_kind": "OSS", "fingerprint": "c5b7c7dff7bfe70cc1b6e2085069f0545cdfbf822bdb682afd3827f1d7e34894dbd4a177a76895e6a4a524bb77a3d283a638684d50e029ea47065beb0f367c2a_0", "is_ignored": false, "lines": "  iVar1 = sscanf(pi->next,\"mtd%d: %llx %x\",pi,&pi->size,&pi->eb_size);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 17, "line": 17, "offset": 258}, "start": {"col": 11, "line": 17, "offset": 252}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/proc_parse_next_00404794.c", "start": {"col": 11, "line": 17, "offset": 252}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 39, "line": 31, "offset": 784}, "extra": {"engine_kind": "OSS", "fingerprint": "732477f539a551494c937d50ba65d86b93f540b3176f39858b57b6aacf8f6992a062043de0b63d1159a05f52fc345749336e49529850afa0ea4db16d7ab806db_0", "is_ignored": false, "lines": "         (__n = (int)pvVar2 - (int)__s, iVar1 <= (int)pvVar2 - (int)pcVar4)) {", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "int pvVar2", "end": {"col": 28, "line": 31, "offset": 773}, "start": {"col": 18, "line": 31, "offset": 763}}, "$UNSIGNED": {"abstract_content": "__n", "end": {"col": 14, "line": 31, "offset": 759}, "start": {"col": 11, "line": 31, "offset": 756}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/proc_parse_next_00404794.c", "start": {"col": 11, "line": 31, "offset": 756}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 39, "offset": 1086}, "extra": {"engine_kind": "OSS", "fingerprint": "9be05220f8446b13917c323bdf5b3dfd6e36304703737c7f2afdc5d1f83e28c0272a2fccdb27cd7b438ea5bfd7ac414e6295bad9c9b23072ad578944256f4e1c_0", "is_ignored": false, "lines": "        memcpy(pi->name,__s,__n);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "memcpy", "end": {"col": 15, "line": 39, "offset": 1068}, "start": {"col": 9, "line": 39, "offset": 1062}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/proc_parse_next_00404794.c", "start": {"col": 9, "line": 39, "offset": 1062}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 32, "line": 12, "offset": 167}, "extra": {"engine_kind": "OSS", "fingerprint": "9e801ad66b27c5166217b73a92dd0adce9029e227aa2cc08557a55efae41d1898a1a0af4316a069f0901b7c4980a4530fac92c693bcf5941b4b2bc56a9a4d89c_0", "is_ignored": false, "lines": "  iVar2 = open64(\"/proc/mtd\",0);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$2": {"abstract_content": "64", "end": {"col": 6, "line": 2, "offset": 6}, "start": {"col": 4, "line": 2, "offset": 4}}, "$FUN": {"abstract_content": "open64", "end": {"col": 17, "line": 12, "offset": 152}, "start": {"col": 11, "line": 12, "offset": 146}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/proc_parse_start_00404514.c", "start": {"col": 11, "line": 12, "offset": 146}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 36, "line": 14, "offset": 225}, "extra": {"engine_kind": "OSS", "fingerprint": "bd6509c5d5a4b43df7bba9dec7794209f6d46dac41348d24670eaccb37c08472db39d2717c32ffe747e3f94496876bb8ebfb940dca17fb136057d006be0e10c4_0", "is_ignored": false, "lines": "    pcVar3 = (char *)malloc(0x1000);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 28, "line": 14, "offset": 217}, "start": {"col": 22, "line": 14, "offset": 211}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/proc_parse_start_00404514.c", "start": {"col": 22, "line": 14, "offset": 211}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 36, "line": 14, "offset": 225}, "extra": {"engine_kind": "OSS", "fingerprint": "cb99afb30de77d2eb049b7b43d59f1f14a76abacd6724a50bf5097086fea8647cef85354c69051d0a8993daef671cd4147a95119a6f5bed72b39063c2a770f63_0", "is_ignored": false, "lines": "    pcVar3 = (char *)malloc(0x1000);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$LEN": {"abstract_content": "0x1000", "end": {"col": 35, "line": 14, "offset": 224}, "start": {"col": 29, "line": 14, "offset": 218}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/proc_parse_start_00404514.c", "start": {"col": 22, "line": 14, "offset": 211}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 38, "line": 26, "offset": 640}, "extra": {"engine_kind": "OSS", "fingerprint": "7d3ff11bfedddf9b29da848fc093e4015a1013143b2dab2c820b4b5edf20fee78eb6bb3ee7a7f31f21073b479738afae5a1b7efe7e23c0aa9065ea30af13ee4f_0", "is_ignored": false, "lines": "    uVar4 = read(iVar2,pcVar3,0x1000);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "read", "end": {"col": 17, "line": 26, "offset": 619}, "start": {"col": 13, "line": 26, "offset": 615}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/proc_parse_start_00404514.c", "start": {"col": 13, "line": 26, "offset": 615}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 26, "offset": 640}, "extra": {"engine_kind": "OSS", "fingerprint": "56f5b72113b73f29a90daf173847e26cbb60357109e4d537925b414029031f2b333d0c0704c4fa47cc67fdf15f08a6175888e19170b9eba126fa69f589380a82_0", "is_ignored": false, "lines": "    uVar4 = read(iVar2,pcVar3,0x1000);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$BUF": {"abstract_content": "pcVar3", "end": {"col": 30, "line": 26, "offset": 632}, "start": {"col": 24, "line": 26, "offset": 626}}, "$FD": {"abstract_content": "iVar2", "end": {"col": 23, "line": 26, "offset": 625}, "start": {"col": 18, "line": 26, "offset": 620}}, "$LEN": {"abstract_content": "0x1000", "end": {"col": 37, "line": 26, "offset": 639}, "start": {"col": 31, "line": 26, "offset": 633}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/proc_parse_start_00404514.c", "start": {"col": 13, "line": 26, "offset": 615}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 31, "line": 14, "offset": 206}, "extra": {"engine_kind": "OSS", "fingerprint": "daae018e27ca24dc72986006130f6578fe9e96826f32bedf4befc40485ba81d488fd43880905985ddffef1193eacd02469965ba9f16f4e222d903361196ad047_0", "is_ignored": false, "lines": "  iVar2 = open64(file,0x80000);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$2": {"abstract_content": "64", "end": {"col": 6, "line": 2, "offset": 6}, "start": {"col": 4, "line": 2, "offset": 4}}, "$FUN": {"abstract_content": "open64", "end": {"col": 17, "line": 14, "offset": 192}, "start": {"col": 11, "line": 14, "offset": 186}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/read_data_004019d0.c", "start": {"col": 11, "line": 14, "offset": 186}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 34, "line": 18, "offset": 281}, "extra": {"engine_kind": "OSS", "fingerprint": "52f02233da620ae78146af331e3fb5c4ec89a955504e9167357e1d282f42feafc858f983a47f8a4ba5baee5e6b70113506c2b43b07481bd47c9d287a82cba52e_0", "is_ignored": false, "lines": "  sVar3 = read(iVar2,buf,buf_len);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "read", "end": {"col": 15, "line": 18, "offset": 262}, "start": {"col": 11, "line": 18, "offset": 258}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/read_data_004019d0.c", "start": {"col": 11, "line": 18, "offset": 258}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 34, "line": 18, "offset": 281}, "extra": {"engine_kind": "OSS", "fingerprint": "73835d8df1743e416a79906908d1d7322cbbbb70c8d27ce07d27d694d8526b247271501e7979dc648907e0c80bc6d3c999b74c6fb03a5bca51969f4c7a182dbd_0", "is_ignored": false, "lines": "  sVar3 = read(iVar2,buf,buf_len);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$BUF": {"abstract_content": "buf", "end": {"col": 25, "line": 18, "offset": 272}, "start": {"col": 22, "line": 18, "offset": 269}}, "$FD": {"abstract_content": "iVar2", "end": {"col": 21, "line": 18, "offset": 268}, "propagated_value": {"svalue_abstract_content": "open64(file 0x80000)", "svalue_end": {"col": 31, "line": 14, "offset": 206}, "svalue_start": {"col": 11, "line": 14, "offset": 186}}, "start": {"col": 16, "line": 18, "offset": 263}}, "$LEN": {"abstract_content": "buf_len", "end": {"col": 33, "line": 18, "offset": 280}, "start": {"col": 26, "line": 18, "offset": 273}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/read_data_004019d0.c", "start": {"col": 11, "line": 18, "offset": 258}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 34, "offset": 780}, "extra": {"engine_kind": "OSS", "fingerprint": "52f02233da620ae78146af331e3fb5c4ec89a955504e9167357e1d282f42feafc858f983a47f8a4ba5baee5e6b70113506c2b43b07481bd47c9d287a82cba52e_1", "is_ignored": false, "lines": "      sVar4 = read(iVar2,&tmp,1);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "read", "end": {"col": 19, "line": 34, "offset": 766}, "start": {"col": 15, "line": 34, "offset": 762}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/read_data_004019d0.c", "start": {"col": 15, "line": 34, "offset": 762}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 33, "line": 34, "offset": 780}, "extra": {"engine_kind": "OSS", "fingerprint": "cd893302fe2a5f168c6fbbb13ac3dee126bd5f9973824d8dd8d8953fd1c714ca16861a44727b1834a4d8daa374f48b8d7946ee1c297022d8bc6a70a538a0507b_0", "is_ignored": false, "lines": "      sVar4 = read(iVar2,&tmp,1);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$BUF": {"abstract_content": "&tmp", "end": {"col": 30, "line": 34, "offset": 777}, "start": {"col": 26, "line": 34, "offset": 773}}, "$FD": {"abstract_content": "iVar2", "end": {"col": 25, "line": 34, "offset": 772}, "propagated_value": {"svalue_abstract_content": "open64(file 0x80000)", "svalue_end": {"col": 31, "line": 14, "offset": 206}, "svalue_start": {"col": 11, "line": 14, "offset": 186}}, "start": {"col": 20, "line": 34, "offset": 767}}, "$LEN": {"abstract_content": "1", "end": {"col": 32, "line": 34, "offset": 779}, "start": {"col": 31, "line": 34, "offset": 778}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/read_data_004019d0.c", "start": {"col": 15, "line": 34, "offset": 762}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 31, "line": 13, "offset": 188}, "extra": {"engine_kind": "OSS", "fingerprint": "c2b31277c42605a4482016b6dba55d1cf221cc27a052f9a413f346589b7e50a0e18c8ce523812c2445d4bb856c7a556ba8159abf96844f905181940d47777829_0", "is_ignored": false, "lines": "  iVar2 = open64(file,0x80000);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$2": {"abstract_content": "64", "end": {"col": 6, "line": 2, "offset": 6}, "start": {"col": 4, "line": 2, "offset": 4}}, "$FUN": {"abstract_content": "open64", "end": {"col": 17, "line": 13, "offset": 174}, "start": {"col": 11, "line": 13, "offset": 168}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/read_pos_ll_00401ea8.c", "start": {"col": 11, "line": 13, "offset": 168}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 33, "line": 15, "offset": 243}, "extra": {"engine_kind": "OSS", "fingerprint": "55ba61b658edb019fde75f7b6fc94cf72b01758583d467f2921d7767abac9e3fca7356aadedcc2c3ae75b0b8d4989ffaf328fa5056b77efad0e26e1970b2a33e_0", "is_ignored": false, "lines": "    sVar3 = read(iVar2,buf,0x32);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "read", "end": {"col": 17, "line": 15, "offset": 227}, "start": {"col": 13, "line": 15, "offset": 223}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/read_pos_ll_00401ea8.c", "start": {"col": 13, "line": 15, "offset": 223}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 33, "line": 15, "offset": 243}, "extra": {"engine_kind": "OSS", "fingerprint": "8e61e34836753d1b27655498c347cb2797164fa74b832f2f7989b068e6073eb8259438d939e4cb2099b83a3ea0b72eac02019f01bee4d13658261d55ae20f1c4_0", "is_ignored": false, "lines": "    sVar3 = read(iVar2,buf,0x32);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$BUF": {"abstract_content": "buf", "end": {"col": 27, "line": 15, "offset": 237}, "start": {"col": 24, "line": 15, "offset": 234}}, "$FD": {"abstract_content": "iVar2", "end": {"col": 23, "line": 15, "offset": 233}, "propagated_value": {"svalue_abstract_content": "open64(file 0x80000)", "svalue_end": {"col": 31, "line": 13, "offset": 188}, "svalue_start": {"col": 11, "line": 13, "offset": 168}}, "start": {"col": 18, "line": 15, "offset": 228}}, "$LEN": {"abstract_content": "0x32", "end": {"col": 32, "line": 15, "offset": 242}, "start": {"col": 28, "line": 15, "offset": 238}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/read_pos_ll_00401ea8.c", "start": {"col": 13, "line": 15, "offset": 223}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 43, "line": 29, "offset": 708}, "extra": {"engine_kind": "OSS", "fingerprint": "a218d2f105b668390b9bbe7ae94d58e089dfa89286566abf3523f6408cdc2c7cd1fb0aa67590a61044fae77b835c63c33f75d2cbcea16c4d3d9a2ce0e5e22c38_0", "is_ignored": false, "lines": "        iVar4 = sscanf(buf,\"%lld\\n\",value);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "sscanf", "end": {"col": 23, "line": 29, "offset": 688}, "start": {"col": 17, "line": 29, "offset": 682}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/read_pos_ll_00401ea8.c", "start": {"col": 17, "line": 29, "offset": 682}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-signed-unsigned-conversion", "end": {"col": 38, "line": 27, "offset": 474}, "extra": {"engine_kind": "OSS", "fingerprint": "8d264f31279979261b1a4457826e2a1786a4f6ed107cacfa0421a719fc8e04818882b74dfc1f23083a06a44797f2d1cffe7f5f0dbf5d8589e830dc57a6174e87_0", "is_ignored": false, "lines": "  iVar1 = -(sVar2 + 0x18 & 0xfffffff8);", "message": "The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "LOW", "references": ["https://cwe.mitre.org/data/definitions/195", "https://cwe.mitre.org/data/definitions/196", "https://cwe.mitre.org/data/definitions/194", "https://cwe.mitre.org/data/definitions/191", "https://cwe.mitre.org/data/definitions/681", "https://cwe.mitre.org/data/definitions/789", "https://g.co/kgs/PCHQjJ", "https://github.com/struct/mms", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "http://www.phrack.org/issues/60/10.html#article", "https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"]}, "metavars": {"$SIGNED": {"abstract_content": "iVar1", "end": {"col": 8, "line": 27, "offset": 444}, "start": {"col": 3, "line": 27, "offset": 439}}, "$UNSIGNED": {"abstract_content": "sVar2", "end": {"col": 18, "line": 27, "offset": 454}, "start": {"col": 13, "line": 27, "offset": 449}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/sysfs_is_supported_004026a4.c", "start": {"col": 3, "line": 27, "offset": 439}}, {"check_id": "external.semgrep-rules-0xdea.c.raptor-interesting-api-calls", "end": {"col": 24, "line": 11, "offset": 139}, "extra": {"engine_kind": "OSS", "fingerprint": "5aa69a34468263e8b8451b3384a8ed289738b0ed098f4eb4a198e378334114884027e75e16d0be3f08320d012a494a4a1028183d400aed38788a53ff478ff2b5_0", "is_ignored": false, "lines": "  pvVar1 = malloc(size);", "message": "Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.", "metadata": {"author": "Marco Ivaldi <raptor@0xdeadbeef.info>", "confidence": "MEDIUM", "references": ["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java", "https://github.com/x509cert/banned/blob/master/banned.h", "https://g.co/kgs/PCHQjJ", "https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf", "https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"]}, "metavars": {"$FUN": {"abstract_content": "malloc", "end": {"col": 18, "line": 11, "offset": 133}, "start": {"col": 12, "line": 11, "offset": 127}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "/tmp/haruspex_flash_erase/xmalloc_00402a8c.c", "start": {"col": 12, "line": 11, "offset": 127}}], "skipped_rules": [], "version": "1.62.0"}
